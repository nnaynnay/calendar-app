{"version":3,"sources":["webpack:///scripts.a2646449cd7cb0a7fc61.bundle.js","webpack:///./~/script-loader/addScript.js","webpack:///./~/fullcalendar/dist/fullcalendar.js?1024","webpack:///./~/jquery/dist/jquery.min.js?48d1","webpack:///./~/moment/min/moment.min.js?5a95","webpack:///./~/fullcalendar/dist/fullcalendar.js","webpack:///./~/jquery/dist/jquery.min.js","webpack:///./~/moment/min/moment.min.js"],"names":["webpackJsonp","253","module","exports","src","execScript","eval","call","408","__webpack_require__","409","410","749","750","751","781"],"mappings":"AAAAA,cAAc,EAAE,IAEVC,IACA,SAASC,EAAQC,GCCvBD,EAAAC,QAAA,SAAAC,GACA,mBAAAC,YACAA,WAAAD,GAEAE,KAAAC,KAAA,KAAAH,KDWMI,IACA,SAASN,EAAQC,EAASM,GEpBhCA,EAAA,KAAAA,EAAA,OF0BMC,IACA,SAASR,EAAQC,EAASM,GG3BhCA,EAAA,KAAAA,EAAA,OHiCME,IACA,SAAST,EAAQC,EAASM,GIlChCA,EAAA,KAAAA,EAAA,OJwCMG,IACA,SAASV,EAAQC,GKzCvBD,EAAAC,QAAA;EL+CMU,IACA,SAASX,EAAQC,GMhDvBD,EAAAC,QAAA;ENsDMW,IACA,SAASZ,EAAQC,GOvDvBD,EAAAC,QAAA;EP6DMY,IACA,SAASb,EAAQC,EAASM,GAEhCA,EAAoB,KACpBA,EAAoB,KACpBP,EAAOC,QAAUM,EAAoB,QAKlC","file":"scripts.a2646449cd7cb0a7fc61.bundle.js","sourcesContent":["webpackJsonp([2,3],{\n\n/***/ 253:\n/***/ function(module, exports) {\n\n/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript !== \"undefined\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\r\n\n\n/***/ },\n\n/***/ 408:\n/***/ function(module, exports, __webpack_require__) {\n\n__webpack_require__(253)(__webpack_require__(749))\n\n/***/ },\n\n/***/ 409:\n/***/ function(module, exports, __webpack_require__) {\n\n__webpack_require__(253)(__webpack_require__(750))\n\n/***/ },\n\n/***/ 410:\n/***/ function(module, exports, __webpack_require__) {\n\n__webpack_require__(253)(__webpack_require__(751))\n\n/***/ },\n\n/***/ 749:\n/***/ function(module, exports) {\n\nmodule.exports = \"/*!\\n * FullCalendar v3.1.0\\n * Docs & License: http://fullcalendar.io/\\n * (c) 2016 Adam Shaw\\n */\\n\\n(function(factory) {\\n\\tif (typeof define === 'function' && define.amd) {\\n\\t\\tdefine([ 'jquery', 'moment' ], factory);\\n\\t}\\n\\telse if (typeof exports === 'object') { // Node/CommonJS\\n\\t\\tmodule.exports = factory(require('jquery'), require('moment'));\\n\\t}\\n\\telse {\\n\\t\\tfactory(jQuery, moment);\\n\\t}\\n})(function($, moment) {\\n\\n;;\\n\\nvar FC = $.fullCalendar = {\\n\\tversion: \\\"3.1.0\\\",\\n\\tinternalApiVersion: 7\\n};\\nvar fcViews = FC.views = {};\\n\\n\\n$.fn.fullCalendar = function(options) {\\n\\tvar args = Array.prototype.slice.call(arguments, 1); // for a possible method call\\n\\tvar res = this; // what this function will return (this jQuery object by default)\\n\\n\\tthis.each(function(i, _element) { // loop each DOM element involved\\n\\t\\tvar element = $(_element);\\n\\t\\tvar calendar = element.data('fullCalendar'); // get the existing calendar object (if any)\\n\\t\\tvar singleRes; // the returned value of this single method call\\n\\n\\t\\t// a method call\\n\\t\\tif (typeof options === 'string') {\\n\\t\\t\\tif (calendar && $.isFunction(calendar[options])) {\\n\\t\\t\\t\\tsingleRes = calendar[options].apply(calendar, args);\\n\\t\\t\\t\\tif (!i) {\\n\\t\\t\\t\\t\\tres = singleRes; // record the first method call result\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (options === 'destroy') { // for the destroy method, must remove Calendar object data\\n\\t\\t\\t\\t\\telement.removeData('fullCalendar');\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t// a new calendar initialization\\n\\t\\telse if (!calendar) { // don't initialize twice\\n\\t\\t\\tcalendar = new Calendar(element, options);\\n\\t\\t\\telement.data('fullCalendar', calendar);\\n\\t\\t\\tcalendar.render();\\n\\t\\t}\\n\\t});\\n\\n\\treturn res;\\n};\\n\\n\\nvar complexOptions = [ // names of options that are objects whose properties should be combined\\n\\t'header',\\n\\t'footer',\\n\\t'buttonText',\\n\\t'buttonIcons',\\n\\t'themeButtonIcons'\\n];\\n\\n\\n// Merges an array of option objects into a single object\\nfunction mergeOptions(optionObjs) {\\n\\treturn mergeProps(optionObjs, complexOptions);\\n}\\n\\n;;\\n\\n// exports\\nFC.intersectRanges = intersectRanges;\\nFC.applyAll = applyAll;\\nFC.debounce = debounce;\\nFC.isInt = isInt;\\nFC.htmlEscape = htmlEscape;\\nFC.cssToStr = cssToStr;\\nFC.proxy = proxy;\\nFC.capitaliseFirstLetter = capitaliseFirstLetter;\\n\\n\\n/* FullCalendar-specific DOM Utilities\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n// Given the scrollbar widths of some other container, create borders/margins on rowEls in order to match the left\\n// and right space that was offset by the scrollbars. A 1-pixel border first, then margin beyond that.\\nfunction compensateScroll(rowEls, scrollbarWidths) {\\n\\tif (scrollbarWidths.left) {\\n\\t\\trowEls.css({\\n\\t\\t\\t'border-left-width': 1,\\n\\t\\t\\t'margin-left': scrollbarWidths.left - 1\\n\\t\\t});\\n\\t}\\n\\tif (scrollbarWidths.right) {\\n\\t\\trowEls.css({\\n\\t\\t\\t'border-right-width': 1,\\n\\t\\t\\t'margin-right': scrollbarWidths.right - 1\\n\\t\\t});\\n\\t}\\n}\\n\\n\\n// Undoes compensateScroll and restores all borders/margins\\nfunction uncompensateScroll(rowEls) {\\n\\trowEls.css({\\n\\t\\t'margin-left': '',\\n\\t\\t'margin-right': '',\\n\\t\\t'border-left-width': '',\\n\\t\\t'border-right-width': ''\\n\\t});\\n}\\n\\n\\n// Make the mouse cursor express that an event is not allowed in the current area\\nfunction disableCursor() {\\n\\t$('body').addClass('fc-not-allowed');\\n}\\n\\n\\n// Returns the mouse cursor to its original look\\nfunction enableCursor() {\\n\\t$('body').removeClass('fc-not-allowed');\\n}\\n\\n\\n// Given a total available height to fill, have `els` (essentially child rows) expand to accomodate.\\n// By default, all elements that are shorter than the recommended height are expanded uniformly, not considering\\n// any other els that are already too tall. if `shouldRedistribute` is on, it considers these tall rows and \\n// reduces the available height.\\nfunction distributeHeight(els, availableHeight, shouldRedistribute) {\\n\\n\\t// *FLOORING NOTE*: we floor in certain places because zoom can give inaccurate floating-point dimensions,\\n\\t// and it is better to be shorter than taller, to avoid creating unnecessary scrollbars.\\n\\n\\tvar minOffset1 = Math.floor(availableHeight / els.length); // for non-last element\\n\\tvar minOffset2 = Math.floor(availableHeight - minOffset1 * (els.length - 1)); // for last element *FLOORING NOTE*\\n\\tvar flexEls = []; // elements that are allowed to expand. array of DOM nodes\\n\\tvar flexOffsets = []; // amount of vertical space it takes up\\n\\tvar flexHeights = []; // actual css height\\n\\tvar usedHeight = 0;\\n\\n\\tundistributeHeight(els); // give all elements their natural height\\n\\n\\t// find elements that are below the recommended height (expandable).\\n\\t// important to query for heights in a single first pass (to avoid reflow oscillation).\\n\\tels.each(function(i, el) {\\n\\t\\tvar minOffset = i === els.length - 1 ? minOffset2 : minOffset1;\\n\\t\\tvar naturalOffset = $(el).outerHeight(true);\\n\\n\\t\\tif (naturalOffset < minOffset) {\\n\\t\\t\\tflexEls.push(el);\\n\\t\\t\\tflexOffsets.push(naturalOffset);\\n\\t\\t\\tflexHeights.push($(el).height());\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\t// this element stretches past recommended height (non-expandable). mark the space as occupied.\\n\\t\\t\\tusedHeight += naturalOffset;\\n\\t\\t}\\n\\t});\\n\\n\\t// readjust the recommended height to only consider the height available to non-maxed-out rows.\\n\\tif (shouldRedistribute) {\\n\\t\\tavailableHeight -= usedHeight;\\n\\t\\tminOffset1 = Math.floor(availableHeight / flexEls.length);\\n\\t\\tminOffset2 = Math.floor(availableHeight - minOffset1 * (flexEls.length - 1)); // *FLOORING NOTE*\\n\\t}\\n\\n\\t// assign heights to all expandable elements\\n\\t$(flexEls).each(function(i, el) {\\n\\t\\tvar minOffset = i === flexEls.length - 1 ? minOffset2 : minOffset1;\\n\\t\\tvar naturalOffset = flexOffsets[i];\\n\\t\\tvar naturalHeight = flexHeights[i];\\n\\t\\tvar newHeight = minOffset - (naturalOffset - naturalHeight); // subtract the margin/padding\\n\\n\\t\\tif (naturalOffset < minOffset) { // we check this again because redistribution might have changed things\\n\\t\\t\\t$(el).height(newHeight);\\n\\t\\t}\\n\\t});\\n}\\n\\n\\n// Undoes distrubuteHeight, restoring all els to their natural height\\nfunction undistributeHeight(els) {\\n\\tels.height('');\\n}\\n\\n\\n// Given `els`, a jQuery set of <td> cells, find the cell with the largest natural width and set the widths of all the\\n// cells to be that width.\\n// PREREQUISITE: if you want a cell to take up width, it needs to have a single inner element w/ display:inline\\nfunction matchCellWidths(els) {\\n\\tvar maxInnerWidth = 0;\\n\\n\\tels.find('> *').each(function(i, innerEl) {\\n\\t\\tvar innerWidth = $(innerEl).outerWidth();\\n\\t\\tif (innerWidth > maxInnerWidth) {\\n\\t\\t\\tmaxInnerWidth = innerWidth;\\n\\t\\t}\\n\\t});\\n\\n\\tmaxInnerWidth++; // sometimes not accurate of width the text needs to stay on one line. insurance\\n\\n\\tels.width(maxInnerWidth);\\n\\n\\treturn maxInnerWidth;\\n}\\n\\n\\n// Given one element that resides inside another,\\n// Subtracts the height of the inner element from the outer element.\\nfunction subtractInnerElHeight(outerEl, innerEl) {\\n\\tvar both = outerEl.add(innerEl);\\n\\tvar diff;\\n\\n\\t// effin' IE8/9/10/11 sometimes returns 0 for dimensions. this weird hack was the only thing that worked\\n\\tboth.css({\\n\\t\\tposition: 'relative', // cause a reflow, which will force fresh dimension recalculation\\n\\t\\tleft: -1 // ensure reflow in case the el was already relative. negative is less likely to cause new scroll\\n\\t});\\n\\tdiff = outerEl.outerHeight() - innerEl.outerHeight(); // grab the dimensions\\n\\tboth.css({ position: '', left: '' }); // undo hack\\n\\n\\treturn diff;\\n}\\n\\n\\n/* Element Geom Utilities\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nFC.getOuterRect = getOuterRect;\\nFC.getClientRect = getClientRect;\\nFC.getContentRect = getContentRect;\\nFC.getScrollbarWidths = getScrollbarWidths;\\n\\n\\n// borrowed from https://github.com/jquery/jquery-ui/blob/1.11.0/ui/core.js#L51\\nfunction getScrollParent(el) {\\n\\tvar position = el.css('position'),\\n\\t\\tscrollParent = el.parents().filter(function() {\\n\\t\\t\\tvar parent = $(this);\\n\\t\\t\\treturn (/(auto|scroll)/).test(\\n\\t\\t\\t\\tparent.css('overflow') + parent.css('overflow-y') + parent.css('overflow-x')\\n\\t\\t\\t);\\n\\t\\t}).eq(0);\\n\\n\\treturn position === 'fixed' || !scrollParent.length ? $(el[0].ownerDocument || document) : scrollParent;\\n}\\n\\n\\n// Queries the outer bounding area of a jQuery element.\\n// Returns a rectangle with absolute coordinates: left, right (exclusive), top, bottom (exclusive).\\n// Origin is optional.\\nfunction getOuterRect(el, origin) {\\n\\tvar offset = el.offset();\\n\\tvar left = offset.left - (origin ? origin.left : 0);\\n\\tvar top = offset.top - (origin ? origin.top : 0);\\n\\n\\treturn {\\n\\t\\tleft: left,\\n\\t\\tright: left + el.outerWidth(),\\n\\t\\ttop: top,\\n\\t\\tbottom: top + el.outerHeight()\\n\\t};\\n}\\n\\n\\n// Queries the area within the margin/border/scrollbars of a jQuery element. Does not go within the padding.\\n// Returns a rectangle with absolute coordinates: left, right (exclusive), top, bottom (exclusive).\\n// Origin is optional.\\n// NOTE: should use clientLeft/clientTop, but very unreliable cross-browser.\\nfunction getClientRect(el, origin) {\\n\\tvar offset = el.offset();\\n\\tvar scrollbarWidths = getScrollbarWidths(el);\\n\\tvar left = offset.left + getCssFloat(el, 'border-left-width') + scrollbarWidths.left - (origin ? origin.left : 0);\\n\\tvar top = offset.top + getCssFloat(el, 'border-top-width') + scrollbarWidths.top - (origin ? origin.top : 0);\\n\\n\\treturn {\\n\\t\\tleft: left,\\n\\t\\tright: left + el[0].clientWidth, // clientWidth includes padding but NOT scrollbars\\n\\t\\ttop: top,\\n\\t\\tbottom: top + el[0].clientHeight // clientHeight includes padding but NOT scrollbars\\n\\t};\\n}\\n\\n\\n// Queries the area within the margin/border/padding of a jQuery element. Assumed not to have scrollbars.\\n// Returns a rectangle with absolute coordinates: left, right (exclusive), top, bottom (exclusive).\\n// Origin is optional.\\nfunction getContentRect(el, origin) {\\n\\tvar offset = el.offset(); // just outside of border, margin not included\\n\\tvar left = offset.left + getCssFloat(el, 'border-left-width') + getCssFloat(el, 'padding-left') -\\n\\t\\t(origin ? origin.left : 0);\\n\\tvar top = offset.top + getCssFloat(el, 'border-top-width') + getCssFloat(el, 'padding-top') -\\n\\t\\t(origin ? origin.top : 0);\\n\\n\\treturn {\\n\\t\\tleft: left,\\n\\t\\tright: left + el.width(),\\n\\t\\ttop: top,\\n\\t\\tbottom: top + el.height()\\n\\t};\\n}\\n\\n\\n// Returns the computed left/right/top/bottom scrollbar widths for the given jQuery element.\\n// NOTE: should use clientLeft/clientTop, but very unreliable cross-browser.\\nfunction getScrollbarWidths(el) {\\n\\tvar leftRightWidth = el.innerWidth() - el[0].clientWidth; // the paddings cancel out, leaving the scrollbars\\n\\tvar widths = {\\n\\t\\tleft: 0,\\n\\t\\tright: 0,\\n\\t\\ttop: 0,\\n\\t\\tbottom: el.innerHeight() - el[0].clientHeight // the paddings cancel out, leaving the bottom scrollbar\\n\\t};\\n\\n\\tif (getIsLeftRtlScrollbars() && el.css('direction') == 'rtl') { // is the scrollbar on the left side?\\n\\t\\twidths.left = leftRightWidth;\\n\\t}\\n\\telse {\\n\\t\\twidths.right = leftRightWidth;\\n\\t}\\n\\n\\treturn widths;\\n}\\n\\n\\n// Logic for determining if, when the element is right-to-left, the scrollbar appears on the left side\\n\\nvar _isLeftRtlScrollbars = null;\\n\\nfunction getIsLeftRtlScrollbars() { // responsible for caching the computation\\n\\tif (_isLeftRtlScrollbars === null) {\\n\\t\\t_isLeftRtlScrollbars = computeIsLeftRtlScrollbars();\\n\\t}\\n\\treturn _isLeftRtlScrollbars;\\n}\\n\\nfunction computeIsLeftRtlScrollbars() { // creates an offscreen test element, then removes it\\n\\tvar el = $('<div><div/></div>')\\n\\t\\t.css({\\n\\t\\t\\tposition: 'absolute',\\n\\t\\t\\ttop: -1000,\\n\\t\\t\\tleft: 0,\\n\\t\\t\\tborder: 0,\\n\\t\\t\\tpadding: 0,\\n\\t\\t\\toverflow: 'scroll',\\n\\t\\t\\tdirection: 'rtl'\\n\\t\\t})\\n\\t\\t.appendTo('body');\\n\\tvar innerEl = el.children();\\n\\tvar res = innerEl.offset().left > el.offset().left; // is the inner div shifted to accommodate a left scrollbar?\\n\\tel.remove();\\n\\treturn res;\\n}\\n\\n\\n// Retrieves a jQuery element's computed CSS value as a floating-point number.\\n// If the queried value is non-numeric (ex: IE can return \\\"medium\\\" for border width), will just return zero.\\nfunction getCssFloat(el, prop) {\\n\\treturn parseFloat(el.css(prop)) || 0;\\n}\\n\\n\\n/* Mouse / Touch Utilities\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nFC.preventDefault = preventDefault;\\n\\n\\n// Returns a boolean whether this was a left mouse click and no ctrl key (which means right click on Mac)\\nfunction isPrimaryMouseButton(ev) {\\n\\treturn ev.which == 1 && !ev.ctrlKey;\\n}\\n\\n\\nfunction getEvX(ev) {\\n\\tif (ev.pageX !== undefined) {\\n\\t\\treturn ev.pageX;\\n\\t}\\n\\tvar touches = ev.originalEvent.touches;\\n\\tif (touches) {\\n\\t\\treturn touches[0].pageX;\\n\\t}\\n}\\n\\n\\nfunction getEvY(ev) {\\n\\tif (ev.pageY !== undefined) {\\n\\t\\treturn ev.pageY;\\n\\t}\\n\\tvar touches = ev.originalEvent.touches;\\n\\tif (touches) {\\n\\t\\treturn touches[0].pageY;\\n\\t}\\n}\\n\\n\\nfunction getEvIsTouch(ev) {\\n\\treturn /^touch/.test(ev.type);\\n}\\n\\n\\nfunction preventSelection(el) {\\n\\tel.addClass('fc-unselectable')\\n\\t\\t.on('selectstart', preventDefault);\\n}\\n\\n\\n// Stops a mouse/touch event from doing it's native browser action\\nfunction preventDefault(ev) {\\n\\tev.preventDefault();\\n}\\n\\n\\n// attach a handler to get called when ANY scroll action happens on the page.\\n// this was impossible to do with normal on/off because 'scroll' doesn't bubble.\\n// http://stackoverflow.com/a/32954565/96342\\n// returns `true` on success.\\nfunction bindAnyScroll(handler) {\\n\\tif (window.addEventListener) {\\n\\t\\twindow.addEventListener('scroll', handler, true); // useCapture=true\\n\\t\\treturn true;\\n\\t}\\n\\treturn false;\\n}\\n\\n\\n// undoes bindAnyScroll. must pass in the original function.\\n// returns `true` on success.\\nfunction unbindAnyScroll(handler) {\\n\\tif (window.removeEventListener) {\\n\\t\\twindow.removeEventListener('scroll', handler, true); // useCapture=true\\n\\t\\treturn true;\\n\\t}\\n\\treturn false;\\n}\\n\\n\\n/* General Geometry Utils\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nFC.intersectRects = intersectRects;\\n\\n// Returns a new rectangle that is the intersection of the two rectangles. If they don't intersect, returns false\\nfunction intersectRects(rect1, rect2) {\\n\\tvar res = {\\n\\t\\tleft: Math.max(rect1.left, rect2.left),\\n\\t\\tright: Math.min(rect1.right, rect2.right),\\n\\t\\ttop: Math.max(rect1.top, rect2.top),\\n\\t\\tbottom: Math.min(rect1.bottom, rect2.bottom)\\n\\t};\\n\\n\\tif (res.left < res.right && res.top < res.bottom) {\\n\\t\\treturn res;\\n\\t}\\n\\treturn false;\\n}\\n\\n\\n// Returns a new point that will have been moved to reside within the given rectangle\\nfunction constrainPoint(point, rect) {\\n\\treturn {\\n\\t\\tleft: Math.min(Math.max(point.left, rect.left), rect.right),\\n\\t\\ttop: Math.min(Math.max(point.top, rect.top), rect.bottom)\\n\\t};\\n}\\n\\n\\n// Returns a point that is the center of the given rectangle\\nfunction getRectCenter(rect) {\\n\\treturn {\\n\\t\\tleft: (rect.left + rect.right) / 2,\\n\\t\\ttop: (rect.top + rect.bottom) / 2\\n\\t};\\n}\\n\\n\\n// Subtracts point2's coordinates from point1's coordinates, returning a delta\\nfunction diffPoints(point1, point2) {\\n\\treturn {\\n\\t\\tleft: point1.left - point2.left,\\n\\t\\ttop: point1.top - point2.top\\n\\t};\\n}\\n\\n\\n/* Object Ordering by Field\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nFC.parseFieldSpecs = parseFieldSpecs;\\nFC.compareByFieldSpecs = compareByFieldSpecs;\\nFC.compareByFieldSpec = compareByFieldSpec;\\nFC.flexibleCompare = flexibleCompare;\\n\\n\\nfunction parseFieldSpecs(input) {\\n\\tvar specs = [];\\n\\tvar tokens = [];\\n\\tvar i, token;\\n\\n\\tif (typeof input === 'string') {\\n\\t\\ttokens = input.split(/\\\\s*,\\\\s*/);\\n\\t}\\n\\telse if (typeof input === 'function') {\\n\\t\\ttokens = [ input ];\\n\\t}\\n\\telse if ($.isArray(input)) {\\n\\t\\ttokens = input;\\n\\t}\\n\\n\\tfor (i = 0; i < tokens.length; i++) {\\n\\t\\ttoken = tokens[i];\\n\\n\\t\\tif (typeof token === 'string') {\\n\\t\\t\\tspecs.push(\\n\\t\\t\\t\\ttoken.charAt(0) == '-' ?\\n\\t\\t\\t\\t\\t{ field: token.substring(1), order: -1 } :\\n\\t\\t\\t\\t\\t{ field: token, order: 1 }\\n\\t\\t\\t);\\n\\t\\t}\\n\\t\\telse if (typeof token === 'function') {\\n\\t\\t\\tspecs.push({ func: token });\\n\\t\\t}\\n\\t}\\n\\n\\treturn specs;\\n}\\n\\n\\nfunction compareByFieldSpecs(obj1, obj2, fieldSpecs) {\\n\\tvar i;\\n\\tvar cmp;\\n\\n\\tfor (i = 0; i < fieldSpecs.length; i++) {\\n\\t\\tcmp = compareByFieldSpec(obj1, obj2, fieldSpecs[i]);\\n\\t\\tif (cmp) {\\n\\t\\t\\treturn cmp;\\n\\t\\t}\\n\\t}\\n\\n\\treturn 0;\\n}\\n\\n\\nfunction compareByFieldSpec(obj1, obj2, fieldSpec) {\\n\\tif (fieldSpec.func) {\\n\\t\\treturn fieldSpec.func(obj1, obj2);\\n\\t}\\n\\treturn flexibleCompare(obj1[fieldSpec.field], obj2[fieldSpec.field]) *\\n\\t\\t(fieldSpec.order || 1);\\n}\\n\\n\\nfunction flexibleCompare(a, b) {\\n\\tif (!a && !b) {\\n\\t\\treturn 0;\\n\\t}\\n\\tif (b == null) {\\n\\t\\treturn -1;\\n\\t}\\n\\tif (a == null) {\\n\\t\\treturn 1;\\n\\t}\\n\\tif ($.type(a) === 'string' || $.type(b) === 'string') {\\n\\t\\treturn String(a).localeCompare(String(b));\\n\\t}\\n\\treturn a - b;\\n}\\n\\n\\n/* FullCalendar-specific Misc Utilities\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n// Computes the intersection of the two ranges. Will return fresh date clones in a range.\\n// Returns undefined if no intersection.\\n// Expects all dates to be normalized to the same timezone beforehand.\\n// TODO: move to date section?\\nfunction intersectRanges(subjectRange, constraintRange) {\\n\\tvar subjectStart = subjectRange.start;\\n\\tvar subjectEnd = subjectRange.end;\\n\\tvar constraintStart = constraintRange.start;\\n\\tvar constraintEnd = constraintRange.end;\\n\\tvar segStart, segEnd;\\n\\tvar isStart, isEnd;\\n\\n\\tif (subjectEnd > constraintStart && subjectStart < constraintEnd) { // in bounds at all?\\n\\n\\t\\tif (subjectStart >= constraintStart) {\\n\\t\\t\\tsegStart = subjectStart.clone();\\n\\t\\t\\tisStart = true;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tsegStart = constraintStart.clone();\\n\\t\\t\\tisStart =  false;\\n\\t\\t}\\n\\n\\t\\tif (subjectEnd <= constraintEnd) {\\n\\t\\t\\tsegEnd = subjectEnd.clone();\\n\\t\\t\\tisEnd = true;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tsegEnd = constraintEnd.clone();\\n\\t\\t\\tisEnd = false;\\n\\t\\t}\\n\\n\\t\\treturn {\\n\\t\\t\\tstart: segStart,\\n\\t\\t\\tend: segEnd,\\n\\t\\t\\tisStart: isStart,\\n\\t\\t\\tisEnd: isEnd\\n\\t\\t};\\n\\t}\\n}\\n\\n\\n/* Date Utilities\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nFC.computeIntervalUnit = computeIntervalUnit;\\nFC.divideRangeByDuration = divideRangeByDuration;\\nFC.divideDurationByDuration = divideDurationByDuration;\\nFC.multiplyDuration = multiplyDuration;\\nFC.durationHasTime = durationHasTime;\\n\\nvar dayIDs = [ 'sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat' ];\\nvar intervalUnits = [ 'year', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond' ];\\n\\n\\n// Diffs the two moments into a Duration where full-days are recorded first, then the remaining time.\\n// Moments will have their timezones normalized.\\nfunction diffDayTime(a, b) {\\n\\treturn moment.duration({\\n\\t\\tdays: a.clone().stripTime().diff(b.clone().stripTime(), 'days'),\\n\\t\\tms: a.time() - b.time() // time-of-day from day start. disregards timezone\\n\\t});\\n}\\n\\n\\n// Diffs the two moments via their start-of-day (regardless of timezone). Produces whole-day durations.\\nfunction diffDay(a, b) {\\n\\treturn moment.duration({\\n\\t\\tdays: a.clone().stripTime().diff(b.clone().stripTime(), 'days')\\n\\t});\\n}\\n\\n\\n// Diffs two moments, producing a duration, made of a whole-unit-increment of the given unit. Uses rounding.\\nfunction diffByUnit(a, b, unit) {\\n\\treturn moment.duration(\\n\\t\\tMath.round(a.diff(b, unit, true)), // returnFloat=true\\n\\t\\tunit\\n\\t);\\n}\\n\\n\\n// Computes the unit name of the largest whole-unit period of time.\\n// For example, 48 hours will be \\\"days\\\" whereas 49 hours will be \\\"hours\\\".\\n// Accepts start/end, a range object, or an original duration object.\\nfunction computeIntervalUnit(start, end) {\\n\\tvar i, unit;\\n\\tvar val;\\n\\n\\tfor (i = 0; i < intervalUnits.length; i++) {\\n\\t\\tunit = intervalUnits[i];\\n\\t\\tval = computeRangeAs(unit, start, end);\\n\\n\\t\\tif (val >= 1 && isInt(val)) {\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\n\\treturn unit; // will be \\\"milliseconds\\\" if nothing else matches\\n}\\n\\n\\n// Computes the number of units (like \\\"hours\\\") in the given range.\\n// Range can be a {start,end} object, separate start/end args, or a Duration.\\n// Results are based on Moment's .as() and .diff() methods, so results can depend on internal handling\\n// of month-diffing logic (which tends to vary from version to version).\\nfunction computeRangeAs(unit, start, end) {\\n\\n\\tif (end != null) { // given start, end\\n\\t\\treturn end.diff(start, unit, true);\\n\\t}\\n\\telse if (moment.isDuration(start)) { // given duration\\n\\t\\treturn start.as(unit);\\n\\t}\\n\\telse { // given { start, end } range object\\n\\t\\treturn start.end.diff(start.start, unit, true);\\n\\t}\\n}\\n\\n\\n// Intelligently divides a range (specified by a start/end params) by a duration\\nfunction divideRangeByDuration(start, end, dur) {\\n\\tvar months;\\n\\n\\tif (durationHasTime(dur)) {\\n\\t\\treturn (end - start) / dur;\\n\\t}\\n\\tmonths = dur.asMonths();\\n\\tif (Math.abs(months) >= 1 && isInt(months)) {\\n\\t\\treturn end.diff(start, 'months', true) / months;\\n\\t}\\n\\treturn end.diff(start, 'days', true) / dur.asDays();\\n}\\n\\n\\n// Intelligently divides one duration by another\\nfunction divideDurationByDuration(dur1, dur2) {\\n\\tvar months1, months2;\\n\\n\\tif (durationHasTime(dur1) || durationHasTime(dur2)) {\\n\\t\\treturn dur1 / dur2;\\n\\t}\\n\\tmonths1 = dur1.asMonths();\\n\\tmonths2 = dur2.asMonths();\\n\\tif (\\n\\t\\tMath.abs(months1) >= 1 && isInt(months1) &&\\n\\t\\tMath.abs(months2) >= 1 && isInt(months2)\\n\\t) {\\n\\t\\treturn months1 / months2;\\n\\t}\\n\\treturn dur1.asDays() / dur2.asDays();\\n}\\n\\n\\n// Intelligently multiplies a duration by a number\\nfunction multiplyDuration(dur, n) {\\n\\tvar months;\\n\\n\\tif (durationHasTime(dur)) {\\n\\t\\treturn moment.duration(dur * n);\\n\\t}\\n\\tmonths = dur.asMonths();\\n\\tif (Math.abs(months) >= 1 && isInt(months)) {\\n\\t\\treturn moment.duration({ months: months * n });\\n\\t}\\n\\treturn moment.duration({ days: dur.asDays() * n });\\n}\\n\\n\\n// Returns a boolean about whether the given duration has any time parts (hours/minutes/seconds/ms)\\nfunction durationHasTime(dur) {\\n\\treturn Boolean(dur.hours() || dur.minutes() || dur.seconds() || dur.milliseconds());\\n}\\n\\n\\nfunction isNativeDate(input) {\\n\\treturn  Object.prototype.toString.call(input) === '[object Date]' || input instanceof Date;\\n}\\n\\n\\n// Returns a boolean about whether the given input is a time string, like \\\"06:40:00\\\" or \\\"06:00\\\"\\nfunction isTimeString(str) {\\n\\treturn /^\\\\d+\\\\:\\\\d+(?:\\\\:\\\\d+\\\\.?(?:\\\\d{3})?)?$/.test(str);\\n}\\n\\n\\n/* Logging and Debug\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nFC.log = function() {\\n\\tvar console = window.console;\\n\\n\\tif (console && console.log) {\\n\\t\\treturn console.log.apply(console, arguments);\\n\\t}\\n};\\n\\nFC.warn = function() {\\n\\tvar console = window.console;\\n\\n\\tif (console && console.warn) {\\n\\t\\treturn console.warn.apply(console, arguments);\\n\\t}\\n\\telse {\\n\\t\\treturn FC.log.apply(FC, arguments);\\n\\t}\\n};\\n\\n\\n/* General Utilities\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nvar hasOwnPropMethod = {}.hasOwnProperty;\\n\\n\\n// Merges an array of objects into a single object.\\n// The second argument allows for an array of property names who's object values will be merged together.\\nfunction mergeProps(propObjs, complexProps) {\\n\\tvar dest = {};\\n\\tvar i, name;\\n\\tvar complexObjs;\\n\\tvar j, val;\\n\\tvar props;\\n\\n\\tif (complexProps) {\\n\\t\\tfor (i = 0; i < complexProps.length; i++) {\\n\\t\\t\\tname = complexProps[i];\\n\\t\\t\\tcomplexObjs = [];\\n\\n\\t\\t\\t// collect the trailing object values, stopping when a non-object is discovered\\n\\t\\t\\tfor (j = propObjs.length - 1; j >= 0; j--) {\\n\\t\\t\\t\\tval = propObjs[j][name];\\n\\n\\t\\t\\t\\tif (typeof val === 'object') {\\n\\t\\t\\t\\t\\tcomplexObjs.unshift(val);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse if (val !== undefined) {\\n\\t\\t\\t\\t\\tdest[name] = val; // if there were no objects, this value will be used\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// if the trailing values were objects, use the merged value\\n\\t\\t\\tif (complexObjs.length) {\\n\\t\\t\\t\\tdest[name] = mergeProps(complexObjs);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// copy values into the destination, going from last to first\\n\\tfor (i = propObjs.length - 1; i >= 0; i--) {\\n\\t\\tprops = propObjs[i];\\n\\n\\t\\tfor (name in props) {\\n\\t\\t\\tif (!(name in dest)) { // if already assigned by previous props or complex props, don't reassign\\n\\t\\t\\t\\tdest[name] = props[name];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn dest;\\n}\\n\\n\\n// Create an object that has the given prototype. Just like Object.create\\nfunction createObject(proto) {\\n\\tvar f = function() {};\\n\\tf.prototype = proto;\\n\\treturn new f();\\n}\\nFC.createObject = createObject;\\n\\n\\nfunction copyOwnProps(src, dest) {\\n\\tfor (var name in src) {\\n\\t\\tif (hasOwnProp(src, name)) {\\n\\t\\t\\tdest[name] = src[name];\\n\\t\\t}\\n\\t}\\n}\\n\\n\\nfunction hasOwnProp(obj, name) {\\n\\treturn hasOwnPropMethod.call(obj, name);\\n}\\n\\n\\n// Is the given value a non-object non-function value?\\nfunction isAtomic(val) {\\n\\treturn /undefined|null|boolean|number|string/.test($.type(val));\\n}\\n\\n\\nfunction applyAll(functions, thisObj, args) {\\n\\tif ($.isFunction(functions)) {\\n\\t\\tfunctions = [ functions ];\\n\\t}\\n\\tif (functions) {\\n\\t\\tvar i;\\n\\t\\tvar ret;\\n\\t\\tfor (i=0; i<functions.length; i++) {\\n\\t\\t\\tret = functions[i].apply(thisObj, args) || ret;\\n\\t\\t}\\n\\t\\treturn ret;\\n\\t}\\n}\\n\\n\\nfunction firstDefined() {\\n\\tfor (var i=0; i<arguments.length; i++) {\\n\\t\\tif (arguments[i] !== undefined) {\\n\\t\\t\\treturn arguments[i];\\n\\t\\t}\\n\\t}\\n}\\n\\n\\nfunction htmlEscape(s) {\\n\\treturn (s + '').replace(/&/g, '&amp;')\\n\\t\\t.replace(/</g, '&lt;')\\n\\t\\t.replace(/>/g, '&gt;')\\n\\t\\t.replace(/'/g, '&#039;')\\n\\t\\t.replace(/\\\"/g, '&quot;')\\n\\t\\t.replace(/\\\\n/g, '<br />');\\n}\\n\\n\\nfunction stripHtmlEntities(text) {\\n\\treturn text.replace(/&.*?;/g, '');\\n}\\n\\n\\n// Given a hash of CSS properties, returns a string of CSS.\\n// Uses property names as-is (no camel-case conversion). Will not make statements for null/undefined values.\\nfunction cssToStr(cssProps) {\\n\\tvar statements = [];\\n\\n\\t$.each(cssProps, function(name, val) {\\n\\t\\tif (val != null) {\\n\\t\\t\\tstatements.push(name + ':' + val);\\n\\t\\t}\\n\\t});\\n\\n\\treturn statements.join(';');\\n}\\n\\n\\n// Given an object hash of HTML attribute names to values,\\n// generates a string that can be injected between < > in HTML\\nfunction attrsToStr(attrs) {\\n\\tvar parts = [];\\n\\n\\t$.each(attrs, function(name, val) {\\n\\t\\tif (val != null) {\\n\\t\\t\\tparts.push(name + '=\\\"' + htmlEscape(val) + '\\\"');\\n\\t\\t}\\n\\t});\\n\\n\\treturn parts.join(' ');\\n}\\n\\n\\nfunction capitaliseFirstLetter(str) {\\n\\treturn str.charAt(0).toUpperCase() + str.slice(1);\\n}\\n\\n\\nfunction compareNumbers(a, b) { // for .sort()\\n\\treturn a - b;\\n}\\n\\n\\nfunction isInt(n) {\\n\\treturn n % 1 === 0;\\n}\\n\\n\\n// Returns a method bound to the given object context.\\n// Just like one of the jQuery.proxy signatures, but without the undesired behavior of treating the same method with\\n// different contexts as identical when binding/unbinding events.\\nfunction proxy(obj, methodName) {\\n\\tvar method = obj[methodName];\\n\\n\\treturn function() {\\n\\t\\treturn method.apply(obj, arguments);\\n\\t};\\n}\\n\\n\\n// Returns a function, that, as long as it continues to be invoked, will not\\n// be triggered. The function will be called after it stops being called for\\n// N milliseconds. If `immediate` is passed, trigger the function on the\\n// leading edge, instead of the trailing.\\n// https://github.com/jashkenas/underscore/blob/1.6.0/underscore.js#L714\\nfunction debounce(func, wait, immediate) {\\n\\tvar timeout, args, context, timestamp, result;\\n\\n\\tvar later = function() {\\n\\t\\tvar last = +new Date() - timestamp;\\n\\t\\tif (last < wait) {\\n\\t\\t\\ttimeout = setTimeout(later, wait - last);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\ttimeout = null;\\n\\t\\t\\tif (!immediate) {\\n\\t\\t\\t\\tresult = func.apply(context, args);\\n\\t\\t\\t\\tcontext = args = null;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\treturn function() {\\n\\t\\tcontext = this;\\n\\t\\targs = arguments;\\n\\t\\ttimestamp = +new Date();\\n\\t\\tvar callNow = immediate && !timeout;\\n\\t\\tif (!timeout) {\\n\\t\\t\\ttimeout = setTimeout(later, wait);\\n\\t\\t}\\n\\t\\tif (callNow) {\\n\\t\\t\\tresult = func.apply(context, args);\\n\\t\\t\\tcontext = args = null;\\n\\t\\t}\\n\\t\\treturn result;\\n\\t};\\n}\\n\\n;;\\n\\n/*\\nGENERAL NOTE on moments throughout the *entire rest* of the codebase:\\nAll moments are assumed to be ambiguously-zoned unless otherwise noted,\\nwith the NOTABLE EXCEOPTION of start/end dates that live on *Event Objects*.\\nAmbiguously-TIMED moments are assumed to be ambiguously-zoned by nature.\\n*/\\n\\nvar ambigDateOfMonthRegex = /^\\\\s*\\\\d{4}-\\\\d\\\\d$/;\\nvar ambigTimeOrZoneRegex =\\n\\t/^\\\\s*\\\\d{4}-(?:(\\\\d\\\\d-\\\\d\\\\d)|(W\\\\d\\\\d$)|(W\\\\d\\\\d-\\\\d)|(\\\\d\\\\d\\\\d))((T| )(\\\\d\\\\d(:\\\\d\\\\d(:\\\\d\\\\d(\\\\.\\\\d+)?)?)?)?)?$/;\\nvar newMomentProto = moment.fn; // where we will attach our new methods\\nvar oldMomentProto = $.extend({}, newMomentProto); // copy of original moment methods\\n\\n// tell momentjs to transfer these properties upon clone\\nvar momentProperties = moment.momentProperties;\\nmomentProperties.push('_fullCalendar');\\nmomentProperties.push('_ambigTime');\\nmomentProperties.push('_ambigZone');\\n\\n\\n// Creating\\n// -------------------------------------------------------------------------------------------------\\n\\n// Creates a new moment, similar to the vanilla moment(...) constructor, but with\\n// extra features (ambiguous time, enhanced formatting). When given an existing moment,\\n// it will function as a clone (and retain the zone of the moment). Anything else will\\n// result in a moment in the local zone.\\nFC.moment = function() {\\n\\treturn makeMoment(arguments);\\n};\\n\\n// Sames as FC.moment, but forces the resulting moment to be in the UTC timezone.\\nFC.moment.utc = function() {\\n\\tvar mom = makeMoment(arguments, true);\\n\\n\\t// Force it into UTC because makeMoment doesn't guarantee it\\n\\t// (if given a pre-existing moment for example)\\n\\tif (mom.hasTime()) { // don't give ambiguously-timed moments a UTC zone\\n\\t\\tmom.utc();\\n\\t}\\n\\n\\treturn mom;\\n};\\n\\n// Same as FC.moment, but when given an ISO8601 string, the timezone offset is preserved.\\n// ISO8601 strings with no timezone offset will become ambiguously zoned.\\nFC.moment.parseZone = function() {\\n\\treturn makeMoment(arguments, true, true);\\n};\\n\\n// Builds an enhanced moment from args. When given an existing moment, it clones. When given a\\n// native Date, or called with no arguments (the current time), the resulting moment will be local.\\n// Anything else needs to be \\\"parsed\\\" (a string or an array), and will be affected by:\\n//    parseAsUTC - if there is no zone information, should we parse the input in UTC?\\n//    parseZone - if there is zone information, should we force the zone of the moment?\\nfunction makeMoment(args, parseAsUTC, parseZone) {\\n\\tvar input = args[0];\\n\\tvar isSingleString = args.length == 1 && typeof input === 'string';\\n\\tvar isAmbigTime;\\n\\tvar isAmbigZone;\\n\\tvar ambigMatch;\\n\\tvar mom;\\n\\n\\tif (moment.isMoment(input) || isNativeDate(input) || input === undefined) {\\n\\t\\tmom = moment.apply(null, args);\\n\\t}\\n\\telse { // \\\"parsing\\\" is required\\n\\t\\tisAmbigTime = false;\\n\\t\\tisAmbigZone = false;\\n\\n\\t\\tif (isSingleString) {\\n\\t\\t\\tif (ambigDateOfMonthRegex.test(input)) {\\n\\t\\t\\t\\t// accept strings like '2014-05', but convert to the first of the month\\n\\t\\t\\t\\tinput += '-01';\\n\\t\\t\\t\\targs = [ input ]; // for when we pass it on to moment's constructor\\n\\t\\t\\t\\tisAmbigTime = true;\\n\\t\\t\\t\\tisAmbigZone = true;\\n\\t\\t\\t}\\n\\t\\t\\telse if ((ambigMatch = ambigTimeOrZoneRegex.exec(input))) {\\n\\t\\t\\t\\tisAmbigTime = !ambigMatch[5]; // no time part?\\n\\t\\t\\t\\tisAmbigZone = true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse if ($.isArray(input)) {\\n\\t\\t\\t// arrays have no timezone information, so assume ambiguous zone\\n\\t\\t\\tisAmbigZone = true;\\n\\t\\t}\\n\\t\\t// otherwise, probably a string with a format\\n\\n\\t\\tif (parseAsUTC || isAmbigTime) {\\n\\t\\t\\tmom = moment.utc.apply(moment, args);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tmom = moment.apply(null, args);\\n\\t\\t}\\n\\n\\t\\tif (isAmbigTime) {\\n\\t\\t\\tmom._ambigTime = true;\\n\\t\\t\\tmom._ambigZone = true; // ambiguous time always means ambiguous zone\\n\\t\\t}\\n\\t\\telse if (parseZone) { // let's record the inputted zone somehow\\n\\t\\t\\tif (isAmbigZone) {\\n\\t\\t\\t\\tmom._ambigZone = true;\\n\\t\\t\\t}\\n\\t\\t\\telse if (isSingleString) {\\n\\t\\t\\t\\tmom.utcOffset(input); // if not a valid zone, will assign UTC\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tmom._fullCalendar = true; // flag for extended functionality\\n\\n\\treturn mom;\\n}\\n\\n\\n// Week Number\\n// -------------------------------------------------------------------------------------------------\\n\\n\\n// Returns the week number, considering the locale's custom week number calcuation\\n// `weeks` is an alias for `week`\\nnewMomentProto.week = newMomentProto.weeks = function(input) {\\n\\tvar weekCalc = this._locale._fullCalendar_weekCalc;\\n\\n\\tif (input == null && typeof weekCalc === 'function') { // custom function only works for getter\\n\\t\\treturn weekCalc(this);\\n\\t}\\n\\telse if (weekCalc === 'ISO') {\\n\\t\\treturn oldMomentProto.isoWeek.apply(this, arguments); // ISO getter/setter\\n\\t}\\n\\n\\treturn oldMomentProto.week.apply(this, arguments); // local getter/setter\\n};\\n\\n\\n// Time-of-day\\n// -------------------------------------------------------------------------------------------------\\n\\n// GETTER\\n// Returns a Duration with the hours/minutes/seconds/ms values of the moment.\\n// If the moment has an ambiguous time, a duration of 00:00 will be returned.\\n//\\n// SETTER\\n// You can supply a Duration, a Moment, or a Duration-like argument.\\n// When setting the time, and the moment has an ambiguous time, it then becomes unambiguous.\\nnewMomentProto.time = function(time) {\\n\\n\\t// Fallback to the original method (if there is one) if this moment wasn't created via FullCalendar.\\n\\t// `time` is a generic enough method name where this precaution is necessary to avoid collisions w/ other plugins.\\n\\tif (!this._fullCalendar) {\\n\\t\\treturn oldMomentProto.time.apply(this, arguments);\\n\\t}\\n\\n\\tif (time == null) { // getter\\n\\t\\treturn moment.duration({\\n\\t\\t\\thours: this.hours(),\\n\\t\\t\\tminutes: this.minutes(),\\n\\t\\t\\tseconds: this.seconds(),\\n\\t\\t\\tmilliseconds: this.milliseconds()\\n\\t\\t});\\n\\t}\\n\\telse { // setter\\n\\n\\t\\tthis._ambigTime = false; // mark that the moment now has a time\\n\\n\\t\\tif (!moment.isDuration(time) && !moment.isMoment(time)) {\\n\\t\\t\\ttime = moment.duration(time);\\n\\t\\t}\\n\\n\\t\\t// The day value should cause overflow (so 24 hours becomes 00:00:00 of next day).\\n\\t\\t// Only for Duration times, not Moment times.\\n\\t\\tvar dayHours = 0;\\n\\t\\tif (moment.isDuration(time)) {\\n\\t\\t\\tdayHours = Math.floor(time.asDays()) * 24;\\n\\t\\t}\\n\\n\\t\\t// We need to set the individual fields.\\n\\t\\t// Can't use startOf('day') then add duration. In case of DST at start of day.\\n\\t\\treturn this.hours(dayHours + time.hours())\\n\\t\\t\\t.minutes(time.minutes())\\n\\t\\t\\t.seconds(time.seconds())\\n\\t\\t\\t.milliseconds(time.milliseconds());\\n\\t}\\n};\\n\\n// Converts the moment to UTC, stripping out its time-of-day and timezone offset,\\n// but preserving its YMD. A moment with a stripped time will display no time\\n// nor timezone offset when .format() is called.\\nnewMomentProto.stripTime = function() {\\n\\n\\tif (!this._ambigTime) {\\n\\n\\t\\tthis.utc(true); // keepLocalTime=true (for keeping *date* value)\\n\\n\\t\\t// set time to zero\\n\\t\\tthis.set({\\n\\t\\t\\thours: 0,\\n\\t\\t\\tminutes: 0,\\n\\t\\t\\tseconds: 0,\\n\\t\\t\\tms: 0\\n\\t\\t});\\n\\n\\t\\t// Mark the time as ambiguous. This needs to happen after the .utc() call, which might call .utcOffset(),\\n\\t\\t// which clears all ambig flags.\\n\\t\\tthis._ambigTime = true;\\n\\t\\tthis._ambigZone = true; // if ambiguous time, also ambiguous timezone offset\\n\\t}\\n\\n\\treturn this; // for chaining\\n};\\n\\n// Returns if the moment has a non-ambiguous time (boolean)\\nnewMomentProto.hasTime = function() {\\n\\treturn !this._ambigTime;\\n};\\n\\n\\n// Timezone\\n// -------------------------------------------------------------------------------------------------\\n\\n// Converts the moment to UTC, stripping out its timezone offset, but preserving its\\n// YMD and time-of-day. A moment with a stripped timezone offset will display no\\n// timezone offset when .format() is called.\\nnewMomentProto.stripZone = function() {\\n\\tvar wasAmbigTime;\\n\\n\\tif (!this._ambigZone) {\\n\\n\\t\\twasAmbigTime = this._ambigTime;\\n\\n\\t\\tthis.utc(true); // keepLocalTime=true (for keeping date and time values)\\n\\n\\t\\t// the above call to .utc()/.utcOffset() unfortunately might clear the ambig flags, so restore\\n\\t\\tthis._ambigTime = wasAmbigTime || false;\\n\\n\\t\\t// Mark the zone as ambiguous. This needs to happen after the .utc() call, which might call .utcOffset(),\\n\\t\\t// which clears the ambig flags.\\n\\t\\tthis._ambigZone = true;\\n\\t}\\n\\n\\treturn this; // for chaining\\n};\\n\\n// Returns of the moment has a non-ambiguous timezone offset (boolean)\\nnewMomentProto.hasZone = function() {\\n\\treturn !this._ambigZone;\\n};\\n\\n\\n// implicitly marks a zone\\nnewMomentProto.local = function(keepLocalTime) {\\n\\n\\t// for when converting from ambiguously-zoned to local,\\n\\t// keep the time values when converting from UTC -> local\\n\\toldMomentProto.local.call(this, this._ambigZone || keepLocalTime);\\n\\n\\t// ensure non-ambiguous\\n\\t// this probably already happened via local() -> utcOffset(), but don't rely on Moment's internals\\n\\tthis._ambigTime = false;\\n\\tthis._ambigZone = false;\\n\\n\\treturn this; // for chaining\\n};\\n\\n\\n// implicitly marks a zone\\nnewMomentProto.utc = function(keepLocalTime) {\\n\\n\\toldMomentProto.utc.call(this, keepLocalTime);\\n\\n\\t// ensure non-ambiguous\\n\\t// this probably already happened via utc() -> utcOffset(), but don't rely on Moment's internals\\n\\tthis._ambigTime = false;\\n\\tthis._ambigZone = false;\\n\\n\\treturn this;\\n};\\n\\n\\n// implicitly marks a zone (will probably get called upon .utc() and .local())\\nnewMomentProto.utcOffset = function(tzo) {\\n\\n\\tif (tzo != null) { // setter\\n\\t\\t// these assignments needs to happen before the original zone method is called.\\n\\t\\t// I forget why, something to do with a browser crash.\\n\\t\\tthis._ambigTime = false;\\n\\t\\tthis._ambigZone = false;\\n\\t}\\n\\n\\treturn oldMomentProto.utcOffset.apply(this, arguments);\\n};\\n\\n\\n// Formatting\\n// -------------------------------------------------------------------------------------------------\\n\\nnewMomentProto.format = function() {\\n\\tif (this._fullCalendar && arguments[0]) { // an enhanced moment? and a format string provided?\\n\\t\\treturn formatDate(this, arguments[0]); // our extended formatting\\n\\t}\\n\\tif (this._ambigTime) {\\n\\t\\treturn oldMomentFormat(this, 'YYYY-MM-DD');\\n\\t}\\n\\tif (this._ambigZone) {\\n\\t\\treturn oldMomentFormat(this, 'YYYY-MM-DD[T]HH:mm:ss');\\n\\t}\\n\\treturn oldMomentProto.format.apply(this, arguments);\\n};\\n\\nnewMomentProto.toISOString = function() {\\n\\tif (this._ambigTime) {\\n\\t\\treturn oldMomentFormat(this, 'YYYY-MM-DD');\\n\\t}\\n\\tif (this._ambigZone) {\\n\\t\\treturn oldMomentFormat(this, 'YYYY-MM-DD[T]HH:mm:ss');\\n\\t}\\n\\treturn oldMomentProto.toISOString.apply(this, arguments);\\n};\\n\\n;;\\n\\n// Single Date Formatting\\n// -------------------------------------------------------------------------------------------------\\n\\n\\n// call this if you want Moment's original format method to be used\\nfunction oldMomentFormat(mom, formatStr) {\\n\\treturn oldMomentProto.format.call(mom, formatStr); // oldMomentProto defined in moment-ext.js\\n}\\n\\n\\n// Formats `date` with a Moment formatting string, but allow our non-zero areas and\\n// additional token.\\nfunction formatDate(date, formatStr) {\\n\\treturn formatDateWithChunks(date, getFormatStringChunks(formatStr));\\n}\\n\\n\\nfunction formatDateWithChunks(date, chunks) {\\n\\tvar s = '';\\n\\tvar i;\\n\\n\\tfor (i=0; i<chunks.length; i++) {\\n\\t\\ts += formatDateWithChunk(date, chunks[i]);\\n\\t}\\n\\n\\treturn s;\\n}\\n\\n\\n// addition formatting tokens we want recognized\\nvar tokenOverrides = {\\n\\tt: function(date) { // \\\"a\\\" or \\\"p\\\"\\n\\t\\treturn oldMomentFormat(date, 'a').charAt(0);\\n\\t},\\n\\tT: function(date) { // \\\"A\\\" or \\\"P\\\"\\n\\t\\treturn oldMomentFormat(date, 'A').charAt(0);\\n\\t}\\n};\\n\\n\\nfunction formatDateWithChunk(date, chunk) {\\n\\tvar token;\\n\\tvar maybeStr;\\n\\n\\tif (typeof chunk === 'string') { // a literal string\\n\\t\\treturn chunk;\\n\\t}\\n\\telse if ((token = chunk.token)) { // a token, like \\\"YYYY\\\"\\n\\t\\tif (tokenOverrides[token]) {\\n\\t\\t\\treturn tokenOverrides[token](date); // use our custom token\\n\\t\\t}\\n\\t\\treturn oldMomentFormat(date, token);\\n\\t}\\n\\telse if (chunk.maybe) { // a grouping of other chunks that must be non-zero\\n\\t\\tmaybeStr = formatDateWithChunks(date, chunk.maybe);\\n\\t\\tif (maybeStr.match(/[1-9]/)) {\\n\\t\\t\\treturn maybeStr;\\n\\t\\t}\\n\\t}\\n\\n\\treturn '';\\n}\\n\\n\\n// Date Range Formatting\\n// -------------------------------------------------------------------------------------------------\\n// TODO: make it work with timezone offset\\n\\n// Using a formatting string meant for a single date, generate a range string, like\\n// \\\"Sep 2 - 9 2013\\\", that intelligently inserts a separator where the dates differ.\\n// If the dates are the same as far as the format string is concerned, just return a single\\n// rendering of one date, without any separator.\\nfunction formatRange(date1, date2, formatStr, separator, isRTL) {\\n\\tvar localeData;\\n\\n\\tdate1 = FC.moment.parseZone(date1);\\n\\tdate2 = FC.moment.parseZone(date2);\\n\\n\\tlocaleData = date1.localeData();\\n\\n\\t// Expand localized format strings, like \\\"LL\\\" -> \\\"MMMM D YYYY\\\"\\n\\tformatStr = localeData.longDateFormat(formatStr) || formatStr;\\n\\t// BTW, this is not important for `formatDate` because it is impossible to put custom tokens\\n\\t// or non-zero areas in Moment's localized format strings.\\n\\n\\tseparator = separator || ' - ';\\n\\n\\treturn formatRangeWithChunks(\\n\\t\\tdate1,\\n\\t\\tdate2,\\n\\t\\tgetFormatStringChunks(formatStr),\\n\\t\\tseparator,\\n\\t\\tisRTL\\n\\t);\\n}\\nFC.formatRange = formatRange; // expose\\n\\n\\nfunction formatRangeWithChunks(date1, date2, chunks, separator, isRTL) {\\n\\tvar unzonedDate1 = date1.clone().stripZone(); // for formatSimilarChunk\\n\\tvar unzonedDate2 = date2.clone().stripZone(); // \\\"\\n\\tvar chunkStr; // the rendering of the chunk\\n\\tvar leftI;\\n\\tvar leftStr = '';\\n\\tvar rightI;\\n\\tvar rightStr = '';\\n\\tvar middleI;\\n\\tvar middleStr1 = '';\\n\\tvar middleStr2 = '';\\n\\tvar middleStr = '';\\n\\n\\t// Start at the leftmost side of the formatting string and continue until you hit a token\\n\\t// that is not the same between dates.\\n\\tfor (leftI=0; leftI<chunks.length; leftI++) {\\n\\t\\tchunkStr = formatSimilarChunk(date1, date2, unzonedDate1, unzonedDate2, chunks[leftI]);\\n\\t\\tif (chunkStr === false) {\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t\\tleftStr += chunkStr;\\n\\t}\\n\\n\\t// Similarly, start at the rightmost side of the formatting string and move left\\n\\tfor (rightI=chunks.length-1; rightI>leftI; rightI--) {\\n\\t\\tchunkStr = formatSimilarChunk(date1, date2, unzonedDate1, unzonedDate2,  chunks[rightI]);\\n\\t\\tif (chunkStr === false) {\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t\\trightStr = chunkStr + rightStr;\\n\\t}\\n\\n\\t// The area in the middle is different for both of the dates.\\n\\t// Collect them distinctly so we can jam them together later.\\n\\tfor (middleI=leftI; middleI<=rightI; middleI++) {\\n\\t\\tmiddleStr1 += formatDateWithChunk(date1, chunks[middleI]);\\n\\t\\tmiddleStr2 += formatDateWithChunk(date2, chunks[middleI]);\\n\\t}\\n\\n\\tif (middleStr1 || middleStr2) {\\n\\t\\tif (isRTL) {\\n\\t\\t\\tmiddleStr = middleStr2 + separator + middleStr1;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tmiddleStr = middleStr1 + separator + middleStr2;\\n\\t\\t}\\n\\t}\\n\\n\\treturn leftStr + middleStr + rightStr;\\n}\\n\\n\\nvar similarUnitMap = {\\n\\tY: 'year',\\n\\tM: 'month',\\n\\tD: 'day', // day of month\\n\\td: 'day', // day of week\\n\\t// prevents a separator between anything time-related...\\n\\tA: 'second', // AM/PM\\n\\ta: 'second', // am/pm\\n\\tT: 'second', // A/P\\n\\tt: 'second', // a/p\\n\\tH: 'second', // hour (24)\\n\\th: 'second', // hour (12)\\n\\tm: 'second', // minute\\n\\ts: 'second' // second\\n};\\n// TODO: week maybe?\\n\\n\\n// Given a formatting chunk, and given that both dates are similar in the regard the\\n// formatting chunk is concerned, format date1 against `chunk`. Otherwise, return `false`.\\nfunction formatSimilarChunk(date1, date2, unzonedDate1, unzonedDate2, chunk) {\\n\\tvar token;\\n\\tvar unit;\\n\\n\\tif (typeof chunk === 'string') { // a literal string\\n\\t\\treturn chunk;\\n\\t}\\n\\telse if ((token = chunk.token)) {\\n\\t\\tunit = similarUnitMap[token.charAt(0)];\\n\\n\\t\\t// are the dates the same for this unit of measurement?\\n\\t\\t// use the unzoned dates for this calculation because unreliable when near DST (bug #2396)\\n\\t\\tif (unit && unzonedDate1.isSame(unzonedDate2, unit)) {\\n\\t\\t\\treturn oldMomentFormat(date1, token); // would be the same if we used `date2`\\n\\t\\t\\t// BTW, don't support custom tokens\\n\\t\\t}\\n\\t}\\n\\n\\treturn false; // the chunk is NOT the same for the two dates\\n\\t// BTW, don't support splitting on non-zero areas\\n}\\n\\n\\n// Chunking Utils\\n// -------------------------------------------------------------------------------------------------\\n\\n\\nvar formatStringChunkCache = {};\\n\\n\\nfunction getFormatStringChunks(formatStr) {\\n\\tif (formatStr in formatStringChunkCache) {\\n\\t\\treturn formatStringChunkCache[formatStr];\\n\\t}\\n\\treturn (formatStringChunkCache[formatStr] = chunkFormatString(formatStr));\\n}\\n\\n\\n// Break the formatting string into an array of chunks\\nfunction chunkFormatString(formatStr) {\\n\\tvar chunks = [];\\n\\tvar chunker = /\\\\[([^\\\\]]*)\\\\]|\\\\(([^\\\\)]*)\\\\)|(LTS|LT|(\\\\w)\\\\4*o?)|([^\\\\w\\\\[\\\\(]+)/g; // TODO: more descrimination\\n\\tvar match;\\n\\n\\twhile ((match = chunker.exec(formatStr))) {\\n\\t\\tif (match[1]) { // a literal string inside [ ... ]\\n\\t\\t\\tchunks.push(match[1]);\\n\\t\\t}\\n\\t\\telse if (match[2]) { // non-zero formatting inside ( ... )\\n\\t\\t\\tchunks.push({ maybe: chunkFormatString(match[2]) });\\n\\t\\t}\\n\\t\\telse if (match[3]) { // a formatting token\\n\\t\\t\\tchunks.push({ token: match[3] });\\n\\t\\t}\\n\\t\\telse if (match[5]) { // an unenclosed literal string\\n\\t\\t\\tchunks.push(match[5]);\\n\\t\\t}\\n\\t}\\n\\n\\treturn chunks;\\n}\\n\\n\\n// Misc Utils\\n// -------------------------------------------------------------------------------------------------\\n\\n\\n// granularity only goes up until day\\n// TODO: unify with similarUnitMap\\nvar tokenGranularities = {\\n\\tY: { value: 1, unit: 'year' },\\n\\tM: { value: 2, unit: 'month' },\\n\\tW: { value: 3, unit: 'week' },\\n\\tw: { value: 3, unit: 'week' },\\n\\tD: { value: 4, unit: 'day' }, // day of month\\n\\td: { value: 4, unit: 'day' } // day of week\\n};\\n\\n// returns a unit string, either 'year', 'month', 'day', or null\\n// for the most granular formatting token in the string.\\nFC.queryMostGranularFormatUnit = function(formatStr) {\\n\\tvar chunks = getFormatStringChunks(formatStr);\\n\\tvar i, chunk;\\n\\tvar candidate;\\n\\tvar best;\\n\\n\\tfor (i = 0; i < chunks.length; i++) {\\n\\t\\tchunk = chunks[i];\\n\\t\\tif (chunk.token) {\\n\\t\\t\\tcandidate = tokenGranularities[chunk.token.charAt(0)];\\n\\t\\t\\tif (candidate) {\\n\\t\\t\\t\\tif (!best || candidate.value > best.value) {\\n\\t\\t\\t\\t\\tbest = candidate;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tif (best) {\\n\\t\\treturn best.unit;\\n\\t}\\n\\n\\treturn null;\\n};\\n\\n;;\\n\\nFC.Class = Class; // export\\n\\n// Class that all other classes will inherit from\\nfunction Class() { }\\n\\n\\n// Called on a class to create a subclass.\\n// Last argument contains instance methods. Any argument before the last are considered mixins.\\nClass.extend = function() {\\n\\tvar len = arguments.length;\\n\\tvar i;\\n\\tvar members;\\n\\n\\tfor (i = 0; i < len; i++) {\\n\\t\\tmembers = arguments[i];\\n\\t\\tif (i < len - 1) { // not the last argument?\\n\\t\\t\\tmixIntoClass(this, members);\\n\\t\\t}\\n\\t}\\n\\n\\treturn extendClass(this, members || {}); // members will be undefined if no arguments\\n};\\n\\n\\n// Adds new member variables/methods to the class's prototype.\\n// Can be called with another class, or a plain object hash containing new members.\\nClass.mixin = function(members) {\\n\\tmixIntoClass(this, members);\\n};\\n\\n\\nfunction extendClass(superClass, members) {\\n\\tvar subClass;\\n\\n\\t// ensure a constructor for the subclass, forwarding all arguments to the super-constructor if it doesn't exist\\n\\tif (hasOwnProp(members, 'constructor')) {\\n\\t\\tsubClass = members.constructor;\\n\\t}\\n\\tif (typeof subClass !== 'function') {\\n\\t\\tsubClass = members.constructor = function() {\\n\\t\\t\\tsuperClass.apply(this, arguments);\\n\\t\\t};\\n\\t}\\n\\n\\t// build the base prototype for the subclass, which is an new object chained to the superclass's prototype\\n\\tsubClass.prototype = createObject(superClass.prototype);\\n\\n\\t// copy each member variable/method onto the the subclass's prototype\\n\\tcopyOwnProps(members, subClass.prototype);\\n\\n\\t// copy over all class variables/methods to the subclass, such as `extend` and `mixin`\\n\\tcopyOwnProps(superClass, subClass);\\n\\n\\treturn subClass;\\n}\\n\\n\\nfunction mixIntoClass(theClass, members) {\\n\\tcopyOwnProps(members, theClass.prototype);\\n}\\n;;\\n\\n/*\\nWrap jQuery's Deferred Promise object to be slightly more Promise/A+ compliant.\\nWith the added non-standard feature of synchronously executing handlers on resolved promises,\\nwhich doesn't always happen otherwise (esp with nested .then handlers!?),\\nso, this makes things a lot easier, esp because jQuery 3 changed the synchronicity for Deferred objects.\\n\\nTODO: write tests and more comments\\n*/\\n\\nfunction Promise(executor) {\\n\\tvar deferred = $.Deferred();\\n\\tvar promise = deferred.promise();\\n\\n\\tif (typeof executor === 'function') {\\n\\t\\texecutor(\\n\\t\\t\\tfunction(value) { // resolve\\n\\t\\t\\t\\tif (Promise.immediate) {\\n\\t\\t\\t\\t\\tpromise._value = value;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tdeferred.resolve(value);\\n\\t\\t\\t},\\n\\t\\t\\tfunction() { // reject\\n\\t\\t\\t\\tdeferred.reject();\\n\\t\\t\\t}\\n\\t\\t);\\n\\t}\\n\\t\\n\\tif (Promise.immediate) {\\n\\t\\tvar origThen = promise.then;\\n\\n\\t\\tpromise.then = function(onFulfilled, onRejected) {\\n\\t\\t\\tvar state = promise.state();\\n\\t\\t\\t\\n\\t\\t\\tif (state === 'resolved') {\\n\\t\\t\\t\\tif (typeof onFulfilled === 'function') {\\n\\t\\t\\t\\t\\treturn Promise.resolve(onFulfilled(promise._value));\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\telse if (state === 'rejected') {\\n\\t\\t\\t\\tif (typeof onRejected === 'function') {\\n\\t\\t\\t\\t\\tonRejected();\\n\\t\\t\\t\\t\\treturn promise; // already rejected\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn origThen.call(promise, onFulfilled, onRejected);\\n\\t\\t};\\n\\t}\\n\\n\\treturn promise; // instanceof Promise will break :( TODO: make Promise a real class\\n}\\n\\nFC.Promise = Promise;\\n\\nPromise.immediate = true;\\n\\n\\nPromise.resolve = function(value) {\\n\\tif (value && typeof value.resolve === 'function') {\\n\\t\\treturn value.promise();\\n\\t}\\n\\tif (value && typeof value.then === 'function') {\\n\\t\\treturn value;\\n\\t}\\n\\telse {\\n\\t\\tvar deferred = $.Deferred().resolve(value);\\n\\t\\tvar promise = deferred.promise();\\n\\n\\t\\tif (Promise.immediate) {\\n\\t\\t\\tvar origThen = promise.then;\\n\\n\\t\\t\\tpromise._value = value;\\n\\n\\t\\t\\tpromise.then = function(onFulfilled, onRejected) {\\n\\t\\t\\t\\tif (typeof onFulfilled === 'function') {\\n\\t\\t\\t\\t\\treturn Promise.resolve(onFulfilled(value));\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn origThen.call(promise, onFulfilled, onRejected);\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\treturn promise;\\n\\t}\\n};\\n\\n\\nPromise.reject = function() {\\n\\treturn $.Deferred().reject().promise();\\n};\\n\\n\\nPromise.all = function(inputs) {\\n\\tvar hasAllValues = false;\\n\\tvar values;\\n\\tvar i, input;\\n\\n\\tif (Promise.immediate) {\\n\\t\\thasAllValues = true;\\n\\t\\tvalues = [];\\n\\n\\t\\tfor (i = 0; i < inputs.length; i++) {\\n\\t\\t\\tinput = inputs[i];\\n\\n\\t\\t\\tif (input && typeof input.state === 'function' && input.state() === 'resolved' && ('_value' in input)) {\\n\\t\\t\\t\\tvalues.push(input._value);\\n\\t\\t\\t}\\n\\t\\t\\telse if (input && typeof input.then === 'function') {\\n\\t\\t\\t\\thasAllValues = false;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tvalues.push(input);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tif (hasAllValues) {\\n\\t\\treturn Promise.resolve(values);\\n\\t}\\n\\telse {\\n\\t\\treturn $.when.apply($.when, inputs).then(function() {\\n\\t\\t\\treturn $.when($.makeArray(arguments));\\n\\t\\t});\\n\\t}\\n};\\n\\n;;\\n\\n// TODO: write tests and clean up code\\n\\nfunction TaskQueue(debounceWait) {\\n\\tvar q = []; // array of runFuncs\\n\\n\\tfunction addTask(taskFunc) {\\n\\t\\treturn new Promise(function(resolve) {\\n\\n\\t\\t\\t// should run this function when it's taskFunc's turn to run.\\n\\t\\t\\t// responsible for popping itself off the queue.\\n\\t\\t\\tvar runFunc = function() {\\n\\t\\t\\t\\tPromise.resolve(taskFunc()) // result might be async, coerce to promise\\n\\t\\t\\t\\t\\t.then(resolve) // resolve TaskQueue::push's promise, for the caller. will receive result of taskFunc.\\n\\t\\t\\t\\t\\t.then(function() {\\n\\t\\t\\t\\t\\t\\tq.shift(); // pop itself off\\n\\n\\t\\t\\t\\t\\t\\t// run the next task, if any\\n\\t\\t\\t\\t\\t\\tif (q.length) {\\n\\t\\t\\t\\t\\t\\t\\tq[0]();\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t};\\n\\n\\t\\t\\t// always put the task at the end of the queue, BEFORE running the task\\n\\t\\t\\tq.push(runFunc);\\n\\n\\t\\t\\t// if it's the only task in the queue, run immediately\\n\\t\\t\\tif (q.length === 1) {\\n\\t\\t\\t\\trunFunc();\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\n\\tthis.add = // potentially debounce, for the public method\\n\\t\\ttypeof debounceWait === 'number' ?\\n\\t\\t\\tdebounce(addTask, debounceWait) :\\n\\t\\t\\taddTask; // if not a number (null/undefined/false), no debounce at all\\n\\n\\tthis.addQuickly = addTask; // guaranteed no debounce\\n}\\n\\nFC.TaskQueue = TaskQueue;\\n\\n/*\\nq = new TaskQueue();\\n\\nfunction work(i) {\\n\\treturn q.push(function() {\\n\\t\\ttrigger();\\n\\t\\tconsole.log('work' + i);\\n\\t});\\n}\\n\\nvar cnt = 0;\\n\\nfunction trigger() {\\n\\tif (cnt < 5) {\\n\\t\\tcnt++;\\n\\t\\twork(cnt);\\n\\t}\\n}\\n\\nwork(9);\\n*/\\n\\n;;\\n\\nvar EmitterMixin = FC.EmitterMixin = {\\n\\n\\t// jQuery-ification via $(this) allows a non-DOM object to have\\n\\t// the same event handling capabilities (including namespaces).\\n\\n\\n\\ton: function(types, handler) {\\n\\t\\t$(this).on(types, this._prepareIntercept(handler));\\n\\t\\treturn this; // for chaining\\n\\t},\\n\\n\\n\\tone: function(types, handler) {\\n\\t\\t$(this).one(types, this._prepareIntercept(handler));\\n\\t\\treturn this; // for chaining\\n\\t},\\n\\n\\n\\t_prepareIntercept: function(handler) {\\n\\t\\t// handlers are always called with an \\\"event\\\" object as their first param.\\n\\t\\t// sneak the `this` context and arguments into the extra parameter object\\n\\t\\t// and forward them on to the original handler.\\n\\t\\tvar intercept = function(ev, extra) {\\n\\t\\t\\treturn handler.apply(\\n\\t\\t\\t\\textra.context || this,\\n\\t\\t\\t\\textra.args || []\\n\\t\\t\\t);\\n\\t\\t};\\n\\n\\t\\t// mimick jQuery's internal \\\"proxy\\\" system (risky, I know)\\n\\t\\t// causing all functions with the same .guid to appear to be the same.\\n\\t\\t// https://github.com/jquery/jquery/blob/2.2.4/src/core.js#L448\\n\\t\\t// this is needed for calling .off with the original non-intercept handler.\\n\\t\\tif (!handler.guid) {\\n\\t\\t\\thandler.guid = $.guid++;\\n\\t\\t}\\n\\t\\tintercept.guid = handler.guid;\\n\\n\\t\\treturn intercept;\\n\\t},\\n\\n\\n\\toff: function(types, handler) {\\n\\t\\t$(this).off(types, handler);\\n\\n\\t\\treturn this; // for chaining\\n\\t},\\n\\n\\n\\ttrigger: function(types) {\\n\\t\\tvar args = Array.prototype.slice.call(arguments, 1); // arguments after the first\\n\\n\\t\\t// pass in \\\"extra\\\" info to the intercept\\n\\t\\t$(this).triggerHandler(types, { args: args });\\n\\n\\t\\treturn this; // for chaining\\n\\t},\\n\\n\\n\\ttriggerWith: function(types, context, args) {\\n\\n\\t\\t// `triggerHandler` is less reliant on the DOM compared to `trigger`.\\n\\t\\t// pass in \\\"extra\\\" info to the intercept.\\n\\t\\t$(this).triggerHandler(types, { context: context, args: args });\\n\\n\\t\\treturn this; // for chaining\\n\\t}\\n\\n};\\n\\n;;\\n\\n/*\\nUtility methods for easily listening to events on another object,\\nand more importantly, easily unlistening from them.\\n*/\\nvar ListenerMixin = FC.ListenerMixin = (function() {\\n\\tvar guid = 0;\\n\\tvar ListenerMixin = {\\n\\n\\t\\tlistenerId: null,\\n\\n\\t\\t/*\\n\\t\\tGiven an `other` object that has on/off methods, bind the given `callback` to an event by the given name.\\n\\t\\tThe `callback` will be called with the `this` context of the object that .listenTo is being called on.\\n\\t\\tCan be called:\\n\\t\\t\\t.listenTo(other, eventName, callback)\\n\\t\\tOR\\n\\t\\t\\t.listenTo(other, {\\n\\t\\t\\t\\teventName1: callback1,\\n\\t\\t\\t\\teventName2: callback2\\n\\t\\t\\t})\\n\\t\\t*/\\n\\t\\tlistenTo: function(other, arg, callback) {\\n\\t\\t\\tif (typeof arg === 'object') { // given dictionary of callbacks\\n\\t\\t\\t\\tfor (var eventName in arg) {\\n\\t\\t\\t\\t\\tif (arg.hasOwnProperty(eventName)) {\\n\\t\\t\\t\\t\\t\\tthis.listenTo(other, eventName, arg[eventName]);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\telse if (typeof arg === 'string') {\\n\\t\\t\\t\\tother.on(\\n\\t\\t\\t\\t\\targ + '.' + this.getListenerNamespace(), // use event namespacing to identify this object\\n\\t\\t\\t\\t\\t$.proxy(callback, this) // always use `this` context\\n\\t\\t\\t\\t\\t\\t// the usually-undesired jQuery guid behavior doesn't matter,\\n\\t\\t\\t\\t\\t\\t// because we always unbind via namespace\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t/*\\n\\t\\tCauses the current object to stop listening to events on the `other` object.\\n\\t\\t`eventName` is optional. If omitted, will stop listening to ALL events on `other`.\\n\\t\\t*/\\n\\t\\tstopListeningTo: function(other, eventName) {\\n\\t\\t\\tother.off((eventName || '') + '.' + this.getListenerNamespace());\\n\\t\\t},\\n\\n\\t\\t/*\\n\\t\\tReturns a string, unique to this object, to be used for event namespacing\\n\\t\\t*/\\n\\t\\tgetListenerNamespace: function() {\\n\\t\\t\\tif (this.listenerId == null) {\\n\\t\\t\\t\\tthis.listenerId = guid++;\\n\\t\\t\\t}\\n\\t\\t\\treturn '_listener' + this.listenerId;\\n\\t\\t}\\n\\n\\t};\\n\\treturn ListenerMixin;\\n})();\\n;;\\n\\n// simple class for toggle a `isIgnoringMouse` flag on delay\\n// initMouseIgnoring must first be called, with a millisecond delay setting.\\nvar MouseIgnorerMixin = {\\n\\n\\tisIgnoringMouse: false, // bool\\n\\tdelayUnignoreMouse: null, // method\\n\\n\\n\\tinitMouseIgnoring: function(delay) {\\n\\t\\tthis.delayUnignoreMouse = debounce(proxy(this, 'unignoreMouse'), delay || 1000);\\n\\t},\\n\\n\\n\\t// temporarily ignore mouse actions on segments\\n\\ttempIgnoreMouse: function() {\\n\\t\\tthis.isIgnoringMouse = true;\\n\\t\\tthis.delayUnignoreMouse();\\n\\t},\\n\\n\\n\\t// delayUnignoreMouse eventually calls this\\n\\tunignoreMouse: function() {\\n\\t\\tthis.isIgnoringMouse = false;\\n\\t}\\n\\n};\\n\\n;;\\n\\n/* A rectangular panel that is absolutely positioned over other content\\n------------------------------------------------------------------------------------------------------------------------\\nOptions:\\n\\t- className (string)\\n\\t- content (HTML string or jQuery element set)\\n\\t- parentEl\\n\\t- top\\n\\t- left\\n\\t- right (the x coord of where the right edge should be. not a \\\"CSS\\\" right)\\n\\t- autoHide (boolean)\\n\\t- show (callback)\\n\\t- hide (callback)\\n*/\\n\\nvar Popover = Class.extend(ListenerMixin, {\\n\\n\\tisHidden: true,\\n\\toptions: null,\\n\\tel: null, // the container element for the popover. generated by this object\\n\\tmargin: 10, // the space required between the popover and the edges of the scroll container\\n\\n\\n\\tconstructor: function(options) {\\n\\t\\tthis.options = options || {};\\n\\t},\\n\\n\\n\\t// Shows the popover on the specified position. Renders it if not already\\n\\tshow: function() {\\n\\t\\tif (this.isHidden) {\\n\\t\\t\\tif (!this.el) {\\n\\t\\t\\t\\tthis.render();\\n\\t\\t\\t}\\n\\t\\t\\tthis.el.show();\\n\\t\\t\\tthis.position();\\n\\t\\t\\tthis.isHidden = false;\\n\\t\\t\\tthis.trigger('show');\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Hides the popover, through CSS, but does not remove it from the DOM\\n\\thide: function() {\\n\\t\\tif (!this.isHidden) {\\n\\t\\t\\tthis.el.hide();\\n\\t\\t\\tthis.isHidden = true;\\n\\t\\t\\tthis.trigger('hide');\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Creates `this.el` and renders content inside of it\\n\\trender: function() {\\n\\t\\tvar _this = this;\\n\\t\\tvar options = this.options;\\n\\n\\t\\tthis.el = $('<div class=\\\"fc-popover\\\"/>')\\n\\t\\t\\t.addClass(options.className || '')\\n\\t\\t\\t.css({\\n\\t\\t\\t\\t// position initially to the top left to avoid creating scrollbars\\n\\t\\t\\t\\ttop: 0,\\n\\t\\t\\t\\tleft: 0\\n\\t\\t\\t})\\n\\t\\t\\t.append(options.content)\\n\\t\\t\\t.appendTo(options.parentEl);\\n\\n\\t\\t// when a click happens on anything inside with a 'fc-close' className, hide the popover\\n\\t\\tthis.el.on('click', '.fc-close', function() {\\n\\t\\t\\t_this.hide();\\n\\t\\t});\\n\\n\\t\\tif (options.autoHide) {\\n\\t\\t\\tthis.listenTo($(document), 'mousedown', this.documentMousedown);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Triggered when the user clicks *anywhere* in the document, for the autoHide feature\\n\\tdocumentMousedown: function(ev) {\\n\\t\\t// only hide the popover if the click happened outside the popover\\n\\t\\tif (this.el && !$(ev.target).closest(this.el).length) {\\n\\t\\t\\tthis.hide();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Hides and unregisters any handlers\\n\\tremoveElement: function() {\\n\\t\\tthis.hide();\\n\\n\\t\\tif (this.el) {\\n\\t\\t\\tthis.el.remove();\\n\\t\\t\\tthis.el = null;\\n\\t\\t}\\n\\n\\t\\tthis.stopListeningTo($(document), 'mousedown');\\n\\t},\\n\\n\\n\\t// Positions the popover optimally, using the top/left/right options\\n\\tposition: function() {\\n\\t\\tvar options = this.options;\\n\\t\\tvar origin = this.el.offsetParent().offset();\\n\\t\\tvar width = this.el.outerWidth();\\n\\t\\tvar height = this.el.outerHeight();\\n\\t\\tvar windowEl = $(window);\\n\\t\\tvar viewportEl = getScrollParent(this.el);\\n\\t\\tvar viewportTop;\\n\\t\\tvar viewportLeft;\\n\\t\\tvar viewportOffset;\\n\\t\\tvar top; // the \\\"position\\\" (not \\\"offset\\\") values for the popover\\n\\t\\tvar left; //\\n\\n\\t\\t// compute top and left\\n\\t\\ttop = options.top || 0;\\n\\t\\tif (options.left !== undefined) {\\n\\t\\t\\tleft = options.left;\\n\\t\\t}\\n\\t\\telse if (options.right !== undefined) {\\n\\t\\t\\tleft = options.right - width; // derive the left value from the right value\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tleft = 0;\\n\\t\\t}\\n\\n\\t\\tif (viewportEl.is(window) || viewportEl.is(document)) { // normalize getScrollParent's result\\n\\t\\t\\tviewportEl = windowEl;\\n\\t\\t\\tviewportTop = 0; // the window is always at the top left\\n\\t\\t\\tviewportLeft = 0; // (and .offset() won't work if called here)\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tviewportOffset = viewportEl.offset();\\n\\t\\t\\tviewportTop = viewportOffset.top;\\n\\t\\t\\tviewportLeft = viewportOffset.left;\\n\\t\\t}\\n\\n\\t\\t// if the window is scrolled, it causes the visible area to be further down\\n\\t\\tviewportTop += windowEl.scrollTop();\\n\\t\\tviewportLeft += windowEl.scrollLeft();\\n\\n\\t\\t// constrain to the view port. if constrained by two edges, give precedence to top/left\\n\\t\\tif (options.viewportConstrain !== false) {\\n\\t\\t\\ttop = Math.min(top, viewportTop + viewportEl.outerHeight() - height - this.margin);\\n\\t\\t\\ttop = Math.max(top, viewportTop + this.margin);\\n\\t\\t\\tleft = Math.min(left, viewportLeft + viewportEl.outerWidth() - width - this.margin);\\n\\t\\t\\tleft = Math.max(left, viewportLeft + this.margin);\\n\\t\\t}\\n\\n\\t\\tthis.el.css({\\n\\t\\t\\ttop: top - origin.top,\\n\\t\\t\\tleft: left - origin.left\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Triggers a callback. Calls a function in the option hash of the same name.\\n\\t// Arguments beyond the first `name` are forwarded on.\\n\\t// TODO: better code reuse for this. Repeat code\\n\\ttrigger: function(name) {\\n\\t\\tif (this.options[name]) {\\n\\t\\t\\tthis.options[name].apply(this, Array.prototype.slice.call(arguments, 1));\\n\\t\\t}\\n\\t}\\n\\n});\\n\\n;;\\n\\n/*\\nA cache for the left/right/top/bottom/width/height values for one or more elements.\\nWorks with both offset (from topleft document) and position (from offsetParent).\\n\\noptions:\\n- els\\n- isHorizontal\\n- isVertical\\n*/\\nvar CoordCache = FC.CoordCache = Class.extend({\\n\\n\\tels: null, // jQuery set (assumed to be siblings)\\n\\tforcedOffsetParentEl: null, // options can override the natural offsetParent\\n\\torigin: null, // {left,top} position of offsetParent of els\\n\\tboundingRect: null, // constrain cordinates to this rectangle. {left,right,top,bottom} or null\\n\\tisHorizontal: false, // whether to query for left/right/width\\n\\tisVertical: false, // whether to query for top/bottom/height\\n\\n\\t// arrays of coordinates (offsets from topleft of document)\\n\\tlefts: null,\\n\\trights: null,\\n\\ttops: null,\\n\\tbottoms: null,\\n\\n\\n\\tconstructor: function(options) {\\n\\t\\tthis.els = $(options.els);\\n\\t\\tthis.isHorizontal = options.isHorizontal;\\n\\t\\tthis.isVertical = options.isVertical;\\n\\t\\tthis.forcedOffsetParentEl = options.offsetParent ? $(options.offsetParent) : null;\\n\\t},\\n\\n\\n\\t// Queries the els for coordinates and stores them.\\n\\t// Call this method before using and of the get* methods below.\\n\\tbuild: function() {\\n\\t\\tvar offsetParentEl = this.forcedOffsetParentEl;\\n\\t\\tif (!offsetParentEl && this.els.length > 0) {\\n\\t\\t\\toffsetParentEl = this.els.eq(0).offsetParent();\\n\\t\\t}\\n\\n\\t\\tthis.origin = offsetParentEl ?\\n\\t\\t\\toffsetParentEl.offset() :\\n\\t\\t\\tnull;\\n\\n\\t\\tthis.boundingRect = this.queryBoundingRect();\\n\\n\\t\\tif (this.isHorizontal) {\\n\\t\\t\\tthis.buildElHorizontals();\\n\\t\\t}\\n\\t\\tif (this.isVertical) {\\n\\t\\t\\tthis.buildElVerticals();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Destroys all internal data about coordinates, freeing memory\\n\\tclear: function() {\\n\\t\\tthis.origin = null;\\n\\t\\tthis.boundingRect = null;\\n\\t\\tthis.lefts = null;\\n\\t\\tthis.rights = null;\\n\\t\\tthis.tops = null;\\n\\t\\tthis.bottoms = null;\\n\\t},\\n\\n\\n\\t// When called, if coord caches aren't built, builds them\\n\\tensureBuilt: function() {\\n\\t\\tif (!this.origin) {\\n\\t\\t\\tthis.build();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Populates the left/right internal coordinate arrays\\n\\tbuildElHorizontals: function() {\\n\\t\\tvar lefts = [];\\n\\t\\tvar rights = [];\\n\\n\\t\\tthis.els.each(function(i, node) {\\n\\t\\t\\tvar el = $(node);\\n\\t\\t\\tvar left = el.offset().left;\\n\\t\\t\\tvar width = el.outerWidth();\\n\\n\\t\\t\\tlefts.push(left);\\n\\t\\t\\trights.push(left + width);\\n\\t\\t});\\n\\n\\t\\tthis.lefts = lefts;\\n\\t\\tthis.rights = rights;\\n\\t},\\n\\n\\n\\t// Populates the top/bottom internal coordinate arrays\\n\\tbuildElVerticals: function() {\\n\\t\\tvar tops = [];\\n\\t\\tvar bottoms = [];\\n\\n\\t\\tthis.els.each(function(i, node) {\\n\\t\\t\\tvar el = $(node);\\n\\t\\t\\tvar top = el.offset().top;\\n\\t\\t\\tvar height = el.outerHeight();\\n\\n\\t\\t\\ttops.push(top);\\n\\t\\t\\tbottoms.push(top + height);\\n\\t\\t});\\n\\n\\t\\tthis.tops = tops;\\n\\t\\tthis.bottoms = bottoms;\\n\\t},\\n\\n\\n\\t// Given a left offset (from document left), returns the index of the el that it horizontally intersects.\\n\\t// If no intersection is made, returns undefined.\\n\\tgetHorizontalIndex: function(leftOffset) {\\n\\t\\tthis.ensureBuilt();\\n\\n\\t\\tvar lefts = this.lefts;\\n\\t\\tvar rights = this.rights;\\n\\t\\tvar len = lefts.length;\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < len; i++) {\\n\\t\\t\\tif (leftOffset >= lefts[i] && leftOffset < rights[i]) {\\n\\t\\t\\t\\treturn i;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Given a top offset (from document top), returns the index of the el that it vertically intersects.\\n\\t// If no intersection is made, returns undefined.\\n\\tgetVerticalIndex: function(topOffset) {\\n\\t\\tthis.ensureBuilt();\\n\\n\\t\\tvar tops = this.tops;\\n\\t\\tvar bottoms = this.bottoms;\\n\\t\\tvar len = tops.length;\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < len; i++) {\\n\\t\\t\\tif (topOffset >= tops[i] && topOffset < bottoms[i]) {\\n\\t\\t\\t\\treturn i;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Gets the left offset (from document left) of the element at the given index\\n\\tgetLeftOffset: function(leftIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.lefts[leftIndex];\\n\\t},\\n\\n\\n\\t// Gets the left position (from offsetParent left) of the element at the given index\\n\\tgetLeftPosition: function(leftIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.lefts[leftIndex] - this.origin.left;\\n\\t},\\n\\n\\n\\t// Gets the right offset (from document left) of the element at the given index.\\n\\t// This value is NOT relative to the document's right edge, like the CSS concept of \\\"right\\\" would be.\\n\\tgetRightOffset: function(leftIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.rights[leftIndex];\\n\\t},\\n\\n\\n\\t// Gets the right position (from offsetParent left) of the element at the given index.\\n\\t// This value is NOT relative to the offsetParent's right edge, like the CSS concept of \\\"right\\\" would be.\\n\\tgetRightPosition: function(leftIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.rights[leftIndex] - this.origin.left;\\n\\t},\\n\\n\\n\\t// Gets the width of the element at the given index\\n\\tgetWidth: function(leftIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.rights[leftIndex] - this.lefts[leftIndex];\\n\\t},\\n\\n\\n\\t// Gets the top offset (from document top) of the element at the given index\\n\\tgetTopOffset: function(topIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.tops[topIndex];\\n\\t},\\n\\n\\n\\t// Gets the top position (from offsetParent top) of the element at the given position\\n\\tgetTopPosition: function(topIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.tops[topIndex] - this.origin.top;\\n\\t},\\n\\n\\t// Gets the bottom offset (from the document top) of the element at the given index.\\n\\t// This value is NOT relative to the offsetParent's bottom edge, like the CSS concept of \\\"bottom\\\" would be.\\n\\tgetBottomOffset: function(topIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.bottoms[topIndex];\\n\\t},\\n\\n\\n\\t// Gets the bottom position (from the offsetParent top) of the element at the given index.\\n\\t// This value is NOT relative to the offsetParent's bottom edge, like the CSS concept of \\\"bottom\\\" would be.\\n\\tgetBottomPosition: function(topIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.bottoms[topIndex] - this.origin.top;\\n\\t},\\n\\n\\n\\t// Gets the height of the element at the given index\\n\\tgetHeight: function(topIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.bottoms[topIndex] - this.tops[topIndex];\\n\\t},\\n\\n\\n\\t// Bounding Rect\\n\\t// TODO: decouple this from CoordCache\\n\\n\\t// Compute and return what the elements' bounding rectangle is, from the user's perspective.\\n\\t// Right now, only returns a rectangle if constrained by an overflow:scroll element.\\n\\t// Returns null if there are no elements\\n\\tqueryBoundingRect: function() {\\n\\t\\tvar scrollParentEl;\\n\\n\\t\\tif (this.els.length > 0) {\\n\\t\\t\\tscrollParentEl = getScrollParent(this.els.eq(0));\\n\\n\\t\\t\\tif (!scrollParentEl.is(document)) {\\n\\t\\t\\t\\treturn getClientRect(scrollParentEl);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn null;\\n\\t},\\n\\n\\tisPointInBounds: function(leftOffset, topOffset) {\\n\\t\\treturn this.isLeftInBounds(leftOffset) && this.isTopInBounds(topOffset);\\n\\t},\\n\\n\\tisLeftInBounds: function(leftOffset) {\\n\\t\\treturn !this.boundingRect || (leftOffset >= this.boundingRect.left && leftOffset < this.boundingRect.right);\\n\\t},\\n\\n\\tisTopInBounds: function(topOffset) {\\n\\t\\treturn !this.boundingRect || (topOffset >= this.boundingRect.top && topOffset < this.boundingRect.bottom);\\n\\t}\\n\\n});\\n\\n;;\\n\\n/* Tracks a drag's mouse movement, firing various handlers\\n----------------------------------------------------------------------------------------------------------------------*/\\n// TODO: use Emitter\\n\\nvar DragListener = FC.DragListener = Class.extend(ListenerMixin, MouseIgnorerMixin, {\\n\\n\\toptions: null,\\n\\tsubjectEl: null,\\n\\n\\t// coordinates of the initial mousedown\\n\\toriginX: null,\\n\\toriginY: null,\\n\\n\\t// the wrapping element that scrolls, or MIGHT scroll if there's overflow.\\n\\t// TODO: do this for wrappers that have overflow:hidden as well.\\n\\tscrollEl: null,\\n\\n\\tisInteracting: false,\\n\\tisDistanceSurpassed: false,\\n\\tisDelayEnded: false,\\n\\tisDragging: false,\\n\\tisTouch: false,\\n\\n\\tdelay: null,\\n\\tdelayTimeoutId: null,\\n\\tminDistance: null,\\n\\n\\thandleTouchScrollProxy: null, // calls handleTouchScroll, always bound to `this`\\n\\n\\n\\tconstructor: function(options) {\\n\\t\\tthis.options = options || {};\\n\\t\\tthis.handleTouchScrollProxy = proxy(this, 'handleTouchScroll');\\n\\t\\tthis.initMouseIgnoring(500);\\n\\t},\\n\\n\\n\\t// Interaction (high-level)\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tstartInteraction: function(ev, extraOptions) {\\n\\t\\tvar isTouch = getEvIsTouch(ev);\\n\\n\\t\\tif (ev.type === 'mousedown') {\\n\\t\\t\\tif (this.isIgnoringMouse) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\telse if (!isPrimaryMouseButton(ev)) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tev.preventDefault(); // prevents native selection in most browsers\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (!this.isInteracting) {\\n\\n\\t\\t\\t// process options\\n\\t\\t\\textraOptions = extraOptions || {};\\n\\t\\t\\tthis.delay = firstDefined(extraOptions.delay, this.options.delay, 0);\\n\\t\\t\\tthis.minDistance = firstDefined(extraOptions.distance, this.options.distance, 0);\\n\\t\\t\\tthis.subjectEl = this.options.subjectEl;\\n\\n\\t\\t\\tthis.isInteracting = true;\\n\\t\\t\\tthis.isTouch = isTouch;\\n\\t\\t\\tthis.isDelayEnded = false;\\n\\t\\t\\tthis.isDistanceSurpassed = false;\\n\\n\\t\\t\\tthis.originX = getEvX(ev);\\n\\t\\t\\tthis.originY = getEvY(ev);\\n\\t\\t\\tthis.scrollEl = getScrollParent($(ev.target));\\n\\n\\t\\t\\tthis.bindHandlers();\\n\\t\\t\\tthis.initAutoScroll();\\n\\t\\t\\tthis.handleInteractionStart(ev);\\n\\t\\t\\tthis.startDelay(ev);\\n\\n\\t\\t\\tif (!this.minDistance) {\\n\\t\\t\\t\\tthis.handleDistanceSurpassed(ev);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\thandleInteractionStart: function(ev) {\\n\\t\\tthis.trigger('interactionStart', ev);\\n\\t},\\n\\n\\n\\tendInteraction: function(ev, isCancelled) {\\n\\t\\tif (this.isInteracting) {\\n\\t\\t\\tthis.endDrag(ev);\\n\\n\\t\\t\\tif (this.delayTimeoutId) {\\n\\t\\t\\t\\tclearTimeout(this.delayTimeoutId);\\n\\t\\t\\t\\tthis.delayTimeoutId = null;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.destroyAutoScroll();\\n\\t\\t\\tthis.unbindHandlers();\\n\\n\\t\\t\\tthis.isInteracting = false;\\n\\t\\t\\tthis.handleInteractionEnd(ev, isCancelled);\\n\\n\\t\\t\\t// a touchstart+touchend on the same element will result in the following addition simulated events:\\n\\t\\t\\t// mouseover + mouseout + click\\n\\t\\t\\t// let's ignore these bogus events\\n\\t\\t\\tif (this.isTouch) {\\n\\t\\t\\t\\tthis.tempIgnoreMouse();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\thandleInteractionEnd: function(ev, isCancelled) {\\n\\t\\tthis.trigger('interactionEnd', ev, isCancelled || false);\\n\\t},\\n\\n\\n\\t// Binding To DOM\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tbindHandlers: function() {\\n\\t\\tvar _this = this;\\n\\t\\tvar touchStartIgnores = 1;\\n\\n\\t\\tif (this.isTouch) {\\n\\t\\t\\tthis.listenTo($(document), {\\n\\t\\t\\t\\ttouchmove: this.handleTouchMove,\\n\\t\\t\\t\\ttouchend: this.endInteraction,\\n\\t\\t\\t\\ttouchcancel: this.endInteraction,\\n\\n\\t\\t\\t\\t// Sometimes touchend doesn't fire\\n\\t\\t\\t\\t// (can't figure out why. touchcancel doesn't fire either. has to do with scrolling?)\\n\\t\\t\\t\\t// If another touchstart happens, we know it's bogus, so cancel the drag.\\n\\t\\t\\t\\t// touchend will continue to be broken until user does a shorttap/scroll, but this is best we can do.\\n\\t\\t\\t\\ttouchstart: function(ev) {\\n\\t\\t\\t\\t\\tif (touchStartIgnores) { // bindHandlers is called from within a touchstart,\\n\\t\\t\\t\\t\\t\\ttouchStartIgnores--; // and we don't want this to fire immediately, so ignore.\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\t_this.endInteraction(ev, true); // isCancelled=true\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\t// listen to ALL scroll actions on the page\\n\\t\\t\\tif (\\n\\t\\t\\t\\t!bindAnyScroll(this.handleTouchScrollProxy) && // hopefully this works and short-circuits the rest\\n\\t\\t\\t\\tthis.scrollEl // otherwise, attach a single handler to this\\n\\t\\t\\t) {\\n\\t\\t\\t\\tthis.listenTo(this.scrollEl, 'scroll', this.handleTouchScroll);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tthis.listenTo($(document), {\\n\\t\\t\\t\\tmousemove: this.handleMouseMove,\\n\\t\\t\\t\\tmouseup: this.endInteraction\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tthis.listenTo($(document), {\\n\\t\\t\\tselectstart: preventDefault, // don't allow selection while dragging\\n\\t\\t\\tcontextmenu: preventDefault // long taps would open menu on Chrome dev tools\\n\\t\\t});\\n\\t},\\n\\n\\n\\tunbindHandlers: function() {\\n\\t\\tthis.stopListeningTo($(document));\\n\\n\\t\\t// unbind scroll listening\\n\\t\\tunbindAnyScroll(this.handleTouchScrollProxy);\\n\\t\\tif (this.scrollEl) {\\n\\t\\t\\tthis.stopListeningTo(this.scrollEl, 'scroll');\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Drag (high-level)\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// extraOptions ignored if drag already started\\n\\tstartDrag: function(ev, extraOptions) {\\n\\t\\tthis.startInteraction(ev, extraOptions); // ensure interaction began\\n\\n\\t\\tif (!this.isDragging) {\\n\\t\\t\\tthis.isDragging = true;\\n\\t\\t\\tthis.handleDragStart(ev);\\n\\t\\t}\\n\\t},\\n\\n\\n\\thandleDragStart: function(ev) {\\n\\t\\tthis.trigger('dragStart', ev);\\n\\t},\\n\\n\\n\\thandleMove: function(ev) {\\n\\t\\tvar dx = getEvX(ev) - this.originX;\\n\\t\\tvar dy = getEvY(ev) - this.originY;\\n\\t\\tvar minDistance = this.minDistance;\\n\\t\\tvar distanceSq; // current distance from the origin, squared\\n\\n\\t\\tif (!this.isDistanceSurpassed) {\\n\\t\\t\\tdistanceSq = dx * dx + dy * dy;\\n\\t\\t\\tif (distanceSq >= minDistance * minDistance) { // use pythagorean theorem\\n\\t\\t\\t\\tthis.handleDistanceSurpassed(ev);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (this.isDragging) {\\n\\t\\t\\tthis.handleDrag(dx, dy, ev);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Called while the mouse is being moved and when we know a legitimate drag is taking place\\n\\thandleDrag: function(dx, dy, ev) {\\n\\t\\tthis.trigger('drag', dx, dy, ev);\\n\\t\\tthis.updateAutoScroll(ev); // will possibly cause scrolling\\n\\t},\\n\\n\\n\\tendDrag: function(ev) {\\n\\t\\tif (this.isDragging) {\\n\\t\\t\\tthis.isDragging = false;\\n\\t\\t\\tthis.handleDragEnd(ev);\\n\\t\\t}\\n\\t},\\n\\n\\n\\thandleDragEnd: function(ev) {\\n\\t\\tthis.trigger('dragEnd', ev);\\n\\t},\\n\\n\\n\\t// Delay\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tstartDelay: function(initialEv) {\\n\\t\\tvar _this = this;\\n\\n\\t\\tif (this.delay) {\\n\\t\\t\\tthis.delayTimeoutId = setTimeout(function() {\\n\\t\\t\\t\\t_this.handleDelayEnd(initialEv);\\n\\t\\t\\t}, this.delay);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tthis.handleDelayEnd(initialEv);\\n\\t\\t}\\n\\t},\\n\\n\\n\\thandleDelayEnd: function(initialEv) {\\n\\t\\tthis.isDelayEnded = true;\\n\\n\\t\\tif (this.isDistanceSurpassed) {\\n\\t\\t\\tthis.startDrag(initialEv);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Distance\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\thandleDistanceSurpassed: function(ev) {\\n\\t\\tthis.isDistanceSurpassed = true;\\n\\n\\t\\tif (this.isDelayEnded) {\\n\\t\\t\\tthis.startDrag(ev);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Mouse / Touch\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\thandleTouchMove: function(ev) {\\n\\t\\t// prevent inertia and touchmove-scrolling while dragging\\n\\t\\tif (this.isDragging) {\\n\\t\\t\\tev.preventDefault();\\n\\t\\t}\\n\\n\\t\\tthis.handleMove(ev);\\n\\t},\\n\\n\\n\\thandleMouseMove: function(ev) {\\n\\t\\tthis.handleMove(ev);\\n\\t},\\n\\n\\n\\t// Scrolling (unrelated to auto-scroll)\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\thandleTouchScroll: function(ev) {\\n\\t\\t// if the drag is being initiated by touch, but a scroll happens before\\n\\t\\t// the drag-initiating delay is over, cancel the drag\\n\\t\\tif (!this.isDragging) {\\n\\t\\t\\tthis.endInteraction(ev, true); // isCancelled=true\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Utils\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// Triggers a callback. Calls a function in the option hash of the same name.\\n\\t// Arguments beyond the first `name` are forwarded on.\\n\\ttrigger: function(name) {\\n\\t\\tif (this.options[name]) {\\n\\t\\t\\tthis.options[name].apply(this, Array.prototype.slice.call(arguments, 1));\\n\\t\\t}\\n\\t\\t// makes _methods callable by event name. TODO: kill this\\n\\t\\tif (this['_' + name]) {\\n\\t\\t\\tthis['_' + name].apply(this, Array.prototype.slice.call(arguments, 1));\\n\\t\\t}\\n\\t}\\n\\n\\n});\\n\\n;;\\n/*\\nthis.scrollEl is set in DragListener\\n*/\\nDragListener.mixin({\\n\\n\\tisAutoScroll: false,\\n\\n\\tscrollBounds: null, // { top, bottom, left, right }\\n\\tscrollTopVel: null, // pixels per second\\n\\tscrollLeftVel: null, // pixels per second\\n\\tscrollIntervalId: null, // ID of setTimeout for scrolling animation loop\\n\\n\\t// defaults\\n\\tscrollSensitivity: 30, // pixels from edge for scrolling to start\\n\\tscrollSpeed: 200, // pixels per second, at maximum speed\\n\\tscrollIntervalMs: 50, // millisecond wait between scroll increment\\n\\n\\n\\tinitAutoScroll: function() {\\n\\t\\tvar scrollEl = this.scrollEl;\\n\\n\\t\\tthis.isAutoScroll =\\n\\t\\t\\tthis.options.scroll &&\\n\\t\\t\\tscrollEl &&\\n\\t\\t\\t!scrollEl.is(window) &&\\n\\t\\t\\t!scrollEl.is(document);\\n\\n\\t\\tif (this.isAutoScroll) {\\n\\t\\t\\t// debounce makes sure rapid calls don't happen\\n\\t\\t\\tthis.listenTo(scrollEl, 'scroll', debounce(this.handleDebouncedScroll, 100));\\n\\t\\t}\\n\\t},\\n\\n\\n\\tdestroyAutoScroll: function() {\\n\\t\\tthis.endAutoScroll(); // kill any animation loop\\n\\n\\t\\t// remove the scroll handler if there is a scrollEl\\n\\t\\tif (this.isAutoScroll) {\\n\\t\\t\\tthis.stopListeningTo(this.scrollEl, 'scroll'); // will probably get removed by unbindHandlers too :(\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Computes and stores the bounding rectangle of scrollEl\\n\\tcomputeScrollBounds: function() {\\n\\t\\tif (this.isAutoScroll) {\\n\\t\\t\\tthis.scrollBounds = getOuterRect(this.scrollEl);\\n\\t\\t\\t// TODO: use getClientRect in future. but prevents auto scrolling when on top of scrollbars\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Called when the dragging is in progress and scrolling should be updated\\n\\tupdateAutoScroll: function(ev) {\\n\\t\\tvar sensitivity = this.scrollSensitivity;\\n\\t\\tvar bounds = this.scrollBounds;\\n\\t\\tvar topCloseness, bottomCloseness;\\n\\t\\tvar leftCloseness, rightCloseness;\\n\\t\\tvar topVel = 0;\\n\\t\\tvar leftVel = 0;\\n\\n\\t\\tif (bounds) { // only scroll if scrollEl exists\\n\\n\\t\\t\\t// compute closeness to edges. valid range is from 0.0 - 1.0\\n\\t\\t\\ttopCloseness = (sensitivity - (getEvY(ev) - bounds.top)) / sensitivity;\\n\\t\\t\\tbottomCloseness = (sensitivity - (bounds.bottom - getEvY(ev))) / sensitivity;\\n\\t\\t\\tleftCloseness = (sensitivity - (getEvX(ev) - bounds.left)) / sensitivity;\\n\\t\\t\\trightCloseness = (sensitivity - (bounds.right - getEvX(ev))) / sensitivity;\\n\\n\\t\\t\\t// translate vertical closeness into velocity.\\n\\t\\t\\t// mouse must be completely in bounds for velocity to happen.\\n\\t\\t\\tif (topCloseness >= 0 && topCloseness <= 1) {\\n\\t\\t\\t\\ttopVel = topCloseness * this.scrollSpeed * -1; // negative. for scrolling up\\n\\t\\t\\t}\\n\\t\\t\\telse if (bottomCloseness >= 0 && bottomCloseness <= 1) {\\n\\t\\t\\t\\ttopVel = bottomCloseness * this.scrollSpeed;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// translate horizontal closeness into velocity\\n\\t\\t\\tif (leftCloseness >= 0 && leftCloseness <= 1) {\\n\\t\\t\\t\\tleftVel = leftCloseness * this.scrollSpeed * -1; // negative. for scrolling left\\n\\t\\t\\t}\\n\\t\\t\\telse if (rightCloseness >= 0 && rightCloseness <= 1) {\\n\\t\\t\\t\\tleftVel = rightCloseness * this.scrollSpeed;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tthis.setScrollVel(topVel, leftVel);\\n\\t},\\n\\n\\n\\t// Sets the speed-of-scrolling for the scrollEl\\n\\tsetScrollVel: function(topVel, leftVel) {\\n\\n\\t\\tthis.scrollTopVel = topVel;\\n\\t\\tthis.scrollLeftVel = leftVel;\\n\\n\\t\\tthis.constrainScrollVel(); // massages into realistic values\\n\\n\\t\\t// if there is non-zero velocity, and an animation loop hasn't already started, then START\\n\\t\\tif ((this.scrollTopVel || this.scrollLeftVel) && !this.scrollIntervalId) {\\n\\t\\t\\tthis.scrollIntervalId = setInterval(\\n\\t\\t\\t\\tproxy(this, 'scrollIntervalFunc'), // scope to `this`\\n\\t\\t\\t\\tthis.scrollIntervalMs\\n\\t\\t\\t);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Forces scrollTopVel and scrollLeftVel to be zero if scrolling has already gone all the way\\n\\tconstrainScrollVel: function() {\\n\\t\\tvar el = this.scrollEl;\\n\\n\\t\\tif (this.scrollTopVel < 0) { // scrolling up?\\n\\t\\t\\tif (el.scrollTop() <= 0) { // already scrolled all the way up?\\n\\t\\t\\t\\tthis.scrollTopVel = 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse if (this.scrollTopVel > 0) { // scrolling down?\\n\\t\\t\\tif (el.scrollTop() + el[0].clientHeight >= el[0].scrollHeight) { // already scrolled all the way down?\\n\\t\\t\\t\\tthis.scrollTopVel = 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (this.scrollLeftVel < 0) { // scrolling left?\\n\\t\\t\\tif (el.scrollLeft() <= 0) { // already scrolled all the left?\\n\\t\\t\\t\\tthis.scrollLeftVel = 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse if (this.scrollLeftVel > 0) { // scrolling right?\\n\\t\\t\\tif (el.scrollLeft() + el[0].clientWidth >= el[0].scrollWidth) { // already scrolled all the way right?\\n\\t\\t\\t\\tthis.scrollLeftVel = 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// This function gets called during every iteration of the scrolling animation loop\\n\\tscrollIntervalFunc: function() {\\n\\t\\tvar el = this.scrollEl;\\n\\t\\tvar frac = this.scrollIntervalMs / 1000; // considering animation frequency, what the vel should be mult'd by\\n\\n\\t\\t// change the value of scrollEl's scroll\\n\\t\\tif (this.scrollTopVel) {\\n\\t\\t\\tel.scrollTop(el.scrollTop() + this.scrollTopVel * frac);\\n\\t\\t}\\n\\t\\tif (this.scrollLeftVel) {\\n\\t\\t\\tel.scrollLeft(el.scrollLeft() + this.scrollLeftVel * frac);\\n\\t\\t}\\n\\n\\t\\tthis.constrainScrollVel(); // since the scroll values changed, recompute the velocities\\n\\n\\t\\t// if scrolled all the way, which causes the vels to be zero, stop the animation loop\\n\\t\\tif (!this.scrollTopVel && !this.scrollLeftVel) {\\n\\t\\t\\tthis.endAutoScroll();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Kills any existing scrolling animation loop\\n\\tendAutoScroll: function() {\\n\\t\\tif (this.scrollIntervalId) {\\n\\t\\t\\tclearInterval(this.scrollIntervalId);\\n\\t\\t\\tthis.scrollIntervalId = null;\\n\\n\\t\\t\\tthis.handleScrollEnd();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Get called when the scrollEl is scrolled (NOTE: this is delayed via debounce)\\n\\thandleDebouncedScroll: function() {\\n\\t\\t// recompute all coordinates, but *only* if this is *not* part of our scrolling animation\\n\\t\\tif (!this.scrollIntervalId) {\\n\\t\\t\\tthis.handleScrollEnd();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Called when scrolling has stopped, whether through auto scroll, or the user scrolling\\n\\thandleScrollEnd: function() {\\n\\t}\\n\\n});\\n;;\\n\\n/* Tracks mouse movements over a component and raises events about which hit the mouse is over.\\n------------------------------------------------------------------------------------------------------------------------\\noptions:\\n- subjectEl\\n- subjectCenter\\n*/\\n\\nvar HitDragListener = DragListener.extend({\\n\\n\\tcomponent: null, // converts coordinates to hits\\n\\t\\t// methods: prepareHits, releaseHits, queryHit\\n\\n\\torigHit: null, // the hit the mouse was over when listening started\\n\\thit: null, // the hit the mouse is over\\n\\tcoordAdjust: null, // delta that will be added to the mouse coordinates when computing collisions\\n\\n\\n\\tconstructor: function(component, options) {\\n\\t\\tDragListener.call(this, options); // call the super-constructor\\n\\n\\t\\tthis.component = component;\\n\\t},\\n\\n\\n\\t// Called when drag listening starts (but a real drag has not necessarily began).\\n\\t// ev might be undefined if dragging was started manually.\\n\\thandleInteractionStart: function(ev) {\\n\\t\\tvar subjectEl = this.subjectEl;\\n\\t\\tvar subjectRect;\\n\\t\\tvar origPoint;\\n\\t\\tvar point;\\n\\n\\t\\tthis.computeCoords();\\n\\n\\t\\tif (ev) {\\n\\t\\t\\torigPoint = { left: getEvX(ev), top: getEvY(ev) };\\n\\t\\t\\tpoint = origPoint;\\n\\n\\t\\t\\t// constrain the point to bounds of the element being dragged\\n\\t\\t\\tif (subjectEl) {\\n\\t\\t\\t\\tsubjectRect = getOuterRect(subjectEl); // used for centering as well\\n\\t\\t\\t\\tpoint = constrainPoint(point, subjectRect);\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.origHit = this.queryHit(point.left, point.top);\\n\\n\\t\\t\\t// treat the center of the subject as the collision point?\\n\\t\\t\\tif (subjectEl && this.options.subjectCenter) {\\n\\n\\t\\t\\t\\t// only consider the area the subject overlaps the hit. best for large subjects.\\n\\t\\t\\t\\t// TODO: skip this if hit didn't supply left/right/top/bottom\\n\\t\\t\\t\\tif (this.origHit) {\\n\\t\\t\\t\\t\\tsubjectRect = intersectRects(this.origHit, subjectRect) ||\\n\\t\\t\\t\\t\\t\\tsubjectRect; // in case there is no intersection\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tpoint = getRectCenter(subjectRect);\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.coordAdjust = diffPoints(point, origPoint); // point - origPoint\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tthis.origHit = null;\\n\\t\\t\\tthis.coordAdjust = null;\\n\\t\\t}\\n\\n\\t\\t// call the super-method. do it after origHit has been computed\\n\\t\\tDragListener.prototype.handleInteractionStart.apply(this, arguments);\\n\\t},\\n\\n\\n\\t// Recomputes the drag-critical positions of elements\\n\\tcomputeCoords: function() {\\n\\t\\tthis.component.prepareHits();\\n\\t\\tthis.computeScrollBounds(); // why is this here??????\\n\\t},\\n\\n\\n\\t// Called when the actual drag has started\\n\\thandleDragStart: function(ev) {\\n\\t\\tvar hit;\\n\\n\\t\\tDragListener.prototype.handleDragStart.apply(this, arguments); // call the super-method\\n\\n\\t\\t// might be different from this.origHit if the min-distance is large\\n\\t\\thit = this.queryHit(getEvX(ev), getEvY(ev));\\n\\n\\t\\t// report the initial hit the mouse is over\\n\\t\\t// especially important if no min-distance and drag starts immediately\\n\\t\\tif (hit) {\\n\\t\\t\\tthis.handleHitOver(hit);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Called when the drag moves\\n\\thandleDrag: function(dx, dy, ev) {\\n\\t\\tvar hit;\\n\\n\\t\\tDragListener.prototype.handleDrag.apply(this, arguments); // call the super-method\\n\\n\\t\\thit = this.queryHit(getEvX(ev), getEvY(ev));\\n\\n\\t\\tif (!isHitsEqual(hit, this.hit)) { // a different hit than before?\\n\\t\\t\\tif (this.hit) {\\n\\t\\t\\t\\tthis.handleHitOut();\\n\\t\\t\\t}\\n\\t\\t\\tif (hit) {\\n\\t\\t\\t\\tthis.handleHitOver(hit);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Called when dragging has been stopped\\n\\thandleDragEnd: function() {\\n\\t\\tthis.handleHitDone();\\n\\t\\tDragListener.prototype.handleDragEnd.apply(this, arguments); // call the super-method\\n\\t},\\n\\n\\n\\t// Called when a the mouse has just moved over a new hit\\n\\thandleHitOver: function(hit) {\\n\\t\\tvar isOrig = isHitsEqual(hit, this.origHit);\\n\\n\\t\\tthis.hit = hit;\\n\\n\\t\\tthis.trigger('hitOver', this.hit, isOrig, this.origHit);\\n\\t},\\n\\n\\n\\t// Called when the mouse has just moved out of a hit\\n\\thandleHitOut: function() {\\n\\t\\tif (this.hit) {\\n\\t\\t\\tthis.trigger('hitOut', this.hit);\\n\\t\\t\\tthis.handleHitDone();\\n\\t\\t\\tthis.hit = null;\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Called after a hitOut. Also called before a dragStop\\n\\thandleHitDone: function() {\\n\\t\\tif (this.hit) {\\n\\t\\t\\tthis.trigger('hitDone', this.hit);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Called when the interaction ends, whether there was a real drag or not\\n\\thandleInteractionEnd: function() {\\n\\t\\tDragListener.prototype.handleInteractionEnd.apply(this, arguments); // call the super-method\\n\\n\\t\\tthis.origHit = null;\\n\\t\\tthis.hit = null;\\n\\n\\t\\tthis.component.releaseHits();\\n\\t},\\n\\n\\n\\t// Called when scrolling has stopped, whether through auto scroll, or the user scrolling\\n\\thandleScrollEnd: function() {\\n\\t\\tDragListener.prototype.handleScrollEnd.apply(this, arguments); // call the super-method\\n\\n\\t\\tthis.computeCoords(); // hits' absolute positions will be in new places. recompute\\n\\t},\\n\\n\\n\\t// Gets the hit underneath the coordinates for the given mouse event\\n\\tqueryHit: function(left, top) {\\n\\n\\t\\tif (this.coordAdjust) {\\n\\t\\t\\tleft += this.coordAdjust.left;\\n\\t\\t\\ttop += this.coordAdjust.top;\\n\\t\\t}\\n\\n\\t\\treturn this.component.queryHit(left, top);\\n\\t}\\n\\n});\\n\\n\\n// Returns `true` if the hits are identically equal. `false` otherwise. Must be from the same component.\\n// Two null values will be considered equal, as two \\\"out of the component\\\" states are the same.\\nfunction isHitsEqual(hit0, hit1) {\\n\\n\\tif (!hit0 && !hit1) {\\n\\t\\treturn true;\\n\\t}\\n\\n\\tif (hit0 && hit1) {\\n\\t\\treturn hit0.component === hit1.component &&\\n\\t\\t\\tisHitPropsWithin(hit0, hit1) &&\\n\\t\\t\\tisHitPropsWithin(hit1, hit0); // ensures all props are identical\\n\\t}\\n\\n\\treturn false;\\n}\\n\\n\\n// Returns true if all of subHit's non-standard properties are within superHit\\nfunction isHitPropsWithin(subHit, superHit) {\\n\\tfor (var propName in subHit) {\\n\\t\\tif (!/^(component|left|right|top|bottom)$/.test(propName)) {\\n\\t\\t\\tif (subHit[propName] !== superHit[propName]) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn true;\\n}\\n\\n;;\\n\\n/* Creates a clone of an element and lets it track the mouse as it moves\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nvar MouseFollower = Class.extend(ListenerMixin, {\\n\\n\\toptions: null,\\n\\n\\tsourceEl: null, // the element that will be cloned and made to look like it is dragging\\n\\tel: null, // the clone of `sourceEl` that will track the mouse\\n\\tparentEl: null, // the element that `el` (the clone) will be attached to\\n\\n\\t// the initial position of el, relative to the offset parent. made to match the initial offset of sourceEl\\n\\ttop0: null,\\n\\tleft0: null,\\n\\n\\t// the absolute coordinates of the initiating touch/mouse action\\n\\ty0: null,\\n\\tx0: null,\\n\\n\\t// the number of pixels the mouse has moved from its initial position\\n\\ttopDelta: null,\\n\\tleftDelta: null,\\n\\n\\tisFollowing: false,\\n\\tisHidden: false,\\n\\tisAnimating: false, // doing the revert animation?\\n\\n\\tconstructor: function(sourceEl, options) {\\n\\t\\tthis.options = options = options || {};\\n\\t\\tthis.sourceEl = sourceEl;\\n\\t\\tthis.parentEl = options.parentEl ? $(options.parentEl) : sourceEl.parent(); // default to sourceEl's parent\\n\\t},\\n\\n\\n\\t// Causes the element to start following the mouse\\n\\tstart: function(ev) {\\n\\t\\tif (!this.isFollowing) {\\n\\t\\t\\tthis.isFollowing = true;\\n\\n\\t\\t\\tthis.y0 = getEvY(ev);\\n\\t\\t\\tthis.x0 = getEvX(ev);\\n\\t\\t\\tthis.topDelta = 0;\\n\\t\\t\\tthis.leftDelta = 0;\\n\\n\\t\\t\\tif (!this.isHidden) {\\n\\t\\t\\t\\tthis.updatePosition();\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (getEvIsTouch(ev)) {\\n\\t\\t\\t\\tthis.listenTo($(document), 'touchmove', this.handleMove);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tthis.listenTo($(document), 'mousemove', this.handleMove);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Causes the element to stop following the mouse. If shouldRevert is true, will animate back to original position.\\n\\t// `callback` gets invoked when the animation is complete. If no animation, it is invoked immediately.\\n\\tstop: function(shouldRevert, callback) {\\n\\t\\tvar _this = this;\\n\\t\\tvar revertDuration = this.options.revertDuration;\\n\\n\\t\\tfunction complete() { // might be called by .animate(), which might change `this` context\\n\\t\\t\\t_this.isAnimating = false;\\n\\t\\t\\t_this.removeElement();\\n\\n\\t\\t\\t_this.top0 = _this.left0 = null; // reset state for future updatePosition calls\\n\\n\\t\\t\\tif (callback) {\\n\\t\\t\\t\\tcallback();\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (this.isFollowing && !this.isAnimating) { // disallow more than one stop animation at a time\\n\\t\\t\\tthis.isFollowing = false;\\n\\n\\t\\t\\tthis.stopListeningTo($(document));\\n\\n\\t\\t\\tif (shouldRevert && revertDuration && !this.isHidden) { // do a revert animation?\\n\\t\\t\\t\\tthis.isAnimating = true;\\n\\t\\t\\t\\tthis.el.animate({\\n\\t\\t\\t\\t\\ttop: this.top0,\\n\\t\\t\\t\\t\\tleft: this.left0\\n\\t\\t\\t\\t}, {\\n\\t\\t\\t\\t\\tduration: revertDuration,\\n\\t\\t\\t\\t\\tcomplete: complete\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tcomplete();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Gets the tracking element. Create it if necessary\\n\\tgetEl: function() {\\n\\t\\tvar el = this.el;\\n\\n\\t\\tif (!el) {\\n\\t\\t\\tel = this.el = this.sourceEl.clone()\\n\\t\\t\\t\\t.addClass(this.options.additionalClass || '')\\n\\t\\t\\t\\t.css({\\n\\t\\t\\t\\t\\tposition: 'absolute',\\n\\t\\t\\t\\t\\tvisibility: '', // in case original element was hidden (commonly through hideEvents())\\n\\t\\t\\t\\t\\tdisplay: this.isHidden ? 'none' : '', // for when initially hidden\\n\\t\\t\\t\\t\\tmargin: 0,\\n\\t\\t\\t\\t\\tright: 'auto', // erase and set width instead\\n\\t\\t\\t\\t\\tbottom: 'auto', // erase and set height instead\\n\\t\\t\\t\\t\\twidth: this.sourceEl.width(), // explicit height in case there was a 'right' value\\n\\t\\t\\t\\t\\theight: this.sourceEl.height(), // explicit width in case there was a 'bottom' value\\n\\t\\t\\t\\t\\topacity: this.options.opacity || '',\\n\\t\\t\\t\\t\\tzIndex: this.options.zIndex\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t// we don't want long taps or any mouse interaction causing selection/menus.\\n\\t\\t\\t// would use preventSelection(), but that prevents selectstart, causing problems.\\n\\t\\t\\tel.addClass('fc-unselectable');\\n\\n\\t\\t\\tel.appendTo(this.parentEl);\\n\\t\\t}\\n\\n\\t\\treturn el;\\n\\t},\\n\\n\\n\\t// Removes the tracking element if it has already been created\\n\\tremoveElement: function() {\\n\\t\\tif (this.el) {\\n\\t\\t\\tthis.el.remove();\\n\\t\\t\\tthis.el = null;\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Update the CSS position of the tracking element\\n\\tupdatePosition: function() {\\n\\t\\tvar sourceOffset;\\n\\t\\tvar origin;\\n\\n\\t\\tthis.getEl(); // ensure this.el\\n\\n\\t\\t// make sure origin info was computed\\n\\t\\tif (this.top0 === null) {\\n\\t\\t\\tsourceOffset = this.sourceEl.offset();\\n\\t\\t\\torigin = this.el.offsetParent().offset();\\n\\t\\t\\tthis.top0 = sourceOffset.top - origin.top;\\n\\t\\t\\tthis.left0 = sourceOffset.left - origin.left;\\n\\t\\t}\\n\\n\\t\\tthis.el.css({\\n\\t\\t\\ttop: this.top0 + this.topDelta,\\n\\t\\t\\tleft: this.left0 + this.leftDelta\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Gets called when the user moves the mouse\\n\\thandleMove: function(ev) {\\n\\t\\tthis.topDelta = getEvY(ev) - this.y0;\\n\\t\\tthis.leftDelta = getEvX(ev) - this.x0;\\n\\n\\t\\tif (!this.isHidden) {\\n\\t\\t\\tthis.updatePosition();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Temporarily makes the tracking element invisible. Can be called before following starts\\n\\thide: function() {\\n\\t\\tif (!this.isHidden) {\\n\\t\\t\\tthis.isHidden = true;\\n\\t\\t\\tif (this.el) {\\n\\t\\t\\t\\tthis.el.hide();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Show the tracking element after it has been temporarily hidden\\n\\tshow: function() {\\n\\t\\tif (this.isHidden) {\\n\\t\\t\\tthis.isHidden = false;\\n\\t\\t\\tthis.updatePosition();\\n\\t\\t\\tthis.getEl().show();\\n\\t\\t}\\n\\t}\\n\\n});\\n\\n;;\\n\\n/* An abstract class comprised of a \\\"grid\\\" of areas that each represent a specific datetime\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nvar Grid = FC.Grid = Class.extend(ListenerMixin, MouseIgnorerMixin, {\\n\\n\\t// self-config, overridable by subclasses\\n\\thasDayInteractions: true, // can user click/select ranges of time?\\n\\n\\tview: null, // a View object\\n\\tisRTL: null, // shortcut to the view's isRTL option\\n\\n\\tstart: null,\\n\\tend: null,\\n\\n\\tel: null, // the containing element\\n\\telsByFill: null, // a hash of jQuery element sets used for rendering each fill. Keyed by fill name.\\n\\n\\t// derived from options\\n\\teventTimeFormat: null,\\n\\tdisplayEventTime: null,\\n\\tdisplayEventEnd: null,\\n\\n\\tminResizeDuration: null, // TODO: hack. set by subclasses. minumum event resize duration\\n\\n\\t// if defined, holds the unit identified (ex: \\\"year\\\" or \\\"month\\\") that determines the level of granularity\\n\\t// of the date areas. if not defined, assumes to be day and time granularity.\\n\\t// TODO: port isTimeScale into same system?\\n\\tlargeUnit: null,\\n\\n\\tdayDragListener: null,\\n\\tsegDragListener: null,\\n\\tsegResizeListener: null,\\n\\texternalDragListener: null,\\n\\n\\n\\tconstructor: function(view) {\\n\\t\\tthis.view = view;\\n\\t\\tthis.isRTL = view.opt('isRTL');\\n\\t\\tthis.elsByFill = {};\\n\\n\\t\\tthis.dayDragListener = this.buildDayDragListener();\\n\\t\\tthis.initMouseIgnoring();\\n\\t},\\n\\n\\n\\t/* Options\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Generates the format string used for event time text, if not explicitly defined by 'timeFormat'\\n\\tcomputeEventTimeFormat: function() {\\n\\t\\treturn this.view.opt('smallTimeFormat');\\n\\t},\\n\\n\\n\\t// Determines whether events should have their end times displayed, if not explicitly defined by 'displayEventTime'.\\n\\t// Only applies to non-all-day events.\\n\\tcomputeDisplayEventTime: function() {\\n\\t\\treturn true;\\n\\t},\\n\\n\\n\\t// Determines whether events should have their end times displayed, if not explicitly defined by 'displayEventEnd'\\n\\tcomputeDisplayEventEnd: function() {\\n\\t\\treturn true;\\n\\t},\\n\\n\\n\\t/* Dates\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Tells the grid about what period of time to display.\\n\\t// Any date-related internal data should be generated.\\n\\tsetRange: function(range) {\\n\\t\\tthis.start = range.start.clone();\\n\\t\\tthis.end = range.end.clone();\\n\\n\\t\\tthis.rangeUpdated();\\n\\t\\tthis.processRangeOptions();\\n\\t},\\n\\n\\n\\t// Called when internal variables that rely on the range should be updated\\n\\trangeUpdated: function() {\\n\\t},\\n\\n\\n\\t// Updates values that rely on options and also relate to range\\n\\tprocessRangeOptions: function() {\\n\\t\\tvar view = this.view;\\n\\t\\tvar displayEventTime;\\n\\t\\tvar displayEventEnd;\\n\\n\\t\\tthis.eventTimeFormat =\\n\\t\\t\\tview.opt('eventTimeFormat') ||\\n\\t\\t\\tview.opt('timeFormat') || // deprecated\\n\\t\\t\\tthis.computeEventTimeFormat();\\n\\n\\t\\tdisplayEventTime = view.opt('displayEventTime');\\n\\t\\tif (displayEventTime == null) {\\n\\t\\t\\tdisplayEventTime = this.computeDisplayEventTime(); // might be based off of range\\n\\t\\t}\\n\\n\\t\\tdisplayEventEnd = view.opt('displayEventEnd');\\n\\t\\tif (displayEventEnd == null) {\\n\\t\\t\\tdisplayEventEnd = this.computeDisplayEventEnd(); // might be based off of range\\n\\t\\t}\\n\\n\\t\\tthis.displayEventTime = displayEventTime;\\n\\t\\tthis.displayEventEnd = displayEventEnd;\\n\\t},\\n\\n\\n\\t// Converts a span (has unzoned start/end and any other grid-specific location information)\\n\\t// into an array of segments (pieces of events whose format is decided by the grid).\\n\\tspanToSegs: function(span) {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t// Diffs the two dates, returning a duration, based on granularity of the grid\\n\\t// TODO: port isTimeScale into this system?\\n\\tdiffDates: function(a, b) {\\n\\t\\tif (this.largeUnit) {\\n\\t\\t\\treturn diffByUnit(a, b, this.largeUnit);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn diffDayTime(a, b);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Hit Area\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Called before one or more queryHit calls might happen. Should prepare any cached coordinates for queryHit\\n\\tprepareHits: function() {\\n\\t},\\n\\n\\n\\t// Called when queryHit calls have subsided. Good place to clear any coordinate caches.\\n\\treleaseHits: function() {\\n\\t},\\n\\n\\n\\t// Given coordinates from the topleft of the document, return data about the date-related area underneath.\\n\\t// Can return an object with arbitrary properties (although top/right/left/bottom are encouraged).\\n\\t// Must have a `grid` property, a reference to this current grid. TODO: avoid this\\n\\t// The returned object will be processed by getHitSpan and getHitEl.\\n\\tqueryHit: function(leftOffset, topOffset) {\\n\\t},\\n\\n\\n\\t// Given position-level information about a date-related area within the grid,\\n\\t// should return an object with at least a start/end date. Can provide other information as well.\\n\\tgetHitSpan: function(hit) {\\n\\t},\\n\\n\\n\\t// Given position-level information about a date-related area within the grid,\\n\\t// should return a jQuery element that best represents it. passed to dayClick callback.\\n\\tgetHitEl: function(hit) {\\n\\t},\\n\\n\\n\\t/* Rendering\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Sets the container element that the grid should render inside of.\\n\\t// Does other DOM-related initializations.\\n\\tsetElement: function(el) {\\n\\t\\tthis.el = el;\\n\\n\\t\\tif (this.hasDayInteractions) {\\n\\t\\t\\tpreventSelection(el);\\n\\n\\t\\t\\tthis.bindDayHandler('touchstart', this.dayTouchStart);\\n\\t\\t\\tthis.bindDayHandler('mousedown', this.dayMousedown);\\n\\t\\t}\\n\\n\\t\\t// attach event-element-related handlers. in Grid.events\\n\\t\\t// same garbage collection note as above.\\n\\t\\tthis.bindSegHandlers();\\n\\n\\t\\tthis.bindGlobalHandlers();\\n\\t},\\n\\n\\n\\tbindDayHandler: function(name, handler) {\\n\\t\\tvar _this = this;\\n\\n\\t\\t// attach a handler to the grid's root element.\\n\\t\\t// jQuery will take care of unregistering them when removeElement gets called.\\n\\t\\tthis.el.on(name, function(ev) {\\n\\t\\t\\tif (\\n\\t\\t\\t\\t!$(ev.target).is(\\n\\t\\t\\t\\t\\t_this.segSelector + ',' + // directly on an event element\\n\\t\\t\\t\\t\\t_this.segSelector + ' *,' + // within an event element\\n\\t\\t\\t\\t\\t'.fc-more,' + // a \\\"more..\\\" link\\n\\t\\t\\t\\t\\t'a[data-goto]' // a clickable nav link\\n\\t\\t\\t\\t)\\n\\t\\t\\t) {\\n\\t\\t\\t\\treturn handler.call(_this, ev);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Removes the grid's container element from the DOM. Undoes any other DOM-related attachments.\\n\\t// DOES NOT remove any content beforehand (doesn't clear events or call unrenderDates), unlike View\\n\\tremoveElement: function() {\\n\\t\\tthis.unbindGlobalHandlers();\\n\\t\\tthis.clearDragListeners();\\n\\n\\t\\tthis.el.remove();\\n\\n\\t\\t// NOTE: we don't null-out this.el for the same reasons we don't do it within View::removeElement\\n\\t},\\n\\n\\n\\t// Renders the basic structure of grid view before any content is rendered\\n\\trenderSkeleton: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Renders the grid's date-related content (like areas that represent days/times).\\n\\t// Assumes setRange has already been called and the skeleton has already been rendered.\\n\\trenderDates: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Unrenders the grid's date-related content\\n\\tunrenderDates: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t/* Handlers\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Binds DOM handlers to elements that reside outside the grid, such as the document\\n\\tbindGlobalHandlers: function() {\\n\\t\\tthis.listenTo($(document), {\\n\\t\\t\\tdragstart: this.externalDragStart, // jqui\\n\\t\\t\\tsortstart: this.externalDragStart // jqui\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Unbinds DOM handlers from elements that reside outside the grid\\n\\tunbindGlobalHandlers: function() {\\n\\t\\tthis.stopListeningTo($(document));\\n\\t},\\n\\n\\n\\t// Process a mousedown on an element that represents a day. For day clicking and selecting.\\n\\tdayMousedown: function(ev) {\\n\\t\\tif (!this.isIgnoringMouse) {\\n\\t\\t\\tthis.dayDragListener.startInteraction(ev, {\\n\\t\\t\\t\\t//distance: 5, // needs more work if we want dayClick to fire correctly\\n\\t\\t\\t});\\n\\t\\t}\\n\\t},\\n\\n\\n\\tdayTouchStart: function(ev) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar selectLongPressDelay = view.opt('selectLongPressDelay');\\n\\n\\t\\t// HACK to prevent a user's clickaway for unselecting a range or an event\\n\\t\\t// from causing a dayClick.\\n\\t\\tif (view.isSelected || view.selectedEvent) {\\n\\t\\t\\tthis.tempIgnoreMouse();\\n\\t\\t}\\n\\n\\t\\tif (selectLongPressDelay == null) {\\n\\t\\t\\tselectLongPressDelay = view.opt('longPressDelay'); // fallback\\n\\t\\t}\\n\\n\\t\\tthis.dayDragListener.startInteraction(ev, {\\n\\t\\t\\tdelay: selectLongPressDelay\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Creates a listener that tracks the user's drag across day elements.\\n\\t// For day clicking and selecting.\\n\\tbuildDayDragListener: function() {\\n\\t\\tvar _this = this;\\n\\t\\tvar view = this.view;\\n\\t\\tvar isSelectable = view.opt('selectable');\\n\\t\\tvar dayClickHit; // null if invalid dayClick\\n\\t\\tvar selectionSpan; // null if invalid selection\\n\\n\\t\\t// this listener tracks a mousedown on a day element, and a subsequent drag.\\n\\t\\t// if the drag ends on the same day, it is a 'dayClick'.\\n\\t\\t// if 'selectable' is enabled, this listener also detects selections.\\n\\t\\tvar dragListener = new HitDragListener(this, {\\n\\t\\t\\tscroll: view.opt('dragScroll'),\\n\\t\\t\\tinteractionStart: function() {\\n\\t\\t\\t\\tdayClickHit = dragListener.origHit; // for dayClick, where no dragging happens\\n\\t\\t\\t\\tselectionSpan = null;\\n\\t\\t\\t},\\n\\t\\t\\tdragStart: function() {\\n\\t\\t\\t\\tview.unselect(); // since we could be rendering a new selection, we want to clear any old one\\n\\t\\t\\t},\\n\\t\\t\\thitOver: function(hit, isOrig, origHit) {\\n\\t\\t\\t\\tif (origHit) { // click needs to have started on a hit\\n\\n\\t\\t\\t\\t\\t// if user dragged to another cell at any point, it can no longer be a dayClick\\n\\t\\t\\t\\t\\tif (!isOrig) {\\n\\t\\t\\t\\t\\t\\tdayClickHit = null;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (isSelectable) {\\n\\t\\t\\t\\t\\t\\tselectionSpan = _this.computeSelection(\\n\\t\\t\\t\\t\\t\\t\\t_this.getHitSpan(origHit),\\n\\t\\t\\t\\t\\t\\t\\t_this.getHitSpan(hit)\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tif (selectionSpan) {\\n\\t\\t\\t\\t\\t\\t\\t_this.renderSelection(selectionSpan);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse if (selectionSpan === false) {\\n\\t\\t\\t\\t\\t\\t\\tdisableCursor();\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\thitOut: function() { // called before mouse moves to a different hit OR moved out of all hits\\n\\t\\t\\t\\tdayClickHit = null;\\n\\t\\t\\t\\tselectionSpan = null;\\n\\t\\t\\t\\t_this.unrenderSelection();\\n\\t\\t\\t},\\n\\t\\t\\thitDone: function() { // called after a hitOut OR before a dragEnd\\n\\t\\t\\t\\tenableCursor();\\n\\t\\t\\t},\\n\\t\\t\\tinteractionEnd: function(ev, isCancelled) {\\n\\t\\t\\t\\tif (!isCancelled) {\\n\\t\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\t\\tdayClickHit &&\\n\\t\\t\\t\\t\\t\\t!_this.isIgnoringMouse // see hack in dayTouchStart\\n\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\tview.triggerDayClick(\\n\\t\\t\\t\\t\\t\\t\\t_this.getHitSpan(dayClickHit),\\n\\t\\t\\t\\t\\t\\t\\t_this.getHitEl(dayClickHit),\\n\\t\\t\\t\\t\\t\\t\\tev\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif (selectionSpan) {\\n\\t\\t\\t\\t\\t\\t// the selection will already have been rendered. just report it\\n\\t\\t\\t\\t\\t\\tview.reportSelection(selectionSpan, ev);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn dragListener;\\n\\t},\\n\\n\\n\\t// Kills all in-progress dragging.\\n\\t// Useful for when public API methods that result in re-rendering are invoked during a drag.\\n\\t// Also useful for when touch devices misbehave and don't fire their touchend.\\n\\tclearDragListeners: function() {\\n\\t\\tthis.dayDragListener.endInteraction();\\n\\n\\t\\tif (this.segDragListener) {\\n\\t\\t\\tthis.segDragListener.endInteraction(); // will clear this.segDragListener\\n\\t\\t}\\n\\t\\tif (this.segResizeListener) {\\n\\t\\t\\tthis.segResizeListener.endInteraction(); // will clear this.segResizeListener\\n\\t\\t}\\n\\t\\tif (this.externalDragListener) {\\n\\t\\t\\tthis.externalDragListener.endInteraction(); // will clear this.externalDragListener\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Event Helper\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\t// TODO: should probably move this to Grid.events, like we did event dragging / resizing\\n\\n\\n\\t// Renders a mock event at the given event location, which contains zoned start/end properties.\\n\\t// Returns all mock event elements.\\n\\trenderEventLocationHelper: function(eventLocation, sourceSeg) {\\n\\t\\tvar fakeEvent = this.fabricateHelperEvent(eventLocation, sourceSeg);\\n\\n\\t\\treturn this.renderHelper(fakeEvent, sourceSeg); // do the actual rendering\\n\\t},\\n\\n\\n\\t// Builds a fake event given zoned event date properties and a segment is should be inspired from.\\n\\t// The range's end can be null, in which case the mock event that is rendered will have a null end time.\\n\\t// `sourceSeg` is the internal segment object involved in the drag. If null, something external is dragging.\\n\\tfabricateHelperEvent: function(eventLocation, sourceSeg) {\\n\\t\\tvar fakeEvent = sourceSeg ? createObject(sourceSeg.event) : {}; // mask the original event object if possible\\n\\n\\t\\tfakeEvent.start = eventLocation.start.clone();\\n\\t\\tfakeEvent.end = eventLocation.end ? eventLocation.end.clone() : null;\\n\\t\\tfakeEvent.allDay = null; // force it to be freshly computed by normalizeEventDates\\n\\t\\tthis.view.calendar.normalizeEventDates(fakeEvent);\\n\\n\\t\\t// this extra className will be useful for differentiating real events from mock events in CSS\\n\\t\\tfakeEvent.className = (fakeEvent.className || []).concat('fc-helper');\\n\\n\\t\\t// if something external is being dragged in, don't render a resizer\\n\\t\\tif (!sourceSeg) {\\n\\t\\t\\tfakeEvent.editable = false;\\n\\t\\t}\\n\\n\\t\\treturn fakeEvent;\\n\\t},\\n\\n\\n\\t// Renders a mock event. Given zoned event date properties.\\n\\t// Must return all mock event elements.\\n\\trenderHelper: function(eventLocation, sourceSeg) {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t// Unrenders a mock event\\n\\tunrenderHelper: function() {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t/* Selection\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of a selection. Will highlight by default but can be overridden by subclasses.\\n\\t// Given a span (unzoned start/end and other misc data)\\n\\trenderSelection: function(span) {\\n\\t\\tthis.renderHighlight(span);\\n\\t},\\n\\n\\n\\t// Unrenders any visual indications of a selection. Will unrender a highlight by default.\\n\\tunrenderSelection: function() {\\n\\t\\tthis.unrenderHighlight();\\n\\t},\\n\\n\\n\\t// Given the first and last date-spans of a selection, returns another date-span object.\\n\\t// Subclasses can override and provide additional data in the span object. Will be passed to renderSelection().\\n\\t// Will return false if the selection is invalid and this should be indicated to the user.\\n\\t// Will return null/undefined if a selection invalid but no error should be reported.\\n\\tcomputeSelection: function(span0, span1) {\\n\\t\\tvar span = this.computeSelectionSpan(span0, span1);\\n\\n\\t\\tif (span && !this.view.calendar.isSelectionSpanAllowed(span)) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\treturn span;\\n\\t},\\n\\n\\n\\t// Given two spans, must return the combination of the two.\\n\\t// TODO: do this separation of concerns (combining VS validation) for event dnd/resize too.\\n\\tcomputeSelectionSpan: function(span0, span1) {\\n\\t\\tvar dates = [ span0.start, span0.end, span1.start, span1.end ];\\n\\n\\t\\tdates.sort(compareNumbers); // sorts chronologically. works with Moments\\n\\n\\t\\treturn { start: dates[0].clone(), end: dates[3].clone() };\\n\\t},\\n\\n\\n\\t/* Highlight\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders an emphasis on the given date range. Given a span (unzoned start/end and other misc data)\\n\\trenderHighlight: function(span) {\\n\\t\\tthis.renderFill('highlight', this.spanToSegs(span));\\n\\t},\\n\\n\\n\\t// Unrenders the emphasis on a date range\\n\\tunrenderHighlight: function() {\\n\\t\\tthis.unrenderFill('highlight');\\n\\t},\\n\\n\\n\\t// Generates an array of classNames for rendering the highlight. Used by the fill system.\\n\\thighlightSegClasses: function() {\\n\\t\\treturn [ 'fc-highlight' ];\\n\\t},\\n\\n\\n\\t/* Business Hours\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderBusinessHours: function() {\\n\\t},\\n\\n\\n\\tunrenderBusinessHours: function() {\\n\\t},\\n\\n\\n\\t/* Now Indicator\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tgetNowIndicatorUnit: function() {\\n\\t},\\n\\n\\n\\trenderNowIndicator: function(date) {\\n\\t},\\n\\n\\n\\tunrenderNowIndicator: function() {\\n\\t},\\n\\n\\n\\t/* Fill System (highlight, background events, business hours)\\n\\t--------------------------------------------------------------------------------------------------------------------\\n\\tTODO: remove this system. like we did in TimeGrid\\n\\t*/\\n\\n\\n\\t// Renders a set of rectangles over the given segments of time.\\n\\t// MUST RETURN a subset of segs, the segs that were actually rendered.\\n\\t// Responsible for populating this.elsByFill. TODO: better API for expressing this requirement\\n\\trenderFill: function(type, segs) {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t// Unrenders a specific type of fill that is currently rendered on the grid\\n\\tunrenderFill: function(type) {\\n\\t\\tvar el = this.elsByFill[type];\\n\\n\\t\\tif (el) {\\n\\t\\t\\tel.remove();\\n\\t\\t\\tdelete this.elsByFill[type];\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Renders and assigns an `el` property for each fill segment. Generic enough to work with different types.\\n\\t// Only returns segments that successfully rendered.\\n\\t// To be harnessed by renderFill (implemented by subclasses).\\n\\t// Analagous to renderFgSegEls.\\n\\trenderFillSegEls: function(type, segs) {\\n\\t\\tvar _this = this;\\n\\t\\tvar segElMethod = this[type + 'SegEl'];\\n\\t\\tvar html = '';\\n\\t\\tvar renderedSegs = [];\\n\\t\\tvar i;\\n\\n\\t\\tif (segs.length) {\\n\\n\\t\\t\\t// build a large concatenation of segment HTML\\n\\t\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\t\\thtml += this.fillSegHtml(type, segs[i]);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Grab individual elements from the combined HTML string. Use each as the default rendering.\\n\\t\\t\\t// Then, compute the 'el' for each segment.\\n\\t\\t\\t$(html).each(function(i, node) {\\n\\t\\t\\t\\tvar seg = segs[i];\\n\\t\\t\\t\\tvar el = $(node);\\n\\n\\t\\t\\t\\t// allow custom filter methods per-type\\n\\t\\t\\t\\tif (segElMethod) {\\n\\t\\t\\t\\t\\tel = segElMethod.call(_this, seg, el);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (el) { // custom filters did not cancel the render\\n\\t\\t\\t\\t\\tel = $(el); // allow custom filter to return raw DOM node\\n\\n\\t\\t\\t\\t\\t// correct element type? (would be bad if a non-TD were inserted into a table for example)\\n\\t\\t\\t\\t\\tif (el.is(_this.fillSegTag)) {\\n\\t\\t\\t\\t\\t\\tseg.el = el;\\n\\t\\t\\t\\t\\t\\trenderedSegs.push(seg);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\treturn renderedSegs;\\n\\t},\\n\\n\\n\\tfillSegTag: 'div', // subclasses can override\\n\\n\\n\\t// Builds the HTML needed for one fill segment. Generic enough to work with different types.\\n\\tfillSegHtml: function(type, seg) {\\n\\n\\t\\t// custom hooks per-type\\n\\t\\tvar classesMethod = this[type + 'SegClasses'];\\n\\t\\tvar cssMethod = this[type + 'SegCss'];\\n\\n\\t\\tvar classes = classesMethod ? classesMethod.call(this, seg) : [];\\n\\t\\tvar css = cssToStr(cssMethod ? cssMethod.call(this, seg) : {});\\n\\n\\t\\treturn '<' + this.fillSegTag +\\n\\t\\t\\t(classes.length ? ' class=\\\"' + classes.join(' ') + '\\\"' : '') +\\n\\t\\t\\t(css ? ' style=\\\"' + css + '\\\"' : '') +\\n\\t\\t\\t' />';\\n\\t},\\n\\n\\n\\n\\t/* Generic rendering utilities for subclasses\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Computes HTML classNames for a single-day element\\n\\tgetDayClasses: function(date, noThemeHighlight) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar today = view.calendar.getNow();\\n\\t\\tvar classes = [ 'fc-' + dayIDs[date.day()] ];\\n\\n\\t\\tif (\\n\\t\\t\\tview.intervalDuration.as('months') == 1 &&\\n\\t\\t\\tdate.month() != view.intervalStart.month()\\n\\t\\t) {\\n\\t\\t\\tclasses.push('fc-other-month');\\n\\t\\t}\\n\\n\\t\\tif (date.isSame(today, 'day')) {\\n\\t\\t\\tclasses.push('fc-today');\\n\\n\\t\\t\\tif (noThemeHighlight !== true) {\\n\\t\\t\\t\\tclasses.push(view.highlightStateClass);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse if (date < today) {\\n\\t\\t\\tclasses.push('fc-past');\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tclasses.push('fc-future');\\n\\t\\t}\\n\\n\\t\\treturn classes;\\n\\t}\\n\\n});\\n\\n;;\\n\\n/* Event-rendering and event-interaction methods for the abstract Grid class\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nGrid.mixin({\\n\\n\\t// self-config, overridable by subclasses\\n\\tsegSelector: '.fc-event-container > *', // what constitutes an event element?\\n\\n\\tmousedOverSeg: null, // the segment object the user's mouse is over. null if over nothing\\n\\tisDraggingSeg: false, // is a segment being dragged? boolean\\n\\tisResizingSeg: false, // is a segment being resized? boolean\\n\\tisDraggingExternal: false, // jqui-dragging an external element? boolean\\n\\tsegs: null, // the *event* segments currently rendered in the grid. TODO: rename to `eventSegs`\\n\\n\\n\\t// Renders the given events onto the grid\\n\\trenderEvents: function(events) {\\n\\t\\tvar bgEvents = [];\\n\\t\\tvar fgEvents = [];\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < events.length; i++) {\\n\\t\\t\\t(isBgEvent(events[i]) ? bgEvents : fgEvents).push(events[i]);\\n\\t\\t}\\n\\n\\t\\tthis.segs = [].concat( // record all segs\\n\\t\\t\\tthis.renderBgEvents(bgEvents),\\n\\t\\t\\tthis.renderFgEvents(fgEvents)\\n\\t\\t);\\n\\t},\\n\\n\\n\\trenderBgEvents: function(events) {\\n\\t\\tvar segs = this.eventsToSegs(events);\\n\\n\\t\\t// renderBgSegs might return a subset of segs, segs that were actually rendered\\n\\t\\treturn this.renderBgSegs(segs) || segs;\\n\\t},\\n\\n\\n\\trenderFgEvents: function(events) {\\n\\t\\tvar segs = this.eventsToSegs(events);\\n\\n\\t\\t// renderFgSegs might return a subset of segs, segs that were actually rendered\\n\\t\\treturn this.renderFgSegs(segs) || segs;\\n\\t},\\n\\n\\n\\t// Unrenders all events currently rendered on the grid\\n\\tunrenderEvents: function() {\\n\\t\\tthis.handleSegMouseout(); // trigger an eventMouseout if user's mouse is over an event\\n\\t\\tthis.clearDragListeners();\\n\\n\\t\\tthis.unrenderFgSegs();\\n\\t\\tthis.unrenderBgSegs();\\n\\n\\t\\tthis.segs = null;\\n\\t},\\n\\n\\n\\t// Retrieves all rendered segment objects currently rendered on the grid\\n\\tgetEventSegs: function() {\\n\\t\\treturn this.segs || [];\\n\\t},\\n\\n\\n\\t/* Foreground Segment Rendering\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders foreground event segments onto the grid. May return a subset of segs that were rendered.\\n\\trenderFgSegs: function(segs) {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t// Unrenders all currently rendered foreground segments\\n\\tunrenderFgSegs: function() {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t// Renders and assigns an `el` property for each foreground event segment.\\n\\t// Only returns segments that successfully rendered.\\n\\t// A utility that subclasses may use.\\n\\trenderFgSegEls: function(segs, disableResizing) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar html = '';\\n\\t\\tvar renderedSegs = [];\\n\\t\\tvar i;\\n\\n\\t\\tif (segs.length) { // don't build an empty html string\\n\\n\\t\\t\\t// build a large concatenation of event segment HTML\\n\\t\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\t\\thtml += this.fgSegHtml(segs[i], disableResizing);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Grab individual elements from the combined HTML string. Use each as the default rendering.\\n\\t\\t\\t// Then, compute the 'el' for each segment. An el might be null if the eventRender callback returned false.\\n\\t\\t\\t$(html).each(function(i, node) {\\n\\t\\t\\t\\tvar seg = segs[i];\\n\\t\\t\\t\\tvar el = view.resolveEventEl(seg.event, $(node));\\n\\n\\t\\t\\t\\tif (el) {\\n\\t\\t\\t\\t\\tel.data('fc-seg', seg); // used by handlers\\n\\t\\t\\t\\t\\tseg.el = el;\\n\\t\\t\\t\\t\\trenderedSegs.push(seg);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\treturn renderedSegs;\\n\\t},\\n\\n\\n\\t// Generates the HTML for the default rendering of a foreground event segment. Used by renderFgSegEls()\\n\\tfgSegHtml: function(seg, disableResizing) {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t/* Background Segment Rendering\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders the given background event segments onto the grid.\\n\\t// Returns a subset of the segs that were actually rendered.\\n\\trenderBgSegs: function(segs) {\\n\\t\\treturn this.renderFill('bgEvent', segs);\\n\\t},\\n\\n\\n\\t// Unrenders all the currently rendered background event segments\\n\\tunrenderBgSegs: function() {\\n\\t\\tthis.unrenderFill('bgEvent');\\n\\t},\\n\\n\\n\\t// Renders a background event element, given the default rendering. Called by the fill system.\\n\\tbgEventSegEl: function(seg, el) {\\n\\t\\treturn this.view.resolveEventEl(seg.event, el); // will filter through eventRender\\n\\t},\\n\\n\\n\\t// Generates an array of classNames to be used for the default rendering of a background event.\\n\\t// Called by fillSegHtml.\\n\\tbgEventSegClasses: function(seg) {\\n\\t\\tvar event = seg.event;\\n\\t\\tvar source = event.source || {};\\n\\n\\t\\treturn [ 'fc-bgevent' ].concat(\\n\\t\\t\\tevent.className,\\n\\t\\t\\tsource.className || []\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Generates a semicolon-separated CSS string to be used for the default rendering of a background event.\\n\\t// Called by fillSegHtml.\\n\\tbgEventSegCss: function(seg) {\\n\\t\\treturn {\\n\\t\\t\\t'background-color': this.getSegSkinCss(seg)['background-color']\\n\\t\\t};\\n\\t},\\n\\n\\n\\t// Generates an array of classNames to be used for the rendering business hours overlay. Called by the fill system.\\n\\t// Called by fillSegHtml.\\n\\tbusinessHoursSegClasses: function(seg) {\\n\\t\\treturn [ 'fc-nonbusiness', 'fc-bgevent' ];\\n\\t},\\n\\n\\n\\t/* Business Hours\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Compute business hour segs for the grid's current date range.\\n\\t// Caller must ask if whole-day business hours are needed.\\n\\t// If no `businessHours` configuration value is specified, assumes the calendar default.\\n\\tbuildBusinessHourSegs: function(wholeDay, businessHours) {\\n\\t\\treturn this.eventsToSegs(\\n\\t\\t\\tthis.buildBusinessHourEvents(wholeDay, businessHours)\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Compute business hour *events* for the grid's current date range.\\n\\t// Caller must ask if whole-day business hours are needed.\\n\\t// If no `businessHours` configuration value is specified, assumes the calendar default.\\n\\tbuildBusinessHourEvents: function(wholeDay, businessHours) {\\n\\t\\tvar calendar = this.view.calendar;\\n\\t\\tvar events;\\n\\n\\t\\tif (businessHours == null) {\\n\\t\\t\\t// fallback\\n\\t\\t\\t// access from calendawr. don't access from view. doesn't update with dynamic options.\\n\\t\\t\\tbusinessHours = calendar.options.businessHours;\\n\\t\\t}\\n\\n\\t\\tevents = calendar.computeBusinessHourEvents(wholeDay, businessHours);\\n\\n\\t\\t// HACK. Eventually refactor business hours \\\"events\\\" system.\\n\\t\\t// If no events are given, but businessHours is activated, this means the entire visible range should be\\n\\t\\t// marked as *not* business-hours, via inverse-background rendering.\\n\\t\\tif (!events.length && businessHours) {\\n\\t\\t\\tevents = [\\n\\t\\t\\t\\t$.extend({}, BUSINESS_HOUR_EVENT_DEFAULTS, {\\n\\t\\t\\t\\t\\tstart: this.view.end, // guaranteed out-of-range\\n\\t\\t\\t\\t\\tend: this.view.end,   // \\\"\\n\\t\\t\\t\\t\\tdow: null\\n\\t\\t\\t\\t})\\n\\t\\t\\t];\\n\\t\\t}\\n\\n\\t\\treturn events;\\n\\t},\\n\\n\\n\\t/* Handlers\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Attaches event-element-related handlers for *all* rendered event segments of the view.\\n\\tbindSegHandlers: function() {\\n\\t\\tthis.bindSegHandlersToEl(this.el);\\n\\t},\\n\\n\\n\\t// Attaches event-element-related handlers to an arbitrary container element. leverages bubbling.\\n\\tbindSegHandlersToEl: function(el) {\\n\\t\\tthis.bindSegHandlerToEl(el, 'touchstart', this.handleSegTouchStart);\\n\\t\\tthis.bindSegHandlerToEl(el, 'touchend', this.handleSegTouchEnd);\\n\\t\\tthis.bindSegHandlerToEl(el, 'mouseenter', this.handleSegMouseover);\\n\\t\\tthis.bindSegHandlerToEl(el, 'mouseleave', this.handleSegMouseout);\\n\\t\\tthis.bindSegHandlerToEl(el, 'mousedown', this.handleSegMousedown);\\n\\t\\tthis.bindSegHandlerToEl(el, 'click', this.handleSegClick);\\n\\t},\\n\\n\\n\\t// Executes a handler for any a user-interaction on a segment.\\n\\t// Handler gets called with (seg, ev), and with the `this` context of the Grid\\n\\tbindSegHandlerToEl: function(el, name, handler) {\\n\\t\\tvar _this = this;\\n\\n\\t\\tel.on(name, this.segSelector, function(ev) {\\n\\t\\t\\tvar seg = $(this).data('fc-seg'); // grab segment data. put there by View::renderEvents\\n\\n\\t\\t\\t// only call the handlers if there is not a drag/resize in progress\\n\\t\\t\\tif (seg && !_this.isDraggingSeg && !_this.isResizingSeg) {\\n\\t\\t\\t\\treturn handler.call(_this, seg, ev); // context will be the Grid\\n\\t\\t\\t}\\n\\t\\t});\\n\\t},\\n\\n\\n\\thandleSegClick: function(seg, ev) {\\n\\t\\tvar res = this.view.publiclyTrigger('eventClick', seg.el[0], seg.event, ev); // can return `false` to cancel\\n\\t\\tif (res === false) {\\n\\t\\t\\tev.preventDefault();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Updates internal state and triggers handlers for when an event element is moused over\\n\\thandleSegMouseover: function(seg, ev) {\\n\\t\\tif (\\n\\t\\t\\t!this.isIgnoringMouse &&\\n\\t\\t\\t!this.mousedOverSeg\\n\\t\\t) {\\n\\t\\t\\tthis.mousedOverSeg = seg;\\n\\t\\t\\tif (this.view.isEventResizable(seg.event)) {\\n\\t\\t\\t\\tseg.el.addClass('fc-allow-mouse-resize');\\n\\t\\t\\t}\\n\\t\\t\\tthis.view.publiclyTrigger('eventMouseover', seg.el[0], seg.event, ev);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Updates internal state and triggers handlers for when an event element is moused out.\\n\\t// Can be given no arguments, in which case it will mouseout the segment that was previously moused over.\\n\\thandleSegMouseout: function(seg, ev) {\\n\\t\\tev = ev || {}; // if given no args, make a mock mouse event\\n\\n\\t\\tif (this.mousedOverSeg) {\\n\\t\\t\\tseg = seg || this.mousedOverSeg; // if given no args, use the currently moused-over segment\\n\\t\\t\\tthis.mousedOverSeg = null;\\n\\t\\t\\tif (this.view.isEventResizable(seg.event)) {\\n\\t\\t\\t\\tseg.el.removeClass('fc-allow-mouse-resize');\\n\\t\\t\\t}\\n\\t\\t\\tthis.view.publiclyTrigger('eventMouseout', seg.el[0], seg.event, ev);\\n\\t\\t}\\n\\t},\\n\\n\\n\\thandleSegMousedown: function(seg, ev) {\\n\\t\\tvar isResizing = this.startSegResize(seg, ev, { distance: 5 });\\n\\n\\t\\tif (!isResizing && this.view.isEventDraggable(seg.event)) {\\n\\t\\t\\tthis.buildSegDragListener(seg)\\n\\t\\t\\t\\t.startInteraction(ev, {\\n\\t\\t\\t\\t\\tdistance: 5\\n\\t\\t\\t\\t});\\n\\t\\t}\\n\\t},\\n\\n\\n\\thandleSegTouchStart: function(seg, ev) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar event = seg.event;\\n\\t\\tvar isSelected = view.isEventSelected(event);\\n\\t\\tvar isDraggable = view.isEventDraggable(event);\\n\\t\\tvar isResizable = view.isEventResizable(event);\\n\\t\\tvar isResizing = false;\\n\\t\\tvar dragListener;\\n\\t\\tvar eventLongPressDelay;\\n\\n\\t\\tif (isSelected && isResizable) {\\n\\t\\t\\t// only allow resizing of the event is selected\\n\\t\\t\\tisResizing = this.startSegResize(seg, ev);\\n\\t\\t}\\n\\n\\t\\tif (!isResizing && (isDraggable || isResizable)) { // allowed to be selected?\\n\\n\\t\\t\\teventLongPressDelay = view.opt('eventLongPressDelay');\\n\\t\\t\\tif (eventLongPressDelay == null) {\\n\\t\\t\\t\\teventLongPressDelay = view.opt('longPressDelay'); // fallback\\n\\t\\t\\t}\\n\\n\\t\\t\\tdragListener = isDraggable ?\\n\\t\\t\\t\\tthis.buildSegDragListener(seg) :\\n\\t\\t\\t\\tthis.buildSegSelectListener(seg); // seg isn't draggable, but still needs to be selected\\n\\n\\t\\t\\tdragListener.startInteraction(ev, { // won't start if already started\\n\\t\\t\\t\\tdelay: isSelected ? 0 : eventLongPressDelay // do delay if not already selected\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// a long tap simulates a mouseover. ignore this bogus mouseover.\\n\\t\\tthis.tempIgnoreMouse();\\n\\t},\\n\\n\\n\\thandleSegTouchEnd: function(seg, ev) {\\n\\t\\t// touchstart+touchend = click, which simulates a mouseover.\\n\\t\\t// ignore this bogus mouseover.\\n\\t\\tthis.tempIgnoreMouse();\\n\\t},\\n\\n\\n\\t// returns boolean whether resizing actually started or not.\\n\\t// assumes the seg allows resizing.\\n\\t// `dragOptions` are optional.\\n\\tstartSegResize: function(seg, ev, dragOptions) {\\n\\t\\tif ($(ev.target).is('.fc-resizer')) {\\n\\t\\t\\tthis.buildSegResizeListener(seg, $(ev.target).is('.fc-start-resizer'))\\n\\t\\t\\t\\t.startInteraction(ev, dragOptions);\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\treturn false;\\n\\t},\\n\\n\\n\\n\\t/* Event Dragging\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Builds a listener that will track user-dragging on an event segment.\\n\\t// Generic enough to work with any type of Grid.\\n\\t// Has side effect of setting/unsetting `segDragListener`\\n\\tbuildSegDragListener: function(seg) {\\n\\t\\tvar _this = this;\\n\\t\\tvar view = this.view;\\n\\t\\tvar calendar = view.calendar;\\n\\t\\tvar el = seg.el;\\n\\t\\tvar event = seg.event;\\n\\t\\tvar isDragging;\\n\\t\\tvar mouseFollower; // A clone of the original element that will move with the mouse\\n\\t\\tvar dropLocation; // zoned event date properties\\n\\n\\t\\tif (this.segDragListener) {\\n\\t\\t\\treturn this.segDragListener;\\n\\t\\t}\\n\\n\\t\\t// Tracks mouse movement over the *view's* coordinate map. Allows dragging and dropping between subcomponents\\n\\t\\t// of the view.\\n\\t\\tvar dragListener = this.segDragListener = new HitDragListener(view, {\\n\\t\\t\\tscroll: view.opt('dragScroll'),\\n\\t\\t\\tsubjectEl: el,\\n\\t\\t\\tsubjectCenter: true,\\n\\t\\t\\tinteractionStart: function(ev) {\\n\\t\\t\\t\\tseg.component = _this; // for renderDrag\\n\\t\\t\\t\\tisDragging = false;\\n\\t\\t\\t\\tmouseFollower = new MouseFollower(seg.el, {\\n\\t\\t\\t\\t\\tadditionalClass: 'fc-dragging',\\n\\t\\t\\t\\t\\tparentEl: view.el,\\n\\t\\t\\t\\t\\topacity: dragListener.isTouch ? null : view.opt('dragOpacity'),\\n\\t\\t\\t\\t\\trevertDuration: view.opt('dragRevertDuration'),\\n\\t\\t\\t\\t\\tzIndex: 2 // one above the .fc-view\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tmouseFollower.hide(); // don't show until we know this is a real drag\\n\\t\\t\\t\\tmouseFollower.start(ev);\\n\\t\\t\\t},\\n\\t\\t\\tdragStart: function(ev) {\\n\\t\\t\\t\\tif (dragListener.isTouch && !view.isEventSelected(event)) {\\n\\t\\t\\t\\t\\t// if not previously selected, will fire after a delay. then, select the event\\n\\t\\t\\t\\t\\tview.selectEvent(event);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tisDragging = true;\\n\\t\\t\\t\\t_this.handleSegMouseout(seg, ev); // ensure a mouseout on the manipulated event has been reported\\n\\t\\t\\t\\t_this.segDragStart(seg, ev);\\n\\t\\t\\t\\tview.hideEvent(event); // hide all event segments. our mouseFollower will take over\\n\\t\\t\\t},\\n\\t\\t\\thitOver: function(hit, isOrig, origHit) {\\n\\t\\t\\t\\tvar dragHelperEls;\\n\\n\\t\\t\\t\\t// starting hit could be forced (DayGrid.limit)\\n\\t\\t\\t\\tif (seg.hit) {\\n\\t\\t\\t\\t\\torigHit = seg.hit;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// since we are querying the parent view, might not belong to this grid\\n\\t\\t\\t\\tdropLocation = _this.computeEventDrop(\\n\\t\\t\\t\\t\\torigHit.component.getHitSpan(origHit),\\n\\t\\t\\t\\t\\thit.component.getHitSpan(hit),\\n\\t\\t\\t\\t\\tevent\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\tif (dropLocation && !calendar.isEventSpanAllowed(_this.eventToSpan(dropLocation), event)) {\\n\\t\\t\\t\\t\\tdisableCursor();\\n\\t\\t\\t\\t\\tdropLocation = null;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// if a valid drop location, have the subclass render a visual indication\\n\\t\\t\\t\\tif (dropLocation && (dragHelperEls = view.renderDrag(dropLocation, seg))) {\\n\\n\\t\\t\\t\\t\\tdragHelperEls.addClass('fc-dragging');\\n\\t\\t\\t\\t\\tif (!dragListener.isTouch) {\\n\\t\\t\\t\\t\\t\\t_this.applyDragOpacity(dragHelperEls);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tmouseFollower.hide(); // if the subclass is already using a mock event \\\"helper\\\", hide our own\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\tmouseFollower.show(); // otherwise, have the helper follow the mouse (no snapping)\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (isOrig) {\\n\\t\\t\\t\\t\\tdropLocation = null; // needs to have moved hits to be a valid drop\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\thitOut: function() { // called before mouse moves to a different hit OR moved out of all hits\\n\\t\\t\\t\\tview.unrenderDrag(); // unrender whatever was done in renderDrag\\n\\t\\t\\t\\tmouseFollower.show(); // show in case we are moving out of all hits\\n\\t\\t\\t\\tdropLocation = null;\\n\\t\\t\\t},\\n\\t\\t\\thitDone: function() { // Called after a hitOut OR before a dragEnd\\n\\t\\t\\t\\tenableCursor();\\n\\t\\t\\t},\\n\\t\\t\\tinteractionEnd: function(ev) {\\n\\t\\t\\t\\tdelete seg.component; // prevent side effects\\n\\n\\t\\t\\t\\t// do revert animation if hasn't changed. calls a callback when finished (whether animation or not)\\n\\t\\t\\t\\tmouseFollower.stop(!dropLocation, function() {\\n\\t\\t\\t\\t\\tif (isDragging) {\\n\\t\\t\\t\\t\\t\\tview.unrenderDrag();\\n\\t\\t\\t\\t\\t\\t_this.segDragStop(seg, ev);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (dropLocation) {\\n\\t\\t\\t\\t\\t\\t// no need to re-show original, will rerender all anyways. esp important if eventRenderWait\\n\\t\\t\\t\\t\\t\\tview.reportEventDrop(event, dropLocation, _this.largeUnit, el, ev);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\tview.showEvent(event);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\t_this.segDragListener = null;\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn dragListener;\\n\\t},\\n\\n\\n\\t// seg isn't draggable, but let's use a generic DragListener\\n\\t// simply for the delay, so it can be selected.\\n\\t// Has side effect of setting/unsetting `segDragListener`\\n\\tbuildSegSelectListener: function(seg) {\\n\\t\\tvar _this = this;\\n\\t\\tvar view = this.view;\\n\\t\\tvar event = seg.event;\\n\\n\\t\\tif (this.segDragListener) {\\n\\t\\t\\treturn this.segDragListener;\\n\\t\\t}\\n\\n\\t\\tvar dragListener = this.segDragListener = new DragListener({\\n\\t\\t\\tdragStart: function(ev) {\\n\\t\\t\\t\\tif (dragListener.isTouch && !view.isEventSelected(event)) {\\n\\t\\t\\t\\t\\t// if not previously selected, will fire after a delay. then, select the event\\n\\t\\t\\t\\t\\tview.selectEvent(event);\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\tinteractionEnd: function(ev) {\\n\\t\\t\\t\\t_this.segDragListener = null;\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn dragListener;\\n\\t},\\n\\n\\n\\t// Called before event segment dragging starts\\n\\tsegDragStart: function(seg, ev) {\\n\\t\\tthis.isDraggingSeg = true;\\n\\t\\tthis.view.publiclyTrigger('eventDragStart', seg.el[0], seg.event, ev, {}); // last argument is jqui dummy\\n\\t},\\n\\n\\n\\t// Called after event segment dragging stops\\n\\tsegDragStop: function(seg, ev) {\\n\\t\\tthis.isDraggingSeg = false;\\n\\t\\tthis.view.publiclyTrigger('eventDragStop', seg.el[0], seg.event, ev, {}); // last argument is jqui dummy\\n\\t},\\n\\n\\n\\t// Given the spans an event drag began, and the span event was dropped, calculates the new zoned start/end/allDay\\n\\t// values for the event. Subclasses may override and set additional properties to be used by renderDrag.\\n\\t// A falsy returned value indicates an invalid drop.\\n\\t// DOES NOT consider overlap/constraint.\\n\\tcomputeEventDrop: function(startSpan, endSpan, event) {\\n\\t\\tvar calendar = this.view.calendar;\\n\\t\\tvar dragStart = startSpan.start;\\n\\t\\tvar dragEnd = endSpan.start;\\n\\t\\tvar delta;\\n\\t\\tvar dropLocation; // zoned event date properties\\n\\n\\t\\tif (dragStart.hasTime() === dragEnd.hasTime()) {\\n\\t\\t\\tdelta = this.diffDates(dragEnd, dragStart);\\n\\n\\t\\t\\t// if an all-day event was in a timed area and it was dragged to a different time,\\n\\t\\t\\t// guarantee an end and adjust start/end to have times\\n\\t\\t\\tif (event.allDay && durationHasTime(delta)) {\\n\\t\\t\\t\\tdropLocation = {\\n\\t\\t\\t\\t\\tstart: event.start.clone(),\\n\\t\\t\\t\\t\\tend: calendar.getEventEnd(event), // will be an ambig day\\n\\t\\t\\t\\t\\tallDay: false // for normalizeEventTimes\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tcalendar.normalizeEventTimes(dropLocation);\\n\\t\\t\\t}\\n\\t\\t\\t// othewise, work off existing values\\n\\t\\t\\telse {\\n\\t\\t\\t\\tdropLocation = pluckEventDateProps(event);\\n\\t\\t\\t}\\n\\n\\t\\t\\tdropLocation.start.add(delta);\\n\\t\\t\\tif (dropLocation.end) {\\n\\t\\t\\t\\tdropLocation.end.add(delta);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\t// if switching from day <-> timed, start should be reset to the dropped date, and the end cleared\\n\\t\\t\\tdropLocation = {\\n\\t\\t\\t\\tstart: dragEnd.clone(),\\n\\t\\t\\t\\tend: null, // end should be cleared\\n\\t\\t\\t\\tallDay: !dragEnd.hasTime()\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\treturn dropLocation;\\n\\t},\\n\\n\\n\\t// Utility for apply dragOpacity to a jQuery set\\n\\tapplyDragOpacity: function(els) {\\n\\t\\tvar opacity = this.view.opt('dragOpacity');\\n\\n\\t\\tif (opacity != null) {\\n\\t\\t\\tels.css('opacity', opacity);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* External Element Dragging\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Called when a jQuery UI drag is initiated anywhere in the DOM\\n\\texternalDragStart: function(ev, ui) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar el;\\n\\t\\tvar accept;\\n\\n\\t\\tif (view.opt('droppable')) { // only listen if this setting is on\\n\\t\\t\\tel = $((ui ? ui.item : null) || ev.target);\\n\\n\\t\\t\\t// Test that the dragged element passes the dropAccept selector or filter function.\\n\\t\\t\\t// FYI, the default is \\\"*\\\" (matches all)\\n\\t\\t\\taccept = view.opt('dropAccept');\\n\\t\\t\\tif ($.isFunction(accept) ? accept.call(el[0], el) : el.is(accept)) {\\n\\t\\t\\t\\tif (!this.isDraggingExternal) { // prevent double-listening if fired twice\\n\\t\\t\\t\\t\\tthis.listenToExternalDrag(el, ev, ui);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Called when a jQuery UI drag starts and it needs to be monitored for dropping\\n\\tlistenToExternalDrag: function(el, ev, ui) {\\n\\t\\tvar _this = this;\\n\\t\\tvar calendar = this.view.calendar;\\n\\t\\tvar meta = getDraggedElMeta(el); // extra data about event drop, including possible event to create\\n\\t\\tvar dropLocation; // a null value signals an unsuccessful drag\\n\\n\\t\\t// listener that tracks mouse movement over date-associated pixel regions\\n\\t\\tvar dragListener = _this.externalDragListener = new HitDragListener(this, {\\n\\t\\t\\tinteractionStart: function() {\\n\\t\\t\\t\\t_this.isDraggingExternal = true;\\n\\t\\t\\t},\\n\\t\\t\\thitOver: function(hit) {\\n\\t\\t\\t\\tdropLocation = _this.computeExternalDrop(\\n\\t\\t\\t\\t\\thit.component.getHitSpan(hit), // since we are querying the parent view, might not belong to this grid\\n\\t\\t\\t\\t\\tmeta\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\tif ( // invalid hit?\\n\\t\\t\\t\\t\\tdropLocation &&\\n\\t\\t\\t\\t\\t!calendar.isExternalSpanAllowed(_this.eventToSpan(dropLocation), dropLocation, meta.eventProps)\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\tdisableCursor();\\n\\t\\t\\t\\t\\tdropLocation = null;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (dropLocation) {\\n\\t\\t\\t\\t\\t_this.renderDrag(dropLocation); // called without a seg parameter\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\thitOut: function() {\\n\\t\\t\\t\\tdropLocation = null; // signal unsuccessful\\n\\t\\t\\t},\\n\\t\\t\\thitDone: function() { // Called after a hitOut OR before a dragEnd\\n\\t\\t\\t\\tenableCursor();\\n\\t\\t\\t\\t_this.unrenderDrag();\\n\\t\\t\\t},\\n\\t\\t\\tinteractionEnd: function(ev) {\\n\\t\\t\\t\\tif (dropLocation) { // element was dropped on a valid hit\\n\\t\\t\\t\\t\\t_this.view.reportExternalDrop(meta, dropLocation, el, ev, ui);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t_this.isDraggingExternal = false;\\n\\t\\t\\t\\t_this.externalDragListener = null;\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tdragListener.startDrag(ev); // start listening immediately\\n\\t},\\n\\n\\n\\t// Given a hit to be dropped upon, and misc data associated with the jqui drag (guaranteed to be a plain object),\\n\\t// returns the zoned start/end dates for the event that would result from the hypothetical drop. end might be null.\\n\\t// Returning a null value signals an invalid drop hit.\\n\\t// DOES NOT consider overlap/constraint.\\n\\tcomputeExternalDrop: function(span, meta) {\\n\\t\\tvar calendar = this.view.calendar;\\n\\t\\tvar dropLocation = {\\n\\t\\t\\tstart: calendar.applyTimezone(span.start), // simulate a zoned event start date\\n\\t\\t\\tend: null\\n\\t\\t};\\n\\n\\t\\t// if dropped on an all-day span, and element's metadata specified a time, set it\\n\\t\\tif (meta.startTime && !dropLocation.start.hasTime()) {\\n\\t\\t\\tdropLocation.start.time(meta.startTime);\\n\\t\\t}\\n\\n\\t\\tif (meta.duration) {\\n\\t\\t\\tdropLocation.end = dropLocation.start.clone().add(meta.duration);\\n\\t\\t}\\n\\n\\t\\treturn dropLocation;\\n\\t},\\n\\n\\n\\n\\t/* Drag Rendering (for both events and an external elements)\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of an event or external element being dragged.\\n\\t// `dropLocation` contains hypothetical start/end/allDay values the event would have if dropped. end can be null.\\n\\t// `seg` is the internal segment object that is being dragged. If dragging an external element, `seg` is null.\\n\\t// A truthy returned value indicates this method has rendered a helper element.\\n\\t// Must return elements used for any mock events.\\n\\trenderDrag: function(dropLocation, seg) {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t// Unrenders a visual indication of an event or external element being dragged\\n\\tunrenderDrag: function() {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t/* Resizing\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Creates a listener that tracks the user as they resize an event segment.\\n\\t// Generic enough to work with any type of Grid.\\n\\tbuildSegResizeListener: function(seg, isStart) {\\n\\t\\tvar _this = this;\\n\\t\\tvar view = this.view;\\n\\t\\tvar calendar = view.calendar;\\n\\t\\tvar el = seg.el;\\n\\t\\tvar event = seg.event;\\n\\t\\tvar eventEnd = calendar.getEventEnd(event);\\n\\t\\tvar isDragging;\\n\\t\\tvar resizeLocation; // zoned event date properties. falsy if invalid resize\\n\\n\\t\\t// Tracks mouse movement over the *grid's* coordinate map\\n\\t\\tvar dragListener = this.segResizeListener = new HitDragListener(this, {\\n\\t\\t\\tscroll: view.opt('dragScroll'),\\n\\t\\t\\tsubjectEl: el,\\n\\t\\t\\tinteractionStart: function() {\\n\\t\\t\\t\\tisDragging = false;\\n\\t\\t\\t},\\n\\t\\t\\tdragStart: function(ev) {\\n\\t\\t\\t\\tisDragging = true;\\n\\t\\t\\t\\t_this.handleSegMouseout(seg, ev); // ensure a mouseout on the manipulated event has been reported\\n\\t\\t\\t\\t_this.segResizeStart(seg, ev);\\n\\t\\t\\t},\\n\\t\\t\\thitOver: function(hit, isOrig, origHit) {\\n\\t\\t\\t\\tvar origHitSpan = _this.getHitSpan(origHit);\\n\\t\\t\\t\\tvar hitSpan = _this.getHitSpan(hit);\\n\\n\\t\\t\\t\\tresizeLocation = isStart ?\\n\\t\\t\\t\\t\\t_this.computeEventStartResize(origHitSpan, hitSpan, event) :\\n\\t\\t\\t\\t\\t_this.computeEventEndResize(origHitSpan, hitSpan, event);\\n\\n\\t\\t\\t\\tif (resizeLocation) {\\n\\t\\t\\t\\t\\tif (!calendar.isEventSpanAllowed(_this.eventToSpan(resizeLocation), event)) {\\n\\t\\t\\t\\t\\t\\tdisableCursor();\\n\\t\\t\\t\\t\\t\\tresizeLocation = null;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t// no change? (FYI, event dates might have zones)\\n\\t\\t\\t\\t\\telse if (\\n\\t\\t\\t\\t\\t\\tresizeLocation.start.isSame(event.start.clone().stripZone()) &&\\n\\t\\t\\t\\t\\t\\tresizeLocation.end.isSame(eventEnd.clone().stripZone())\\n\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\tresizeLocation = null;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (resizeLocation) {\\n\\t\\t\\t\\t\\tview.hideEvent(event);\\n\\t\\t\\t\\t\\t_this.renderEventResize(resizeLocation, seg);\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\thitOut: function() { // called before mouse moves to a different hit OR moved out of all hits\\n\\t\\t\\t\\tresizeLocation = null;\\n\\t\\t\\t\\tview.showEvent(event); // for when out-of-bounds. show original\\n\\t\\t\\t},\\n\\t\\t\\thitDone: function() { // resets the rendering to show the original event\\n\\t\\t\\t\\t_this.unrenderEventResize();\\n\\t\\t\\t\\tenableCursor();\\n\\t\\t\\t},\\n\\t\\t\\tinteractionEnd: function(ev) {\\n\\t\\t\\t\\tif (isDragging) {\\n\\t\\t\\t\\t\\t_this.segResizeStop(seg, ev);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (resizeLocation) { // valid date to resize to?\\n\\t\\t\\t\\t\\t// no need to re-show original, will rerender all anyways. esp important if eventRenderWait\\n\\t\\t\\t\\t\\tview.reportEventResize(event, resizeLocation, _this.largeUnit, el, ev);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\tview.showEvent(event);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t_this.segResizeListener = null;\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn dragListener;\\n\\t},\\n\\n\\n\\t// Called before event segment resizing starts\\n\\tsegResizeStart: function(seg, ev) {\\n\\t\\tthis.isResizingSeg = true;\\n\\t\\tthis.view.publiclyTrigger('eventResizeStart', seg.el[0], seg.event, ev, {}); // last argument is jqui dummy\\n\\t},\\n\\n\\n\\t// Called after event segment resizing stops\\n\\tsegResizeStop: function(seg, ev) {\\n\\t\\tthis.isResizingSeg = false;\\n\\t\\tthis.view.publiclyTrigger('eventResizeStop', seg.el[0], seg.event, ev, {}); // last argument is jqui dummy\\n\\t},\\n\\n\\n\\t// Returns new date-information for an event segment being resized from its start\\n\\tcomputeEventStartResize: function(startSpan, endSpan, event) {\\n\\t\\treturn this.computeEventResize('start', startSpan, endSpan, event);\\n\\t},\\n\\n\\n\\t// Returns new date-information for an event segment being resized from its end\\n\\tcomputeEventEndResize: function(startSpan, endSpan, event) {\\n\\t\\treturn this.computeEventResize('end', startSpan, endSpan, event);\\n\\t},\\n\\n\\n\\t// Returns new zoned date information for an event segment being resized from its start OR end\\n\\t// `type` is either 'start' or 'end'.\\n\\t// DOES NOT consider overlap/constraint.\\n\\tcomputeEventResize: function(type, startSpan, endSpan, event) {\\n\\t\\tvar calendar = this.view.calendar;\\n\\t\\tvar delta = this.diffDates(endSpan[type], startSpan[type]);\\n\\t\\tvar resizeLocation; // zoned event date properties\\n\\t\\tvar defaultDuration;\\n\\n\\t\\t// build original values to work from, guaranteeing a start and end\\n\\t\\tresizeLocation = {\\n\\t\\t\\tstart: event.start.clone(),\\n\\t\\t\\tend: calendar.getEventEnd(event),\\n\\t\\t\\tallDay: event.allDay\\n\\t\\t};\\n\\n\\t\\t// if an all-day event was in a timed area and was resized to a time, adjust start/end to have times\\n\\t\\tif (resizeLocation.allDay && durationHasTime(delta)) {\\n\\t\\t\\tresizeLocation.allDay = false;\\n\\t\\t\\tcalendar.normalizeEventTimes(resizeLocation);\\n\\t\\t}\\n\\n\\t\\tresizeLocation[type].add(delta); // apply delta to start or end\\n\\n\\t\\t// if the event was compressed too small, find a new reasonable duration for it\\n\\t\\tif (!resizeLocation.start.isBefore(resizeLocation.end)) {\\n\\n\\t\\t\\tdefaultDuration =\\n\\t\\t\\t\\tthis.minResizeDuration || // TODO: hack\\n\\t\\t\\t\\t(event.allDay ?\\n\\t\\t\\t\\t\\tcalendar.defaultAllDayEventDuration :\\n\\t\\t\\t\\t\\tcalendar.defaultTimedEventDuration);\\n\\n\\t\\t\\tif (type == 'start') { // resizing the start?\\n\\t\\t\\t\\tresizeLocation.start = resizeLocation.end.clone().subtract(defaultDuration);\\n\\t\\t\\t}\\n\\t\\t\\telse { // resizing the end?\\n\\t\\t\\t\\tresizeLocation.end = resizeLocation.start.clone().add(defaultDuration);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn resizeLocation;\\n\\t},\\n\\n\\n\\t// Renders a visual indication of an event being resized.\\n\\t// `range` has the updated dates of the event. `seg` is the original segment object involved in the drag.\\n\\t// Must return elements used for any mock events.\\n\\trenderEventResize: function(range, seg) {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t// Unrenders a visual indication of an event being resized.\\n\\tunrenderEventResize: function() {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t/* Rendering Utils\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Compute the text that should be displayed on an event's element.\\n\\t// `range` can be the Event object itself, or something range-like, with at least a `start`.\\n\\t// If event times are disabled, or the event has no time, will return a blank string.\\n\\t// If not specified, formatStr will default to the eventTimeFormat setting,\\n\\t// and displayEnd will default to the displayEventEnd setting.\\n\\tgetEventTimeText: function(range, formatStr, displayEnd) {\\n\\n\\t\\tif (formatStr == null) {\\n\\t\\t\\tformatStr = this.eventTimeFormat;\\n\\t\\t}\\n\\n\\t\\tif (displayEnd == null) {\\n\\t\\t\\tdisplayEnd = this.displayEventEnd;\\n\\t\\t}\\n\\n\\t\\tif (this.displayEventTime && range.start.hasTime()) {\\n\\t\\t\\tif (displayEnd && range.end) {\\n\\t\\t\\t\\treturn this.view.formatRange(range, formatStr);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\treturn range.start.format(formatStr);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn '';\\n\\t},\\n\\n\\n\\t// Generic utility for generating the HTML classNames for an event segment's element\\n\\tgetSegClasses: function(seg, isDraggable, isResizable) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar classes = [\\n\\t\\t\\t'fc-event',\\n\\t\\t\\tseg.isStart ? 'fc-start' : 'fc-not-start',\\n\\t\\t\\tseg.isEnd ? 'fc-end' : 'fc-not-end'\\n\\t\\t].concat(this.getSegCustomClasses(seg));\\n\\n\\t\\tif (isDraggable) {\\n\\t\\t\\tclasses.push('fc-draggable');\\n\\t\\t}\\n\\t\\tif (isResizable) {\\n\\t\\t\\tclasses.push('fc-resizable');\\n\\t\\t}\\n\\n\\t\\t// event is currently selected? attach a className.\\n\\t\\tif (view.isEventSelected(seg.event)) {\\n\\t\\t\\tclasses.push('fc-selected');\\n\\t\\t}\\n\\n\\t\\treturn classes;\\n\\t},\\n\\n\\n\\t// List of classes that were defined by the caller of the API in some way\\n\\tgetSegCustomClasses: function(seg) {\\n\\t\\tvar event = seg.event;\\n\\n\\t\\treturn [].concat(\\n\\t\\t\\tevent.className, // guaranteed to be an array\\n\\t\\t\\tevent.source ? event.source.className : []\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Utility for generating event skin-related CSS properties\\n\\tgetSegSkinCss: function(seg) {\\n\\t\\treturn {\\n\\t\\t\\t'background-color': this.getSegBackgroundColor(seg),\\n\\t\\t\\t'border-color': this.getSegBorderColor(seg),\\n\\t\\t\\tcolor: this.getSegTextColor(seg)\\n\\t\\t};\\n\\t},\\n\\n\\n\\t// Queries for caller-specified color, then falls back to default\\n\\tgetSegBackgroundColor: function(seg) {\\n\\t\\treturn seg.event.backgroundColor ||\\n\\t\\t\\tseg.event.color ||\\n\\t\\t\\tthis.getSegDefaultBackgroundColor(seg);\\n\\t},\\n\\n\\n\\tgetSegDefaultBackgroundColor: function(seg) {\\n\\t\\tvar source = seg.event.source || {};\\n\\n\\t\\treturn source.backgroundColor ||\\n\\t\\t\\tsource.color ||\\n\\t\\t\\tthis.view.opt('eventBackgroundColor') ||\\n\\t\\t\\tthis.view.opt('eventColor');\\n\\t},\\n\\n\\n\\t// Queries for caller-specified color, then falls back to default\\n\\tgetSegBorderColor: function(seg) {\\n\\t\\treturn seg.event.borderColor ||\\n\\t\\t\\tseg.event.color ||\\n\\t\\t\\tthis.getSegDefaultBorderColor(seg);\\n\\t},\\n\\n\\n\\tgetSegDefaultBorderColor: function(seg) {\\n\\t\\tvar source = seg.event.source || {};\\n\\n\\t\\treturn source.borderColor ||\\n\\t\\t\\tsource.color ||\\n\\t\\t\\tthis.view.opt('eventBorderColor') ||\\n\\t\\t\\tthis.view.opt('eventColor');\\n\\t},\\n\\n\\n\\t// Queries for caller-specified color, then falls back to default\\n\\tgetSegTextColor: function(seg) {\\n\\t\\treturn seg.event.textColor ||\\n\\t\\t\\tthis.getSegDefaultTextColor(seg);\\n\\t},\\n\\n\\n\\tgetSegDefaultTextColor: function(seg) {\\n\\t\\tvar source = seg.event.source || {};\\n\\n\\t\\treturn source.textColor ||\\n\\t\\t\\tthis.view.opt('eventTextColor');\\n\\t},\\n\\n\\n\\t/* Converting events -> eventRange -> eventSpan -> eventSegs\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Generates an array of segments for the given single event\\n\\t// Can accept an event \\\"location\\\" as well (which only has start/end and no allDay)\\n\\teventToSegs: function(event) {\\n\\t\\treturn this.eventsToSegs([ event ]);\\n\\t},\\n\\n\\n\\teventToSpan: function(event) {\\n\\t\\treturn this.eventToSpans(event)[0];\\n\\t},\\n\\n\\n\\t// Generates spans (always unzoned) for the given event.\\n\\t// Does not do any inverting for inverse-background events.\\n\\t// Can accept an event \\\"location\\\" as well (which only has start/end and no allDay)\\n\\teventToSpans: function(event) {\\n\\t\\tvar range = this.eventToRange(event);\\n\\t\\treturn this.eventRangeToSpans(range, event);\\n\\t},\\n\\n\\n\\n\\t// Converts an array of event objects into an array of event segment objects.\\n\\t// A custom `segSliceFunc` may be given for arbitrarily slicing up events.\\n\\t// Doesn't guarantee an order for the resulting array.\\n\\teventsToSegs: function(allEvents, segSliceFunc) {\\n\\t\\tvar _this = this;\\n\\t\\tvar eventsById = groupEventsById(allEvents);\\n\\t\\tvar segs = [];\\n\\n\\t\\t$.each(eventsById, function(id, events) {\\n\\t\\t\\tvar ranges = [];\\n\\t\\t\\tvar i;\\n\\n\\t\\t\\tfor (i = 0; i < events.length; i++) {\\n\\t\\t\\t\\tranges.push(_this.eventToRange(events[i]));\\n\\t\\t\\t}\\n\\n\\t\\t\\t// inverse-background events (utilize only the first event in calculations)\\n\\t\\t\\tif (isInverseBgEvent(events[0])) {\\n\\t\\t\\t\\tranges = _this.invertRanges(ranges);\\n\\n\\t\\t\\t\\tfor (i = 0; i < ranges.length; i++) {\\n\\t\\t\\t\\t\\tsegs.push.apply(segs, // append to\\n\\t\\t\\t\\t\\t\\t_this.eventRangeToSegs(ranges[i], events[0], segSliceFunc));\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t// normal event ranges\\n\\t\\t\\telse {\\n\\t\\t\\t\\tfor (i = 0; i < ranges.length; i++) {\\n\\t\\t\\t\\t\\tsegs.push.apply(segs, // append to\\n\\t\\t\\t\\t\\t\\t_this.eventRangeToSegs(ranges[i], events[i], segSliceFunc));\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t// Generates the unzoned start/end dates an event appears to occupy\\n\\t// Can accept an event \\\"location\\\" as well (which only has start/end and no allDay)\\n\\teventToRange: function(event) {\\n\\t\\tvar calendar = this.view.calendar;\\n\\t\\tvar start = event.start.clone().stripZone();\\n\\t\\tvar end = (\\n\\t\\t\\t\\tevent.end ?\\n\\t\\t\\t\\t\\tevent.end.clone() :\\n\\t\\t\\t\\t\\t// derive the end from the start and allDay. compute allDay if necessary\\n\\t\\t\\t\\t\\tcalendar.getDefaultEventEnd(\\n\\t\\t\\t\\t\\t\\tevent.allDay != null ?\\n\\t\\t\\t\\t\\t\\t\\tevent.allDay :\\n\\t\\t\\t\\t\\t\\t\\t!event.start.hasTime(),\\n\\t\\t\\t\\t\\t\\tevent.start\\n\\t\\t\\t\\t\\t)\\n\\t\\t\\t).stripZone();\\n\\n\\t\\t// hack: dynamic locale change forgets to upate stored event localed\\n\\t\\tcalendar.localizeMoment(start);\\n\\t\\tcalendar.localizeMoment(end);\\n\\n\\t\\treturn { start: start, end: end };\\n\\t},\\n\\n\\n\\t// Given an event's range (unzoned start/end), and the event itself,\\n\\t// slice into segments (using the segSliceFunc function if specified)\\n\\teventRangeToSegs: function(range, event, segSliceFunc) {\\n\\t\\tvar spans = this.eventRangeToSpans(range, event);\\n\\t\\tvar segs = [];\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < spans.length; i++) {\\n\\t\\t\\tsegs.push.apply(segs, // append to\\n\\t\\t\\t\\tthis.eventSpanToSegs(spans[i], event, segSliceFunc));\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t// Given an event's unzoned date range, return an array of \\\"span\\\" objects.\\n\\t// Subclasses can override.\\n\\teventRangeToSpans: function(range, event) {\\n\\t\\treturn [ $.extend({}, range) ]; // copy into a single-item array\\n\\t},\\n\\n\\n\\t// Given an event's span (unzoned start/end and other misc data), and the event itself,\\n\\t// slices into segments and attaches event-derived properties to them.\\n\\teventSpanToSegs: function(span, event, segSliceFunc) {\\n\\t\\tvar segs = segSliceFunc ? segSliceFunc(span) : this.spanToSegs(span);\\n\\t\\tvar i, seg;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\t\\t\\tseg.event = event;\\n\\t\\t\\tseg.eventStartMS = +span.start; // TODO: not the best name after making spans unzoned\\n\\t\\t\\tseg.eventDurationMS = span.end - span.start;\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t// Produces a new array of range objects that will cover all the time NOT covered by the given ranges.\\n\\t// SIDE EFFECT: will mutate the given array and will use its date references.\\n\\tinvertRanges: function(ranges) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar viewStart = view.start.clone(); // need a copy\\n\\t\\tvar viewEnd = view.end.clone(); // need a copy\\n\\t\\tvar inverseRanges = [];\\n\\t\\tvar start = viewStart; // the end of the previous range. the start of the new range\\n\\t\\tvar i, range;\\n\\n\\t\\t// ranges need to be in order. required for our date-walking algorithm\\n\\t\\tranges.sort(compareRanges);\\n\\n\\t\\tfor (i = 0; i < ranges.length; i++) {\\n\\t\\t\\trange = ranges[i];\\n\\n\\t\\t\\t// add the span of time before the event (if there is any)\\n\\t\\t\\tif (range.start > start) { // compare millisecond time (skip any ambig logic)\\n\\t\\t\\t\\tinverseRanges.push({\\n\\t\\t\\t\\t\\tstart: start,\\n\\t\\t\\t\\t\\tend: range.start\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\n\\t\\t\\tstart = range.end;\\n\\t\\t}\\n\\n\\t\\t// add the span of time after the last event (if there is any)\\n\\t\\tif (start < viewEnd) { // compare millisecond time (skip any ambig logic)\\n\\t\\t\\tinverseRanges.push({\\n\\t\\t\\t\\tstart: start,\\n\\t\\t\\t\\tend: viewEnd\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\treturn inverseRanges;\\n\\t},\\n\\n\\n\\tsortEventSegs: function(segs) {\\n\\t\\tsegs.sort(proxy(this, 'compareEventSegs'));\\n\\t},\\n\\n\\n\\t// A cmp function for determining which segments should take visual priority\\n\\tcompareEventSegs: function(seg1, seg2) {\\n\\t\\treturn seg1.eventStartMS - seg2.eventStartMS || // earlier events go first\\n\\t\\t\\tseg2.eventDurationMS - seg1.eventDurationMS || // tie? longer events go first\\n\\t\\t\\tseg2.event.allDay - seg1.event.allDay || // tie? put all-day events first (booleans cast to 0/1)\\n\\t\\t\\tcompareByFieldSpecs(seg1.event, seg2.event, this.view.eventOrderSpecs);\\n\\t}\\n\\n});\\n\\n\\n/* Utilities\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\n\\nfunction pluckEventDateProps(event) {\\n\\treturn {\\n\\t\\tstart: event.start.clone(),\\n\\t\\tend: event.end ? event.end.clone() : null,\\n\\t\\tallDay: event.allDay // keep it the same\\n\\t};\\n}\\nFC.pluckEventDateProps = pluckEventDateProps;\\n\\n\\nfunction isBgEvent(event) { // returns true if background OR inverse-background\\n\\tvar rendering = getEventRendering(event);\\n\\treturn rendering === 'background' || rendering === 'inverse-background';\\n}\\nFC.isBgEvent = isBgEvent; // export\\n\\n\\nfunction isInverseBgEvent(event) {\\n\\treturn getEventRendering(event) === 'inverse-background';\\n}\\n\\n\\nfunction getEventRendering(event) {\\n\\treturn firstDefined((event.source || {}).rendering, event.rendering);\\n}\\n\\n\\nfunction groupEventsById(events) {\\n\\tvar eventsById = {};\\n\\tvar i, event;\\n\\n\\tfor (i = 0; i < events.length; i++) {\\n\\t\\tevent = events[i];\\n\\t\\t(eventsById[event._id] || (eventsById[event._id] = [])).push(event);\\n\\t}\\n\\n\\treturn eventsById;\\n}\\n\\n\\n// A cmp function for determining which non-inverted \\\"ranges\\\" (see above) happen earlier\\nfunction compareRanges(range1, range2) {\\n\\treturn range1.start - range2.start; // earlier ranges go first\\n}\\n\\n\\n/* External-Dragging-Element Data\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\n// Require all HTML5 data-* attributes used by FullCalendar to have this prefix.\\n// A value of '' will query attributes like data-event. A value of 'fc' will query attributes like data-fc-event.\\nFC.dataAttrPrefix = '';\\n\\n// Given a jQuery element that might represent a dragged FullCalendar event, returns an intermediate data structure\\n// to be used for Event Object creation.\\n// A defined `.eventProps`, even when empty, indicates that an event should be created.\\nfunction getDraggedElMeta(el) {\\n\\tvar prefix = FC.dataAttrPrefix;\\n\\tvar eventProps; // properties for creating the event, not related to date/time\\n\\tvar startTime; // a Duration\\n\\tvar duration;\\n\\tvar stick;\\n\\n\\tif (prefix) { prefix += '-'; }\\n\\teventProps = el.data(prefix + 'event') || null;\\n\\n\\tif (eventProps) {\\n\\t\\tif (typeof eventProps === 'object') {\\n\\t\\t\\teventProps = $.extend({}, eventProps); // make a copy\\n\\t\\t}\\n\\t\\telse { // something like 1 or true. still signal event creation\\n\\t\\t\\teventProps = {};\\n\\t\\t}\\n\\n\\t\\t// pluck special-cased date/time properties\\n\\t\\tstartTime = eventProps.start;\\n\\t\\tif (startTime == null) { startTime = eventProps.time; } // accept 'time' as well\\n\\t\\tduration = eventProps.duration;\\n\\t\\tstick = eventProps.stick;\\n\\t\\tdelete eventProps.start;\\n\\t\\tdelete eventProps.time;\\n\\t\\tdelete eventProps.duration;\\n\\t\\tdelete eventProps.stick;\\n\\t}\\n\\n\\t// fallback to standalone attribute values for each of the date/time properties\\n\\tif (startTime == null) { startTime = el.data(prefix + 'start'); }\\n\\tif (startTime == null) { startTime = el.data(prefix + 'time'); } // accept 'time' as well\\n\\tif (duration == null) { duration = el.data(prefix + 'duration'); }\\n\\tif (stick == null) { stick = el.data(prefix + 'stick'); }\\n\\n\\t// massage into correct data types\\n\\tstartTime = startTime != null ? moment.duration(startTime) : null;\\n\\tduration = duration != null ? moment.duration(duration) : null;\\n\\tstick = Boolean(stick);\\n\\n\\treturn { eventProps: eventProps, startTime: startTime, duration: duration, stick: stick };\\n}\\n\\n\\n;;\\n\\n/*\\nA set of rendering and date-related methods for a visual component comprised of one or more rows of day columns.\\nPrerequisite: the object being mixed into needs to be a *Grid*\\n*/\\nvar DayTableMixin = FC.DayTableMixin = {\\n\\n\\tbreakOnWeeks: false, // should create a new row for each week?\\n\\tdayDates: null, // whole-day dates for each column. left to right\\n\\tdayIndices: null, // for each day from start, the offset\\n\\tdaysPerRow: null,\\n\\trowCnt: null,\\n\\tcolCnt: null,\\n\\tcolHeadFormat: null,\\n\\n\\n\\t// Populates internal variables used for date calculation and rendering\\n\\tupdateDayTable: function() {\\n\\t\\tvar view = this.view;\\n\\t\\tvar date = this.start.clone();\\n\\t\\tvar dayIndex = -1;\\n\\t\\tvar dayIndices = [];\\n\\t\\tvar dayDates = [];\\n\\t\\tvar daysPerRow;\\n\\t\\tvar firstDay;\\n\\t\\tvar rowCnt;\\n\\n\\t\\twhile (date.isBefore(this.end)) { // loop each day from start to end\\n\\t\\t\\tif (view.isHiddenDay(date)) {\\n\\t\\t\\t\\tdayIndices.push(dayIndex + 0.5); // mark that it's between indices\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tdayIndex++;\\n\\t\\t\\t\\tdayIndices.push(dayIndex);\\n\\t\\t\\t\\tdayDates.push(date.clone());\\n\\t\\t\\t}\\n\\t\\t\\tdate.add(1, 'days');\\n\\t\\t}\\n\\n\\t\\tif (this.breakOnWeeks) {\\n\\t\\t\\t// count columns until the day-of-week repeats\\n\\t\\t\\tfirstDay = dayDates[0].day();\\n\\t\\t\\tfor (daysPerRow = 1; daysPerRow < dayDates.length; daysPerRow++) {\\n\\t\\t\\t\\tif (dayDates[daysPerRow].day() == firstDay) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\trowCnt = Math.ceil(dayDates.length / daysPerRow);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\trowCnt = 1;\\n\\t\\t\\tdaysPerRow = dayDates.length;\\n\\t\\t}\\n\\n\\t\\tthis.dayDates = dayDates;\\n\\t\\tthis.dayIndices = dayIndices;\\n\\t\\tthis.daysPerRow = daysPerRow;\\n\\t\\tthis.rowCnt = rowCnt;\\n\\n\\t\\tthis.updateDayTableCols();\\n\\t},\\n\\n\\n\\t// Computes and assigned the colCnt property and updates any options that may be computed from it\\n\\tupdateDayTableCols: function() {\\n\\t\\tthis.colCnt = this.computeColCnt();\\n\\t\\tthis.colHeadFormat = this.view.opt('columnFormat') || this.computeColHeadFormat();\\n\\t},\\n\\n\\n\\t// Determines how many columns there should be in the table\\n\\tcomputeColCnt: function() {\\n\\t\\treturn this.daysPerRow;\\n\\t},\\n\\n\\n\\t// Computes the ambiguously-timed moment for the given cell\\n\\tgetCellDate: function(row, col) {\\n\\t\\treturn this.dayDates[\\n\\t\\t\\t\\tthis.getCellDayIndex(row, col)\\n\\t\\t\\t].clone();\\n\\t},\\n\\n\\n\\t// Computes the ambiguously-timed date range for the given cell\\n\\tgetCellRange: function(row, col) {\\n\\t\\tvar start = this.getCellDate(row, col);\\n\\t\\tvar end = start.clone().add(1, 'days');\\n\\n\\t\\treturn { start: start, end: end };\\n\\t},\\n\\n\\n\\t// Returns the number of day cells, chronologically, from the first of the grid (0-based)\\n\\tgetCellDayIndex: function(row, col) {\\n\\t\\treturn row * this.daysPerRow + this.getColDayIndex(col);\\n\\t},\\n\\n\\n\\t// Returns the numner of day cells, chronologically, from the first cell in *any given row*\\n\\tgetColDayIndex: function(col) {\\n\\t\\tif (this.isRTL) {\\n\\t\\t\\treturn this.colCnt - 1 - col;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn col;\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Given a date, returns its chronolocial cell-index from the first cell of the grid.\\n\\t// If the date lies between cells (because of hiddenDays), returns a floating-point value between offsets.\\n\\t// If before the first offset, returns a negative number.\\n\\t// If after the last offset, returns an offset past the last cell offset.\\n\\t// Only works for *start* dates of cells. Will not work for exclusive end dates for cells.\\n\\tgetDateDayIndex: function(date) {\\n\\t\\tvar dayIndices = this.dayIndices;\\n\\t\\tvar dayOffset = date.diff(this.start, 'days');\\n\\n\\t\\tif (dayOffset < 0) {\\n\\t\\t\\treturn dayIndices[0] - 1;\\n\\t\\t}\\n\\t\\telse if (dayOffset >= dayIndices.length) {\\n\\t\\t\\treturn dayIndices[dayIndices.length - 1] + 1;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn dayIndices[dayOffset];\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Options\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Computes a default column header formatting string if `colFormat` is not explicitly defined\\n\\tcomputeColHeadFormat: function() {\\n\\t\\t// if more than one week row, or if there are a lot of columns with not much space,\\n\\t\\t// put just the day numbers will be in each cell\\n\\t\\tif (this.rowCnt > 1 || this.colCnt > 10) {\\n\\t\\t\\treturn 'ddd'; // \\\"Sat\\\"\\n\\t\\t}\\n\\t\\t// multiple days, so full single date string WON'T be in title text\\n\\t\\telse if (this.colCnt > 1) {\\n\\t\\t\\treturn this.view.opt('dayOfMonthFormat'); // \\\"Sat 12/10\\\"\\n\\t\\t}\\n\\t\\t// single day, so full single date string will probably be in title text\\n\\t\\telse {\\n\\t\\t\\treturn 'dddd'; // \\\"Saturday\\\"\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Slicing\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Slices up a date range into a segment for every week-row it intersects with\\n\\tsliceRangeByRow: function(range) {\\n\\t\\tvar daysPerRow = this.daysPerRow;\\n\\t\\tvar normalRange = this.view.computeDayRange(range); // make whole-day range, considering nextDayThreshold\\n\\t\\tvar rangeFirst = this.getDateDayIndex(normalRange.start); // inclusive first index\\n\\t\\tvar rangeLast = this.getDateDayIndex(normalRange.end.clone().subtract(1, 'days')); // inclusive last index\\n\\t\\tvar segs = [];\\n\\t\\tvar row;\\n\\t\\tvar rowFirst, rowLast; // inclusive day-index range for current row\\n\\t\\tvar segFirst, segLast; // inclusive day-index range for segment\\n\\n\\t\\tfor (row = 0; row < this.rowCnt; row++) {\\n\\t\\t\\trowFirst = row * daysPerRow;\\n\\t\\t\\trowLast = rowFirst + daysPerRow - 1;\\n\\n\\t\\t\\t// intersect segment's offset range with the row's\\n\\t\\t\\tsegFirst = Math.max(rangeFirst, rowFirst);\\n\\t\\t\\tsegLast = Math.min(rangeLast, rowLast);\\n\\n\\t\\t\\t// deal with in-between indices\\n\\t\\t\\tsegFirst = Math.ceil(segFirst); // in-between starts round to next cell\\n\\t\\t\\tsegLast = Math.floor(segLast); // in-between ends round to prev cell\\n\\n\\t\\t\\tif (segFirst <= segLast) { // was there any intersection with the current row?\\n\\t\\t\\t\\tsegs.push({\\n\\t\\t\\t\\t\\trow: row,\\n\\n\\t\\t\\t\\t\\t// normalize to start of row\\n\\t\\t\\t\\t\\tfirstRowDayIndex: segFirst - rowFirst,\\n\\t\\t\\t\\t\\tlastRowDayIndex: segLast - rowFirst,\\n\\n\\t\\t\\t\\t\\t// must be matching integers to be the segment's start/end\\n\\t\\t\\t\\t\\tisStart: segFirst === rangeFirst,\\n\\t\\t\\t\\t\\tisEnd: segLast === rangeLast\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t// Slices up a date range into a segment for every day-cell it intersects with.\\n\\t// TODO: make more DRY with sliceRangeByRow somehow.\\n\\tsliceRangeByDay: function(range) {\\n\\t\\tvar daysPerRow = this.daysPerRow;\\n\\t\\tvar normalRange = this.view.computeDayRange(range); // make whole-day range, considering nextDayThreshold\\n\\t\\tvar rangeFirst = this.getDateDayIndex(normalRange.start); // inclusive first index\\n\\t\\tvar rangeLast = this.getDateDayIndex(normalRange.end.clone().subtract(1, 'days')); // inclusive last index\\n\\t\\tvar segs = [];\\n\\t\\tvar row;\\n\\t\\tvar rowFirst, rowLast; // inclusive day-index range for current row\\n\\t\\tvar i;\\n\\t\\tvar segFirst, segLast; // inclusive day-index range for segment\\n\\n\\t\\tfor (row = 0; row < this.rowCnt; row++) {\\n\\t\\t\\trowFirst = row * daysPerRow;\\n\\t\\t\\trowLast = rowFirst + daysPerRow - 1;\\n\\n\\t\\t\\tfor (i = rowFirst; i <= rowLast; i++) {\\n\\n\\t\\t\\t\\t// intersect segment's offset range with the row's\\n\\t\\t\\t\\tsegFirst = Math.max(rangeFirst, i);\\n\\t\\t\\t\\tsegLast = Math.min(rangeLast, i);\\n\\n\\t\\t\\t\\t// deal with in-between indices\\n\\t\\t\\t\\tsegFirst = Math.ceil(segFirst); // in-between starts round to next cell\\n\\t\\t\\t\\tsegLast = Math.floor(segLast); // in-between ends round to prev cell\\n\\n\\t\\t\\t\\tif (segFirst <= segLast) { // was there any intersection with the current row?\\n\\t\\t\\t\\t\\tsegs.push({\\n\\t\\t\\t\\t\\t\\trow: row,\\n\\n\\t\\t\\t\\t\\t\\t// normalize to start of row\\n\\t\\t\\t\\t\\t\\tfirstRowDayIndex: segFirst - rowFirst,\\n\\t\\t\\t\\t\\t\\tlastRowDayIndex: segLast - rowFirst,\\n\\n\\t\\t\\t\\t\\t\\t// must be matching integers to be the segment's start/end\\n\\t\\t\\t\\t\\t\\tisStart: segFirst === rangeFirst,\\n\\t\\t\\t\\t\\t\\tisEnd: segLast === rangeLast\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t/* Header Rendering\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderHeadHtml: function() {\\n\\t\\tvar view = this.view;\\n\\n\\t\\treturn '' +\\n\\t\\t\\t'<div class=\\\"fc-row ' + view.widgetHeaderClass + '\\\">' +\\n\\t\\t\\t\\t'<table>' +\\n\\t\\t\\t\\t\\t'<thead>' +\\n\\t\\t\\t\\t\\t\\tthis.renderHeadTrHtml() +\\n\\t\\t\\t\\t\\t'</thead>' +\\n\\t\\t\\t\\t'</table>' +\\n\\t\\t\\t'</div>';\\n\\t},\\n\\n\\n\\trenderHeadIntroHtml: function() {\\n\\t\\treturn this.renderIntroHtml(); // fall back to generic\\n\\t},\\n\\n\\n\\trenderHeadTrHtml: function() {\\n\\t\\treturn '' +\\n\\t\\t\\t'<tr>' +\\n\\t\\t\\t\\t(this.isRTL ? '' : this.renderHeadIntroHtml()) +\\n\\t\\t\\t\\tthis.renderHeadDateCellsHtml() +\\n\\t\\t\\t\\t(this.isRTL ? this.renderHeadIntroHtml() : '') +\\n\\t\\t\\t'</tr>';\\n\\t},\\n\\n\\n\\trenderHeadDateCellsHtml: function() {\\n\\t\\tvar htmls = [];\\n\\t\\tvar col, date;\\n\\n\\t\\tfor (col = 0; col < this.colCnt; col++) {\\n\\t\\t\\tdate = this.getCellDate(0, col);\\n\\t\\t\\thtmls.push(this.renderHeadDateCellHtml(date));\\n\\t\\t}\\n\\n\\t\\treturn htmls.join('');\\n\\t},\\n\\n\\n\\t// TODO: when internalApiVersion, accept an object for HTML attributes\\n\\t// (colspan should be no different)\\n\\trenderHeadDateCellHtml: function(date, colspan, otherAttrs) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar classNames = [\\n\\t\\t\\t'fc-day-header',\\n\\t\\t\\tview.widgetHeaderClass\\n\\t\\t];\\n\\n\\t\\t// if only one row of days, the classNames on the header can represent the specific days beneath\\n\\t\\tif (this.rowCnt === 1) {\\n\\t\\t\\tclassNames = classNames.concat(\\n\\t\\t\\t\\t// includes the day-of-week class\\n\\t\\t\\t\\t// noThemeHighlight=true (don't highlight the header)\\n\\t\\t\\t\\tthis.getDayClasses(date, true)\\n\\t\\t\\t);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tclassNames.push('fc-' + dayIDs[date.day()]); // only add the day-of-week class\\n\\t\\t}\\n\\n\\t\\treturn '' +\\n            '<th class=\\\"' + classNames.join(' ') + '\\\"' +\\n\\t\\t\\t\\t(this.rowCnt === 1 ?\\n\\t\\t\\t\\t\\t' data-date=\\\"' + date.format('YYYY-MM-DD') + '\\\"' :\\n\\t\\t\\t\\t\\t'') +\\n\\t\\t\\t\\t(colspan > 1 ?\\n\\t\\t\\t\\t\\t' colspan=\\\"' + colspan + '\\\"' :\\n\\t\\t\\t\\t\\t'') +\\n\\t\\t\\t\\t(otherAttrs ?\\n\\t\\t\\t\\t\\t' ' + otherAttrs :\\n\\t\\t\\t\\t\\t'') +\\n\\t\\t\\t\\t'>' +\\n\\t\\t\\t\\t// don't make a link if the heading could represent multiple days, or if there's only one day (forceOff)\\n\\t\\t\\t\\tview.buildGotoAnchorHtml(\\n\\t\\t\\t\\t\\t{ date: date, forceOff: this.rowCnt > 1 || this.colCnt === 1 },\\n\\t\\t\\t\\t\\thtmlEscape(date.format(this.colHeadFormat)) // inner HTML\\n\\t\\t\\t\\t) +\\n\\t\\t\\t'</th>';\\n\\t},\\n\\n\\n\\t/* Background Rendering\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderBgTrHtml: function(row) {\\n\\t\\treturn '' +\\n\\t\\t\\t'<tr>' +\\n\\t\\t\\t\\t(this.isRTL ? '' : this.renderBgIntroHtml(row)) +\\n\\t\\t\\t\\tthis.renderBgCellsHtml(row) +\\n\\t\\t\\t\\t(this.isRTL ? this.renderBgIntroHtml(row) : '') +\\n\\t\\t\\t'</tr>';\\n\\t},\\n\\n\\n\\trenderBgIntroHtml: function(row) {\\n\\t\\treturn this.renderIntroHtml(); // fall back to generic\\n\\t},\\n\\n\\n\\trenderBgCellsHtml: function(row) {\\n\\t\\tvar htmls = [];\\n\\t\\tvar col, date;\\n\\n\\t\\tfor (col = 0; col < this.colCnt; col++) {\\n\\t\\t\\tdate = this.getCellDate(row, col);\\n\\t\\t\\thtmls.push(this.renderBgCellHtml(date));\\n\\t\\t}\\n\\n\\t\\treturn htmls.join('');\\n\\t},\\n\\n\\n\\trenderBgCellHtml: function(date, otherAttrs) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar classes = this.getDayClasses(date);\\n\\n\\t\\tclasses.unshift('fc-day', view.widgetContentClass);\\n\\n\\t\\treturn '<td class=\\\"' + classes.join(' ') + '\\\"' +\\n\\t\\t\\t' data-date=\\\"' + date.format('YYYY-MM-DD') + '\\\"' + // if date has a time, won't format it\\n\\t\\t\\t(otherAttrs ?\\n\\t\\t\\t\\t' ' + otherAttrs :\\n\\t\\t\\t\\t'') +\\n\\t\\t\\t'></td>';\\n\\t},\\n\\n\\n\\t/* Generic\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Generates the default HTML intro for any row. User classes should override\\n\\trenderIntroHtml: function() {\\n\\t},\\n\\n\\n\\t// TODO: a generic method for dealing with <tr>, RTL, intro\\n\\t// when increment internalApiVersion\\n\\t// wrapTr (scheduler)\\n\\n\\n\\t/* Utils\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Applies the generic \\\"intro\\\" and \\\"outro\\\" HTML to the given cells.\\n\\t// Intro means the leftmost cell when the calendar is LTR and the rightmost cell when RTL. Vice-versa for outro.\\n\\tbookendCells: function(trEl) {\\n\\t\\tvar introHtml = this.renderIntroHtml();\\n\\n\\t\\tif (introHtml) {\\n\\t\\t\\tif (this.isRTL) {\\n\\t\\t\\t\\ttrEl.append(introHtml);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\ttrEl.prepend(introHtml);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n};\\n\\n;;\\n\\n/* A component that renders a grid of whole-days that runs horizontally. There can be multiple rows, one per week.\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nvar DayGrid = FC.DayGrid = Grid.extend(DayTableMixin, {\\n\\n\\tnumbersVisible: false, // should render a row for day/week numbers? set by outside view. TODO: make internal\\n\\tbottomCoordPadding: 0, // hack for extending the hit area for the last row of the coordinate grid\\n\\n\\trowEls: null, // set of fake row elements\\n\\tcellEls: null, // set of whole-day elements comprising the row's background\\n\\thelperEls: null, // set of cell skeleton elements for rendering the mock event \\\"helper\\\"\\n\\n\\trowCoordCache: null,\\n\\tcolCoordCache: null,\\n\\n\\n\\t// Renders the rows and columns into the component's `this.el`, which should already be assigned.\\n\\t// isRigid determins whether the individual rows should ignore the contents and be a constant height.\\n\\t// Relies on the view's colCnt and rowCnt. In the future, this component should probably be self-sufficient.\\n\\trenderDates: function(isRigid) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar rowCnt = this.rowCnt;\\n\\t\\tvar colCnt = this.colCnt;\\n\\t\\tvar html = '';\\n\\t\\tvar row;\\n\\t\\tvar col;\\n\\n\\t\\tfor (row = 0; row < rowCnt; row++) {\\n\\t\\t\\thtml += this.renderDayRowHtml(row, isRigid);\\n\\t\\t}\\n\\t\\tthis.el.html(html);\\n\\n\\t\\tthis.rowEls = this.el.find('.fc-row');\\n\\t\\tthis.cellEls = this.el.find('.fc-day');\\n\\n\\t\\tthis.rowCoordCache = new CoordCache({\\n\\t\\t\\tels: this.rowEls,\\n\\t\\t\\tisVertical: true\\n\\t\\t});\\n\\t\\tthis.colCoordCache = new CoordCache({\\n\\t\\t\\tels: this.cellEls.slice(0, this.colCnt), // only the first row\\n\\t\\t\\tisHorizontal: true\\n\\t\\t});\\n\\n\\t\\t// trigger dayRender with each cell's element\\n\\t\\tfor (row = 0; row < rowCnt; row++) {\\n\\t\\t\\tfor (col = 0; col < colCnt; col++) {\\n\\t\\t\\t\\tview.publiclyTrigger(\\n\\t\\t\\t\\t\\t'dayRender',\\n\\t\\t\\t\\t\\tnull,\\n\\t\\t\\t\\t\\tthis.getCellDate(row, col),\\n\\t\\t\\t\\t\\tthis.getCellEl(row, col)\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\tunrenderDates: function() {\\n\\t\\tthis.removeSegPopover();\\n\\t},\\n\\n\\n\\trenderBusinessHours: function() {\\n\\t\\tvar segs = this.buildBusinessHourSegs(true); // wholeDay=true\\n\\t\\tthis.renderFill('businessHours', segs, 'bgevent');\\n\\t},\\n\\n\\n\\tunrenderBusinessHours: function() {\\n\\t\\tthis.unrenderFill('businessHours');\\n\\t},\\n\\n\\n\\t// Generates the HTML for a single row, which is a div that wraps a table.\\n\\t// `row` is the row number.\\n\\trenderDayRowHtml: function(row, isRigid) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar classes = [ 'fc-row', 'fc-week', view.widgetContentClass ];\\n\\n\\t\\tif (isRigid) {\\n\\t\\t\\tclasses.push('fc-rigid');\\n\\t\\t}\\n\\n\\t\\treturn '' +\\n\\t\\t\\t'<div class=\\\"' + classes.join(' ') + '\\\">' +\\n\\t\\t\\t\\t'<div class=\\\"fc-bg\\\">' +\\n\\t\\t\\t\\t\\t'<table>' +\\n\\t\\t\\t\\t\\t\\tthis.renderBgTrHtml(row) +\\n\\t\\t\\t\\t\\t'</table>' +\\n\\t\\t\\t\\t'</div>' +\\n\\t\\t\\t\\t'<div class=\\\"fc-content-skeleton\\\">' +\\n\\t\\t\\t\\t\\t'<table>' +\\n\\t\\t\\t\\t\\t\\t(this.numbersVisible ?\\n\\t\\t\\t\\t\\t\\t\\t'<thead>' +\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.renderNumberTrHtml(row) +\\n\\t\\t\\t\\t\\t\\t\\t'</thead>' :\\n\\t\\t\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t\\t'</table>' +\\n\\t\\t\\t\\t'</div>' +\\n\\t\\t\\t'</div>';\\n\\t},\\n\\n\\n\\t/* Grid Number Rendering\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderNumberTrHtml: function(row) {\\n\\t\\treturn '' +\\n\\t\\t\\t'<tr>' +\\n\\t\\t\\t\\t(this.isRTL ? '' : this.renderNumberIntroHtml(row)) +\\n\\t\\t\\t\\tthis.renderNumberCellsHtml(row) +\\n\\t\\t\\t\\t(this.isRTL ? this.renderNumberIntroHtml(row) : '') +\\n\\t\\t\\t'</tr>';\\n\\t},\\n\\n\\n\\trenderNumberIntroHtml: function(row) {\\n\\t\\treturn this.renderIntroHtml();\\n\\t},\\n\\n\\n\\trenderNumberCellsHtml: function(row) {\\n\\t\\tvar htmls = [];\\n\\t\\tvar col, date;\\n\\n\\t\\tfor (col = 0; col < this.colCnt; col++) {\\n\\t\\t\\tdate = this.getCellDate(row, col);\\n\\t\\t\\thtmls.push(this.renderNumberCellHtml(date));\\n\\t\\t}\\n\\n\\t\\treturn htmls.join('');\\n\\t},\\n\\n\\n\\t// Generates the HTML for the <td>s of the \\\"number\\\" row in the DayGrid's content skeleton.\\n\\t// The number row will only exist if either day numbers or week numbers are turned on.\\n\\trenderNumberCellHtml: function(date) {\\n\\t\\tvar html = '';\\n\\t\\tvar classes;\\n\\t\\tvar weekCalcFirstDoW;\\n\\n\\t\\tif (!this.view.dayNumbersVisible && !this.view.cellWeekNumbersVisible) {\\n\\t\\t\\t// no numbers in day cell (week number must be along the side)\\n\\t\\t\\treturn '<td/>'; //  will create an empty space above events :(\\n\\t\\t}\\n\\n\\t\\tclasses = this.getDayClasses(date);\\n\\t\\tclasses.unshift('fc-day-top');\\n\\n\\t\\tif (this.view.cellWeekNumbersVisible) {\\n\\t\\t\\t// To determine the day of week number change under ISO, we cannot\\n\\t\\t\\t// rely on moment.js methods such as firstDayOfWeek() or weekday(),\\n\\t\\t\\t// because they rely on the locale's dow (possibly overridden by\\n\\t\\t\\t// our firstDay option), which may not be Monday. We cannot change\\n\\t\\t\\t// dow, because that would affect the calendar start day as well.\\n\\t\\t\\tif (date._locale._fullCalendar_weekCalc === 'ISO') {\\n\\t\\t\\t\\tweekCalcFirstDoW = 1;  // Monday by ISO 8601 definition\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tweekCalcFirstDoW = date._locale.firstDayOfWeek();\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\thtml += '<td class=\\\"' + classes.join(' ') + '\\\" data-date=\\\"' + date.format() + '\\\">';\\n\\n\\t\\tif (this.view.cellWeekNumbersVisible && (date.day() == weekCalcFirstDoW)) {\\n\\t\\t\\thtml += this.view.buildGotoAnchorHtml(\\n\\t\\t\\t\\t{ date: date, type: 'week' },\\n\\t\\t\\t\\t{ 'class': 'fc-week-number' },\\n\\t\\t\\t\\tdate.format('w') // inner HTML\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\tif (this.view.dayNumbersVisible) {\\n\\t\\t\\thtml += this.view.buildGotoAnchorHtml(\\n\\t\\t\\t\\tdate,\\n\\t\\t\\t\\t{ 'class': 'fc-day-number' },\\n\\t\\t\\t\\tdate.date() // inner HTML\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\thtml += '</td>';\\n\\n\\t\\treturn html;\\n\\t},\\n\\n\\n\\t/* Options\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Computes a default event time formatting string if `timeFormat` is not explicitly defined\\n\\tcomputeEventTimeFormat: function() {\\n\\t\\treturn this.view.opt('extraSmallTimeFormat'); // like \\\"6p\\\" or \\\"6:30p\\\"\\n\\t},\\n\\n\\n\\t// Computes a default `displayEventEnd` value if one is not expliclty defined\\n\\tcomputeDisplayEventEnd: function() {\\n\\t\\treturn this.colCnt == 1; // we'll likely have space if there's only one day\\n\\t},\\n\\n\\n\\t/* Dates\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trangeUpdated: function() {\\n\\t\\tthis.updateDayTable();\\n\\t},\\n\\n\\n\\t// Slices up the given span (unzoned start/end with other misc data) into an array of segments\\n\\tspanToSegs: function(span) {\\n\\t\\tvar segs = this.sliceRangeByRow(span);\\n\\t\\tvar i, seg;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\t\\t\\tif (this.isRTL) {\\n\\t\\t\\t\\tseg.leftCol = this.daysPerRow - 1 - seg.lastRowDayIndex;\\n\\t\\t\\t\\tseg.rightCol = this.daysPerRow - 1 - seg.firstRowDayIndex;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tseg.leftCol = seg.firstRowDayIndex;\\n\\t\\t\\t\\tseg.rightCol = seg.lastRowDayIndex;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t/* Hit System\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tprepareHits: function() {\\n\\t\\tthis.colCoordCache.build();\\n\\t\\tthis.rowCoordCache.build();\\n\\t\\tthis.rowCoordCache.bottoms[this.rowCnt - 1] += this.bottomCoordPadding; // hack\\n\\t},\\n\\n\\n\\treleaseHits: function() {\\n\\t\\tthis.colCoordCache.clear();\\n\\t\\tthis.rowCoordCache.clear();\\n\\t},\\n\\n\\n\\tqueryHit: function(leftOffset, topOffset) {\\n\\t\\tif (this.colCoordCache.isLeftInBounds(leftOffset) && this.rowCoordCache.isTopInBounds(topOffset)) {\\n\\t\\t\\tvar col = this.colCoordCache.getHorizontalIndex(leftOffset);\\n\\t\\t\\tvar row = this.rowCoordCache.getVerticalIndex(topOffset);\\n\\n\\t\\t\\tif (row != null && col != null) {\\n\\t\\t\\t\\treturn this.getCellHit(row, col);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\tgetHitSpan: function(hit) {\\n\\t\\treturn this.getCellRange(hit.row, hit.col);\\n\\t},\\n\\n\\n\\tgetHitEl: function(hit) {\\n\\t\\treturn this.getCellEl(hit.row, hit.col);\\n\\t},\\n\\n\\n\\t/* Cell System\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\t// FYI: the first column is the leftmost column, regardless of date\\n\\n\\n\\tgetCellHit: function(row, col) {\\n\\t\\treturn {\\n\\t\\t\\trow: row,\\n\\t\\t\\tcol: col,\\n\\t\\t\\tcomponent: this, // needed unfortunately :(\\n\\t\\t\\tleft: this.colCoordCache.getLeftOffset(col),\\n\\t\\t\\tright: this.colCoordCache.getRightOffset(col),\\n\\t\\t\\ttop: this.rowCoordCache.getTopOffset(row),\\n\\t\\t\\tbottom: this.rowCoordCache.getBottomOffset(row)\\n\\t\\t};\\n\\t},\\n\\n\\n\\tgetCellEl: function(row, col) {\\n\\t\\treturn this.cellEls.eq(row * this.colCnt + col);\\n\\t},\\n\\n\\n\\t/* Event Drag Visualization\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\t// TODO: move to DayGrid.event, similar to what we did with Grid's drag methods\\n\\n\\n\\t// Renders a visual indication of an event or external element being dragged.\\n\\t// `eventLocation` has zoned start and end (optional)\\n\\trenderDrag: function(eventLocation, seg) {\\n\\n\\t\\t// always render a highlight underneath\\n\\t\\tthis.renderHighlight(this.eventToSpan(eventLocation));\\n\\n\\t\\t// if a segment from the same calendar but another component is being dragged, render a helper event\\n\\t\\tif (seg && seg.component !== this) {\\n\\t\\t\\treturn this.renderEventLocationHelper(eventLocation, seg); // returns mock event elements\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Unrenders any visual indication of a hovering event\\n\\tunrenderDrag: function() {\\n\\t\\tthis.unrenderHighlight();\\n\\t\\tthis.unrenderHelper();\\n\\t},\\n\\n\\n\\t/* Event Resize Visualization\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of an event being resized\\n\\trenderEventResize: function(eventLocation, seg) {\\n\\t\\tthis.renderHighlight(this.eventToSpan(eventLocation));\\n\\t\\treturn this.renderEventLocationHelper(eventLocation, seg); // returns mock event elements\\n\\t},\\n\\n\\n\\t// Unrenders a visual indication of an event being resized\\n\\tunrenderEventResize: function() {\\n\\t\\tthis.unrenderHighlight();\\n\\t\\tthis.unrenderHelper();\\n\\t},\\n\\n\\n\\t/* Event Helper\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a mock \\\"helper\\\" event. `sourceSeg` is the associated internal segment object. It can be null.\\n\\trenderHelper: function(event, sourceSeg) {\\n\\t\\tvar helperNodes = [];\\n\\t\\tvar segs = this.eventToSegs(event);\\n\\t\\tvar rowStructs;\\n\\n\\t\\tsegs = this.renderFgSegEls(segs); // assigns each seg's el and returns a subset of segs that were rendered\\n\\t\\trowStructs = this.renderSegRows(segs);\\n\\n\\t\\t// inject each new event skeleton into each associated row\\n\\t\\tthis.rowEls.each(function(row, rowNode) {\\n\\t\\t\\tvar rowEl = $(rowNode); // the .fc-row\\n\\t\\t\\tvar skeletonEl = $('<div class=\\\"fc-helper-skeleton\\\"><table/></div>'); // will be absolutely positioned\\n\\t\\t\\tvar skeletonTop;\\n\\n\\t\\t\\t// If there is an original segment, match the top position. Otherwise, put it at the row's top level\\n\\t\\t\\tif (sourceSeg && sourceSeg.row === row) {\\n\\t\\t\\t\\tskeletonTop = sourceSeg.el.position().top;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tskeletonTop = rowEl.find('.fc-content-skeleton tbody').position().top;\\n\\t\\t\\t}\\n\\n\\t\\t\\tskeletonEl.css('top', skeletonTop)\\n\\t\\t\\t\\t.find('table')\\n\\t\\t\\t\\t\\t.append(rowStructs[row].tbodyEl);\\n\\n\\t\\t\\trowEl.append(skeletonEl);\\n\\t\\t\\thelperNodes.push(skeletonEl[0]);\\n\\t\\t});\\n\\n\\t\\treturn ( // must return the elements rendered\\n\\t\\t\\tthis.helperEls = $(helperNodes) // array -> jQuery set\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Unrenders any visual indication of a mock helper event\\n\\tunrenderHelper: function() {\\n\\t\\tif (this.helperEls) {\\n\\t\\t\\tthis.helperEls.remove();\\n\\t\\t\\tthis.helperEls = null;\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Fill System (highlight, background events, business hours)\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tfillSegTag: 'td', // override the default tag name\\n\\n\\n\\t// Renders a set of rectangles over the given segments of days.\\n\\t// Only returns segments that successfully rendered.\\n\\trenderFill: function(type, segs, className) {\\n\\t\\tvar nodes = [];\\n\\t\\tvar i, seg;\\n\\t\\tvar skeletonEl;\\n\\n\\t\\tsegs = this.renderFillSegEls(type, segs); // assignes `.el` to each seg. returns successfully rendered segs\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\t\\t\\tskeletonEl = this.renderFillRow(type, seg, className);\\n\\t\\t\\tthis.rowEls.eq(seg.row).append(skeletonEl);\\n\\t\\t\\tnodes.push(skeletonEl[0]);\\n\\t\\t}\\n\\n\\t\\tthis.elsByFill[type] = $(nodes);\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t// Generates the HTML needed for one row of a fill. Requires the seg's el to be rendered.\\n\\trenderFillRow: function(type, seg, className) {\\n\\t\\tvar colCnt = this.colCnt;\\n\\t\\tvar startCol = seg.leftCol;\\n\\t\\tvar endCol = seg.rightCol + 1;\\n\\t\\tvar skeletonEl;\\n\\t\\tvar trEl;\\n\\n\\t\\tclassName = className || type.toLowerCase();\\n\\n\\t\\tskeletonEl = $(\\n\\t\\t\\t'<div class=\\\"fc-' + className + '-skeleton\\\">' +\\n\\t\\t\\t\\t'<table><tr/></table>' +\\n\\t\\t\\t'</div>'\\n\\t\\t);\\n\\t\\ttrEl = skeletonEl.find('tr');\\n\\n\\t\\tif (startCol > 0) {\\n\\t\\t\\ttrEl.append('<td colspan=\\\"' + startCol + '\\\"/>');\\n\\t\\t}\\n\\n\\t\\ttrEl.append(\\n\\t\\t\\tseg.el.attr('colspan', endCol - startCol)\\n\\t\\t);\\n\\n\\t\\tif (endCol < colCnt) {\\n\\t\\t\\ttrEl.append('<td colspan=\\\"' + (colCnt - endCol) + '\\\"/>');\\n\\t\\t}\\n\\n\\t\\tthis.bookendCells(trEl);\\n\\n\\t\\treturn skeletonEl;\\n\\t}\\n\\n});\\n\\n;;\\n\\n/* Event-rendering methods for the DayGrid class\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nDayGrid.mixin({\\n\\n\\trowStructs: null, // an array of objects, each holding information about a row's foreground event-rendering\\n\\n\\n\\t// Unrenders all events currently rendered on the grid\\n\\tunrenderEvents: function() {\\n\\t\\tthis.removeSegPopover(); // removes the \\\"more..\\\" events popover\\n\\t\\tGrid.prototype.unrenderEvents.apply(this, arguments); // calls the super-method\\n\\t},\\n\\n\\n\\t// Retrieves all rendered segment objects currently rendered on the grid\\n\\tgetEventSegs: function() {\\n\\t\\treturn Grid.prototype.getEventSegs.call(this) // get the segments from the super-method\\n\\t\\t\\t.concat(this.popoverSegs || []); // append the segments from the \\\"more...\\\" popover\\n\\t},\\n\\n\\n\\t// Renders the given background event segments onto the grid\\n\\trenderBgSegs: function(segs) {\\n\\n\\t\\t// don't render timed background events\\n\\t\\tvar allDaySegs = $.grep(segs, function(seg) {\\n\\t\\t\\treturn seg.event.allDay;\\n\\t\\t});\\n\\n\\t\\treturn Grid.prototype.renderBgSegs.call(this, allDaySegs); // call the super-method\\n\\t},\\n\\n\\n\\t// Renders the given foreground event segments onto the grid\\n\\trenderFgSegs: function(segs) {\\n\\t\\tvar rowStructs;\\n\\n\\t\\t// render an `.el` on each seg\\n\\t\\t// returns a subset of the segs. segs that were actually rendered\\n\\t\\tsegs = this.renderFgSegEls(segs);\\n\\n\\t\\trowStructs = this.rowStructs = this.renderSegRows(segs);\\n\\n\\t\\t// append to each row's content skeleton\\n\\t\\tthis.rowEls.each(function(i, rowNode) {\\n\\t\\t\\t$(rowNode).find('.fc-content-skeleton > table').append(\\n\\t\\t\\t\\trowStructs[i].tbodyEl\\n\\t\\t\\t);\\n\\t\\t});\\n\\n\\t\\treturn segs; // return only the segs that were actually rendered\\n\\t},\\n\\n\\n\\t// Unrenders all currently rendered foreground event segments\\n\\tunrenderFgSegs: function() {\\n\\t\\tvar rowStructs = this.rowStructs || [];\\n\\t\\tvar rowStruct;\\n\\n\\t\\twhile ((rowStruct = rowStructs.pop())) {\\n\\t\\t\\trowStruct.tbodyEl.remove();\\n\\t\\t}\\n\\n\\t\\tthis.rowStructs = null;\\n\\t},\\n\\n\\n\\t// Uses the given events array to generate <tbody> elements that should be appended to each row's content skeleton.\\n\\t// Returns an array of rowStruct objects (see the bottom of `renderSegRow`).\\n\\t// PRECONDITION: each segment shoud already have a rendered and assigned `.el`\\n\\trenderSegRows: function(segs) {\\n\\t\\tvar rowStructs = [];\\n\\t\\tvar segRows;\\n\\t\\tvar row;\\n\\n\\t\\tsegRows = this.groupSegRows(segs); // group into nested arrays\\n\\n\\t\\t// iterate each row of segment groupings\\n\\t\\tfor (row = 0; row < segRows.length; row++) {\\n\\t\\t\\trowStructs.push(\\n\\t\\t\\t\\tthis.renderSegRow(row, segRows[row])\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\treturn rowStructs;\\n\\t},\\n\\n\\n\\t// Builds the HTML to be used for the default element for an individual segment\\n\\tfgSegHtml: function(seg, disableResizing) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar event = seg.event;\\n\\t\\tvar isDraggable = view.isEventDraggable(event);\\n\\t\\tvar isResizableFromStart = !disableResizing && event.allDay &&\\n\\t\\t\\tseg.isStart && view.isEventResizableFromStart(event);\\n\\t\\tvar isResizableFromEnd = !disableResizing && event.allDay &&\\n\\t\\t\\tseg.isEnd && view.isEventResizableFromEnd(event);\\n\\t\\tvar classes = this.getSegClasses(seg, isDraggable, isResizableFromStart || isResizableFromEnd);\\n\\t\\tvar skinCss = cssToStr(this.getSegSkinCss(seg));\\n\\t\\tvar timeHtml = '';\\n\\t\\tvar timeText;\\n\\t\\tvar titleHtml;\\n\\n\\t\\tclasses.unshift('fc-day-grid-event', 'fc-h-event');\\n\\n\\t\\t// Only display a timed events time if it is the starting segment\\n\\t\\tif (seg.isStart) {\\n\\t\\t\\ttimeText = this.getEventTimeText(event);\\n\\t\\t\\tif (timeText) {\\n\\t\\t\\t\\ttimeHtml = '<span class=\\\"fc-time\\\">' + htmlEscape(timeText) + '</span>';\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\ttitleHtml =\\n\\t\\t\\t'<span class=\\\"fc-title\\\">' +\\n\\t\\t\\t\\t(htmlEscape(event.title || '') || '&nbsp;') + // we always want one line of height\\n\\t\\t\\t'</span>';\\n\\t\\t\\n\\t\\treturn '<a class=\\\"' + classes.join(' ') + '\\\"' +\\n\\t\\t\\t\\t(event.url ?\\n\\t\\t\\t\\t\\t' href=\\\"' + htmlEscape(event.url) + '\\\"' :\\n\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t(skinCss ?\\n\\t\\t\\t\\t\\t' style=\\\"' + skinCss + '\\\"' :\\n\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t) +\\n\\t\\t\\t'>' +\\n\\t\\t\\t\\t'<div class=\\\"fc-content\\\">' +\\n\\t\\t\\t\\t\\t(this.isRTL ?\\n\\t\\t\\t\\t\\t\\ttitleHtml + ' ' + timeHtml : // put a natural space in between\\n\\t\\t\\t\\t\\t\\ttimeHtml + ' ' + titleHtml   //\\n\\t\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t'</div>' +\\n\\t\\t\\t\\t(isResizableFromStart ?\\n\\t\\t\\t\\t\\t'<div class=\\\"fc-resizer fc-start-resizer\\\" />' :\\n\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t(isResizableFromEnd ?\\n\\t\\t\\t\\t\\t'<div class=\\\"fc-resizer fc-end-resizer\\\" />' :\\n\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t) +\\n\\t\\t\\t'</a>';\\n\\t},\\n\\n\\n\\t// Given a row # and an array of segments all in the same row, render a <tbody> element, a skeleton that contains\\n\\t// the segments. Returns object with a bunch of internal data about how the render was calculated.\\n\\t// NOTE: modifies rowSegs\\n\\trenderSegRow: function(row, rowSegs) {\\n\\t\\tvar colCnt = this.colCnt;\\n\\t\\tvar segLevels = this.buildSegLevels(rowSegs); // group into sub-arrays of levels\\n\\t\\tvar levelCnt = Math.max(1, segLevels.length); // ensure at least one level\\n\\t\\tvar tbody = $('<tbody/>');\\n\\t\\tvar segMatrix = []; // lookup for which segments are rendered into which level+col cells\\n\\t\\tvar cellMatrix = []; // lookup for all <td> elements of the level+col matrix\\n\\t\\tvar loneCellMatrix = []; // lookup for <td> elements that only take up a single column\\n\\t\\tvar i, levelSegs;\\n\\t\\tvar col;\\n\\t\\tvar tr;\\n\\t\\tvar j, seg;\\n\\t\\tvar td;\\n\\n\\t\\t// populates empty cells from the current column (`col`) to `endCol`\\n\\t\\tfunction emptyCellsUntil(endCol) {\\n\\t\\t\\twhile (col < endCol) {\\n\\t\\t\\t\\t// try to grab a cell from the level above and extend its rowspan. otherwise, create a fresh cell\\n\\t\\t\\t\\ttd = (loneCellMatrix[i - 1] || [])[col];\\n\\t\\t\\t\\tif (td) {\\n\\t\\t\\t\\t\\ttd.attr(\\n\\t\\t\\t\\t\\t\\t'rowspan',\\n\\t\\t\\t\\t\\t\\tparseInt(td.attr('rowspan') || 1, 10) + 1\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\ttd = $('<td/>');\\n\\t\\t\\t\\t\\ttr.append(td);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tcellMatrix[i][col] = td;\\n\\t\\t\\t\\tloneCellMatrix[i][col] = td;\\n\\t\\t\\t\\tcol++;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tfor (i = 0; i < levelCnt; i++) { // iterate through all levels\\n\\t\\t\\tlevelSegs = segLevels[i];\\n\\t\\t\\tcol = 0;\\n\\t\\t\\ttr = $('<tr/>');\\n\\n\\t\\t\\tsegMatrix.push([]);\\n\\t\\t\\tcellMatrix.push([]);\\n\\t\\t\\tloneCellMatrix.push([]);\\n\\n\\t\\t\\t// levelCnt might be 1 even though there are no actual levels. protect against this.\\n\\t\\t\\t// this single empty row is useful for styling.\\n\\t\\t\\tif (levelSegs) {\\n\\t\\t\\t\\tfor (j = 0; j < levelSegs.length; j++) { // iterate through segments in level\\n\\t\\t\\t\\t\\tseg = levelSegs[j];\\n\\n\\t\\t\\t\\t\\temptyCellsUntil(seg.leftCol);\\n\\n\\t\\t\\t\\t\\t// create a container that occupies or more columns. append the event element.\\n\\t\\t\\t\\t\\ttd = $('<td class=\\\"fc-event-container\\\"/>').append(seg.el);\\n\\t\\t\\t\\t\\tif (seg.leftCol != seg.rightCol) {\\n\\t\\t\\t\\t\\t\\ttd.attr('colspan', seg.rightCol - seg.leftCol + 1);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse { // a single-column segment\\n\\t\\t\\t\\t\\t\\tloneCellMatrix[i][col] = td;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\twhile (col <= seg.rightCol) {\\n\\t\\t\\t\\t\\t\\tcellMatrix[i][col] = td;\\n\\t\\t\\t\\t\\t\\tsegMatrix[i][col] = seg;\\n\\t\\t\\t\\t\\t\\tcol++;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\ttr.append(td);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\temptyCellsUntil(colCnt); // finish off the row\\n\\t\\t\\tthis.bookendCells(tr);\\n\\t\\t\\ttbody.append(tr);\\n\\t\\t}\\n\\n\\t\\treturn { // a \\\"rowStruct\\\"\\n\\t\\t\\trow: row, // the row number\\n\\t\\t\\ttbodyEl: tbody,\\n\\t\\t\\tcellMatrix: cellMatrix,\\n\\t\\t\\tsegMatrix: segMatrix,\\n\\t\\t\\tsegLevels: segLevels,\\n\\t\\t\\tsegs: rowSegs\\n\\t\\t};\\n\\t},\\n\\n\\n\\t// Stacks a flat array of segments, which are all assumed to be in the same row, into subarrays of vertical levels.\\n\\t// NOTE: modifies segs\\n\\tbuildSegLevels: function(segs) {\\n\\t\\tvar levels = [];\\n\\t\\tvar i, seg;\\n\\t\\tvar j;\\n\\n\\t\\t// Give preference to elements with certain criteria, so they have\\n\\t\\t// a chance to be closer to the top.\\n\\t\\tthis.sortEventSegs(segs);\\n\\t\\t\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\n\\t\\t\\t// loop through levels, starting with the topmost, until the segment doesn't collide with other segments\\n\\t\\t\\tfor (j = 0; j < levels.length; j++) {\\n\\t\\t\\t\\tif (!isDaySegCollision(seg, levels[j])) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t// `j` now holds the desired subrow index\\n\\t\\t\\tseg.level = j;\\n\\n\\t\\t\\t// create new level array if needed and append segment\\n\\t\\t\\t(levels[j] || (levels[j] = [])).push(seg);\\n\\t\\t}\\n\\n\\t\\t// order segments left-to-right. very important if calendar is RTL\\n\\t\\tfor (j = 0; j < levels.length; j++) {\\n\\t\\t\\tlevels[j].sort(compareDaySegCols);\\n\\t\\t}\\n\\n\\t\\treturn levels;\\n\\t},\\n\\n\\n\\t// Given a flat array of segments, return an array of sub-arrays, grouped by each segment's row\\n\\tgroupSegRows: function(segs) {\\n\\t\\tvar segRows = [];\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < this.rowCnt; i++) {\\n\\t\\t\\tsegRows.push([]);\\n\\t\\t}\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tsegRows[segs[i].row].push(segs[i]);\\n\\t\\t}\\n\\n\\t\\treturn segRows;\\n\\t}\\n\\n});\\n\\n\\n// Computes whether two segments' columns collide. They are assumed to be in the same row.\\nfunction isDaySegCollision(seg, otherSegs) {\\n\\tvar i, otherSeg;\\n\\n\\tfor (i = 0; i < otherSegs.length; i++) {\\n\\t\\totherSeg = otherSegs[i];\\n\\n\\t\\tif (\\n\\t\\t\\totherSeg.leftCol <= seg.rightCol &&\\n\\t\\t\\totherSeg.rightCol >= seg.leftCol\\n\\t\\t) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t}\\n\\n\\treturn false;\\n}\\n\\n\\n// A cmp function for determining the leftmost event\\nfunction compareDaySegCols(a, b) {\\n\\treturn a.leftCol - b.leftCol;\\n}\\n\\n;;\\n\\n/* Methods relate to limiting the number events for a given day on a DayGrid\\n----------------------------------------------------------------------------------------------------------------------*/\\n// NOTE: all the segs being passed around in here are foreground segs\\n\\nDayGrid.mixin({\\n\\n\\tsegPopover: null, // the Popover that holds events that can't fit in a cell. null when not visible\\n\\tpopoverSegs: null, // an array of segment objects that the segPopover holds. null when not visible\\n\\n\\n\\tremoveSegPopover: function() {\\n\\t\\tif (this.segPopover) {\\n\\t\\t\\tthis.segPopover.hide(); // in handler, will call segPopover's removeElement\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Limits the number of \\\"levels\\\" (vertically stacking layers of events) for each row of the grid.\\n\\t// `levelLimit` can be false (don't limit), a number, or true (should be computed).\\n\\tlimitRows: function(levelLimit) {\\n\\t\\tvar rowStructs = this.rowStructs || [];\\n\\t\\tvar row; // row #\\n\\t\\tvar rowLevelLimit;\\n\\n\\t\\tfor (row = 0; row < rowStructs.length; row++) {\\n\\t\\t\\tthis.unlimitRow(row);\\n\\n\\t\\t\\tif (!levelLimit) {\\n\\t\\t\\t\\trowLevelLimit = false;\\n\\t\\t\\t}\\n\\t\\t\\telse if (typeof levelLimit === 'number') {\\n\\t\\t\\t\\trowLevelLimit = levelLimit;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\trowLevelLimit = this.computeRowLevelLimit(row);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (rowLevelLimit !== false) {\\n\\t\\t\\t\\tthis.limitRow(row, rowLevelLimit);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Computes the number of levels a row will accomodate without going outside its bounds.\\n\\t// Assumes the row is \\\"rigid\\\" (maintains a constant height regardless of what is inside).\\n\\t// `row` is the row number.\\n\\tcomputeRowLevelLimit: function(row) {\\n\\t\\tvar rowEl = this.rowEls.eq(row); // the containing \\\"fake\\\" row div\\n\\t\\tvar rowHeight = rowEl.height(); // TODO: cache somehow?\\n\\t\\tvar trEls = this.rowStructs[row].tbodyEl.children();\\n\\t\\tvar i, trEl;\\n\\t\\tvar trHeight;\\n\\n\\t\\tfunction iterInnerHeights(i, childNode) {\\n\\t\\t\\ttrHeight = Math.max(trHeight, $(childNode).outerHeight());\\n\\t\\t}\\n\\n\\t\\t// Reveal one level <tr> at a time and stop when we find one out of bounds\\n\\t\\tfor (i = 0; i < trEls.length; i++) {\\n\\t\\t\\ttrEl = trEls.eq(i).removeClass('fc-limited'); // reset to original state (reveal)\\n\\n\\t\\t\\t// with rowspans>1 and IE8, trEl.outerHeight() would return the height of the largest cell,\\n\\t\\t\\t// so instead, find the tallest inner content element.\\n\\t\\t\\ttrHeight = 0;\\n\\t\\t\\ttrEl.find('> td > :first-child').each(iterInnerHeights);\\n\\n\\t\\t\\tif (trEl.position().top + trHeight > rowHeight) {\\n\\t\\t\\t\\treturn i;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn false; // should not limit at all\\n\\t},\\n\\n\\n\\t// Limits the given grid row to the maximum number of levels and injects \\\"more\\\" links if necessary.\\n\\t// `row` is the row number.\\n\\t// `levelLimit` is a number for the maximum (inclusive) number of levels allowed.\\n\\tlimitRow: function(row, levelLimit) {\\n\\t\\tvar _this = this;\\n\\t\\tvar rowStruct = this.rowStructs[row];\\n\\t\\tvar moreNodes = []; // array of \\\"more\\\" <a> links and <td> DOM nodes\\n\\t\\tvar col = 0; // col #, left-to-right (not chronologically)\\n\\t\\tvar levelSegs; // array of segment objects in the last allowable level, ordered left-to-right\\n\\t\\tvar cellMatrix; // a matrix (by level, then column) of all <td> jQuery elements in the row\\n\\t\\tvar limitedNodes; // array of temporarily hidden level <tr> and segment <td> DOM nodes\\n\\t\\tvar i, seg;\\n\\t\\tvar segsBelow; // array of segment objects below `seg` in the current `col`\\n\\t\\tvar totalSegsBelow; // total number of segments below `seg` in any of the columns `seg` occupies\\n\\t\\tvar colSegsBelow; // array of segment arrays, below seg, one for each column (offset from segs's first column)\\n\\t\\tvar td, rowspan;\\n\\t\\tvar segMoreNodes; // array of \\\"more\\\" <td> cells that will stand-in for the current seg's cell\\n\\t\\tvar j;\\n\\t\\tvar moreTd, moreWrap, moreLink;\\n\\n\\t\\t// Iterates through empty level cells and places \\\"more\\\" links inside if need be\\n\\t\\tfunction emptyCellsUntil(endCol) { // goes from current `col` to `endCol`\\n\\t\\t\\twhile (col < endCol) {\\n\\t\\t\\t\\tsegsBelow = _this.getCellSegs(row, col, levelLimit);\\n\\t\\t\\t\\tif (segsBelow.length) {\\n\\t\\t\\t\\t\\ttd = cellMatrix[levelLimit - 1][col];\\n\\t\\t\\t\\t\\tmoreLink = _this.renderMoreLink(row, col, segsBelow);\\n\\t\\t\\t\\t\\tmoreWrap = $('<div/>').append(moreLink);\\n\\t\\t\\t\\t\\ttd.append(moreWrap);\\n\\t\\t\\t\\t\\tmoreNodes.push(moreWrap[0]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tcol++;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (levelLimit && levelLimit < rowStruct.segLevels.length) { // is it actually over the limit?\\n\\t\\t\\tlevelSegs = rowStruct.segLevels[levelLimit - 1];\\n\\t\\t\\tcellMatrix = rowStruct.cellMatrix;\\n\\n\\t\\t\\tlimitedNodes = rowStruct.tbodyEl.children().slice(levelLimit) // get level <tr> elements past the limit\\n\\t\\t\\t\\t.addClass('fc-limited').get(); // hide elements and get a simple DOM-nodes array\\n\\n\\t\\t\\t// iterate though segments in the last allowable level\\n\\t\\t\\tfor (i = 0; i < levelSegs.length; i++) {\\n\\t\\t\\t\\tseg = levelSegs[i];\\n\\t\\t\\t\\temptyCellsUntil(seg.leftCol); // process empty cells before the segment\\n\\n\\t\\t\\t\\t// determine *all* segments below `seg` that occupy the same columns\\n\\t\\t\\t\\tcolSegsBelow = [];\\n\\t\\t\\t\\ttotalSegsBelow = 0;\\n\\t\\t\\t\\twhile (col <= seg.rightCol) {\\n\\t\\t\\t\\t\\tsegsBelow = this.getCellSegs(row, col, levelLimit);\\n\\t\\t\\t\\t\\tcolSegsBelow.push(segsBelow);\\n\\t\\t\\t\\t\\ttotalSegsBelow += segsBelow.length;\\n\\t\\t\\t\\t\\tcol++;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (totalSegsBelow) { // do we need to replace this segment with one or many \\\"more\\\" links?\\n\\t\\t\\t\\t\\ttd = cellMatrix[levelLimit - 1][seg.leftCol]; // the segment's parent cell\\n\\t\\t\\t\\t\\trowspan = td.attr('rowspan') || 1;\\n\\t\\t\\t\\t\\tsegMoreNodes = [];\\n\\n\\t\\t\\t\\t\\t// make a replacement <td> for each column the segment occupies. will be one for each colspan\\n\\t\\t\\t\\t\\tfor (j = 0; j < colSegsBelow.length; j++) {\\n\\t\\t\\t\\t\\t\\tmoreTd = $('<td class=\\\"fc-more-cell\\\"/>').attr('rowspan', rowspan);\\n\\t\\t\\t\\t\\t\\tsegsBelow = colSegsBelow[j];\\n\\t\\t\\t\\t\\t\\tmoreLink = this.renderMoreLink(\\n\\t\\t\\t\\t\\t\\t\\trow,\\n\\t\\t\\t\\t\\t\\t\\tseg.leftCol + j,\\n\\t\\t\\t\\t\\t\\t\\t[ seg ].concat(segsBelow) // count seg as hidden too\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tmoreWrap = $('<div/>').append(moreLink);\\n\\t\\t\\t\\t\\t\\tmoreTd.append(moreWrap);\\n\\t\\t\\t\\t\\t\\tsegMoreNodes.push(moreTd[0]);\\n\\t\\t\\t\\t\\t\\tmoreNodes.push(moreTd[0]);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\ttd.addClass('fc-limited').after($(segMoreNodes)); // hide original <td> and inject replacements\\n\\t\\t\\t\\t\\tlimitedNodes.push(td[0]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\temptyCellsUntil(this.colCnt); // finish off the level\\n\\t\\t\\trowStruct.moreEls = $(moreNodes); // for easy undoing later\\n\\t\\t\\trowStruct.limitedEls = $(limitedNodes); // for easy undoing later\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Reveals all levels and removes all \\\"more\\\"-related elements for a grid's row.\\n\\t// `row` is a row number.\\n\\tunlimitRow: function(row) {\\n\\t\\tvar rowStruct = this.rowStructs[row];\\n\\n\\t\\tif (rowStruct.moreEls) {\\n\\t\\t\\trowStruct.moreEls.remove();\\n\\t\\t\\trowStruct.moreEls = null;\\n\\t\\t}\\n\\n\\t\\tif (rowStruct.limitedEls) {\\n\\t\\t\\trowStruct.limitedEls.removeClass('fc-limited');\\n\\t\\t\\trowStruct.limitedEls = null;\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Renders an <a> element that represents hidden event element for a cell.\\n\\t// Responsible for attaching click handler as well.\\n\\trenderMoreLink: function(row, col, hiddenSegs) {\\n\\t\\tvar _this = this;\\n\\t\\tvar view = this.view;\\n\\n\\t\\treturn $('<a class=\\\"fc-more\\\"/>')\\n\\t\\t\\t.text(\\n\\t\\t\\t\\tthis.getMoreLinkText(hiddenSegs.length)\\n\\t\\t\\t)\\n\\t\\t\\t.on('click', function(ev) {\\n\\t\\t\\t\\tvar clickOption = view.opt('eventLimitClick');\\n\\t\\t\\t\\tvar date = _this.getCellDate(row, col);\\n\\t\\t\\t\\tvar moreEl = $(this);\\n\\t\\t\\t\\tvar dayEl = _this.getCellEl(row, col);\\n\\t\\t\\t\\tvar allSegs = _this.getCellSegs(row, col);\\n\\n\\t\\t\\t\\t// rescope the segments to be within the cell's date\\n\\t\\t\\t\\tvar reslicedAllSegs = _this.resliceDaySegs(allSegs, date);\\n\\t\\t\\t\\tvar reslicedHiddenSegs = _this.resliceDaySegs(hiddenSegs, date);\\n\\n\\t\\t\\t\\tif (typeof clickOption === 'function') {\\n\\t\\t\\t\\t\\t// the returned value can be an atomic option\\n\\t\\t\\t\\t\\tclickOption = view.publiclyTrigger('eventLimitClick', null, {\\n\\t\\t\\t\\t\\t\\tdate: date,\\n\\t\\t\\t\\t\\t\\tdayEl: dayEl,\\n\\t\\t\\t\\t\\t\\tmoreEl: moreEl,\\n\\t\\t\\t\\t\\t\\tsegs: reslicedAllSegs,\\n\\t\\t\\t\\t\\t\\thiddenSegs: reslicedHiddenSegs\\n\\t\\t\\t\\t\\t}, ev);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (clickOption === 'popover') {\\n\\t\\t\\t\\t\\t_this.showSegPopover(row, col, moreEl, reslicedAllSegs);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse if (typeof clickOption === 'string') { // a view name\\n\\t\\t\\t\\t\\tview.calendar.zoomTo(date, clickOption);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t},\\n\\n\\n\\t// Reveals the popover that displays all events within a cell\\n\\tshowSegPopover: function(row, col, moreLink, segs) {\\n\\t\\tvar _this = this;\\n\\t\\tvar view = this.view;\\n\\t\\tvar moreWrap = moreLink.parent(); // the <div> wrapper around the <a>\\n\\t\\tvar topEl; // the element we want to match the top coordinate of\\n\\t\\tvar options;\\n\\n\\t\\tif (this.rowCnt == 1) {\\n\\t\\t\\ttopEl = view.el; // will cause the popover to cover any sort of header\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\ttopEl = this.rowEls.eq(row); // will align with top of row\\n\\t\\t}\\n\\n\\t\\toptions = {\\n\\t\\t\\tclassName: 'fc-more-popover',\\n\\t\\t\\tcontent: this.renderSegPopoverContent(row, col, segs),\\n\\t\\t\\tparentEl: this.view.el, // attach to root of view. guarantees outside of scrollbars.\\n\\t\\t\\ttop: topEl.offset().top,\\n\\t\\t\\tautoHide: true, // when the user clicks elsewhere, hide the popover\\n\\t\\t\\tviewportConstrain: view.opt('popoverViewportConstrain'),\\n\\t\\t\\thide: function() {\\n\\t\\t\\t\\t// kill everything when the popover is hidden\\n\\t\\t\\t\\t// notify events to be removed\\n\\t\\t\\t\\tif (_this.popoverSegs) {\\n\\t\\t\\t\\t\\tvar seg;\\n\\t\\t\\t\\t\\tfor (var i = 0; i < _this.popoverSegs.length; ++i) {\\n\\t\\t\\t\\t\\t\\tseg = _this.popoverSegs[i];\\n\\t\\t\\t\\t\\t\\tview.publiclyTrigger('eventDestroy', seg.event, seg.event, seg.el);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t_this.segPopover.removeElement();\\n\\t\\t\\t\\t_this.segPopover = null;\\n\\t\\t\\t\\t_this.popoverSegs = null;\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\t// Determine horizontal coordinate.\\n\\t\\t// We use the moreWrap instead of the <td> to avoid border confusion.\\n\\t\\tif (this.isRTL) {\\n\\t\\t\\toptions.right = moreWrap.offset().left + moreWrap.outerWidth() + 1; // +1 to be over cell border\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\toptions.left = moreWrap.offset().left - 1; // -1 to be over cell border\\n\\t\\t}\\n\\n\\t\\tthis.segPopover = new Popover(options);\\n\\t\\tthis.segPopover.show();\\n\\n\\t\\t// the popover doesn't live within the grid's container element, and thus won't get the event\\n\\t\\t// delegated-handlers for free. attach event-related handlers to the popover.\\n\\t\\tthis.bindSegHandlersToEl(this.segPopover.el);\\n\\t},\\n\\n\\n\\t// Builds the inner DOM contents of the segment popover\\n\\trenderSegPopoverContent: function(row, col, segs) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar isTheme = view.opt('theme');\\n\\t\\tvar title = this.getCellDate(row, col).format(view.opt('dayPopoverFormat'));\\n\\t\\tvar content = $(\\n\\t\\t\\t'<div class=\\\"fc-header ' + view.widgetHeaderClass + '\\\">' +\\n\\t\\t\\t\\t'<span class=\\\"fc-close ' +\\n\\t\\t\\t\\t\\t(isTheme ? 'ui-icon ui-icon-closethick' : 'fc-icon fc-icon-x') +\\n\\t\\t\\t\\t'\\\"></span>' +\\n\\t\\t\\t\\t'<span class=\\\"fc-title\\\">' +\\n\\t\\t\\t\\t\\thtmlEscape(title) +\\n\\t\\t\\t\\t'</span>' +\\n\\t\\t\\t\\t'<div class=\\\"fc-clear\\\"/>' +\\n\\t\\t\\t'</div>' +\\n\\t\\t\\t'<div class=\\\"fc-body ' + view.widgetContentClass + '\\\">' +\\n\\t\\t\\t\\t'<div class=\\\"fc-event-container\\\"></div>' +\\n\\t\\t\\t'</div>'\\n\\t\\t);\\n\\t\\tvar segContainer = content.find('.fc-event-container');\\n\\t\\tvar i;\\n\\n\\t\\t// render each seg's `el` and only return the visible segs\\n\\t\\tsegs = this.renderFgSegEls(segs, true); // disableResizing=true\\n\\t\\tthis.popoverSegs = segs;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\n\\t\\t\\t// because segments in the popover are not part of a grid coordinate system, provide a hint to any\\n\\t\\t\\t// grids that want to do drag-n-drop about which cell it came from\\n\\t\\t\\tthis.prepareHits();\\n\\t\\t\\tsegs[i].hit = this.getCellHit(row, col);\\n\\t\\t\\tthis.releaseHits();\\n\\n\\t\\t\\tsegContainer.append(segs[i].el);\\n\\t\\t}\\n\\n\\t\\treturn content;\\n\\t},\\n\\n\\n\\t// Given the events within an array of segment objects, reslice them to be in a single day\\n\\tresliceDaySegs: function(segs, dayDate) {\\n\\n\\t\\t// build an array of the original events\\n\\t\\tvar events = $.map(segs, function(seg) {\\n\\t\\t\\treturn seg.event;\\n\\t\\t});\\n\\n\\t\\tvar dayStart = dayDate.clone();\\n\\t\\tvar dayEnd = dayStart.clone().add(1, 'days');\\n\\t\\tvar dayRange = { start: dayStart, end: dayEnd };\\n\\n\\t\\t// slice the events with a custom slicing function\\n\\t\\tsegs = this.eventsToSegs(\\n\\t\\t\\tevents,\\n\\t\\t\\tfunction(range) {\\n\\t\\t\\t\\tvar seg = intersectRanges(range, dayRange); // undefind if no intersection\\n\\t\\t\\t\\treturn seg ? [ seg ] : []; // must return an array of segments\\n\\t\\t\\t}\\n\\t\\t);\\n\\n\\t\\t// force an order because eventsToSegs doesn't guarantee one\\n\\t\\tthis.sortEventSegs(segs);\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t// Generates the text that should be inside a \\\"more\\\" link, given the number of events it represents\\n\\tgetMoreLinkText: function(num) {\\n\\t\\tvar opt = this.view.opt('eventLimitText');\\n\\n\\t\\tif (typeof opt === 'function') {\\n\\t\\t\\treturn opt(num);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn '+' + num + ' ' + opt;\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Returns segments within a given cell.\\n\\t// If `startLevel` is specified, returns only events including and below that level. Otherwise returns all segs.\\n\\tgetCellSegs: function(row, col, startLevel) {\\n\\t\\tvar segMatrix = this.rowStructs[row].segMatrix;\\n\\t\\tvar level = startLevel || 0;\\n\\t\\tvar segs = [];\\n\\t\\tvar seg;\\n\\n\\t\\twhile (level < segMatrix.length) {\\n\\t\\t\\tseg = segMatrix[level][col];\\n\\t\\t\\tif (seg) {\\n\\t\\t\\t\\tsegs.push(seg);\\n\\t\\t\\t}\\n\\t\\t\\tlevel++;\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t}\\n\\n});\\n\\n;;\\n\\n/* A component that renders one or more columns of vertical time slots\\n----------------------------------------------------------------------------------------------------------------------*/\\n// We mixin DayTable, even though there is only a single row of days\\n\\nvar TimeGrid = FC.TimeGrid = Grid.extend(DayTableMixin, {\\n\\n\\tslotDuration: null, // duration of a \\\"slot\\\", a distinct time segment on given day, visualized by lines\\n\\tsnapDuration: null, // granularity of time for dragging and selecting\\n\\tsnapsPerSlot: null,\\n\\tminTime: null, // Duration object that denotes the first visible time of any given day\\n\\tmaxTime: null, // Duration object that denotes the exclusive visible end time of any given day\\n\\tlabelFormat: null, // formatting string for times running along vertical axis\\n\\tlabelInterval: null, // duration of how often a label should be displayed for a slot\\n\\n\\tcolEls: null, // cells elements in the day-row background\\n\\tslatContainerEl: null, // div that wraps all the slat rows\\n\\tslatEls: null, // elements running horizontally across all columns\\n\\tnowIndicatorEls: null,\\n\\n\\tcolCoordCache: null,\\n\\tslatCoordCache: null,\\n\\n\\n\\tconstructor: function() {\\n\\t\\tGrid.apply(this, arguments); // call the super-constructor\\n\\n\\t\\tthis.processOptions();\\n\\t},\\n\\n\\n\\t// Renders the time grid into `this.el`, which should already be assigned.\\n\\t// Relies on the view's colCnt. In the future, this component should probably be self-sufficient.\\n\\trenderDates: function() {\\n\\t\\tthis.el.html(this.renderHtml());\\n\\t\\tthis.colEls = this.el.find('.fc-day');\\n\\t\\tthis.slatContainerEl = this.el.find('.fc-slats');\\n\\t\\tthis.slatEls = this.slatContainerEl.find('tr');\\n\\n\\t\\tthis.colCoordCache = new CoordCache({\\n\\t\\t\\tels: this.colEls,\\n\\t\\t\\tisHorizontal: true\\n\\t\\t});\\n\\t\\tthis.slatCoordCache = new CoordCache({\\n\\t\\t\\tels: this.slatEls,\\n\\t\\t\\tisVertical: true\\n\\t\\t});\\n\\n\\t\\tthis.renderContentSkeleton();\\n\\t},\\n\\n\\n\\t// Renders the basic HTML skeleton for the grid\\n\\trenderHtml: function() {\\n\\t\\treturn '' +\\n\\t\\t\\t'<div class=\\\"fc-bg\\\">' +\\n\\t\\t\\t\\t'<table>' +\\n\\t\\t\\t\\t\\tthis.renderBgTrHtml(0) + // row=0\\n\\t\\t\\t\\t'</table>' +\\n\\t\\t\\t'</div>' +\\n\\t\\t\\t'<div class=\\\"fc-slats\\\">' +\\n\\t\\t\\t\\t'<table>' +\\n\\t\\t\\t\\t\\tthis.renderSlatRowHtml() +\\n\\t\\t\\t\\t'</table>' +\\n\\t\\t\\t'</div>';\\n\\t},\\n\\n\\n\\t// Generates the HTML for the horizontal \\\"slats\\\" that run width-wise. Has a time axis on a side. Depends on RTL.\\n\\trenderSlatRowHtml: function() {\\n\\t\\tvar view = this.view;\\n\\t\\tvar isRTL = this.isRTL;\\n\\t\\tvar html = '';\\n\\t\\tvar slotTime = moment.duration(+this.minTime); // wish there was .clone() for durations\\n\\t\\tvar slotDate; // will be on the view's first day, but we only care about its time\\n\\t\\tvar isLabeled;\\n\\t\\tvar axisHtml;\\n\\n\\t\\t// Calculate the time for each slot\\n\\t\\twhile (slotTime < this.maxTime) {\\n\\t\\t\\tslotDate = this.start.clone().time(slotTime);\\n\\t\\t\\tisLabeled = isInt(divideDurationByDuration(slotTime, this.labelInterval));\\n\\n\\t\\t\\taxisHtml =\\n\\t\\t\\t\\t'<td class=\\\"fc-axis fc-time ' + view.widgetContentClass + '\\\" ' + view.axisStyleAttr() + '>' +\\n\\t\\t\\t\\t\\t(isLabeled ?\\n\\t\\t\\t\\t\\t\\t'<span>' + // for matchCellWidths\\n\\t\\t\\t\\t\\t\\t\\thtmlEscape(slotDate.format(this.labelFormat)) +\\n\\t\\t\\t\\t\\t\\t'</span>' :\\n\\t\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t'</td>';\\n\\n\\t\\t\\thtml +=\\n\\t\\t\\t\\t'<tr data-time=\\\"' + slotDate.format('HH:mm:ss') + '\\\"' +\\n\\t\\t\\t\\t\\t(isLabeled ? '' : ' class=\\\"fc-minor\\\"') +\\n\\t\\t\\t\\t\\t'>' +\\n\\t\\t\\t\\t\\t(!isRTL ? axisHtml : '') +\\n\\t\\t\\t\\t\\t'<td class=\\\"' + view.widgetContentClass + '\\\"/>' +\\n\\t\\t\\t\\t\\t(isRTL ? axisHtml : '') +\\n\\t\\t\\t\\t\\\"</tr>\\\";\\n\\n\\t\\t\\tslotTime.add(this.slotDuration);\\n\\t\\t}\\n\\n\\t\\treturn html;\\n\\t},\\n\\n\\n\\t/* Options\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Parses various options into properties of this object\\n\\tprocessOptions: function() {\\n\\t\\tvar view = this.view;\\n\\t\\tvar slotDuration = view.opt('slotDuration');\\n\\t\\tvar snapDuration = view.opt('snapDuration');\\n\\t\\tvar input;\\n\\n\\t\\tslotDuration = moment.duration(slotDuration);\\n\\t\\tsnapDuration = snapDuration ? moment.duration(snapDuration) : slotDuration;\\n\\n\\t\\tthis.slotDuration = slotDuration;\\n\\t\\tthis.snapDuration = snapDuration;\\n\\t\\tthis.snapsPerSlot = slotDuration / snapDuration; // TODO: ensure an integer multiple?\\n\\n\\t\\tthis.minResizeDuration = snapDuration; // hack\\n\\n\\t\\tthis.minTime = moment.duration(view.opt('minTime'));\\n\\t\\tthis.maxTime = moment.duration(view.opt('maxTime'));\\n\\n\\t\\t// might be an array value (for TimelineView).\\n\\t\\t// if so, getting the most granular entry (the last one probably).\\n\\t\\tinput = view.opt('slotLabelFormat');\\n\\t\\tif ($.isArray(input)) {\\n\\t\\t\\tinput = input[input.length - 1];\\n\\t\\t}\\n\\n\\t\\tthis.labelFormat =\\n\\t\\t\\tinput ||\\n\\t\\t\\tview.opt('smallTimeFormat'); // the computed default\\n\\n\\t\\tinput = view.opt('slotLabelInterval');\\n\\t\\tthis.labelInterval = input ?\\n\\t\\t\\tmoment.duration(input) :\\n\\t\\t\\tthis.computeLabelInterval(slotDuration);\\n\\t},\\n\\n\\n\\t// Computes an automatic value for slotLabelInterval\\n\\tcomputeLabelInterval: function(slotDuration) {\\n\\t\\tvar i;\\n\\t\\tvar labelInterval;\\n\\t\\tvar slotsPerLabel;\\n\\n\\t\\t// find the smallest stock label interval that results in more than one slots-per-label\\n\\t\\tfor (i = AGENDA_STOCK_SUB_DURATIONS.length - 1; i >= 0; i--) {\\n\\t\\t\\tlabelInterval = moment.duration(AGENDA_STOCK_SUB_DURATIONS[i]);\\n\\t\\t\\tslotsPerLabel = divideDurationByDuration(labelInterval, slotDuration);\\n\\t\\t\\tif (isInt(slotsPerLabel) && slotsPerLabel > 1) {\\n\\t\\t\\t\\treturn labelInterval;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn moment.duration(slotDuration); // fall back. clone\\n\\t},\\n\\n\\n\\t// Computes a default event time formatting string if `timeFormat` is not explicitly defined\\n\\tcomputeEventTimeFormat: function() {\\n\\t\\treturn this.view.opt('noMeridiemTimeFormat'); // like \\\"6:30\\\" (no AM/PM)\\n\\t},\\n\\n\\n\\t// Computes a default `displayEventEnd` value if one is not expliclty defined\\n\\tcomputeDisplayEventEnd: function() {\\n\\t\\treturn true;\\n\\t},\\n\\n\\n\\t/* Hit System\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tprepareHits: function() {\\n\\t\\tthis.colCoordCache.build();\\n\\t\\tthis.slatCoordCache.build();\\n\\t},\\n\\n\\n\\treleaseHits: function() {\\n\\t\\tthis.colCoordCache.clear();\\n\\t\\t// NOTE: don't clear slatCoordCache because we rely on it for computeTimeTop\\n\\t},\\n\\n\\n\\tqueryHit: function(leftOffset, topOffset) {\\n\\t\\tvar snapsPerSlot = this.snapsPerSlot;\\n\\t\\tvar colCoordCache = this.colCoordCache;\\n\\t\\tvar slatCoordCache = this.slatCoordCache;\\n\\n\\t\\tif (colCoordCache.isLeftInBounds(leftOffset) && slatCoordCache.isTopInBounds(topOffset)) {\\n\\t\\t\\tvar colIndex = colCoordCache.getHorizontalIndex(leftOffset);\\n\\t\\t\\tvar slatIndex = slatCoordCache.getVerticalIndex(topOffset);\\n\\n\\t\\t\\tif (colIndex != null && slatIndex != null) {\\n\\t\\t\\t\\tvar slatTop = slatCoordCache.getTopOffset(slatIndex);\\n\\t\\t\\t\\tvar slatHeight = slatCoordCache.getHeight(slatIndex);\\n\\t\\t\\t\\tvar partial = (topOffset - slatTop) / slatHeight; // floating point number between 0 and 1\\n\\t\\t\\t\\tvar localSnapIndex = Math.floor(partial * snapsPerSlot); // the snap # relative to start of slat\\n\\t\\t\\t\\tvar snapIndex = slatIndex * snapsPerSlot + localSnapIndex;\\n\\t\\t\\t\\tvar snapTop = slatTop + (localSnapIndex / snapsPerSlot) * slatHeight;\\n\\t\\t\\t\\tvar snapBottom = slatTop + ((localSnapIndex + 1) / snapsPerSlot) * slatHeight;\\n\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tcol: colIndex,\\n\\t\\t\\t\\t\\tsnap: snapIndex,\\n\\t\\t\\t\\t\\tcomponent: this, // needed unfortunately :(\\n\\t\\t\\t\\t\\tleft: colCoordCache.getLeftOffset(colIndex),\\n\\t\\t\\t\\t\\tright: colCoordCache.getRightOffset(colIndex),\\n\\t\\t\\t\\t\\ttop: snapTop,\\n\\t\\t\\t\\t\\tbottom: snapBottom\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\tgetHitSpan: function(hit) {\\n\\t\\tvar start = this.getCellDate(0, hit.col); // row=0\\n\\t\\tvar time = this.computeSnapTime(hit.snap); // pass in the snap-index\\n\\t\\tvar end;\\n\\n\\t\\tstart.time(time);\\n\\t\\tend = start.clone().add(this.snapDuration);\\n\\n\\t\\treturn { start: start, end: end };\\n\\t},\\n\\n\\n\\tgetHitEl: function(hit) {\\n\\t\\treturn this.colEls.eq(hit.col);\\n\\t},\\n\\n\\n\\t/* Dates\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trangeUpdated: function() {\\n\\t\\tthis.updateDayTable();\\n\\t},\\n\\n\\n\\t// Given a row number of the grid, representing a \\\"snap\\\", returns a time (Duration) from its start-of-day\\n\\tcomputeSnapTime: function(snapIndex) {\\n\\t\\treturn moment.duration(this.minTime + this.snapDuration * snapIndex);\\n\\t},\\n\\n\\n\\t// Slices up the given span (unzoned start/end with other misc data) into an array of segments\\n\\tspanToSegs: function(span) {\\n\\t\\tvar segs = this.sliceRangeByTimes(span);\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tif (this.isRTL) {\\n\\t\\t\\t\\tsegs[i].col = this.daysPerRow - 1 - segs[i].dayIndex;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tsegs[i].col = segs[i].dayIndex;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\tsliceRangeByTimes: function(range) {\\n\\t\\tvar segs = [];\\n\\t\\tvar seg;\\n\\t\\tvar dayIndex;\\n\\t\\tvar dayDate;\\n\\t\\tvar dayRange;\\n\\n\\t\\tfor (dayIndex = 0; dayIndex < this.daysPerRow; dayIndex++) {\\n\\t\\t\\tdayDate = this.dayDates[dayIndex].clone(); // TODO: better API for this?\\n\\t\\t\\tdayRange = {\\n\\t\\t\\t\\tstart: dayDate.clone().time(this.minTime),\\n\\t\\t\\t\\tend: dayDate.clone().time(this.maxTime)\\n\\t\\t\\t};\\n\\t\\t\\tseg = intersectRanges(range, dayRange); // both will be ambig timezone\\n\\t\\t\\tif (seg) {\\n\\t\\t\\t\\tseg.dayIndex = dayIndex;\\n\\t\\t\\t\\tsegs.push(seg);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t/* Coordinates\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tupdateSize: function(isResize) { // NOT a standard Grid method\\n\\t\\tthis.slatCoordCache.build();\\n\\n\\t\\tif (isResize) {\\n\\t\\t\\tthis.updateSegVerticals(\\n\\t\\t\\t\\t[].concat(this.fgSegs || [], this.bgSegs || [], this.businessSegs || [])\\n\\t\\t\\t);\\n\\t\\t}\\n\\t},\\n\\n\\n\\tgetTotalSlatHeight: function() {\\n\\t\\treturn this.slatContainerEl.outerHeight();\\n\\t},\\n\\n\\n\\t// Computes the top coordinate, relative to the bounds of the grid, of the given date.\\n\\t// A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.\\n\\tcomputeDateTop: function(date, startOfDayDate) {\\n\\t\\treturn this.computeTimeTop(\\n\\t\\t\\tmoment.duration(\\n\\t\\t\\t\\tdate - startOfDayDate.clone().stripTime()\\n\\t\\t\\t)\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).\\n\\tcomputeTimeTop: function(time) {\\n\\t\\tvar len = this.slatEls.length;\\n\\t\\tvar slatCoverage = (time - this.minTime) / this.slotDuration; // floating-point value of # of slots covered\\n\\t\\tvar slatIndex;\\n\\t\\tvar slatRemainder;\\n\\n\\t\\t// compute a floating-point number for how many slats should be progressed through.\\n\\t\\t// from 0 to number of slats (inclusive)\\n\\t\\t// constrained because minTime/maxTime might be customized.\\n\\t\\tslatCoverage = Math.max(0, slatCoverage);\\n\\t\\tslatCoverage = Math.min(len, slatCoverage);\\n\\n\\t\\t// an integer index of the furthest whole slat\\n\\t\\t// from 0 to number slats (*exclusive*, so len-1)\\n\\t\\tslatIndex = Math.floor(slatCoverage);\\n\\t\\tslatIndex = Math.min(slatIndex, len - 1);\\n\\n\\t\\t// how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.\\n\\t\\t// could be 1.0 if slatCoverage is covering *all* the slots\\n\\t\\tslatRemainder = slatCoverage - slatIndex;\\n\\n\\t\\treturn this.slatCoordCache.getTopPosition(slatIndex) +\\n\\t\\t\\tthis.slatCoordCache.getHeight(slatIndex) * slatRemainder;\\n\\t},\\n\\n\\n\\n\\t/* Event Drag Visualization\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of an event being dragged over the specified date(s).\\n\\t// A returned value of `true` signals that a mock \\\"helper\\\" event has been rendered.\\n\\trenderDrag: function(eventLocation, seg) {\\n\\n\\t\\tif (seg) { // if there is event information for this drag, render a helper event\\n\\n\\t\\t\\t// returns mock event elements\\n\\t\\t\\t// signal that a helper has been rendered\\n\\t\\t\\treturn this.renderEventLocationHelper(eventLocation, seg);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\t// otherwise, just render a highlight\\n\\t\\t\\tthis.renderHighlight(this.eventToSpan(eventLocation));\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Unrenders any visual indication of an event being dragged\\n\\tunrenderDrag: function() {\\n\\t\\tthis.unrenderHelper();\\n\\t\\tthis.unrenderHighlight();\\n\\t},\\n\\n\\n\\t/* Event Resize Visualization\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of an event being resized\\n\\trenderEventResize: function(eventLocation, seg) {\\n\\t\\treturn this.renderEventLocationHelper(eventLocation, seg); // returns mock event elements\\n\\t},\\n\\n\\n\\t// Unrenders any visual indication of an event being resized\\n\\tunrenderEventResize: function() {\\n\\t\\tthis.unrenderHelper();\\n\\t},\\n\\n\\n\\t/* Event Helper\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a mock \\\"helper\\\" event. `sourceSeg` is the original segment object and might be null (an external drag)\\n\\trenderHelper: function(event, sourceSeg) {\\n\\t\\treturn this.renderHelperSegs(this.eventToSegs(event), sourceSeg); // returns mock event elements\\n\\t},\\n\\n\\n\\t// Unrenders any mock helper event\\n\\tunrenderHelper: function() {\\n\\t\\tthis.unrenderHelperSegs();\\n\\t},\\n\\n\\n\\t/* Business Hours\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderBusinessHours: function() {\\n\\t\\tthis.renderBusinessSegs(\\n\\t\\t\\tthis.buildBusinessHourSegs()\\n\\t\\t);\\n\\t},\\n\\n\\n\\tunrenderBusinessHours: function() {\\n\\t\\tthis.unrenderBusinessSegs();\\n\\t},\\n\\n\\n\\t/* Now Indicator\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tgetNowIndicatorUnit: function() {\\n\\t\\treturn 'minute'; // will refresh on the minute\\n\\t},\\n\\n\\n\\trenderNowIndicator: function(date) {\\n\\t\\t// seg system might be overkill, but it handles scenario where line needs to be rendered\\n\\t\\t//  more than once because of columns with the same date (resources columns for example)\\n\\t\\tvar segs = this.spanToSegs({ start: date, end: date });\\n\\t\\tvar top = this.computeDateTop(date, date);\\n\\t\\tvar nodes = [];\\n\\t\\tvar i;\\n\\n\\t\\t// render lines within the columns\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tnodes.push($('<div class=\\\"fc-now-indicator fc-now-indicator-line\\\"></div>')\\n\\t\\t\\t\\t.css('top', top)\\n\\t\\t\\t\\t.appendTo(this.colContainerEls.eq(segs[i].col))[0]);\\n\\t\\t}\\n\\n\\t\\t// render an arrow over the axis\\n\\t\\tif (segs.length > 0) { // is the current time in view?\\n\\t\\t\\tnodes.push($('<div class=\\\"fc-now-indicator fc-now-indicator-arrow\\\"></div>')\\n\\t\\t\\t\\t.css('top', top)\\n\\t\\t\\t\\t.appendTo(this.el.find('.fc-content-skeleton'))[0]);\\n\\t\\t}\\n\\n\\t\\tthis.nowIndicatorEls = $(nodes);\\n\\t},\\n\\n\\n\\tunrenderNowIndicator: function() {\\n\\t\\tif (this.nowIndicatorEls) {\\n\\t\\t\\tthis.nowIndicatorEls.remove();\\n\\t\\t\\tthis.nowIndicatorEls = null;\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Selection\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of a selection. Overrides the default, which was to simply render a highlight.\\n\\trenderSelection: function(span) {\\n\\t\\tif (this.view.opt('selectHelper')) { // this setting signals that a mock helper event should be rendered\\n\\n\\t\\t\\t// normally acceps an eventLocation, span has a start/end, which is good enough\\n\\t\\t\\tthis.renderEventLocationHelper(span);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tthis.renderHighlight(span);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Unrenders any visual indication of a selection\\n\\tunrenderSelection: function() {\\n\\t\\tthis.unrenderHelper();\\n\\t\\tthis.unrenderHighlight();\\n\\t},\\n\\n\\n\\t/* Highlight\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderHighlight: function(span) {\\n\\t\\tthis.renderHighlightSegs(this.spanToSegs(span));\\n\\t},\\n\\n\\n\\tunrenderHighlight: function() {\\n\\t\\tthis.unrenderHighlightSegs();\\n\\t}\\n\\n});\\n\\n;;\\n\\n/* Methods for rendering SEGMENTS, pieces of content that live on the view\\n ( this file is no longer just for events )\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nTimeGrid.mixin({\\n\\n\\tcolContainerEls: null, // containers for each column\\n\\n\\t// inner-containers for each column where different types of segs live\\n\\tfgContainerEls: null,\\n\\tbgContainerEls: null,\\n\\thelperContainerEls: null,\\n\\thighlightContainerEls: null,\\n\\tbusinessContainerEls: null,\\n\\n\\t// arrays of different types of displayed segments\\n\\tfgSegs: null,\\n\\tbgSegs: null,\\n\\thelperSegs: null,\\n\\thighlightSegs: null,\\n\\tbusinessSegs: null,\\n\\n\\n\\t// Renders the DOM that the view's content will live in\\n\\trenderContentSkeleton: function() {\\n\\t\\tvar cellHtml = '';\\n\\t\\tvar i;\\n\\t\\tvar skeletonEl;\\n\\n\\t\\tfor (i = 0; i < this.colCnt; i++) {\\n\\t\\t\\tcellHtml +=\\n\\t\\t\\t\\t'<td>' +\\n\\t\\t\\t\\t\\t'<div class=\\\"fc-content-col\\\">' +\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"fc-event-container fc-helper-container\\\"></div>' +\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"fc-event-container\\\"></div>' +\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"fc-highlight-container\\\"></div>' +\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"fc-bgevent-container\\\"></div>' +\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"fc-business-container\\\"></div>' +\\n\\t\\t\\t\\t\\t'</div>' +\\n\\t\\t\\t\\t'</td>';\\n\\t\\t}\\n\\n\\t\\tskeletonEl = $(\\n\\t\\t\\t'<div class=\\\"fc-content-skeleton\\\">' +\\n\\t\\t\\t\\t'<table>' +\\n\\t\\t\\t\\t\\t'<tr>' + cellHtml + '</tr>' +\\n\\t\\t\\t\\t'</table>' +\\n\\t\\t\\t'</div>'\\n\\t\\t);\\n\\n\\t\\tthis.colContainerEls = skeletonEl.find('.fc-content-col');\\n\\t\\tthis.helperContainerEls = skeletonEl.find('.fc-helper-container');\\n\\t\\tthis.fgContainerEls = skeletonEl.find('.fc-event-container:not(.fc-helper-container)');\\n\\t\\tthis.bgContainerEls = skeletonEl.find('.fc-bgevent-container');\\n\\t\\tthis.highlightContainerEls = skeletonEl.find('.fc-highlight-container');\\n\\t\\tthis.businessContainerEls = skeletonEl.find('.fc-business-container');\\n\\n\\t\\tthis.bookendCells(skeletonEl.find('tr')); // TODO: do this on string level\\n\\t\\tthis.el.append(skeletonEl);\\n\\t},\\n\\n\\n\\t/* Foreground Events\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderFgSegs: function(segs) {\\n\\t\\tsegs = this.renderFgSegsIntoContainers(segs, this.fgContainerEls);\\n\\t\\tthis.fgSegs = segs;\\n\\t\\treturn segs; // needed for Grid::renderEvents\\n\\t},\\n\\n\\n\\tunrenderFgSegs: function() {\\n\\t\\tthis.unrenderNamedSegs('fgSegs');\\n\\t},\\n\\n\\n\\t/* Foreground Helper Events\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderHelperSegs: function(segs, sourceSeg) {\\n\\t\\tvar helperEls = [];\\n\\t\\tvar i, seg;\\n\\t\\tvar sourceEl;\\n\\n\\t\\tsegs = this.renderFgSegsIntoContainers(segs, this.helperContainerEls);\\n\\n\\t\\t// Try to make the segment that is in the same row as sourceSeg look the same\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\t\\t\\tif (sourceSeg && sourceSeg.col === seg.col) {\\n\\t\\t\\t\\tsourceEl = sourceSeg.el;\\n\\t\\t\\t\\tseg.el.css({\\n\\t\\t\\t\\t\\tleft: sourceEl.css('left'),\\n\\t\\t\\t\\t\\tright: sourceEl.css('right'),\\n\\t\\t\\t\\t\\t'margin-left': sourceEl.css('margin-left'),\\n\\t\\t\\t\\t\\t'margin-right': sourceEl.css('margin-right')\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t\\thelperEls.push(seg.el[0]);\\n\\t\\t}\\n\\n\\t\\tthis.helperSegs = segs;\\n\\n\\t\\treturn $(helperEls); // must return rendered helpers\\n\\t},\\n\\n\\n\\tunrenderHelperSegs: function() {\\n\\t\\tthis.unrenderNamedSegs('helperSegs');\\n\\t},\\n\\n\\n\\t/* Background Events\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderBgSegs: function(segs) {\\n\\t\\tsegs = this.renderFillSegEls('bgEvent', segs); // TODO: old fill system\\n\\t\\tthis.updateSegVerticals(segs);\\n\\t\\tthis.attachSegsByCol(this.groupSegsByCol(segs), this.bgContainerEls);\\n\\t\\tthis.bgSegs = segs;\\n\\t\\treturn segs; // needed for Grid::renderEvents\\n\\t},\\n\\n\\n\\tunrenderBgSegs: function() {\\n\\t\\tthis.unrenderNamedSegs('bgSegs');\\n\\t},\\n\\n\\n\\t/* Highlight\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderHighlightSegs: function(segs) {\\n\\t\\tsegs = this.renderFillSegEls('highlight', segs); // TODO: old fill system\\n\\t\\tthis.updateSegVerticals(segs);\\n\\t\\tthis.attachSegsByCol(this.groupSegsByCol(segs), this.highlightContainerEls);\\n\\t\\tthis.highlightSegs = segs;\\n\\t},\\n\\n\\n\\tunrenderHighlightSegs: function() {\\n\\t\\tthis.unrenderNamedSegs('highlightSegs');\\n\\t},\\n\\n\\n\\t/* Business Hours\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderBusinessSegs: function(segs) {\\n\\t\\tsegs = this.renderFillSegEls('businessHours', segs); // TODO: old fill system\\n\\t\\tthis.updateSegVerticals(segs);\\n\\t\\tthis.attachSegsByCol(this.groupSegsByCol(segs), this.businessContainerEls);\\n\\t\\tthis.businessSegs = segs;\\n\\t},\\n\\n\\n\\tunrenderBusinessSegs: function() {\\n\\t\\tthis.unrenderNamedSegs('businessSegs');\\n\\t},\\n\\n\\n\\t/* Seg Rendering Utils\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Given a flat array of segments, return an array of sub-arrays, grouped by each segment's col\\n\\tgroupSegsByCol: function(segs) {\\n\\t\\tvar segsByCol = [];\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < this.colCnt; i++) {\\n\\t\\t\\tsegsByCol.push([]);\\n\\t\\t}\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tsegsByCol[segs[i].col].push(segs[i]);\\n\\t\\t}\\n\\n\\t\\treturn segsByCol;\\n\\t},\\n\\n\\n\\t// Given segments grouped by column, insert the segments' elements into a parallel array of container\\n\\t// elements, each living within a column.\\n\\tattachSegsByCol: function(segsByCol, containerEls) {\\n\\t\\tvar col;\\n\\t\\tvar segs;\\n\\t\\tvar i;\\n\\n\\t\\tfor (col = 0; col < this.colCnt; col++) { // iterate each column grouping\\n\\t\\t\\tsegs = segsByCol[col];\\n\\n\\t\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\t\\tcontainerEls.eq(col).append(segs[i].el);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Given the name of a property of `this` object, assumed to be an array of segments,\\n\\t// loops through each segment and removes from DOM. Will null-out the property afterwards.\\n\\tunrenderNamedSegs: function(propName) {\\n\\t\\tvar segs = this[propName];\\n\\t\\tvar i;\\n\\n\\t\\tif (segs) {\\n\\t\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\t\\tsegs[i].el.remove();\\n\\t\\t\\t}\\n\\t\\t\\tthis[propName] = null;\\n\\t\\t}\\n\\t},\\n\\n\\n\\n\\t/* Foreground Event Rendering Utils\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Given an array of foreground segments, render a DOM element for each, computes position,\\n\\t// and attaches to the column inner-container elements.\\n\\trenderFgSegsIntoContainers: function(segs, containerEls) {\\n\\t\\tvar segsByCol;\\n\\t\\tvar col;\\n\\n\\t\\tsegs = this.renderFgSegEls(segs); // will call fgSegHtml\\n\\t\\tsegsByCol = this.groupSegsByCol(segs);\\n\\n\\t\\tfor (col = 0; col < this.colCnt; col++) {\\n\\t\\t\\tthis.updateFgSegCoords(segsByCol[col]);\\n\\t\\t}\\n\\n\\t\\tthis.attachSegsByCol(segsByCol, containerEls);\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t// Renders the HTML for a single event segment's default rendering\\n\\tfgSegHtml: function(seg, disableResizing) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar event = seg.event;\\n\\t\\tvar isDraggable = view.isEventDraggable(event);\\n\\t\\tvar isResizableFromStart = !disableResizing && seg.isStart && view.isEventResizableFromStart(event);\\n\\t\\tvar isResizableFromEnd = !disableResizing && seg.isEnd && view.isEventResizableFromEnd(event);\\n\\t\\tvar classes = this.getSegClasses(seg, isDraggable, isResizableFromStart || isResizableFromEnd);\\n\\t\\tvar skinCss = cssToStr(this.getSegSkinCss(seg));\\n\\t\\tvar timeText;\\n\\t\\tvar fullTimeText; // more verbose time text. for the print stylesheet\\n\\t\\tvar startTimeText; // just the start time text\\n\\n\\t\\tclasses.unshift('fc-time-grid-event', 'fc-v-event');\\n\\n\\t\\tif (view.isMultiDayEvent(event)) { // if the event appears to span more than one day...\\n\\t\\t\\t// Don't display time text on segments that run entirely through a day.\\n\\t\\t\\t// That would appear as midnight-midnight and would look dumb.\\n\\t\\t\\t// Otherwise, display the time text for the *segment's* times (like 6pm-midnight or midnight-10am)\\n\\t\\t\\tif (seg.isStart || seg.isEnd) {\\n\\t\\t\\t\\ttimeText = this.getEventTimeText(seg);\\n\\t\\t\\t\\tfullTimeText = this.getEventTimeText(seg, 'LT');\\n\\t\\t\\t\\tstartTimeText = this.getEventTimeText(seg, null, false); // displayEnd=false\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\t// Display the normal time text for the *event's* times\\n\\t\\t\\ttimeText = this.getEventTimeText(event);\\n\\t\\t\\tfullTimeText = this.getEventTimeText(event, 'LT');\\n\\t\\t\\tstartTimeText = this.getEventTimeText(event, null, false); // displayEnd=false\\n\\t\\t}\\n\\n\\t\\treturn '<a class=\\\"' + classes.join(' ') + '\\\"' +\\n\\t\\t\\t(event.url ?\\n\\t\\t\\t\\t' href=\\\"' + htmlEscape(event.url) + '\\\"' :\\n\\t\\t\\t\\t''\\n\\t\\t\\t\\t) +\\n\\t\\t\\t(skinCss ?\\n\\t\\t\\t\\t' style=\\\"' + skinCss + '\\\"' :\\n\\t\\t\\t\\t''\\n\\t\\t\\t\\t) +\\n\\t\\t\\t'>' +\\n\\t\\t\\t\\t'<div class=\\\"fc-content\\\">' +\\n\\t\\t\\t\\t\\t(timeText ?\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"fc-time\\\"' +\\n\\t\\t\\t\\t\\t\\t' data-start=\\\"' + htmlEscape(startTimeText) + '\\\"' +\\n\\t\\t\\t\\t\\t\\t' data-full=\\\"' + htmlEscape(fullTimeText) + '\\\"' +\\n\\t\\t\\t\\t\\t\\t'>' +\\n\\t\\t\\t\\t\\t\\t\\t'<span>' + htmlEscape(timeText) + '</span>' +\\n\\t\\t\\t\\t\\t\\t'</div>' :\\n\\t\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t\\t(event.title ?\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"fc-title\\\">' +\\n\\t\\t\\t\\t\\t\\t\\thtmlEscape(event.title) +\\n\\t\\t\\t\\t\\t\\t'</div>' :\\n\\t\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t'</div>' +\\n\\t\\t\\t\\t'<div class=\\\"fc-bg\\\"/>' +\\n\\t\\t\\t\\t/* TODO: write CSS for this\\n\\t\\t\\t\\t(isResizableFromStart ?\\n\\t\\t\\t\\t\\t'<div class=\\\"fc-resizer fc-start-resizer\\\" />' :\\n\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t*/\\n\\t\\t\\t\\t(isResizableFromEnd ?\\n\\t\\t\\t\\t\\t'<div class=\\\"fc-resizer fc-end-resizer\\\" />' :\\n\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t) +\\n\\t\\t\\t'</a>';\\n\\t},\\n\\n\\n\\t/* Seg Position Utils\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Refreshes the CSS top/bottom coordinates for each segment element.\\n\\t// Works when called after initial render, after a window resize/zoom for example.\\n\\tupdateSegVerticals: function(segs) {\\n\\t\\tthis.computeSegVerticals(segs);\\n\\t\\tthis.assignSegVerticals(segs);\\n\\t},\\n\\n\\n\\t// For each segment in an array, computes and assigns its top and bottom properties\\n\\tcomputeSegVerticals: function(segs) {\\n\\t\\tvar i, seg;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\t\\t\\tseg.top = this.computeDateTop(seg.start, seg.start);\\n\\t\\t\\tseg.bottom = this.computeDateTop(seg.end, seg.start);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Given segments that already have their top/bottom properties computed, applies those values to\\n\\t// the segments' elements.\\n\\tassignSegVerticals: function(segs) {\\n\\t\\tvar i, seg;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\t\\t\\tseg.el.css(this.generateSegVerticalCss(seg));\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Generates an object with CSS properties for the top/bottom coordinates of a segment element\\n\\tgenerateSegVerticalCss: function(seg) {\\n\\t\\treturn {\\n\\t\\t\\ttop: seg.top,\\n\\t\\t\\tbottom: -seg.bottom // flipped because needs to be space beyond bottom edge of event container\\n\\t\\t};\\n\\t},\\n\\n\\n\\t/* Foreground Event Positioning Utils\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Given segments that are assumed to all live in the *same column*,\\n\\t// compute their verical/horizontal coordinates and assign to their elements.\\n\\tupdateFgSegCoords: function(segs) {\\n\\t\\tthis.computeSegVerticals(segs); // horizontals relies on this\\n\\t\\tthis.computeFgSegHorizontals(segs); // compute horizontal coordinates, z-index's, and reorder the array\\n\\t\\tthis.assignSegVerticals(segs);\\n\\t\\tthis.assignFgSegHorizontals(segs);\\n\\t},\\n\\n\\n\\t// Given an array of segments that are all in the same column, sets the backwardCoord and forwardCoord on each.\\n\\t// NOTE: Also reorders the given array by date!\\n\\tcomputeFgSegHorizontals: function(segs) {\\n\\t\\tvar levels;\\n\\t\\tvar level0;\\n\\t\\tvar i;\\n\\n\\t\\tthis.sortEventSegs(segs); // order by certain criteria\\n\\t\\tlevels = buildSlotSegLevels(segs);\\n\\t\\tcomputeForwardSlotSegs(levels);\\n\\n\\t\\tif ((level0 = levels[0])) {\\n\\n\\t\\t\\tfor (i = 0; i < level0.length; i++) {\\n\\t\\t\\t\\tcomputeSlotSegPressures(level0[i]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor (i = 0; i < level0.length; i++) {\\n\\t\\t\\t\\tthis.computeFgSegForwardBack(level0[i], 0, 0);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Calculate seg.forwardCoord and seg.backwardCoord for the segment, where both values range\\n\\t// from 0 to 1. If the calendar is left-to-right, the seg.backwardCoord maps to \\\"left\\\" and\\n\\t// seg.forwardCoord maps to \\\"right\\\" (via percentage). Vice-versa if the calendar is right-to-left.\\n\\t//\\n\\t// The segment might be part of a \\\"series\\\", which means consecutive segments with the same pressure\\n\\t// who's width is unknown until an edge has been hit. `seriesBackwardPressure` is the number of\\n\\t// segments behind this one in the current series, and `seriesBackwardCoord` is the starting\\n\\t// coordinate of the first segment in the series.\\n\\tcomputeFgSegForwardBack: function(seg, seriesBackwardPressure, seriesBackwardCoord) {\\n\\t\\tvar forwardSegs = seg.forwardSegs;\\n\\t\\tvar i;\\n\\n\\t\\tif (seg.forwardCoord === undefined) { // not already computed\\n\\n\\t\\t\\tif (!forwardSegs.length) {\\n\\n\\t\\t\\t\\t// if there are no forward segments, this segment should butt up against the edge\\n\\t\\t\\t\\tseg.forwardCoord = 1;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\n\\t\\t\\t\\t// sort highest pressure first\\n\\t\\t\\t\\tthis.sortForwardSegs(forwardSegs);\\n\\n\\t\\t\\t\\t// this segment's forwardCoord will be calculated from the backwardCoord of the\\n\\t\\t\\t\\t// highest-pressure forward segment.\\n\\t\\t\\t\\tthis.computeFgSegForwardBack(forwardSegs[0], seriesBackwardPressure + 1, seriesBackwardCoord);\\n\\t\\t\\t\\tseg.forwardCoord = forwardSegs[0].backwardCoord;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// calculate the backwardCoord from the forwardCoord. consider the series\\n\\t\\t\\tseg.backwardCoord = seg.forwardCoord -\\n\\t\\t\\t\\t(seg.forwardCoord - seriesBackwardCoord) / // available width for series\\n\\t\\t\\t\\t(seriesBackwardPressure + 1); // # of segments in the series\\n\\n\\t\\t\\t// use this segment's coordinates to computed the coordinates of the less-pressurized\\n\\t\\t\\t// forward segments\\n\\t\\t\\tfor (i=0; i<forwardSegs.length; i++) {\\n\\t\\t\\t\\tthis.computeFgSegForwardBack(forwardSegs[i], 0, seg.forwardCoord);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\tsortForwardSegs: function(forwardSegs) {\\n\\t\\tforwardSegs.sort(proxy(this, 'compareForwardSegs'));\\n\\t},\\n\\n\\n\\t// A cmp function for determining which forward segment to rely on more when computing coordinates.\\n\\tcompareForwardSegs: function(seg1, seg2) {\\n\\t\\t// put higher-pressure first\\n\\t\\treturn seg2.forwardPressure - seg1.forwardPressure ||\\n\\t\\t\\t// put segments that are closer to initial edge first (and favor ones with no coords yet)\\n\\t\\t\\t(seg1.backwardCoord || 0) - (seg2.backwardCoord || 0) ||\\n\\t\\t\\t// do normal sorting...\\n\\t\\t\\tthis.compareEventSegs(seg1, seg2);\\n\\t},\\n\\n\\n\\t// Given foreground event segments that have already had their position coordinates computed,\\n\\t// assigns position-related CSS values to their elements.\\n\\tassignFgSegHorizontals: function(segs) {\\n\\t\\tvar i, seg;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\t\\t\\tseg.el.css(this.generateFgSegHorizontalCss(seg));\\n\\n\\t\\t\\t// if the height is short, add a className for alternate styling\\n\\t\\t\\tif (seg.bottom - seg.top < 30) {\\n\\t\\t\\t\\tseg.el.addClass('fc-short');\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Generates an object with CSS properties/values that should be applied to an event segment element.\\n\\t// Contains important positioning-related properties that should be applied to any event element, customized or not.\\n\\tgenerateFgSegHorizontalCss: function(seg) {\\n\\t\\tvar shouldOverlap = this.view.opt('slotEventOverlap');\\n\\t\\tvar backwardCoord = seg.backwardCoord; // the left side if LTR. the right side if RTL. floating-point\\n\\t\\tvar forwardCoord = seg.forwardCoord; // the right side if LTR. the left side if RTL. floating-point\\n\\t\\tvar props = this.generateSegVerticalCss(seg); // get top/bottom first\\n\\t\\tvar left; // amount of space from left edge, a fraction of the total width\\n\\t\\tvar right; // amount of space from right edge, a fraction of the total width\\n\\n\\t\\tif (shouldOverlap) {\\n\\t\\t\\t// double the width, but don't go beyond the maximum forward coordinate (1.0)\\n\\t\\t\\tforwardCoord = Math.min(1, backwardCoord + (forwardCoord - backwardCoord) * 2);\\n\\t\\t}\\n\\n\\t\\tif (this.isRTL) {\\n\\t\\t\\tleft = 1 - forwardCoord;\\n\\t\\t\\tright = backwardCoord;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tleft = backwardCoord;\\n\\t\\t\\tright = 1 - forwardCoord;\\n\\t\\t}\\n\\n\\t\\tprops.zIndex = seg.level + 1; // convert from 0-base to 1-based\\n\\t\\tprops.left = left * 100 + '%';\\n\\t\\tprops.right = right * 100 + '%';\\n\\n\\t\\tif (shouldOverlap && seg.forwardPressure) {\\n\\t\\t\\t// add padding to the edge so that forward stacked events don't cover the resizer's icon\\n\\t\\t\\tprops[this.isRTL ? 'marginLeft' : 'marginRight'] = 10 * 2; // 10 is a guesstimate of the icon's width\\n\\t\\t}\\n\\n\\t\\treturn props;\\n\\t}\\n\\n});\\n\\n\\n// Builds an array of segments \\\"levels\\\". The first level will be the leftmost tier of segments if the calendar is\\n// left-to-right, or the rightmost if the calendar is right-to-left. Assumes the segments are already ordered by date.\\nfunction buildSlotSegLevels(segs) {\\n\\tvar levels = [];\\n\\tvar i, seg;\\n\\tvar j;\\n\\n\\tfor (i=0; i<segs.length; i++) {\\n\\t\\tseg = segs[i];\\n\\n\\t\\t// go through all the levels and stop on the first level where there are no collisions\\n\\t\\tfor (j=0; j<levels.length; j++) {\\n\\t\\t\\tif (!computeSlotSegCollisions(seg, levels[j]).length) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tseg.level = j;\\n\\n\\t\\t(levels[j] || (levels[j] = [])).push(seg);\\n\\t}\\n\\n\\treturn levels;\\n}\\n\\n\\n// For every segment, figure out the other segments that are in subsequent\\n// levels that also occupy the same vertical space. Accumulate in seg.forwardSegs\\nfunction computeForwardSlotSegs(levels) {\\n\\tvar i, level;\\n\\tvar j, seg;\\n\\tvar k;\\n\\n\\tfor (i=0; i<levels.length; i++) {\\n\\t\\tlevel = levels[i];\\n\\n\\t\\tfor (j=0; j<level.length; j++) {\\n\\t\\t\\tseg = level[j];\\n\\n\\t\\t\\tseg.forwardSegs = [];\\n\\t\\t\\tfor (k=i+1; k<levels.length; k++) {\\n\\t\\t\\t\\tcomputeSlotSegCollisions(seg, levels[k], seg.forwardSegs);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n\\n// Figure out which path forward (via seg.forwardSegs) results in the longest path until\\n// the furthest edge is reached. The number of segments in this path will be seg.forwardPressure\\nfunction computeSlotSegPressures(seg) {\\n\\tvar forwardSegs = seg.forwardSegs;\\n\\tvar forwardPressure = 0;\\n\\tvar i, forwardSeg;\\n\\n\\tif (seg.forwardPressure === undefined) { // not already computed\\n\\n\\t\\tfor (i=0; i<forwardSegs.length; i++) {\\n\\t\\t\\tforwardSeg = forwardSegs[i];\\n\\n\\t\\t\\t// figure out the child's maximum forward path\\n\\t\\t\\tcomputeSlotSegPressures(forwardSeg);\\n\\n\\t\\t\\t// either use the existing maximum, or use the child's forward pressure\\n\\t\\t\\t// plus one (for the forwardSeg itself)\\n\\t\\t\\tforwardPressure = Math.max(\\n\\t\\t\\t\\tforwardPressure,\\n\\t\\t\\t\\t1 + forwardSeg.forwardPressure\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\tseg.forwardPressure = forwardPressure;\\n\\t}\\n}\\n\\n\\n// Find all the segments in `otherSegs` that vertically collide with `seg`.\\n// Append into an optionally-supplied `results` array and return.\\nfunction computeSlotSegCollisions(seg, otherSegs, results) {\\n\\tresults = results || [];\\n\\n\\tfor (var i=0; i<otherSegs.length; i++) {\\n\\t\\tif (isSlotSegCollision(seg, otherSegs[i])) {\\n\\t\\t\\tresults.push(otherSegs[i]);\\n\\t\\t}\\n\\t}\\n\\n\\treturn results;\\n}\\n\\n\\n// Do these segments occupy the same vertical space?\\nfunction isSlotSegCollision(seg1, seg2) {\\n\\treturn seg1.bottom > seg2.top && seg1.top < seg2.bottom;\\n}\\n\\n;;\\n\\n/* An abstract class from which other views inherit from\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nvar View = FC.View = Class.extend(EmitterMixin, ListenerMixin, {\\n\\n\\ttype: null, // subclass' view name (string)\\n\\tname: null, // deprecated. use `type` instead\\n\\ttitle: null, // the text that will be displayed in the header's title\\n\\n\\tcalendar: null, // owner Calendar object\\n\\toptions: null, // hash containing all options. already merged with view-specific-options\\n\\tel: null, // the view's containing element. set by Calendar\\n\\n\\tisDateSet: false,\\n\\tisDateRendered: false,\\n\\tdateRenderQueue: null,\\n\\n\\tisEventsBound: false,\\n\\tisEventsSet: false,\\n\\tisEventsRendered: false,\\n\\teventRenderQueue: null,\\n\\n\\t// range the view is actually displaying (moments)\\n\\tstart: null,\\n\\tend: null, // exclusive\\n\\n\\t// range the view is formally responsible for (moments)\\n\\t// may be different from start/end. for example, a month view might have 1st-31st, excluding padded dates\\n\\tintervalStart: null,\\n\\tintervalEnd: null, // exclusive\\n\\tintervalDuration: null,\\n\\tintervalUnit: null, // name of largest unit being displayed, like \\\"month\\\" or \\\"week\\\"\\n\\n\\tisRTL: false,\\n\\tisSelected: false, // boolean whether a range of time is user-selected or not\\n\\tselectedEvent: null,\\n\\n\\teventOrderSpecs: null, // criteria for ordering events when they have same date/time\\n\\n\\t// classNames styled by jqui themes\\n\\twidgetHeaderClass: null,\\n\\twidgetContentClass: null,\\n\\thighlightStateClass: null,\\n\\n\\t// for date utils, computed from options\\n\\tnextDayThreshold: null,\\n\\tisHiddenDayHash: null,\\n\\n\\t// now indicator\\n\\tisNowIndicatorRendered: null,\\n\\tinitialNowDate: null, // result first getNow call\\n\\tinitialNowQueriedMs: null, // ms time the getNow was called\\n\\tnowIndicatorTimeoutID: null, // for refresh timing of now indicator\\n\\tnowIndicatorIntervalID: null, // \\\"\\n\\n\\n\\tconstructor: function(calendar, type, options, intervalDuration) {\\n\\n\\t\\tthis.calendar = calendar;\\n\\t\\tthis.type = this.name = type; // .name is deprecated\\n\\t\\tthis.options = options;\\n\\t\\tthis.intervalDuration = intervalDuration || moment.duration(1, 'day');\\n\\n\\t\\tthis.nextDayThreshold = moment.duration(this.opt('nextDayThreshold'));\\n\\t\\tthis.initThemingProps();\\n\\t\\tthis.initHiddenDays();\\n\\t\\tthis.isRTL = this.opt('isRTL');\\n\\n\\t\\tthis.eventOrderSpecs = parseFieldSpecs(this.opt('eventOrder'));\\n\\n\\t\\tthis.dateRenderQueue = new TaskQueue();\\n\\t\\tthis.eventRenderQueue = new TaskQueue(this.opt('eventRenderWait'));\\n\\n\\t\\tthis.initialize();\\n\\t},\\n\\n\\n\\t// A good place for subclasses to initialize member variables\\n\\tinitialize: function() {\\n\\t\\t// subclasses can implement\\n\\t},\\n\\n\\n\\t// Retrieves an option with the given name\\n\\topt: function(name) {\\n\\t\\treturn this.options[name];\\n\\t},\\n\\n\\n\\t// Triggers handlers that are view-related. Modifies args before passing to calendar.\\n\\tpubliclyTrigger: function(name, thisObj) { // arguments beyond thisObj are passed along\\n\\t\\tvar calendar = this.calendar;\\n\\n\\t\\treturn calendar.publiclyTrigger.apply(\\n\\t\\t\\tcalendar,\\n\\t\\t\\t[name, thisObj || this].concat(\\n\\t\\t\\t\\tArray.prototype.slice.call(arguments, 2), // arguments beyond thisObj\\n\\t\\t\\t\\t[ this ] // always make the last argument a reference to the view. TODO: deprecate\\n\\t\\t\\t)\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Returns a proxy of the given promise that will be rejected if the given event fires\\n\\t// before the promise resolves.\\n\\trejectOn: function(eventName, promise) {\\n\\t\\tvar _this = this;\\n\\n\\t\\treturn new Promise(function(resolve, reject) {\\n\\t\\t\\t_this.one(eventName, reject);\\n\\n\\t\\t\\tfunction cleanup() {\\n\\t\\t\\t\\t_this.off(eventName, reject);\\n\\t\\t\\t}\\n\\n\\t\\t\\tpromise.then(function(res) { // success\\n\\t\\t\\t\\tcleanup();\\n\\t\\t\\t\\tresolve(res);\\n\\t\\t\\t}, function() { // failure\\n\\t\\t\\t\\tcleanup();\\n\\t\\t\\t\\treject();\\n\\t\\t\\t});\\n\\t\\t});\\n\\t},\\n\\n\\n\\t/* Date Computation\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Updates all internal dates for displaying the given unzoned range.\\n\\tsetRange: function(range) {\\n\\t\\t$.extend(this, range); // assigns every property to this object's member variables\\n\\t\\tthis.updateTitle();\\n\\t},\\n\\n\\n\\t// Given a single current unzoned date, produce information about what range to display.\\n\\t// Subclasses can override. Must return all properties.\\n\\tcomputeRange: function(date) {\\n\\t\\tvar intervalUnit = computeIntervalUnit(this.intervalDuration);\\n\\t\\tvar intervalStart = date.clone().startOf(intervalUnit);\\n\\t\\tvar intervalEnd = intervalStart.clone().add(this.intervalDuration);\\n\\t\\tvar start, end;\\n\\n\\t\\t// normalize the range's time-ambiguity\\n\\t\\tif (/year|month|week|day/.test(intervalUnit)) { // whole-days?\\n\\t\\t\\tintervalStart.stripTime();\\n\\t\\t\\tintervalEnd.stripTime();\\n\\t\\t}\\n\\t\\telse { // needs to have a time?\\n\\t\\t\\tif (!intervalStart.hasTime()) {\\n\\t\\t\\t\\tintervalStart = this.calendar.time(0); // give 00:00 time\\n\\t\\t\\t}\\n\\t\\t\\tif (!intervalEnd.hasTime()) {\\n\\t\\t\\t\\tintervalEnd = this.calendar.time(0); // give 00:00 time\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tstart = intervalStart.clone();\\n\\t\\tstart = this.skipHiddenDays(start);\\n\\t\\tend = intervalEnd.clone();\\n\\t\\tend = this.skipHiddenDays(end, -1, true); // exclusively move backwards\\n\\n\\t\\treturn {\\n\\t\\t\\tintervalUnit: intervalUnit,\\n\\t\\t\\tintervalStart: intervalStart,\\n\\t\\t\\tintervalEnd: intervalEnd,\\n\\t\\t\\tstart: start,\\n\\t\\t\\tend: end\\n\\t\\t};\\n\\t},\\n\\n\\n\\t// Computes the new date when the user hits the prev button, given the current date\\n\\tcomputePrevDate: function(date) {\\n\\t\\treturn this.massageCurrentDate(\\n\\t\\t\\tdate.clone().startOf(this.intervalUnit).subtract(this.intervalDuration), -1\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Computes the new date when the user hits the next button, given the current date\\n\\tcomputeNextDate: function(date) {\\n\\t\\treturn this.massageCurrentDate(\\n\\t\\t\\tdate.clone().startOf(this.intervalUnit).add(this.intervalDuration)\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Given an arbitrarily calculated current date of the calendar, returns a date that is ensured to be completely\\n\\t// visible. `direction` is optional and indicates which direction the current date was being\\n\\t// incremented or decremented (1 or -1).\\n\\tmassageCurrentDate: function(date, direction) {\\n\\t\\tif (this.intervalDuration.as('days') <= 1) { // if the view displays a single day or smaller\\n\\t\\t\\tif (this.isHiddenDay(date)) {\\n\\t\\t\\t\\tdate = this.skipHiddenDays(date, direction);\\n\\t\\t\\t\\tdate.startOf('day');\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn date;\\n\\t},\\n\\n\\n\\t/* Title and Date Formatting\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Sets the view's title property to the most updated computed value\\n\\tupdateTitle: function() {\\n\\t\\tthis.title = this.computeTitle();\\n\\t\\tthis.calendar.setToolbarsTitle(this.title);\\n\\t},\\n\\n\\n\\t// Computes what the title at the top of the calendar should be for this view\\n\\tcomputeTitle: function() {\\n\\t\\treturn this.formatRange(\\n\\t\\t\\t{\\n\\t\\t\\t\\t// in case intervalStart/End has a time, make sure timezone is correct\\n\\t\\t\\t\\tstart: this.calendar.applyTimezone(this.intervalStart),\\n\\t\\t\\t\\tend: this.calendar.applyTimezone(this.intervalEnd)\\n\\t\\t\\t},\\n\\t\\t\\tthis.opt('titleFormat') || this.computeTitleFormat(),\\n\\t\\t\\tthis.opt('titleRangeSeparator')\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Generates the format string that should be used to generate the title for the current date range.\\n\\t// Attempts to compute the most appropriate format if not explicitly specified with `titleFormat`.\\n\\tcomputeTitleFormat: function() {\\n\\t\\tif (this.intervalUnit == 'year') {\\n\\t\\t\\treturn 'YYYY';\\n\\t\\t}\\n\\t\\telse if (this.intervalUnit == 'month') {\\n\\t\\t\\treturn this.opt('monthYearFormat'); // like \\\"September 2014\\\"\\n\\t\\t}\\n\\t\\telse if (this.intervalDuration.as('days') > 1) {\\n\\t\\t\\treturn 'll'; // multi-day range. shorter, like \\\"Sep 9 - 10 2014\\\"\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn 'LL'; // one day. longer, like \\\"September 9 2014\\\"\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Utility for formatting a range. Accepts a range object, formatting string, and optional separator.\\n\\t// Displays all-day ranges naturally, with an inclusive end. Takes the current isRTL into account.\\n\\t// The timezones of the dates within `range` will be respected.\\n\\tformatRange: function(range, formatStr, separator) {\\n\\t\\tvar end = range.end;\\n\\n\\t\\tif (!end.hasTime()) { // all-day?\\n\\t\\t\\tend = end.clone().subtract(1); // convert to inclusive. last ms of previous day\\n\\t\\t}\\n\\n\\t\\treturn formatRange(range.start, end, formatStr, separator, this.opt('isRTL'));\\n\\t},\\n\\n\\n\\tgetAllDayHtml: function() {\\n\\t\\treturn this.opt('allDayHtml') || htmlEscape(this.opt('allDayText'));\\n\\t},\\n\\n\\n\\t/* Navigation\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Generates HTML for an anchor to another view into the calendar.\\n\\t// Will either generate an <a> tag or a non-clickable <span> tag, depending on enabled settings.\\n\\t// `gotoOptions` can either be a moment input, or an object with the form:\\n\\t// { date, type, forceOff }\\n\\t// `type` is a view-type like \\\"day\\\" or \\\"week\\\". default value is \\\"day\\\".\\n\\t// `attrs` and `innerHtml` are use to generate the rest of the HTML tag.\\n\\tbuildGotoAnchorHtml: function(gotoOptions, attrs, innerHtml) {\\n\\t\\tvar date, type, forceOff;\\n\\t\\tvar finalOptions;\\n\\n\\t\\tif ($.isPlainObject(gotoOptions)) {\\n\\t\\t\\tdate = gotoOptions.date;\\n\\t\\t\\ttype = gotoOptions.type;\\n\\t\\t\\tforceOff = gotoOptions.forceOff;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tdate = gotoOptions; // a single moment input\\n\\t\\t}\\n\\t\\tdate = FC.moment(date); // if a string, parse it\\n\\n\\t\\tfinalOptions = { // for serialization into the link\\n\\t\\t\\tdate: date.format('YYYY-MM-DD'),\\n\\t\\t\\ttype: type || 'day'\\n\\t\\t};\\n\\n\\t\\tif (typeof attrs === 'string') {\\n\\t\\t\\tinnerHtml = attrs;\\n\\t\\t\\tattrs = null;\\n\\t\\t}\\n\\n\\t\\tattrs = attrs ? ' ' + attrsToStr(attrs) : ''; // will have a leading space\\n\\t\\tinnerHtml = innerHtml || '';\\n\\n\\t\\tif (!forceOff && this.opt('navLinks')) {\\n\\t\\t\\treturn '<a' + attrs +\\n\\t\\t\\t\\t' data-goto=\\\"' + htmlEscape(JSON.stringify(finalOptions)) + '\\\">' +\\n\\t\\t\\t\\tinnerHtml +\\n\\t\\t\\t\\t'</a>';\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn '<span' + attrs + '>' +\\n\\t\\t\\t\\tinnerHtml +\\n\\t\\t\\t\\t'</span>';\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Rendering Non-date-related Content\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// Sets the container element that the view should render inside of, does global DOM-related initializations,\\n\\t// and renders all the non-date-related content inside.\\n\\tsetElement: function(el) {\\n\\t\\tthis.el = el;\\n\\t\\tthis.bindGlobalHandlers();\\n\\t\\tthis.renderSkeleton();\\n\\t},\\n\\n\\n\\t// Removes the view's container element from the DOM, clearing any content beforehand.\\n\\t// Undoes any other DOM-related attachments.\\n\\tremoveElement: function() {\\n\\t\\tthis.unsetDate();\\n\\t\\tthis.unrenderSkeleton();\\n\\n\\t\\tthis.unbindGlobalHandlers();\\n\\n\\t\\tthis.el.remove();\\n\\t\\t// NOTE: don't null-out this.el in case the View was destroyed within an API callback.\\n\\t\\t// We don't null-out the View's other jQuery element references upon destroy,\\n\\t\\t//  so we shouldn't kill this.el either.\\n\\t},\\n\\n\\n\\t// Renders the basic structure of the view before any content is rendered\\n\\trenderSkeleton: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Unrenders the basic structure of the view\\n\\tunrenderSkeleton: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Date Setting/Unsetting\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tsetDate: function(date) {\\n\\t\\tvar isReset = this.isDateSet;\\n\\n\\t\\tthis.isDateSet = true;\\n\\t\\tthis.handleDate(date, isReset);\\n\\t\\tthis.trigger(isReset ? 'dateReset' : 'dateSet', date);\\n\\t},\\n\\n\\n\\tunsetDate: function() {\\n\\t\\tif (this.isDateSet) {\\n\\t\\t\\tthis.isDateSet = false;\\n\\t\\t\\tthis.handleDateUnset();\\n\\t\\t\\tthis.trigger('dateUnset');\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Date Handling\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\thandleDate: function(date, isReset) {\\n\\t\\tvar _this = this;\\n\\n\\t\\tthis.unbindEvents(); // will do nothing if not already bound\\n\\t\\tthis.requestDateRender(date).then(function() {\\n\\t\\t\\t// wish we could start earlier, but setRange/computeRange needs to execute first\\n\\t\\t\\t_this.bindEvents(); // will request events\\n\\t\\t});\\n\\t},\\n\\n\\n\\thandleDateUnset: function() {\\n\\t\\tthis.unbindEvents();\\n\\t\\tthis.requestDateUnrender();\\n\\t},\\n\\n\\n\\t// Date Render Queuing\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// if date not specified, uses current\\n\\trequestDateRender: function(date) {\\n\\t\\tvar _this = this;\\n\\n\\t\\treturn this.dateRenderQueue.add(function() {\\n\\t\\t\\treturn _this.executeDateRender(date);\\n\\t\\t});\\n\\t},\\n\\n\\n\\trequestDateUnrender: function() {\\n\\t\\tvar _this = this;\\n\\n\\t\\treturn this.dateRenderQueue.add(function() {\\n\\t\\t\\treturn _this.executeDateUnrender();\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Date High-level Rendering\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// if date not specified, uses current\\n\\texecuteDateRender: function(date) {\\n\\t\\tvar _this = this;\\n\\n\\t\\t// if rendering a new date, reset scroll to initial state (scrollTime)\\n\\t\\tif (date) {\\n\\t\\t\\tthis.captureInitialScroll();\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tthis.captureScroll(); // a rerender of the current date\\n\\t\\t}\\n\\n\\t\\tthis.freezeHeight();\\n\\n\\t\\treturn this.executeDateUnrender().then(function() {\\n\\n\\t\\t\\tif (date) {\\n\\t\\t\\t\\t_this.setRange(_this.computeRange(date));\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (_this.render) {\\n\\t\\t\\t\\t_this.render(); // TODO: deprecate\\n\\t\\t\\t}\\n\\n\\t\\t\\t_this.renderDates();\\n\\t\\t\\t_this.updateSize();\\n\\t\\t\\t_this.renderBusinessHours(); // might need coordinates, so should go after updateSize()\\n\\t\\t\\t_this.startNowIndicator();\\n\\n\\t\\t\\t_this.thawHeight();\\n\\t\\t\\t_this.releaseScroll();\\n\\n\\t\\t\\t_this.isDateRendered = true;\\n\\t\\t\\t_this.onDateRender();\\n\\t\\t\\t_this.trigger('dateRender');\\n\\t\\t});\\n\\t},\\n\\n\\n\\texecuteDateUnrender: function() {\\n\\t\\tvar _this = this;\\n\\n\\t\\tif (_this.isDateRendered) {\\n\\t\\t\\treturn this.requestEventsUnrender().then(function() {\\n\\n\\t\\t\\t\\t_this.unselect();\\n\\t\\t\\t\\t_this.stopNowIndicator();\\n\\t\\t\\t\\t_this.triggerUnrender();\\n\\t\\t\\t\\t_this.unrenderBusinessHours();\\n\\t\\t\\t\\t_this.unrenderDates();\\n\\n\\t\\t\\t\\tif (_this.destroy) {\\n\\t\\t\\t\\t\\t_this.destroy(); // TODO: deprecate\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t_this.isDateRendered = false;\\n\\t\\t\\t\\t_this.trigger('dateUnrender');\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn Promise.resolve();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Date Rendering Triggers\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tonDateRender: function() {\\n\\t\\tthis.triggerRender();\\n\\t},\\n\\n\\n\\t// Date Low-level Rendering\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// date-cell content only\\n\\trenderDates: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// date-cell content only\\n\\tunrenderDates: function() {\\n\\t\\t// subclasses should override\\n\\t},\\n\\n\\n\\t// Misc view rendering utils\\n\\t// -------------------------\\n\\n\\n\\t// Signals that the view's content has been rendered\\n\\ttriggerRender: function() {\\n\\t\\tthis.publiclyTrigger('viewRender', this, this, this.el);\\n\\t},\\n\\n\\n\\t// Signals that the view's content is about to be unrendered\\n\\ttriggerUnrender: function() {\\n\\t\\tthis.publiclyTrigger('viewDestroy', this, this, this.el);\\n\\t},\\n\\n\\n\\t// Binds DOM handlers to elements that reside outside the view container, such as the document\\n\\tbindGlobalHandlers: function() {\\n\\t\\tthis.listenTo($(document), 'mousedown', this.handleDocumentMousedown);\\n\\t\\tthis.listenTo($(document), 'touchstart', this.processUnselect);\\n\\t},\\n\\n\\n\\t// Unbinds DOM handlers from elements that reside outside the view container\\n\\tunbindGlobalHandlers: function() {\\n\\t\\tthis.stopListeningTo($(document));\\n\\t},\\n\\n\\n\\t// Initializes internal variables related to theming\\n\\tinitThemingProps: function() {\\n\\t\\tvar tm = this.opt('theme') ? 'ui' : 'fc';\\n\\n\\t\\tthis.widgetHeaderClass = tm + '-widget-header';\\n\\t\\tthis.widgetContentClass = tm + '-widget-content';\\n\\t\\tthis.highlightStateClass = tm + '-state-highlight';\\n\\t},\\n\\n\\n\\t/* Business Hours\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders business-hours onto the view. Assumes updateSize has already been called.\\n\\trenderBusinessHours: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Unrenders previously-rendered business-hours\\n\\tunrenderBusinessHours: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t/* Now Indicator\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Immediately render the current time indicator and begins re-rendering it at an interval,\\n\\t// which is defined by this.getNowIndicatorUnit().\\n\\t// TODO: somehow do this for the current whole day's background too\\n\\tstartNowIndicator: function() {\\n\\t\\tvar _this = this;\\n\\t\\tvar unit;\\n\\t\\tvar update;\\n\\t\\tvar delay; // ms wait value\\n\\n\\t\\tif (this.opt('nowIndicator')) {\\n\\t\\t\\tunit = this.getNowIndicatorUnit();\\n\\t\\t\\tif (unit) {\\n\\t\\t\\t\\tupdate = proxy(this, 'updateNowIndicator'); // bind to `this`\\n\\n\\t\\t\\t\\tthis.initialNowDate = this.calendar.getNow();\\n\\t\\t\\t\\tthis.initialNowQueriedMs = +new Date();\\n\\t\\t\\t\\tthis.renderNowIndicator(this.initialNowDate);\\n\\t\\t\\t\\tthis.isNowIndicatorRendered = true;\\n\\n\\t\\t\\t\\t// wait until the beginning of the next interval\\n\\t\\t\\t\\tdelay = this.initialNowDate.clone().startOf(unit).add(1, unit) - this.initialNowDate;\\n\\t\\t\\t\\tthis.nowIndicatorTimeoutID = setTimeout(function() {\\n\\t\\t\\t\\t\\t_this.nowIndicatorTimeoutID = null;\\n\\t\\t\\t\\t\\tupdate();\\n\\t\\t\\t\\t\\tdelay = +moment.duration(1, unit);\\n\\t\\t\\t\\t\\tdelay = Math.max(100, delay); // prevent too frequent\\n\\t\\t\\t\\t\\t_this.nowIndicatorIntervalID = setInterval(update, delay); // update every interval\\n\\t\\t\\t\\t}, delay);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// rerenders the now indicator, computing the new current time from the amount of time that has passed\\n\\t// since the initial getNow call.\\n\\tupdateNowIndicator: function() {\\n\\t\\tif (this.isNowIndicatorRendered) {\\n\\t\\t\\tthis.unrenderNowIndicator();\\n\\t\\t\\tthis.renderNowIndicator(\\n\\t\\t\\t\\tthis.initialNowDate.clone().add(new Date() - this.initialNowQueriedMs) // add ms\\n\\t\\t\\t);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Immediately unrenders the view's current time indicator and stops any re-rendering timers.\\n\\t// Won't cause side effects if indicator isn't rendered.\\n\\tstopNowIndicator: function() {\\n\\t\\tif (this.isNowIndicatorRendered) {\\n\\n\\t\\t\\tif (this.nowIndicatorTimeoutID) {\\n\\t\\t\\t\\tclearTimeout(this.nowIndicatorTimeoutID);\\n\\t\\t\\t\\tthis.nowIndicatorTimeoutID = null;\\n\\t\\t\\t}\\n\\t\\t\\tif (this.nowIndicatorIntervalID) {\\n\\t\\t\\t\\tclearTimeout(this.nowIndicatorIntervalID);\\n\\t\\t\\t\\tthis.nowIndicatorIntervalID = null;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.unrenderNowIndicator();\\n\\t\\t\\tthis.isNowIndicatorRendered = false;\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Returns a string unit, like 'second' or 'minute' that defined how often the current time indicator\\n\\t// should be refreshed. If something falsy is returned, no time indicator is rendered at all.\\n\\tgetNowIndicatorUnit: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Renders a current time indicator at the given datetime\\n\\trenderNowIndicator: function(date) {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Undoes the rendering actions from renderNowIndicator\\n\\tunrenderNowIndicator: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t/* Dimensions\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Refreshes anything dependant upon sizing of the container element of the grid\\n\\tupdateSize: function(isResize) {\\n\\n\\t\\tif (isResize) {\\n\\t\\t\\tthis.captureScroll();\\n\\t\\t}\\n\\n\\t\\tthis.updateHeight(isResize);\\n\\t\\tthis.updateWidth(isResize);\\n\\t\\tthis.updateNowIndicator();\\n\\n\\t\\tif (isResize) {\\n\\t\\t\\tthis.releaseScroll();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Refreshes the horizontal dimensions of the calendar\\n\\tupdateWidth: function(isResize) {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Refreshes the vertical dimensions of the calendar\\n\\tupdateHeight: function(isResize) {\\n\\t\\tvar calendar = this.calendar; // we poll the calendar for height information\\n\\n\\t\\tthis.setHeight(\\n\\t\\t\\tcalendar.getSuggestedViewHeight(),\\n\\t\\t\\tcalendar.isHeightAuto()\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Updates the vertical dimensions of the calendar to the specified height.\\n\\t// if `isAuto` is set to true, height becomes merely a suggestion and the view should use its \\\"natural\\\" height.\\n\\tsetHeight: function(height, isAuto) {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t/* Scroller\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tcapturedScroll: null,\\n\\tcapturedScrollDepth: 0,\\n\\n\\n\\tcaptureScroll: function() {\\n\\t\\tif (!(this.capturedScrollDepth++)) {\\n\\t\\t\\tthis.capturedScroll = this.isDateRendered ? this.queryScroll() : {}; // require a render first\\n\\t\\t\\treturn true; // root?\\n\\t\\t}\\n\\t\\treturn false;\\n\\t},\\n\\n\\n\\tcaptureInitialScroll: function(forcedScroll) {\\n\\t\\tif (this.captureScroll()) { // root?\\n\\t\\t\\tthis.capturedScroll.isInitial = true;\\n\\n\\t\\t\\tif (forcedScroll) {\\n\\t\\t\\t\\t$.extend(this.capturedScroll, forcedScroll);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tthis.capturedScroll.isComputed = true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\treleaseScroll: function() {\\n\\t\\tvar scroll = this.capturedScroll;\\n\\t\\tvar isRoot = this.discardScroll();\\n\\n\\t\\tif (scroll.isComputed) {\\n\\t\\t\\tif (isRoot) {\\n\\t\\t\\t\\t// only compute initial scroll if it will actually be used (is the root capture)\\n\\t\\t\\t\\t$.extend(scroll, this.computeInitialScroll());\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tscroll = null; // scroll couldn't be computed. don't apply it to the DOM\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (scroll) {\\n\\t\\t\\t// we act immediately on a releaseScroll operation, as opposed to captureScroll.\\n\\t\\t\\t// if capture/release wraps a render operation that screws up the scroll,\\n\\t\\t\\t// we still want to restore it a good state after, regardless of depth.\\n\\n\\t\\t\\tif (scroll.isInitial) {\\n\\t\\t\\t\\tthis.hardSetScroll(scroll); // outsmart how browsers set scroll on initial DOM\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tthis.setScroll(scroll);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\tdiscardScroll: function() {\\n\\t\\tif (!(--this.capturedScrollDepth)) {\\n\\t\\t\\tthis.capturedScroll = null;\\n\\t\\t\\treturn true; // root?\\n\\t\\t}\\n\\t\\treturn false;\\n\\t},\\n\\n\\n\\tcomputeInitialScroll: function() {\\n\\t\\treturn {};\\n\\t},\\n\\n\\n\\tqueryScroll: function() {\\n\\t\\treturn {};\\n\\t},\\n\\n\\n\\thardSetScroll: function(scroll) {\\n\\t\\tvar _this = this;\\n\\t\\tvar exec = function() { _this.setScroll(scroll); };\\n\\t\\texec();\\n\\t\\tsetTimeout(exec, 0); // to surely clear the browser's initial scroll for the DOM\\n\\t},\\n\\n\\n\\tsetScroll: function(scroll) {\\n\\t},\\n\\n\\n\\t/* Height Freezing\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tfreezeHeight: function() {\\n\\t\\tthis.calendar.freezeContentHeight();\\n\\t},\\n\\n\\n\\tthawHeight: function() {\\n\\t\\tthis.calendar.thawContentHeight();\\n\\t},\\n\\n\\n\\t// Event Binding/Unbinding\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tbindEvents: function() {\\n\\t\\tvar _this = this;\\n\\n\\t\\tif (!this.isEventsBound) {\\n\\t\\t\\tthis.isEventsBound = true;\\n\\t\\t\\tthis.rejectOn('eventsUnbind', this.requestEvents()).then(function(events) { // TODO: test rejection\\n\\t\\t\\t\\t_this.listenTo(_this.calendar, 'eventsReset', _this.setEvents);\\n\\t\\t\\t\\t_this.setEvents(events);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t},\\n\\n\\n\\tunbindEvents: function() {\\n\\t\\tif (this.isEventsBound) {\\n\\t\\t\\tthis.isEventsBound = false;\\n\\t\\t\\tthis.stopListeningTo(this.calendar, 'eventsReset');\\n\\t\\t\\tthis.unsetEvents();\\n\\t\\t\\tthis.trigger('eventsUnbind');\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Event Setting/Unsetting\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tsetEvents: function(events) {\\n\\t\\tvar isReset = this.isEventSet;\\n\\n\\t\\tthis.isEventsSet = true;\\n\\t\\tthis.handleEvents(events, isReset);\\n\\t\\tthis.trigger(isReset ? 'eventsReset' : 'eventsSet', events);\\n\\t},\\n\\n\\n\\tunsetEvents: function() {\\n\\t\\tif (this.isEventsSet) {\\n\\t\\t\\tthis.isEventsSet = false;\\n\\t\\t\\tthis.handleEventsUnset();\\n\\t\\t\\tthis.trigger('eventsUnset');\\n\\t\\t}\\n\\t},\\n\\n\\n\\twhenEventsSet: function() {\\n\\t\\tvar _this = this;\\n\\n\\t\\tif (this.isEventsSet) {\\n\\t\\t\\treturn Promise.resolve(this.getCurrentEvents());\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn new Promise(function(resolve) {\\n\\t\\t\\t\\t_this.one('eventsSet', resolve);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Event Handling\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\thandleEvents: function(events, isReset) {\\n\\t\\tthis.requestEventsRender(events);\\n\\t},\\n\\n\\n\\thandleEventsUnset: function() {\\n\\t\\tthis.requestEventsUnrender();\\n\\t},\\n\\n\\n\\t// Event Render Queuing\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// assumes any previous event renders have been cleared already\\n\\trequestEventsRender: function(events) {\\n\\t\\tvar _this = this;\\n\\n\\t\\treturn this.eventRenderQueue.add(function() { // might not return a promise if debounced!? bad\\n\\t\\t\\treturn _this.executeEventsRender(events);\\n\\t\\t});\\n\\t},\\n\\n\\n\\trequestEventsUnrender: function() {\\n\\t\\tvar _this = this;\\n\\n\\t\\tif (this.isEventsRendered) {\\n\\t\\t\\treturn this.eventRenderQueue.addQuickly(function() {\\n\\t\\t\\t\\treturn _this.executeEventsUnrender();\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn Promise.resolve();\\n\\t\\t}\\n\\t},\\n\\n\\n\\trequestCurrentEventsRender: function() {\\n\\t\\tif (this.isEventsSet) {\\n\\t\\t\\tthis.requestEventsRender(this.getCurrentEvents());\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn Promise.reject();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Event High-level Rendering\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\texecuteEventsRender: function(events) {\\n\\t\\tvar _this = this;\\n\\n\\t\\tthis.captureScroll();\\n\\t\\tthis.freezeHeight();\\n\\n\\t\\treturn this.executeEventsUnrender().then(function() {\\n\\t\\t\\t_this.renderEvents(events);\\n\\n\\t\\t\\t_this.thawHeight();\\n\\t\\t\\t_this.releaseScroll();\\n\\n\\t\\t\\t_this.isEventsRendered = true;\\n\\t\\t\\t_this.onEventsRender();\\n\\t\\t\\t_this.trigger('eventsRender');\\n\\t\\t});\\n\\t},\\n\\n\\n\\texecuteEventsUnrender: function() {\\n\\t\\tif (this.isEventsRendered) {\\n\\t\\t\\tthis.onBeforeEventsUnrender();\\n\\n\\t\\t\\tthis.captureScroll();\\n\\t\\t\\tthis.freezeHeight();\\n\\n\\t\\t\\tif (this.destroyEvents) {\\n\\t\\t\\t\\tthis.destroyEvents(); // TODO: deprecate\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.unrenderEvents();\\n\\n\\t\\t\\tthis.thawHeight();\\n\\t\\t\\tthis.releaseScroll();\\n\\n\\t\\t\\tthis.isEventsRendered = false;\\n\\t\\t\\tthis.trigger('eventsUnrender');\\n\\t\\t}\\n\\n\\t\\treturn Promise.resolve(); // always synchronous\\n\\t},\\n\\n\\n\\t// Event Rendering Triggers\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// Signals that all events have been rendered\\n\\tonEventsRender: function() {\\n\\t\\tthis.renderedEventSegEach(function(seg) {\\n\\t\\t\\tthis.publiclyTrigger('eventAfterRender', seg.event, seg.event, seg.el);\\n\\t\\t});\\n\\t\\tthis.publiclyTrigger('eventAfterAllRender');\\n\\t},\\n\\n\\n\\t// Signals that all event elements are about to be removed\\n\\tonBeforeEventsUnrender: function() {\\n\\t\\tthis.renderedEventSegEach(function(seg) {\\n\\t\\t\\tthis.publiclyTrigger('eventDestroy', seg.event, seg.event, seg.el);\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Event Low-level Rendering\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// Renders the events onto the view.\\n\\trenderEvents: function(events) {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Removes event elements from the view.\\n\\tunrenderEvents: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Event Data Access\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\trequestEvents: function() {\\n\\t\\treturn this.calendar.requestEvents(this.start, this.end);\\n\\t},\\n\\n\\n\\tgetCurrentEvents: function() {\\n\\t\\treturn this.calendar.getPrunedEventCache();\\n\\t},\\n\\n\\n\\t// Event Rendering Utils\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// Given an event and the default element used for rendering, returns the element that should actually be used.\\n\\t// Basically runs events and elements through the eventRender hook.\\n\\tresolveEventEl: function(event, el) {\\n\\t\\tvar custom = this.publiclyTrigger('eventRender', event, event, el);\\n\\n\\t\\tif (custom === false) { // means don't render at all\\n\\t\\t\\tel = null;\\n\\t\\t}\\n\\t\\telse if (custom && custom !== true) {\\n\\t\\t\\tel = $(custom);\\n\\t\\t}\\n\\n\\t\\treturn el;\\n\\t},\\n\\n\\n\\t// Hides all rendered event segments linked to the given event\\n\\tshowEvent: function(event) {\\n\\t\\tthis.renderedEventSegEach(function(seg) {\\n\\t\\t\\tseg.el.css('visibility', '');\\n\\t\\t}, event);\\n\\t},\\n\\n\\n\\t// Shows all rendered event segments linked to the given event\\n\\thideEvent: function(event) {\\n\\t\\tthis.renderedEventSegEach(function(seg) {\\n\\t\\t\\tseg.el.css('visibility', 'hidden');\\n\\t\\t}, event);\\n\\t},\\n\\n\\n\\t// Iterates through event segments that have been rendered (have an el). Goes through all by default.\\n\\t// If the optional `event` argument is specified, only iterates through segments linked to that event.\\n\\t// The `this` value of the callback function will be the view.\\n\\trenderedEventSegEach: function(func, event) {\\n\\t\\tvar segs = this.getEventSegs();\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tif (!event || segs[i].event._id === event._id) {\\n\\t\\t\\t\\tif (segs[i].el) {\\n\\t\\t\\t\\t\\tfunc.call(this, segs[i]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Retrieves all the rendered segment objects for the view\\n\\tgetEventSegs: function() {\\n\\t\\t// subclasses must implement\\n\\t\\treturn [];\\n\\t},\\n\\n\\n\\t/* Event Drag-n-Drop\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Computes if the given event is allowed to be dragged by the user\\n\\tisEventDraggable: function(event) {\\n\\t\\treturn this.isEventStartEditable(event);\\n\\t},\\n\\n\\n\\tisEventStartEditable: function(event) {\\n\\t\\treturn firstDefined(\\n\\t\\t\\tevent.startEditable,\\n\\t\\t\\t(event.source || {}).startEditable,\\n\\t\\t\\tthis.opt('eventStartEditable'),\\n\\t\\t\\tthis.isEventGenerallyEditable(event)\\n\\t\\t);\\n\\t},\\n\\n\\n\\tisEventGenerallyEditable: function(event) {\\n\\t\\treturn firstDefined(\\n\\t\\t\\tevent.editable,\\n\\t\\t\\t(event.source || {}).editable,\\n\\t\\t\\tthis.opt('editable')\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Must be called when an event in the view is dropped onto new location.\\n\\t// `dropLocation` is an object that contains the new zoned start/end/allDay values for the event.\\n\\treportEventDrop: function(event, dropLocation, largeUnit, el, ev) {\\n\\t\\tvar calendar = this.calendar;\\n\\t\\tvar mutateResult = calendar.mutateEvent(event, dropLocation, largeUnit);\\n\\t\\tvar undoFunc = function() {\\n\\t\\t\\tmutateResult.undo();\\n\\t\\t\\tcalendar.reportEventChange();\\n\\t\\t};\\n\\n\\t\\tthis.triggerEventDrop(event, mutateResult.dateDelta, undoFunc, el, ev);\\n\\t\\tcalendar.reportEventChange(); // will rerender events\\n\\t},\\n\\n\\n\\t// Triggers event-drop handlers that have subscribed via the API\\n\\ttriggerEventDrop: function(event, dateDelta, undoFunc, el, ev) {\\n\\t\\tthis.publiclyTrigger('eventDrop', el[0], event, dateDelta, undoFunc, ev, {}); // {} = jqui dummy\\n\\t},\\n\\n\\n\\t/* External Element Drag-n-Drop\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Must be called when an external element, via jQuery UI, has been dropped onto the calendar.\\n\\t// `meta` is the parsed data that has been embedded into the dragging event.\\n\\t// `dropLocation` is an object that contains the new zoned start/end/allDay values for the event.\\n\\treportExternalDrop: function(meta, dropLocation, el, ev, ui) {\\n\\t\\tvar eventProps = meta.eventProps;\\n\\t\\tvar eventInput;\\n\\t\\tvar event;\\n\\n\\t\\t// Try to build an event object and render it. TODO: decouple the two\\n\\t\\tif (eventProps) {\\n\\t\\t\\teventInput = $.extend({}, eventProps, dropLocation);\\n\\t\\t\\tevent = this.calendar.renderEvent(eventInput, meta.stick)[0]; // renderEvent returns an array\\n\\t\\t}\\n\\n\\t\\tthis.triggerExternalDrop(event, dropLocation, el, ev, ui);\\n\\t},\\n\\n\\n\\t// Triggers external-drop handlers that have subscribed via the API\\n\\ttriggerExternalDrop: function(event, dropLocation, el, ev, ui) {\\n\\n\\t\\t// trigger 'drop' regardless of whether element represents an event\\n\\t\\tthis.publiclyTrigger('drop', el[0], dropLocation.start, ev, ui);\\n\\n\\t\\tif (event) {\\n\\t\\t\\tthis.publiclyTrigger('eventReceive', null, event); // signal an external event landed\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Drag-n-Drop Rendering (for both events and external elements)\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of a event or external-element drag over the given drop zone.\\n\\t// If an external-element, seg will be `null`.\\n\\t// Must return elements used for any mock events.\\n\\trenderDrag: function(dropLocation, seg) {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t// Unrenders a visual indication of an event or external-element being dragged.\\n\\tunrenderDrag: function() {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t/* Event Resizing\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Computes if the given event is allowed to be resized from its starting edge\\n\\tisEventResizableFromStart: function(event) {\\n\\t\\treturn this.opt('eventResizableFromStart') && this.isEventResizable(event);\\n\\t},\\n\\n\\n\\t// Computes if the given event is allowed to be resized from its ending edge\\n\\tisEventResizableFromEnd: function(event) {\\n\\t\\treturn this.isEventResizable(event);\\n\\t},\\n\\n\\n\\t// Computes if the given event is allowed to be resized by the user at all\\n\\tisEventResizable: function(event) {\\n\\t\\tvar source = event.source || {};\\n\\n\\t\\treturn firstDefined(\\n\\t\\t\\tevent.durationEditable,\\n\\t\\t\\tsource.durationEditable,\\n\\t\\t\\tthis.opt('eventDurationEditable'),\\n\\t\\t\\tevent.editable,\\n\\t\\t\\tsource.editable,\\n\\t\\t\\tthis.opt('editable')\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Must be called when an event in the view has been resized to a new length\\n\\treportEventResize: function(event, resizeLocation, largeUnit, el, ev) {\\n\\t\\tvar calendar = this.calendar;\\n\\t\\tvar mutateResult = calendar.mutateEvent(event, resizeLocation, largeUnit);\\n\\t\\tvar undoFunc = function() {\\n\\t\\t\\tmutateResult.undo();\\n\\t\\t\\tcalendar.reportEventChange();\\n\\t\\t};\\n\\n\\t\\tthis.triggerEventResize(event, mutateResult.durationDelta, undoFunc, el, ev);\\n\\t\\tcalendar.reportEventChange(); // will rerender events\\n\\t},\\n\\n\\n\\t// Triggers event-resize handlers that have subscribed via the API\\n\\ttriggerEventResize: function(event, durationDelta, undoFunc, el, ev) {\\n\\t\\tthis.publiclyTrigger('eventResize', el[0], event, durationDelta, undoFunc, ev, {}); // {} = jqui dummy\\n\\t},\\n\\n\\n\\t/* Selection (time range)\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Selects a date span on the view. `start` and `end` are both Moments.\\n\\t// `ev` is the native mouse event that begin the interaction.\\n\\tselect: function(span, ev) {\\n\\t\\tthis.unselect(ev);\\n\\t\\tthis.renderSelection(span);\\n\\t\\tthis.reportSelection(span, ev);\\n\\t},\\n\\n\\n\\t// Renders a visual indication of the selection\\n\\trenderSelection: function(span) {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Called when a new selection is made. Updates internal state and triggers handlers.\\n\\treportSelection: function(span, ev) {\\n\\t\\tthis.isSelected = true;\\n\\t\\tthis.triggerSelect(span, ev);\\n\\t},\\n\\n\\n\\t// Triggers handlers to 'select'\\n\\ttriggerSelect: function(span, ev) {\\n\\t\\tthis.publiclyTrigger(\\n\\t\\t\\t'select',\\n\\t\\t\\tnull,\\n\\t\\t\\tthis.calendar.applyTimezone(span.start), // convert to calendar's tz for external API\\n\\t\\t\\tthis.calendar.applyTimezone(span.end), // \\\"\\n\\t\\t\\tev\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Undoes a selection. updates in the internal state and triggers handlers.\\n\\t// `ev` is the native mouse event that began the interaction.\\n\\tunselect: function(ev) {\\n\\t\\tif (this.isSelected) {\\n\\t\\t\\tthis.isSelected = false;\\n\\t\\t\\tif (this.destroySelection) {\\n\\t\\t\\t\\tthis.destroySelection(); // TODO: deprecate\\n\\t\\t\\t}\\n\\t\\t\\tthis.unrenderSelection();\\n\\t\\t\\tthis.publiclyTrigger('unselect', null, ev);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Unrenders a visual indication of selection\\n\\tunrenderSelection: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t/* Event Selection\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tselectEvent: function(event) {\\n\\t\\tif (!this.selectedEvent || this.selectedEvent !== event) {\\n\\t\\t\\tthis.unselectEvent();\\n\\t\\t\\tthis.renderedEventSegEach(function(seg) {\\n\\t\\t\\t\\tseg.el.addClass('fc-selected');\\n\\t\\t\\t}, event);\\n\\t\\t\\tthis.selectedEvent = event;\\n\\t\\t}\\n\\t},\\n\\n\\n\\tunselectEvent: function() {\\n\\t\\tif (this.selectedEvent) {\\n\\t\\t\\tthis.renderedEventSegEach(function(seg) {\\n\\t\\t\\t\\tseg.el.removeClass('fc-selected');\\n\\t\\t\\t}, this.selectedEvent);\\n\\t\\t\\tthis.selectedEvent = null;\\n\\t\\t}\\n\\t},\\n\\n\\n\\tisEventSelected: function(event) {\\n\\t\\t// event references might change on refetchEvents(), while selectedEvent doesn't,\\n\\t\\t// so compare IDs\\n\\t\\treturn this.selectedEvent && this.selectedEvent._id === event._id;\\n\\t},\\n\\n\\n\\t/* Mouse / Touch Unselecting (time range & event unselection)\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\t// TODO: move consistently to down/start or up/end?\\n\\t// TODO: don't kill previous selection if touch scrolling\\n\\n\\n\\thandleDocumentMousedown: function(ev) {\\n\\t\\tif (isPrimaryMouseButton(ev)) {\\n\\t\\t\\tthis.processUnselect(ev);\\n\\t\\t}\\n\\t},\\n\\n\\n\\tprocessUnselect: function(ev) {\\n\\t\\tthis.processRangeUnselect(ev);\\n\\t\\tthis.processEventUnselect(ev);\\n\\t},\\n\\n\\n\\tprocessRangeUnselect: function(ev) {\\n\\t\\tvar ignore;\\n\\n\\t\\t// is there a time-range selection?\\n\\t\\tif (this.isSelected && this.opt('unselectAuto')) {\\n\\t\\t\\t// only unselect if the clicked element is not identical to or inside of an 'unselectCancel' element\\n\\t\\t\\tignore = this.opt('unselectCancel');\\n\\t\\t\\tif (!ignore || !$(ev.target).closest(ignore).length) {\\n\\t\\t\\t\\tthis.unselect(ev);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\tprocessEventUnselect: function(ev) {\\n\\t\\tif (this.selectedEvent) {\\n\\t\\t\\tif (!$(ev.target).closest('.fc-selected').length) {\\n\\t\\t\\t\\tthis.unselectEvent();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Day Click\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Triggers handlers to 'dayClick'\\n\\t// Span has start/end of the clicked area. Only the start is useful.\\n\\ttriggerDayClick: function(span, dayEl, ev) {\\n\\t\\tthis.publiclyTrigger(\\n\\t\\t\\t'dayClick',\\n\\t\\t\\tdayEl,\\n\\t\\t\\tthis.calendar.applyTimezone(span.start), // convert to calendar's timezone for external API\\n\\t\\t\\tev\\n\\t\\t);\\n\\t},\\n\\n\\n\\t/* Date Utils\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Initializes internal variables related to calculating hidden days-of-week\\n\\tinitHiddenDays: function() {\\n\\t\\tvar hiddenDays = this.opt('hiddenDays') || []; // array of day-of-week indices that are hidden\\n\\t\\tvar isHiddenDayHash = []; // is the day-of-week hidden? (hash with day-of-week-index -> bool)\\n\\t\\tvar dayCnt = 0;\\n\\t\\tvar i;\\n\\n\\t\\tif (this.opt('weekends') === false) {\\n\\t\\t\\thiddenDays.push(0, 6); // 0=sunday, 6=saturday\\n\\t\\t}\\n\\n\\t\\tfor (i = 0; i < 7; i++) {\\n\\t\\t\\tif (\\n\\t\\t\\t\\t!(isHiddenDayHash[i] = $.inArray(i, hiddenDays) !== -1)\\n\\t\\t\\t) {\\n\\t\\t\\t\\tdayCnt++;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (!dayCnt) {\\n\\t\\t\\tthrow 'invalid hiddenDays'; // all days were hidden? bad.\\n\\t\\t}\\n\\n\\t\\tthis.isHiddenDayHash = isHiddenDayHash;\\n\\t},\\n\\n\\n\\t// Is the current day hidden?\\n\\t// `day` is a day-of-week index (0-6), or a Moment\\n\\tisHiddenDay: function(day) {\\n\\t\\tif (moment.isMoment(day)) {\\n\\t\\t\\tday = day.day();\\n\\t\\t}\\n\\t\\treturn this.isHiddenDayHash[day];\\n\\t},\\n\\n\\n\\t// Incrementing the current day until it is no longer a hidden day, returning a copy.\\n\\t// If the initial value of `date` is not a hidden day, don't do anything.\\n\\t// Pass `isExclusive` as `true` if you are dealing with an end date.\\n\\t// `inc` defaults to `1` (increment one day forward each time)\\n\\tskipHiddenDays: function(date, inc, isExclusive) {\\n\\t\\tvar out = date.clone();\\n\\t\\tinc = inc || 1;\\n\\t\\twhile (\\n\\t\\t\\tthis.isHiddenDayHash[(out.day() + (isExclusive ? inc : 0) + 7) % 7]\\n\\t\\t) {\\n\\t\\t\\tout.add(inc, 'days');\\n\\t\\t}\\n\\t\\treturn out;\\n\\t},\\n\\n\\n\\t// Returns the date range of the full days the given range visually appears to occupy.\\n\\t// Returns a new range object.\\n\\tcomputeDayRange: function(range) {\\n\\t\\tvar startDay = range.start.clone().stripTime(); // the beginning of the day the range starts\\n\\t\\tvar end = range.end;\\n\\t\\tvar endDay = null;\\n\\t\\tvar endTimeMS;\\n\\n\\t\\tif (end) {\\n\\t\\t\\tendDay = end.clone().stripTime(); // the beginning of the day the range exclusively ends\\n\\t\\t\\tendTimeMS = +end.time(); // # of milliseconds into `endDay`\\n\\n\\t\\t\\t// If the end time is actually inclusively part of the next day and is equal to or\\n\\t\\t\\t// beyond the next day threshold, adjust the end to be the exclusive end of `endDay`.\\n\\t\\t\\t// Otherwise, leaving it as inclusive will cause it to exclude `endDay`.\\n\\t\\t\\tif (endTimeMS && endTimeMS >= this.nextDayThreshold) {\\n\\t\\t\\t\\tendDay.add(1, 'days');\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// If no end was specified, or if it is within `startDay` but not past nextDayThreshold,\\n\\t\\t// assign the default duration of one day.\\n\\t\\tif (!end || endDay <= startDay) {\\n\\t\\t\\tendDay = startDay.clone().add(1, 'days');\\n\\t\\t}\\n\\n\\t\\treturn { start: startDay, end: endDay };\\n\\t},\\n\\n\\n\\t// Does the given event visually appear to occupy more than one day?\\n\\tisMultiDayEvent: function(event) {\\n\\t\\tvar range = this.computeDayRange(event); // event is range-ish\\n\\n\\t\\treturn range.end.diff(range.start, 'days') > 1;\\n\\t}\\n\\n});\\n\\n;;\\n\\n/*\\nEmbodies a div that has potential scrollbars\\n*/\\nvar Scroller = FC.Scroller = Class.extend({\\n\\n\\tel: null, // the guaranteed outer element\\n\\tscrollEl: null, // the element with the scrollbars\\n\\toverflowX: null,\\n\\toverflowY: null,\\n\\n\\n\\tconstructor: function(options) {\\n\\t\\toptions = options || {};\\n\\t\\tthis.overflowX = options.overflowX || options.overflow || 'auto';\\n\\t\\tthis.overflowY = options.overflowY || options.overflow || 'auto';\\n\\t},\\n\\n\\n\\trender: function() {\\n\\t\\tthis.el = this.renderEl();\\n\\t\\tthis.applyOverflow();\\n\\t},\\n\\n\\n\\trenderEl: function() {\\n\\t\\treturn (this.scrollEl = $('<div class=\\\"fc-scroller\\\"></div>'));\\n\\t},\\n\\n\\n\\t// sets to natural height, unlocks overflow\\n\\tclear: function() {\\n\\t\\tthis.setHeight('auto');\\n\\t\\tthis.applyOverflow();\\n\\t},\\n\\n\\n\\tdestroy: function() {\\n\\t\\tthis.el.remove();\\n\\t},\\n\\n\\n\\t// Overflow\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tapplyOverflow: function() {\\n\\t\\tthis.scrollEl.css({\\n\\t\\t\\t'overflow-x': this.overflowX,\\n\\t\\t\\t'overflow-y': this.overflowY\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Causes any 'auto' overflow values to resolves to 'scroll' or 'hidden'.\\n\\t// Useful for preserving scrollbar widths regardless of future resizes.\\n\\t// Can pass in scrollbarWidths for optimization.\\n\\tlockOverflow: function(scrollbarWidths) {\\n\\t\\tvar overflowX = this.overflowX;\\n\\t\\tvar overflowY = this.overflowY;\\n\\n\\t\\tscrollbarWidths = scrollbarWidths || this.getScrollbarWidths();\\n\\n\\t\\tif (overflowX === 'auto') {\\n\\t\\t\\toverflowX = (\\n\\t\\t\\t\\t\\tscrollbarWidths.top || scrollbarWidths.bottom || // horizontal scrollbars?\\n\\t\\t\\t\\t\\t// OR scrolling pane with massless scrollbars?\\n\\t\\t\\t\\t\\tthis.scrollEl[0].scrollWidth - 1 > this.scrollEl[0].clientWidth\\n\\t\\t\\t\\t\\t\\t// subtract 1 because of IE off-by-one issue\\n\\t\\t\\t\\t) ? 'scroll' : 'hidden';\\n\\t\\t}\\n\\n\\t\\tif (overflowY === 'auto') {\\n\\t\\t\\toverflowY = (\\n\\t\\t\\t\\t\\tscrollbarWidths.left || scrollbarWidths.right || // vertical scrollbars?\\n\\t\\t\\t\\t\\t// OR scrolling pane with massless scrollbars?\\n\\t\\t\\t\\t\\tthis.scrollEl[0].scrollHeight - 1 > this.scrollEl[0].clientHeight\\n\\t\\t\\t\\t\\t\\t// subtract 1 because of IE off-by-one issue\\n\\t\\t\\t\\t) ? 'scroll' : 'hidden';\\n\\t\\t}\\n\\n\\t\\tthis.scrollEl.css({ 'overflow-x': overflowX, 'overflow-y': overflowY });\\n\\t},\\n\\n\\n\\t// Getters / Setters\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tsetHeight: function(height) {\\n\\t\\tthis.scrollEl.height(height);\\n\\t},\\n\\n\\n\\tgetScrollTop: function() {\\n\\t\\treturn this.scrollEl.scrollTop();\\n\\t},\\n\\n\\n\\tsetScrollTop: function(top) {\\n\\t\\tthis.scrollEl.scrollTop(top);\\n\\t},\\n\\n\\n\\tgetClientWidth: function() {\\n\\t\\treturn this.scrollEl[0].clientWidth;\\n\\t},\\n\\n\\n\\tgetClientHeight: function() {\\n\\t\\treturn this.scrollEl[0].clientHeight;\\n\\t},\\n\\n\\n\\tgetScrollbarWidths: function() {\\n\\t\\treturn getScrollbarWidths(this.scrollEl);\\n\\t}\\n\\n});\\n\\n;;\\nfunction Iterator(items) {\\n    this.items = items || [];\\n}\\n\\n\\n/* Calls a method on every item passing the arguments through */\\nIterator.prototype.proxyCall = function(methodName) {\\n    var args = Array.prototype.slice.call(arguments, 1);\\n    var results = [];\\n\\n    this.items.forEach(function(item) {\\n        results.push(item[methodName].apply(item, args));\\n    });\\n\\n    return results;\\n};\\n\\n;;\\n\\n/* Toolbar with buttons and title\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nfunction Toolbar(calendar, toolbarOptions) {\\n\\tvar t = this;\\n\\n\\t// exports\\n\\tt.setToolbarOptions = setToolbarOptions;\\n\\tt.render = render;\\n\\tt.removeElement = removeElement;\\n\\tt.updateTitle = updateTitle;\\n\\tt.activateButton = activateButton;\\n\\tt.deactivateButton = deactivateButton;\\n\\tt.disableButton = disableButton;\\n\\tt.enableButton = enableButton;\\n\\tt.getViewsWithButtons = getViewsWithButtons;\\n\\tt.el = null; // mirrors local `el`\\n\\n\\t// locals\\n\\tvar el;\\n\\tvar viewsWithButtons = [];\\n\\tvar tm;\\n\\n\\t// method to update toolbar-specific options, not calendar-wide options\\n\\tfunction setToolbarOptions(newToolbarOptions) {\\n\\t\\ttoolbarOptions = newToolbarOptions;\\n\\t}\\n\\n\\t// can be called repeatedly and will rerender\\n\\tfunction render() {\\n\\t\\tvar sections = toolbarOptions.layout;\\n\\n\\t\\ttm = calendar.options.theme ? 'ui' : 'fc';\\n\\n\\t\\tif (sections) {\\n\\t\\t\\tif (!el) {\\n\\t\\t\\t\\tel = this.el = $(\\\"<div class='fc-toolbar \\\"+ toolbarOptions.extraClasses + \\\"'/>\\\");\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tel.empty();\\n\\t\\t\\t}\\n\\t\\t\\tel.append(renderSection('left'))\\n\\t\\t\\t\\t.append(renderSection('right'))\\n\\t\\t\\t\\t.append(renderSection('center'))\\n\\t\\t\\t\\t.append('<div class=\\\"fc-clear\\\"/>');\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tremoveElement();\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction removeElement() {\\n\\t\\tif (el) {\\n\\t\\t\\tel.remove();\\n\\t\\t\\tel = t.el = null;\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction renderSection(position) {\\n\\t\\tvar sectionEl = $('<div class=\\\"fc-' + position + '\\\"/>');\\n\\t\\tvar buttonStr = toolbarOptions.layout[position];\\n\\n\\t\\tif (buttonStr) {\\n\\t\\t\\t$.each(buttonStr.split(' '), function(i) {\\n\\t\\t\\t\\tvar groupChildren = $();\\n\\t\\t\\t\\tvar isOnlyButtons = true;\\n\\t\\t\\t\\tvar groupEl;\\n\\n\\t\\t\\t\\t$.each(this.split(','), function(j, buttonName) {\\n\\t\\t\\t\\t\\tvar customButtonProps;\\n\\t\\t\\t\\t\\tvar viewSpec;\\n\\t\\t\\t\\t\\tvar buttonClick;\\n\\t\\t\\t\\t\\tvar overrideText; // text explicitly set by calendar's constructor options. overcomes icons\\n\\t\\t\\t\\t\\tvar defaultText;\\n\\t\\t\\t\\t\\tvar themeIcon;\\n\\t\\t\\t\\t\\tvar normalIcon;\\n\\t\\t\\t\\t\\tvar innerHtml;\\n\\t\\t\\t\\t\\tvar classes;\\n\\t\\t\\t\\t\\tvar button; // the element\\n\\n\\t\\t\\t\\t\\tif (buttonName == 'title') {\\n\\t\\t\\t\\t\\t\\tgroupChildren = groupChildren.add($('<h2>&nbsp;</h2>')); // we always want it to take up height\\n\\t\\t\\t\\t\\t\\tisOnlyButtons = false;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\tif ((customButtonProps = (calendar.options.customButtons || {})[buttonName])) {\\n\\t\\t\\t\\t\\t\\t\\tbuttonClick = function(ev) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (customButtonProps.click) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcustomButtonProps.click.call(button[0], ev);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\toverrideText = ''; // icons will override text\\n\\t\\t\\t\\t\\t\\t\\tdefaultText = customButtonProps.text;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse if ((viewSpec = calendar.getViewSpec(buttonName))) {\\n\\t\\t\\t\\t\\t\\t\\tbuttonClick = function() {\\n\\t\\t\\t\\t\\t\\t\\t\\tcalendar.changeView(buttonName);\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\tviewsWithButtons.push(buttonName);\\n\\t\\t\\t\\t\\t\\t\\toverrideText = viewSpec.buttonTextOverride;\\n\\t\\t\\t\\t\\t\\t\\tdefaultText = viewSpec.buttonTextDefault;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse if (calendar[buttonName]) { // a calendar method\\n\\t\\t\\t\\t\\t\\t\\tbuttonClick = function() {\\n\\t\\t\\t\\t\\t\\t\\t\\tcalendar[buttonName]();\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\toverrideText = (calendar.overrides.buttonText || {})[buttonName];\\n\\t\\t\\t\\t\\t\\t\\tdefaultText = calendar.options.buttonText[buttonName]; // everything else is considered default\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif (buttonClick) {\\n\\n\\t\\t\\t\\t\\t\\t\\tthemeIcon =\\n\\t\\t\\t\\t\\t\\t\\t\\tcustomButtonProps ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcustomButtonProps.themeIcon :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcalendar.options.themeButtonIcons[buttonName];\\n\\n\\t\\t\\t\\t\\t\\t\\tnormalIcon =\\n\\t\\t\\t\\t\\t\\t\\t\\tcustomButtonProps ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcustomButtonProps.icon :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcalendar.options.buttonIcons[buttonName];\\n\\n\\t\\t\\t\\t\\t\\t\\tif (overrideText) {\\n\\t\\t\\t\\t\\t\\t\\t\\tinnerHtml = htmlEscape(overrideText);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\telse if (themeIcon && calendar.options.theme) {\\n\\t\\t\\t\\t\\t\\t\\t\\tinnerHtml = \\\"<span class='ui-icon ui-icon-\\\" + themeIcon + \\\"'></span>\\\";\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\telse if (normalIcon && !calendar.options.theme) {\\n\\t\\t\\t\\t\\t\\t\\t\\tinnerHtml = \\\"<span class='fc-icon fc-icon-\\\" + normalIcon + \\\"'></span>\\\";\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\t\\t\\tinnerHtml = htmlEscape(defaultText);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tclasses = [\\n\\t\\t\\t\\t\\t\\t\\t\\t'fc-' + buttonName + '-button',\\n\\t\\t\\t\\t\\t\\t\\t\\ttm + '-button',\\n\\t\\t\\t\\t\\t\\t\\t\\ttm + '-state-default'\\n\\t\\t\\t\\t\\t\\t\\t];\\n\\n\\t\\t\\t\\t\\t\\t\\tbutton = $( // type=\\\"button\\\" so that it doesn't submit a form\\n\\t\\t\\t\\t\\t\\t\\t\\t'<button type=\\\"button\\\" class=\\\"' + classes.join(' ') + '\\\">' +\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tinnerHtml +\\n\\t\\t\\t\\t\\t\\t\\t\\t'</button>'\\n\\t\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t\\t\\t.click(function(ev) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// don't process clicks for disabled buttons\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (!button.hasClass(tm + '-state-disabled')) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbuttonClick(ev);\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// after the click action, if the button becomes the \\\"active\\\" tab, or disabled,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// it should never have a hover class, so remove it now.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbutton.hasClass(tm + '-state-active') ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbutton.hasClass(tm + '-state-disabled')\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbutton.removeClass(tm + '-state-hover');\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t\\t.mousedown(function() {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// the *down* effect (mouse pressed in).\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// only on buttons that are not the \\\"active\\\" tab, or disabled\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbutton\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.not('.' + tm + '-state-active')\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.not('.' + tm + '-state-disabled')\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.addClass(tm + '-state-down');\\n\\t\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t\\t.mouseup(function() {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// undo the *down* effect\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbutton.removeClass(tm + '-state-down');\\n\\t\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t\\t.hover(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfunction() {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// the *hover* effect.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// only on buttons that are not the \\\"active\\\" tab, or disabled\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbutton\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.not('.' + tm + '-state-active')\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.not('.' + tm + '-state-disabled')\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.addClass(tm + '-state-hover');\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfunction() {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// undo the *hover* effect\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbutton\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.removeClass(tm + '-state-hover')\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.removeClass(tm + '-state-down'); // if mouseleave happens before mouseup\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\tgroupChildren = groupChildren.add(button);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tif (isOnlyButtons) {\\n\\t\\t\\t\\t\\tgroupChildren\\n\\t\\t\\t\\t\\t\\t.first().addClass(tm + '-corner-left').end()\\n\\t\\t\\t\\t\\t\\t.last().addClass(tm + '-corner-right').end();\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (groupChildren.length > 1) {\\n\\t\\t\\t\\t\\tgroupEl = $('<div/>');\\n\\t\\t\\t\\t\\tif (isOnlyButtons) {\\n\\t\\t\\t\\t\\t\\tgroupEl.addClass('fc-button-group');\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tgroupEl.append(groupChildren);\\n\\t\\t\\t\\t\\tsectionEl.append(groupEl);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\tsectionEl.append(groupChildren); // 1 or 0 children\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\treturn sectionEl;\\n\\t}\\n\\n\\n\\tfunction updateTitle(text) {\\n\\t\\tif (el) {\\n\\t\\t\\tel.find('h2').text(text);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction activateButton(buttonName) {\\n\\t\\tif (el) {\\n\\t\\t\\tel.find('.fc-' + buttonName + '-button')\\n\\t\\t\\t\\t.addClass(tm + '-state-active');\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction deactivateButton(buttonName) {\\n\\t\\tif (el) {\\n\\t\\t\\tel.find('.fc-' + buttonName + '-button')\\n\\t\\t\\t\\t.removeClass(tm + '-state-active');\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction disableButton(buttonName) {\\n\\t\\tif (el) {\\n\\t\\t\\tel.find('.fc-' + buttonName + '-button')\\n\\t\\t\\t\\t.prop('disabled', true)\\n\\t\\t\\t\\t.addClass(tm + '-state-disabled');\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction enableButton(buttonName) {\\n\\t\\tif (el) {\\n\\t\\t\\tel.find('.fc-' + buttonName + '-button')\\n\\t\\t\\t\\t.prop('disabled', false)\\n\\t\\t\\t\\t.removeClass(tm + '-state-disabled');\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction getViewsWithButtons() {\\n\\t\\treturn viewsWithButtons;\\n\\t}\\n\\n}\\n\\n;;\\n\\nvar Calendar = FC.Calendar = Class.extend({\\n\\n\\tdirDefaults: null, // option defaults related to LTR or RTL\\n\\tlocaleDefaults: null, // option defaults related to current locale\\n\\toverrides: null, // option overrides given to the fullCalendar constructor\\n\\tdynamicOverrides: null, // options set with dynamic setter method. higher precedence than view overrides.\\n\\toptions: null, // all defaults combined with overrides\\n\\tviewSpecCache: null, // cache of view definitions\\n\\tview: null, // current View object\\n\\theader: null,\\n\\tfooter: null,\\n\\tloadingLevel: 0, // number of simultaneous loading tasks\\n\\n\\n\\t// a lot of this class' OOP logic is scoped within this constructor function,\\n\\t// but in the future, write individual methods on the prototype.\\n\\tconstructor: Calendar_constructor,\\n\\n\\n\\t// Subclasses can override this for initialization logic after the constructor has been called\\n\\tinitialize: function() {\\n\\t},\\n\\n\\n\\t// Computes the flattened options hash for the calendar and assigns to `this.options`.\\n\\t// Assumes this.overrides and this.dynamicOverrides have already been initialized.\\n\\tpopulateOptionsHash: function() {\\n\\t\\tvar locale, localeDefaults;\\n\\t\\tvar isRTL, dirDefaults;\\n\\n\\t\\tlocale = firstDefined( // explicit locale option given?\\n\\t\\t\\tthis.dynamicOverrides.locale,\\n\\t\\t\\tthis.overrides.locale\\n\\t\\t);\\n\\t\\tlocaleDefaults = localeOptionHash[locale];\\n\\t\\tif (!localeDefaults) { // explicit locale option not given or invalid?\\n\\t\\t\\tlocale = Calendar.defaults.locale;\\n\\t\\t\\tlocaleDefaults = localeOptionHash[locale] || {};\\n\\t\\t}\\n\\n\\t\\tisRTL = firstDefined( // based on options computed so far, is direction RTL?\\n\\t\\t\\tthis.dynamicOverrides.isRTL,\\n\\t\\t\\tthis.overrides.isRTL,\\n\\t\\t\\tlocaleDefaults.isRTL,\\n\\t\\t\\tCalendar.defaults.isRTL\\n\\t\\t);\\n\\t\\tdirDefaults = isRTL ? Calendar.rtlDefaults : {};\\n\\n\\t\\tthis.dirDefaults = dirDefaults;\\n\\t\\tthis.localeDefaults = localeDefaults;\\n\\t\\tthis.options = mergeOptions([ // merge defaults and overrides. lowest to highest precedence\\n\\t\\t\\tCalendar.defaults, // global defaults\\n\\t\\t\\tdirDefaults,\\n\\t\\t\\tlocaleDefaults,\\n\\t\\t\\tthis.overrides,\\n\\t\\t\\tthis.dynamicOverrides\\n\\t\\t]);\\n\\t\\tpopulateInstanceComputableOptions(this.options); // fill in gaps with computed options\\n\\t},\\n\\n\\n\\t// Gets information about how to create a view. Will use a cache.\\n\\tgetViewSpec: function(viewType) {\\n\\t\\tvar cache = this.viewSpecCache;\\n\\n\\t\\treturn cache[viewType] || (cache[viewType] = this.buildViewSpec(viewType));\\n\\t},\\n\\n\\n\\t// Given a duration singular unit, like \\\"week\\\" or \\\"day\\\", finds a matching view spec.\\n\\t// Preference is given to views that have corresponding buttons.\\n\\tgetUnitViewSpec: function(unit) {\\n\\t\\tvar viewTypes;\\n\\t\\tvar i;\\n\\t\\tvar spec;\\n\\n\\t\\tif ($.inArray(unit, intervalUnits) != -1) {\\n\\n\\t\\t\\t// put views that have buttons first. there will be duplicates, but oh well\\n\\t\\t\\tviewTypes = this.header.getViewsWithButtons(); // TODO: include footer as well?\\n\\t\\t\\t$.each(FC.views, function(viewType) { // all views\\n\\t\\t\\t\\tviewTypes.push(viewType);\\n\\t\\t\\t});\\n\\n\\t\\t\\tfor (i = 0; i < viewTypes.length; i++) {\\n\\t\\t\\t\\tspec = this.getViewSpec(viewTypes[i]);\\n\\t\\t\\t\\tif (spec) {\\n\\t\\t\\t\\t\\tif (spec.singleUnit == unit) {\\n\\t\\t\\t\\t\\t\\treturn spec;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Builds an object with information on how to create a given view\\n\\tbuildViewSpec: function(requestedViewType) {\\n\\t\\tvar viewOverrides = this.overrides.views || {};\\n\\t\\tvar specChain = []; // for the view. lowest to highest priority\\n\\t\\tvar defaultsChain = []; // for the view. lowest to highest priority\\n\\t\\tvar overridesChain = []; // for the view. lowest to highest priority\\n\\t\\tvar viewType = requestedViewType;\\n\\t\\tvar spec; // for the view\\n\\t\\tvar overrides; // for the view\\n\\t\\tvar duration;\\n\\t\\tvar unit;\\n\\n\\t\\t// iterate from the specific view definition to a more general one until we hit an actual View class\\n\\t\\twhile (viewType) {\\n\\t\\t\\tspec = fcViews[viewType];\\n\\t\\t\\toverrides = viewOverrides[viewType];\\n\\t\\t\\tviewType = null; // clear. might repopulate for another iteration\\n\\n\\t\\t\\tif (typeof spec === 'function') { // TODO: deprecate\\n\\t\\t\\t\\tspec = { 'class': spec };\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (spec) {\\n\\t\\t\\t\\tspecChain.unshift(spec);\\n\\t\\t\\t\\tdefaultsChain.unshift(spec.defaults || {});\\n\\t\\t\\t\\tduration = duration || spec.duration;\\n\\t\\t\\t\\tviewType = viewType || spec.type;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (overrides) {\\n\\t\\t\\t\\toverridesChain.unshift(overrides); // view-specific option hashes have options at zero-level\\n\\t\\t\\t\\tduration = duration || overrides.duration;\\n\\t\\t\\t\\tviewType = viewType || overrides.type;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tspec = mergeProps(specChain);\\n\\t\\tspec.type = requestedViewType;\\n\\t\\tif (!spec['class']) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tif (duration) {\\n\\t\\t\\tduration = moment.duration(duration);\\n\\t\\t\\tif (duration.valueOf()) { // valid?\\n\\t\\t\\t\\tspec.duration = duration;\\n\\t\\t\\t\\tunit = computeIntervalUnit(duration);\\n\\n\\t\\t\\t\\t// view is a single-unit duration, like \\\"week\\\" or \\\"day\\\"\\n\\t\\t\\t\\t// incorporate options for this. lowest priority\\n\\t\\t\\t\\tif (duration.as(unit) === 1) {\\n\\t\\t\\t\\t\\tspec.singleUnit = unit;\\n\\t\\t\\t\\t\\toverridesChain.unshift(viewOverrides[unit] || {});\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tspec.defaults = mergeOptions(defaultsChain);\\n\\t\\tspec.overrides = mergeOptions(overridesChain);\\n\\n\\t\\tthis.buildViewSpecOptions(spec);\\n\\t\\tthis.buildViewSpecButtonText(spec, requestedViewType);\\n\\n\\t\\treturn spec;\\n\\t},\\n\\n\\n\\t// Builds and assigns a view spec's options object from its already-assigned defaults and overrides\\n\\tbuildViewSpecOptions: function(spec) {\\n\\t\\tspec.options = mergeOptions([ // lowest to highest priority\\n\\t\\t\\tCalendar.defaults, // global defaults\\n\\t\\t\\tspec.defaults, // view's defaults (from ViewSubclass.defaults)\\n\\t\\t\\tthis.dirDefaults,\\n\\t\\t\\tthis.localeDefaults, // locale and dir take precedence over view's defaults!\\n\\t\\t\\tthis.overrides, // calendar's overrides (options given to constructor)\\n\\t\\t\\tspec.overrides, // view's overrides (view-specific options)\\n\\t\\t\\tthis.dynamicOverrides // dynamically set via setter. highest precedence\\n\\t\\t]);\\n\\t\\tpopulateInstanceComputableOptions(spec.options);\\n\\t},\\n\\n\\n\\t// Computes and assigns a view spec's buttonText-related options\\n\\tbuildViewSpecButtonText: function(spec, requestedViewType) {\\n\\n\\t\\t// given an options object with a possible `buttonText` hash, lookup the buttonText for the\\n\\t\\t// requested view, falling back to a generic unit entry like \\\"week\\\" or \\\"day\\\"\\n\\t\\tfunction queryButtonText(options) {\\n\\t\\t\\tvar buttonText = options.buttonText || {};\\n\\t\\t\\treturn buttonText[requestedViewType] ||\\n\\t\\t\\t\\t// view can decide to look up a certain key\\n\\t\\t\\t\\t(spec.buttonTextKey ? buttonText[spec.buttonTextKey] : null) ||\\n\\t\\t\\t\\t// a key like \\\"month\\\"\\n\\t\\t\\t\\t(spec.singleUnit ? buttonText[spec.singleUnit] : null);\\n\\t\\t}\\n\\n\\t\\t// highest to lowest priority\\n\\t\\tspec.buttonTextOverride =\\n\\t\\t\\tqueryButtonText(this.dynamicOverrides) ||\\n\\t\\t\\tqueryButtonText(this.overrides) || // constructor-specified buttonText lookup hash takes precedence\\n\\t\\t\\tspec.overrides.buttonText; // `buttonText` for view-specific options is a string\\n\\n\\t\\t// highest to lowest priority. mirrors buildViewSpecOptions\\n\\t\\tspec.buttonTextDefault =\\n\\t\\t\\tqueryButtonText(this.localeDefaults) ||\\n\\t\\t\\tqueryButtonText(this.dirDefaults) ||\\n\\t\\t\\tspec.defaults.buttonText || // a single string. from ViewSubclass.defaults\\n\\t\\t\\tqueryButtonText(Calendar.defaults) ||\\n\\t\\t\\t(spec.duration ? this.humanizeDuration(spec.duration) : null) || // like \\\"3 days\\\"\\n\\t\\t\\trequestedViewType; // fall back to given view name\\n\\t},\\n\\n\\n\\t// Given a view name for a custom view or a standard view, creates a ready-to-go View object\\n\\tinstantiateView: function(viewType) {\\n\\t\\tvar spec = this.getViewSpec(viewType);\\n\\n\\t\\treturn new spec['class'](this, viewType, spec.options, spec.duration);\\n\\t},\\n\\n\\n\\t// Returns a boolean about whether the view is okay to instantiate at some point\\n\\tisValidViewType: function(viewType) {\\n\\t\\treturn Boolean(this.getViewSpec(viewType));\\n\\t},\\n\\n\\n\\t// Should be called when any type of async data fetching begins\\n\\tpushLoading: function() {\\n\\t\\tif (!(this.loadingLevel++)) {\\n\\t\\t\\tthis.publiclyTrigger('loading', null, true, this.view);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Should be called when any type of async data fetching completes\\n\\tpopLoading: function() {\\n\\t\\tif (!(--this.loadingLevel)) {\\n\\t\\t\\tthis.publiclyTrigger('loading', null, false, this.view);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Given arguments to the select method in the API, returns a span (unzoned start/end and other info)\\n\\tbuildSelectSpan: function(zonedStartInput, zonedEndInput) {\\n\\t\\tvar start = this.moment(zonedStartInput).stripZone();\\n\\t\\tvar end;\\n\\n\\t\\tif (zonedEndInput) {\\n\\t\\t\\tend = this.moment(zonedEndInput).stripZone();\\n\\t\\t}\\n\\t\\telse if (start.hasTime()) {\\n\\t\\t\\tend = start.clone().add(this.defaultTimedEventDuration);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tend = start.clone().add(this.defaultAllDayEventDuration);\\n\\t\\t}\\n\\n\\t\\treturn { start: start, end: end };\\n\\t}\\n\\n});\\n\\n\\nCalendar.mixin(EmitterMixin);\\n\\n\\nfunction Calendar_constructor(element, overrides) {\\n\\tvar t = this;\\n\\n\\n\\t// Exports\\n\\t// -----------------------------------------------------------------------------------\\n\\n\\tt.render = render;\\n\\tt.destroy = destroy;\\n\\tt.rerenderEvents = rerenderEvents;\\n\\tt.changeView = renderView; // `renderView` will switch to another view\\n\\tt.select = select;\\n\\tt.unselect = unselect;\\n\\tt.prev = prev;\\n\\tt.next = next;\\n\\tt.prevYear = prevYear;\\n\\tt.nextYear = nextYear;\\n\\tt.today = today;\\n\\tt.gotoDate = gotoDate;\\n\\tt.incrementDate = incrementDate;\\n\\tt.zoomTo = zoomTo;\\n\\tt.getDate = getDate;\\n\\tt.getCalendar = getCalendar;\\n\\tt.getView = getView;\\n\\tt.option = option; // getter/setter method\\n\\tt.publiclyTrigger = publiclyTrigger;\\n\\n\\n\\t// Options\\n\\t// -----------------------------------------------------------------------------------\\n\\n\\tt.dynamicOverrides = {};\\n\\tt.viewSpecCache = {};\\n\\tt.optionHandlers = {}; // for Calendar.options.js\\n\\tt.overrides = $.extend({}, overrides); // make a copy\\n\\n\\tt.populateOptionsHash(); // sets this.options\\n\\n\\n\\n\\t// Locale-data Internals\\n\\t// -----------------------------------------------------------------------------------\\n\\t// Apply overrides to the current locale's data\\n\\n\\tvar localeData;\\n\\n\\t// Called immediately, and when any of the options change.\\n\\t// Happens before any internal objects rebuild or rerender, because this is very core.\\n\\tt.bindOptions([\\n\\t\\t'locale', 'monthNames', 'monthNamesShort', 'dayNames', 'dayNamesShort', 'firstDay', 'weekNumberCalculation'\\n\\t], function(locale, monthNames, monthNamesShort, dayNames, dayNamesShort, firstDay, weekNumberCalculation) {\\n\\n\\t\\t// normalize\\n\\t\\tif (weekNumberCalculation === 'iso') {\\n\\t\\t\\tweekNumberCalculation = 'ISO'; // normalize\\n\\t\\t}\\n\\n\\t\\tlocaleData = createObject( // make a cheap copy\\n\\t\\t\\tgetMomentLocaleData(locale) // will fall back to en\\n\\t\\t);\\n\\n\\t\\tif (monthNames) {\\n\\t\\t\\tlocaleData._months = monthNames;\\n\\t\\t}\\n\\t\\tif (monthNamesShort) {\\n\\t\\t\\tlocaleData._monthsShort = monthNamesShort;\\n\\t\\t}\\n\\t\\tif (dayNames) {\\n\\t\\t\\tlocaleData._weekdays = dayNames;\\n\\t\\t}\\n\\t\\tif (dayNamesShort) {\\n\\t\\t\\tlocaleData._weekdaysShort = dayNamesShort;\\n\\t\\t}\\n\\n\\t\\tif (firstDay == null && weekNumberCalculation === 'ISO') {\\n\\t\\t\\tfirstDay = 1;\\n\\t\\t}\\n\\t\\tif (firstDay != null) {\\n\\t\\t\\tvar _week = createObject(localeData._week); // _week: { dow: # }\\n\\t\\t\\t_week.dow = firstDay;\\n\\t\\t\\tlocaleData._week = _week;\\n\\t\\t}\\n\\n\\t\\tif ( // whitelist certain kinds of input\\n\\t\\t\\tweekNumberCalculation === 'ISO' ||\\n\\t\\t\\tweekNumberCalculation === 'local' ||\\n\\t\\t\\ttypeof weekNumberCalculation === 'function'\\n\\t\\t) {\\n\\t\\t\\tlocaleData._fullCalendar_weekCalc = weekNumberCalculation; // moment-ext will know what to do with it\\n\\t\\t}\\n\\n\\t\\t// If the internal current date object already exists, move to new locale.\\n\\t\\t// We do NOT need to do this technique for event dates, because this happens when converting to \\\"segments\\\".\\n\\t\\tif (date) {\\n\\t\\t\\tlocalizeMoment(date); // sets to localeData\\n\\t\\t}\\n\\t});\\n\\n\\n\\t// Calendar-specific Date Utilities\\n\\t// -----------------------------------------------------------------------------------\\n\\n\\n\\tt.defaultAllDayEventDuration = moment.duration(t.options.defaultAllDayEventDuration);\\n\\tt.defaultTimedEventDuration = moment.duration(t.options.defaultTimedEventDuration);\\n\\n\\n\\t// Builds a moment using the settings of the current calendar: timezone and locale.\\n\\t// Accepts anything the vanilla moment() constructor accepts.\\n\\tt.moment = function() {\\n\\t\\tvar mom;\\n\\n\\t\\tif (t.options.timezone === 'local') {\\n\\t\\t\\tmom = FC.moment.apply(null, arguments);\\n\\n\\t\\t\\t// Force the moment to be local, because FC.moment doesn't guarantee it.\\n\\t\\t\\tif (mom.hasTime()) { // don't give ambiguously-timed moments a local zone\\n\\t\\t\\t\\tmom.local();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse if (t.options.timezone === 'UTC') {\\n\\t\\t\\tmom = FC.moment.utc.apply(null, arguments); // process as UTC\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tmom = FC.moment.parseZone.apply(null, arguments); // let the input decide the zone\\n\\t\\t}\\n\\n\\t\\tlocalizeMoment(mom);\\n\\n\\t\\treturn mom;\\n\\t};\\n\\n\\n\\t// Updates the given moment's locale settings to the current calendar locale settings.\\n\\tfunction localizeMoment(mom) {\\n\\t\\tmom._locale = localeData;\\n\\t}\\n\\tt.localizeMoment = localizeMoment;\\n\\n\\n\\t// Returns a boolean about whether or not the calendar knows how to calculate\\n\\t// the timezone offset of arbitrary dates in the current timezone.\\n\\tt.getIsAmbigTimezone = function() {\\n\\t\\treturn t.options.timezone !== 'local' && t.options.timezone !== 'UTC';\\n\\t};\\n\\n\\n\\t// Returns a copy of the given date in the current timezone. Has no effect on dates without times.\\n\\tt.applyTimezone = function(date) {\\n\\t\\tif (!date.hasTime()) {\\n\\t\\t\\treturn date.clone();\\n\\t\\t}\\n\\n\\t\\tvar zonedDate = t.moment(date.toArray());\\n\\t\\tvar timeAdjust = date.time() - zonedDate.time();\\n\\t\\tvar adjustedZonedDate;\\n\\n\\t\\t// Safari sometimes has problems with this coersion when near DST. Adjust if necessary. (bug #2396)\\n\\t\\tif (timeAdjust) { // is the time result different than expected?\\n\\t\\t\\tadjustedZonedDate = zonedDate.clone().add(timeAdjust); // add milliseconds\\n\\t\\t\\tif (date.time() - adjustedZonedDate.time() === 0) { // does it match perfectly now?\\n\\t\\t\\t\\tzonedDate = adjustedZonedDate;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn zonedDate;\\n\\t};\\n\\n\\n\\t// Returns a moment for the current date, as defined by the client's computer or from the `now` option.\\n\\t// Will return an moment with an ambiguous timezone.\\n\\tt.getNow = function() {\\n\\t\\tvar now = t.options.now;\\n\\t\\tif (typeof now === 'function') {\\n\\t\\t\\tnow = now();\\n\\t\\t}\\n\\t\\treturn t.moment(now).stripZone();\\n\\t};\\n\\n\\n\\t// Get an event's normalized end date. If not present, calculate it from the defaults.\\n\\tt.getEventEnd = function(event) {\\n\\t\\tif (event.end) {\\n\\t\\t\\treturn event.end.clone();\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn t.getDefaultEventEnd(event.allDay, event.start);\\n\\t\\t}\\n\\t};\\n\\n\\n\\t// Given an event's allDay status and start date, return what its fallback end date should be.\\n\\t// TODO: rename to computeDefaultEventEnd\\n\\tt.getDefaultEventEnd = function(allDay, zonedStart) {\\n\\t\\tvar end = zonedStart.clone();\\n\\n\\t\\tif (allDay) {\\n\\t\\t\\tend.stripTime().add(t.defaultAllDayEventDuration);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tend.add(t.defaultTimedEventDuration);\\n\\t\\t}\\n\\n\\t\\tif (t.getIsAmbigTimezone()) {\\n\\t\\t\\tend.stripZone(); // we don't know what the tzo should be\\n\\t\\t}\\n\\n\\t\\treturn end;\\n\\t};\\n\\n\\n\\t// Produces a human-readable string for the given duration.\\n\\t// Side-effect: changes the locale of the given duration.\\n\\tt.humanizeDuration = function(duration) {\\n\\t\\treturn duration.locale(t.options.locale).humanize();\\n\\t};\\n\\n\\n\\n\\t// Imports\\n\\t// -----------------------------------------------------------------------------------\\n\\n\\n\\tEventManager.call(t);\\n\\n\\n\\n\\t// Locals\\n\\t// -----------------------------------------------------------------------------------\\n\\n\\n\\tvar _element = element[0];\\n\\tvar toolbarsManager;\\n\\tvar header;\\n\\tvar footer;\\n\\tvar content;\\n\\tvar tm; // for making theme classes\\n\\tvar currentView; // NOTE: keep this in sync with this.view\\n\\tvar viewsByType = {}; // holds all instantiated view instances, current or not\\n\\tvar suggestedViewHeight;\\n\\tvar windowResizeProxy; // wraps the windowResize function\\n\\tvar ignoreWindowResize = 0;\\n\\tvar date; // unzoned\\n\\n\\n\\n\\t// Main Rendering\\n\\t// -----------------------------------------------------------------------------------\\n\\n\\n\\t// compute the initial ambig-timezone date\\n\\tif (t.options.defaultDate != null) {\\n\\t\\tdate = t.moment(t.options.defaultDate).stripZone();\\n\\t}\\n\\telse {\\n\\t\\tdate = t.getNow(); // getNow already returns unzoned\\n\\t}\\n\\n\\n\\tfunction render() {\\n\\t\\tif (!content) {\\n\\t\\t\\tinitialRender();\\n\\t\\t}\\n\\t\\telse if (elementVisible()) {\\n\\t\\t\\t// mainly for the public API\\n\\t\\t\\tcalcSize();\\n\\t\\t\\trenderView();\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction initialRender() {\\n\\t\\telement.addClass('fc');\\n\\n\\t\\t// event delegation for nav links\\n\\t\\telement.on('click.fc', 'a[data-goto]', function(ev) {\\n\\t\\t\\tvar anchorEl = $(this);\\n\\t\\t\\tvar gotoOptions = anchorEl.data('goto'); // will automatically parse JSON\\n\\t\\t\\tvar date = t.moment(gotoOptions.date);\\n\\t\\t\\tvar viewType = gotoOptions.type;\\n\\n\\t\\t\\t// property like \\\"navLinkDayClick\\\". might be a string or a function\\n\\t\\t\\tvar customAction = currentView.opt('navLink' + capitaliseFirstLetter(viewType) + 'Click');\\n\\n\\t\\t\\tif (typeof customAction === 'function') {\\n\\t\\t\\t\\tcustomAction(date, ev);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tif (typeof customAction === 'string') {\\n\\t\\t\\t\\t\\tviewType = customAction;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tzoomTo(date, viewType);\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\t// called immediately, and upon option change\\n\\t\\tt.bindOption('theme', function(theme) {\\n\\t\\t\\ttm = theme ? 'ui' : 'fc'; // affects a larger scope\\n\\t\\t\\telement.toggleClass('ui-widget', theme);\\n\\t\\t\\telement.toggleClass('fc-unthemed', !theme);\\n\\t\\t});\\n\\n\\t\\t// called immediately, and upon option change.\\n\\t\\t// HACK: locale often affects isRTL, so we explicitly listen to that too.\\n\\t\\tt.bindOptions([ 'isRTL', 'locale' ], function(isRTL) {\\n\\t\\t\\telement.toggleClass('fc-ltr', !isRTL);\\n\\t\\t\\telement.toggleClass('fc-rtl', isRTL);\\n\\t\\t});\\n\\n\\t\\tcontent = $(\\\"<div class='fc-view-container'/>\\\").prependTo(element);\\n\\n\\t\\tvar toolbars = buildToolbars();\\n\\t\\ttoolbarsManager = new Iterator(toolbars);\\n\\n\\t\\theader = t.header = toolbars[0];\\n\\t\\tfooter = t.footer = toolbars[1];\\n\\n\\t\\trenderHeader();\\n\\t\\trenderFooter();\\n\\t\\trenderView(t.options.defaultView);\\n\\n\\t\\tif (t.options.handleWindowResize) {\\n\\t\\t\\twindowResizeProxy = debounce(windowResize, t.options.windowResizeDelay); // prevents rapid calls\\n\\t\\t\\t$(window).resize(windowResizeProxy);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction destroy() {\\n\\n\\t\\tif (currentView) {\\n\\t\\t\\tcurrentView.removeElement();\\n\\n\\t\\t\\t// NOTE: don't null-out currentView/t.view in case API methods are called after destroy.\\n\\t\\t\\t// It is still the \\\"current\\\" view, just not rendered.\\n\\t\\t}\\n\\n\\t\\ttoolbarsManager.proxyCall('removeElement');\\n\\t\\tcontent.remove();\\n\\t\\telement.removeClass('fc fc-ltr fc-rtl fc-unthemed ui-widget');\\n\\n\\t\\telement.off('.fc'); // unbind nav link handlers\\n\\n\\t\\tif (windowResizeProxy) {\\n\\t\\t\\t$(window).unbind('resize', windowResizeProxy);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction elementVisible() {\\n\\t\\treturn element.is(':visible');\\n\\t}\\n\\n\\n\\n\\t// View Rendering\\n\\t// -----------------------------------------------------------------------------------\\n\\n\\n\\t// Renders a view because of a date change, view-type change, or for the first time.\\n\\t// If not given a viewType, keep the current view but render different dates.\\n\\t// Accepts an optional scroll state to restore to.\\n\\tfunction renderView(viewType, forcedScroll) {\\n\\t\\tignoreWindowResize++;\\n\\n\\t\\tvar needsClearView = currentView && viewType && currentView.type !== viewType;\\n\\n\\t\\t// if viewType is changing, remove the old view's rendering\\n\\t\\tif (needsClearView) {\\n\\t\\t\\tfreezeContentHeight(); // prevent a scroll jump when view element is removed\\n\\t\\t\\tclearView();\\n\\t\\t}\\n\\n\\t\\t// if viewType changed, or the view was never created, create a fresh view\\n\\t\\tif (!currentView && viewType) {\\n\\t\\t\\tcurrentView = t.view =\\n\\t\\t\\t\\tviewsByType[viewType] ||\\n\\t\\t\\t\\t(viewsByType[viewType] = t.instantiateView(viewType));\\n\\n\\t\\t\\tcurrentView.setElement(\\n\\t\\t\\t\\t$(\\\"<div class='fc-view fc-\\\" + viewType + \\\"-view' />\\\").appendTo(content)\\n\\t\\t\\t);\\n\\t\\t\\ttoolbarsManager.proxyCall('activateButton', viewType);\\n\\t\\t}\\n\\n\\t\\tif (currentView) {\\n\\n\\t\\t\\t// in case the view should render a period of time that is completely hidden\\n\\t\\t\\tdate = currentView.massageCurrentDate(date);\\n\\n\\t\\t\\t// render or rerender the view\\n\\t\\t\\tif (\\n\\t\\t\\t\\t!currentView.isDateSet ||\\n\\t\\t\\t\\t!( // NOT within interval range signals an implicit date window change\\n\\t\\t\\t\\t\\tdate >= currentView.intervalStart &&\\n\\t\\t\\t\\t\\tdate < currentView.intervalEnd\\n\\t\\t\\t\\t)\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (elementVisible()) {\\n\\n\\t\\t\\t\\t\\tif (forcedScroll) {\\n\\t\\t\\t\\t\\t\\tcurrentView.captureInitialScroll(forcedScroll);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tcurrentView.setDate(date, forcedScroll);\\n\\n\\t\\t\\t\\t\\tif (forcedScroll) {\\n\\t\\t\\t\\t\\t\\tcurrentView.releaseScroll();\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// need to do this after View::render, so dates are calculated\\n\\t\\t\\t\\t\\t// NOTE: view updates title text proactively\\n\\t\\t\\t\\t\\tupdateToolbarsTodayButton();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (needsClearView) {\\n\\t\\t\\tthawContentHeight();\\n\\t\\t}\\n\\n\\t\\tignoreWindowResize--;\\n\\t}\\n\\n\\n\\t// Unrenders the current view and reflects this change in the Header.\\n\\t// Unregsiters the `currentView`, but does not remove from viewByType hash.\\n\\tfunction clearView() {\\n\\t\\ttoolbarsManager.proxyCall('deactivateButton', currentView.type);\\n\\t\\tcurrentView.removeElement();\\n\\t\\tcurrentView = t.view = null;\\n\\t}\\n\\n\\n\\t// Destroys the view, including the view object. Then, re-instantiates it and renders it.\\n\\t// Maintains the same scroll state.\\n\\t// TODO: maintain any other user-manipulated state.\\n\\tfunction reinitView() {\\n\\t\\tignoreWindowResize++;\\n\\t\\tfreezeContentHeight();\\n\\n\\t\\tvar viewType = currentView.type;\\n\\t\\tvar scrollState = currentView.queryScroll();\\n\\t\\tclearView();\\n\\t\\tcalcSize();\\n\\t\\trenderView(viewType, scrollState);\\n\\n\\t\\tthawContentHeight();\\n\\t\\tignoreWindowResize--;\\n\\t}\\n\\n\\n\\n\\t// Resizing\\n\\t// -----------------------------------------------------------------------------------\\n\\n\\n\\tt.getSuggestedViewHeight = function() {\\n\\t\\tif (suggestedViewHeight === undefined) {\\n\\t\\t\\tcalcSize();\\n\\t\\t}\\n\\t\\treturn suggestedViewHeight;\\n\\t};\\n\\n\\n\\tt.isHeightAuto = function() {\\n\\t\\treturn t.options.contentHeight === 'auto' || t.options.height === 'auto';\\n\\t};\\n\\n\\n\\tfunction updateSize(shouldRecalc) {\\n\\t\\tif (elementVisible()) {\\n\\n\\t\\t\\tif (shouldRecalc) {\\n\\t\\t\\t\\t_calcSize();\\n\\t\\t\\t}\\n\\n\\t\\t\\tignoreWindowResize++;\\n\\t\\t\\tcurrentView.updateSize(true); // isResize=true. will poll getSuggestedViewHeight() and isHeightAuto()\\n\\t\\t\\tignoreWindowResize--;\\n\\n\\t\\t\\treturn true; // signal success\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction calcSize() {\\n\\t\\tif (elementVisible()) {\\n\\t\\t\\t_calcSize();\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction _calcSize() { // assumes elementVisible\\n\\t\\tvar contentHeightInput = t.options.contentHeight;\\n\\t\\tvar heightInput = t.options.height;\\n\\n\\t\\tif (typeof contentHeightInput === 'number') { // exists and not 'auto'\\n\\t\\t\\tsuggestedViewHeight = contentHeightInput;\\n\\t\\t}\\n\\t\\telse if (typeof contentHeightInput === 'function') { // exists and is a function\\n\\t\\t\\tsuggestedViewHeight = contentHeightInput();\\n\\t\\t}\\n\\t\\telse if (typeof heightInput === 'number') { // exists and not 'auto'\\n\\t\\t\\tsuggestedViewHeight = heightInput - queryToolbarsHeight();\\n\\t\\t}\\n\\t\\telse if (typeof heightInput === 'function') { // exists and is a function\\n\\t\\t\\tsuggestedViewHeight = heightInput() - queryToolbarsHeight();\\n\\t\\t}\\n\\t\\telse if (heightInput === 'parent') { // set to height of parent element\\n\\t\\t\\tsuggestedViewHeight = element.parent().height() - queryToolbarsHeight();\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tsuggestedViewHeight = Math.round(content.width() / Math.max(t.options.aspectRatio, .5));\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction queryToolbarsHeight() {\\n\\t\\treturn toolbarsManager.items.reduce(function(accumulator, toolbar) {\\n\\t\\t\\tvar toolbarHeight = toolbar.el ? toolbar.el.outerHeight(true) : 0; // includes margin\\n\\t\\t\\treturn accumulator + toolbarHeight;\\n\\t\\t}, 0);\\n\\t}\\n\\n\\n\\tfunction windowResize(ev) {\\n\\t\\tif (\\n\\t\\t\\t!ignoreWindowResize &&\\n\\t\\t\\tev.target === window && // so we don't process jqui \\\"resize\\\" events that have bubbled up\\n\\t\\t\\tcurrentView.start // view has already been rendered\\n\\t\\t) {\\n\\t\\t\\tif (updateSize(true)) {\\n\\t\\t\\t\\tcurrentView.publiclyTrigger('windowResize', _element);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\n\\n\\t/* Event Rendering\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\tfunction rerenderEvents() { // API method. destroys old events if previously rendered.\\n\\t\\tif (elementVisible()) {\\n\\t\\t\\tt.reportEventChange(); // will re-trasmit events to the view, causing a rerender\\n\\t\\t}\\n\\t}\\n\\n\\n\\n\\t/* Toolbars\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\tfunction buildToolbars() {\\n\\t\\treturn [\\n\\t\\t\\tnew Toolbar(t, computeHeaderOptions()),\\n\\t\\t\\tnew Toolbar(t, computeFooterOptions())\\n\\t\\t];\\n\\t}\\n\\n\\n\\tfunction computeHeaderOptions() {\\n\\t\\treturn {\\n\\t\\t\\textraClasses: 'fc-header-toolbar',\\n\\t\\t\\tlayout: t.options.header\\n\\t\\t};\\n\\t}\\n\\n\\n\\tfunction computeFooterOptions() {\\n\\t\\treturn {\\n\\t\\t\\textraClasses: 'fc-footer-toolbar',\\n\\t\\t\\tlayout: t.options.footer\\n\\t\\t};\\n\\t}\\n\\n\\n\\t// can be called repeatedly and Header will rerender\\n\\tfunction renderHeader() {\\n\\t\\theader.setToolbarOptions(computeHeaderOptions());\\n\\t\\theader.render();\\n\\t\\tif (header.el) {\\n\\t\\t\\telement.prepend(header.el);\\n\\t\\t}\\n\\t}\\n\\n\\n\\t// can be called repeatedly and Footer will rerender\\n\\tfunction renderFooter() {\\n\\t\\tfooter.setToolbarOptions(computeFooterOptions());\\n\\t\\tfooter.render();\\n\\t\\tif (footer.el) {\\n\\t\\t\\telement.append(footer.el);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tt.setToolbarsTitle = function(title) {\\n\\t\\ttoolbarsManager.proxyCall('updateTitle', title);\\n\\t};\\n\\n\\n\\tfunction updateToolbarsTodayButton() {\\n\\t\\tvar now = t.getNow();\\n\\t\\tif (now >= currentView.intervalStart && now < currentView.intervalEnd) {\\n\\t\\t\\ttoolbarsManager.proxyCall('disableButton', 'today');\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\ttoolbarsManager.proxyCall('enableButton', 'today');\\n\\t\\t}\\n\\t}\\n\\n\\n\\n\\t/* Selection\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\t// this public method receives start/end dates in any format, with any timezone\\n\\tfunction select(zonedStartInput, zonedEndInput) {\\n\\t\\tcurrentView.select(\\n\\t\\t\\tt.buildSelectSpan.apply(t, arguments)\\n\\t\\t);\\n\\t}\\n\\n\\n\\tfunction unselect() { // safe to be called before renderView\\n\\t\\tif (currentView) {\\n\\t\\t\\tcurrentView.unselect();\\n\\t\\t}\\n\\t}\\n\\n\\n\\n\\t/* Date\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\tfunction prev() {\\n\\t\\tdate = currentView.computePrevDate(date);\\n\\t\\trenderView();\\n\\t}\\n\\n\\n\\tfunction next() {\\n\\t\\tdate = currentView.computeNextDate(date);\\n\\t\\trenderView();\\n\\t}\\n\\n\\n\\tfunction prevYear() {\\n\\t\\tdate.add(-1, 'years');\\n\\t\\trenderView();\\n\\t}\\n\\n\\n\\tfunction nextYear() {\\n\\t\\tdate.add(1, 'years');\\n\\t\\trenderView();\\n\\t}\\n\\n\\n\\tfunction today() {\\n\\t\\tdate = t.getNow();\\n\\t\\trenderView();\\n\\t}\\n\\n\\n\\tfunction gotoDate(zonedDateInput) {\\n\\t\\tdate = t.moment(zonedDateInput).stripZone();\\n\\t\\trenderView();\\n\\t}\\n\\n\\n\\tfunction incrementDate(delta) {\\n\\t\\tdate.add(moment.duration(delta));\\n\\t\\trenderView();\\n\\t}\\n\\n\\n\\t// Forces navigation to a view for the given date.\\n\\t// `viewType` can be a specific view name or a generic one like \\\"week\\\" or \\\"day\\\".\\n\\tfunction zoomTo(newDate, viewType) {\\n\\t\\tvar spec;\\n\\n\\t\\tviewType = viewType || 'day'; // day is default zoom\\n\\t\\tspec = t.getViewSpec(viewType) || t.getUnitViewSpec(viewType);\\n\\n\\t\\tdate = newDate.clone();\\n\\t\\trenderView(spec ? spec.type : null);\\n\\t}\\n\\n\\n\\t// for external API\\n\\tfunction getDate() {\\n\\t\\treturn t.applyTimezone(date); // infuse the calendar's timezone\\n\\t}\\n\\n\\n\\n\\t/* Height \\\"Freezing\\\"\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\tt.freezeContentHeight = freezeContentHeight;\\n\\tt.thawContentHeight = thawContentHeight;\\n\\n\\tvar freezeContentHeightDepth = 0;\\n\\n\\n\\tfunction freezeContentHeight() {\\n\\t\\tif (!(freezeContentHeightDepth++)) {\\n\\t\\t\\tcontent.css({\\n\\t\\t\\t\\twidth: '100%',\\n\\t\\t\\t\\theight: content.height(),\\n\\t\\t\\t\\toverflow: 'hidden'\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction thawContentHeight() {\\n\\t\\tif (!(--freezeContentHeightDepth)) {\\n\\t\\t\\tcontent.css({\\n\\t\\t\\t\\twidth: '',\\n\\t\\t\\t\\theight: '',\\n\\t\\t\\t\\toverflow: ''\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\n\\n\\t/* Misc\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\tfunction getCalendar() {\\n\\t\\treturn t;\\n\\t}\\n\\n\\n\\tfunction getView() {\\n\\t\\treturn currentView;\\n\\t}\\n\\n\\n\\tfunction option(name, value) {\\n\\t\\tvar newOptionHash;\\n\\n\\t\\tif (typeof name === 'string') {\\n\\t\\t\\tif (value === undefined) { // getter\\n\\t\\t\\t\\treturn t.options[name];\\n\\t\\t\\t}\\n\\t\\t\\telse { // setter for individual option\\n\\t\\t\\t\\tnewOptionHash = {};\\n\\t\\t\\t\\tnewOptionHash[name] = value;\\n\\t\\t\\t\\tsetOptions(newOptionHash);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse if (typeof name === 'object') { // compound setter with object input\\n\\t\\t\\tsetOptions(name);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction setOptions(newOptionHash) {\\n\\t\\tvar optionCnt = 0;\\n\\t\\tvar optionName;\\n\\n\\t\\tfor (optionName in newOptionHash) {\\n\\t\\t\\tt.dynamicOverrides[optionName] = newOptionHash[optionName];\\n\\t\\t}\\n\\n\\t\\tt.viewSpecCache = {}; // the dynamic override invalidates the options in this cache, so just clear it\\n\\t\\tt.populateOptionsHash(); // this.options needs to be recomputed after the dynamic override\\n\\n\\t\\t// trigger handlers after this.options has been updated\\n\\t\\tfor (optionName in newOptionHash) {\\n\\t\\t\\tt.triggerOptionHandlers(optionName); // recall bindOption/bindOptions\\n\\t\\t\\toptionCnt++;\\n\\t\\t}\\n\\n\\t\\t// special-case handling of single option change.\\n\\t\\t// if only one option change, `optionName` will be its name.\\n\\t\\tif (optionCnt === 1) {\\n\\t\\t\\tif (optionName === 'height' || optionName === 'contentHeight' || optionName === 'aspectRatio') {\\n\\t\\t\\t\\tupdateSize(true); // true = allow recalculation of height\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\telse if (optionName === 'defaultDate') {\\n\\t\\t\\t\\treturn; // can't change date this way. use gotoDate instead\\n\\t\\t\\t}\\n\\t\\t\\telse if (optionName === 'businessHours') {\\n\\t\\t\\t\\tif (currentView) {\\n\\t\\t\\t\\t\\tcurrentView.unrenderBusinessHours();\\n\\t\\t\\t\\t\\tcurrentView.renderBusinessHours();\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\telse if (optionName === 'timezone') {\\n\\t\\t\\t\\tt.rezoneArrayEventSources();\\n\\t\\t\\t\\tt.refetchEvents();\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// catch-all. rerender the header and footer and rebuild/rerender the current view\\n\\t\\trenderHeader();\\n\\t\\trenderFooter();\\n\\t\\tviewsByType = {}; // even non-current views will be affected by this option change. do before rerender\\n\\t\\treinitView();\\n\\t}\\n\\n\\n\\tfunction publiclyTrigger(name, thisObj) {\\n\\t\\tvar args = Array.prototype.slice.call(arguments, 2);\\n\\n\\t\\tthisObj = thisObj || _element;\\n\\t\\tthis.triggerWith(name, thisObj, args); // Emitter's method\\n\\n\\t\\tif (t.options[name]) {\\n\\t\\t\\treturn t.options[name].apply(thisObj, args);\\n\\t\\t}\\n\\t}\\n\\n\\tt.initialize();\\n}\\n\\n;;\\n/*\\nOptions binding/triggering system.\\n*/\\nCalendar.mixin({\\n\\n\\t// A map of option names to arrays of handler objects. Initialized to {} in Calendar.\\n\\t// Format for a handler object:\\n\\t// {\\n\\t//   func // callback function to be called upon change\\n\\t//   names // option names whose values should be given to func\\n\\t// }\\n\\toptionHandlers: null, \\n\\n\\t// Calls handlerFunc immediately, and when the given option has changed.\\n\\t// handlerFunc will be given the option value.\\n\\tbindOption: function(optionName, handlerFunc) {\\n\\t\\tthis.bindOptions([ optionName ], handlerFunc);\\n\\t},\\n\\n\\t// Calls handlerFunc immediately, and when any of the given options change.\\n\\t// handlerFunc will be given each option value as ordered function arguments.\\n\\tbindOptions: function(optionNames, handlerFunc) {\\n\\t\\tvar handlerObj = { func: handlerFunc, names: optionNames };\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < optionNames.length; i++) {\\n\\t\\t\\tthis.registerOptionHandlerObj(optionNames[i], handlerObj);\\n\\t\\t}\\n\\n\\t\\tthis.triggerOptionHandlerObj(handlerObj);\\n\\t},\\n\\n\\t// Puts the given handler object into the internal hash\\n\\tregisterOptionHandlerObj: function(optionName, handlerObj) {\\n\\t\\t(this.optionHandlers[optionName] || (this.optionHandlers[optionName] = []))\\n\\t\\t\\t.push(handlerObj);\\n\\t},\\n\\n\\t// Reports that the given option has changed, and calls all appropriate handlers.\\n\\ttriggerOptionHandlers: function(optionName) {\\n\\t\\tvar handlerObjs = this.optionHandlers[optionName] || [];\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < handlerObjs.length; i++) {\\n\\t\\t\\tthis.triggerOptionHandlerObj(handlerObjs[i]);\\n\\t\\t}\\n\\t},\\n\\n\\t// Calls the callback for a specific handler object, passing in the appropriate arguments.\\n\\ttriggerOptionHandlerObj: function(handlerObj) {\\n\\t\\tvar optionNames = handlerObj.names;\\n\\t\\tvar optionValues = [];\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < optionNames.length; i++) {\\n\\t\\t\\toptionValues.push(this.options[optionNames[i]]);\\n\\t\\t}\\n\\n\\t\\thandlerObj.func.apply(this, optionValues); // maintain the Calendar's `this` context\\n\\t}\\n\\n});\\n\\n;;\\n\\nCalendar.defaults = {\\n\\n\\ttitleRangeSeparator: ' \\\\u2013 ', // en dash\\n\\tmonthYearFormat: 'MMMM YYYY', // required for en. other locales rely on datepicker computable option\\n\\n\\tdefaultTimedEventDuration: '02:00:00',\\n\\tdefaultAllDayEventDuration: { days: 1 },\\n\\tforceEventDuration: false,\\n\\tnextDayThreshold: '09:00:00', // 9am\\n\\n\\t// display\\n\\tdefaultView: 'month',\\n\\taspectRatio: 1.35,\\n\\theader: {\\n\\t\\tleft: 'title',\\n\\t\\tcenter: '',\\n\\t\\tright: 'today prev,next'\\n\\t},\\n\\tweekends: true,\\n\\tweekNumbers: false,\\n\\n\\tweekNumberTitle: 'W',\\n\\tweekNumberCalculation: 'local',\\n\\t\\n\\t//editable: false,\\n\\n\\t//nowIndicator: false,\\n\\n\\tscrollTime: '06:00:00',\\n\\t\\n\\t// event ajax\\n\\tlazyFetching: true,\\n\\tstartParam: 'start',\\n\\tendParam: 'end',\\n\\ttimezoneParam: 'timezone',\\n\\n\\ttimezone: false,\\n\\n\\t//allDayDefault: undefined,\\n\\n\\t// locale\\n\\tisRTL: false,\\n\\tbuttonText: {\\n\\t\\tprev: \\\"prev\\\",\\n\\t\\tnext: \\\"next\\\",\\n\\t\\tprevYear: \\\"prev year\\\",\\n\\t\\tnextYear: \\\"next year\\\",\\n\\t\\tyear: 'year', // TODO: locale files need to specify this\\n\\t\\ttoday: 'today',\\n\\t\\tmonth: 'month',\\n\\t\\tweek: 'week',\\n\\t\\tday: 'day'\\n\\t},\\n\\n\\tbuttonIcons: {\\n\\t\\tprev: 'left-single-arrow',\\n\\t\\tnext: 'right-single-arrow',\\n\\t\\tprevYear: 'left-double-arrow',\\n\\t\\tnextYear: 'right-double-arrow'\\n\\t},\\n\\n\\tallDayText: 'all-day',\\n\\t\\n\\t// jquery-ui theming\\n\\ttheme: false,\\n\\tthemeButtonIcons: {\\n\\t\\tprev: 'circle-triangle-w',\\n\\t\\tnext: 'circle-triangle-e',\\n\\t\\tprevYear: 'seek-prev',\\n\\t\\tnextYear: 'seek-next'\\n\\t},\\n\\n\\t//eventResizableFromStart: false,\\n\\tdragOpacity: .75,\\n\\tdragRevertDuration: 500,\\n\\tdragScroll: true,\\n\\t\\n\\t//selectable: false,\\n\\tunselectAuto: true,\\n\\t\\n\\tdropAccept: '*',\\n\\n\\teventOrder: 'title',\\n\\t//eventRenderWait: null,\\n\\n\\teventLimit: false,\\n\\teventLimitText: 'more',\\n\\teventLimitClick: 'popover',\\n\\tdayPopoverFormat: 'LL',\\n\\t\\n\\thandleWindowResize: true,\\n\\twindowResizeDelay: 100, // milliseconds before an updateSize happens\\n\\n\\tlongPressDelay: 1000\\n\\t\\n};\\n\\n\\nCalendar.englishDefaults = { // used by locale.js\\n\\tdayPopoverFormat: 'dddd, MMMM D'\\n};\\n\\n\\nCalendar.rtlDefaults = { // right-to-left defaults\\n\\theader: { // TODO: smarter solution (first/center/last ?)\\n\\t\\tleft: 'next,prev today',\\n\\t\\tcenter: '',\\n\\t\\tright: 'title'\\n\\t},\\n\\tbuttonIcons: {\\n\\t\\tprev: 'right-single-arrow',\\n\\t\\tnext: 'left-single-arrow',\\n\\t\\tprevYear: 'right-double-arrow',\\n\\t\\tnextYear: 'left-double-arrow'\\n\\t},\\n\\tthemeButtonIcons: {\\n\\t\\tprev: 'circle-triangle-e',\\n\\t\\tnext: 'circle-triangle-w',\\n\\t\\tnextYear: 'seek-prev',\\n\\t\\tprevYear: 'seek-next'\\n\\t}\\n};\\n\\n;;\\n\\nvar localeOptionHash = FC.locales = {}; // initialize and expose\\n\\n\\n// TODO: document the structure and ordering of a FullCalendar locale file\\n\\n\\n// Initialize jQuery UI datepicker translations while using some of the translations\\n// Will set this as the default locales for datepicker.\\nFC.datepickerLocale = function(localeCode, dpLocaleCode, dpOptions) {\\n\\n\\t// get the FullCalendar internal option hash for this locale. create if necessary\\n\\tvar fcOptions = localeOptionHash[localeCode] || (localeOptionHash[localeCode] = {});\\n\\n\\t// transfer some simple options from datepicker to fc\\n\\tfcOptions.isRTL = dpOptions.isRTL;\\n\\tfcOptions.weekNumberTitle = dpOptions.weekHeader;\\n\\n\\t// compute some more complex options from datepicker\\n\\t$.each(dpComputableOptions, function(name, func) {\\n\\t\\tfcOptions[name] = func(dpOptions);\\n\\t});\\n\\n\\t// is jQuery UI Datepicker is on the page?\\n\\tif ($.datepicker) {\\n\\n\\t\\t// Register the locale data.\\n\\t\\t// FullCalendar and MomentJS use locale codes like \\\"pt-br\\\" but Datepicker\\n\\t\\t// does it like \\\"pt-BR\\\" or if it doesn't have the locale, maybe just \\\"pt\\\".\\n\\t\\t// Make an alias so the locale can be referenced either way.\\n\\t\\t$.datepicker.regional[dpLocaleCode] =\\n\\t\\t\\t$.datepicker.regional[localeCode] = // alias\\n\\t\\t\\t\\tdpOptions;\\n\\n\\t\\t// Alias 'en' to the default locale data. Do this every time.\\n\\t\\t$.datepicker.regional.en = $.datepicker.regional[''];\\n\\n\\t\\t// Set as Datepicker's global defaults.\\n\\t\\t$.datepicker.setDefaults(dpOptions);\\n\\t}\\n};\\n\\n\\n// Sets FullCalendar-specific translations. Will set the locales as the global default.\\nFC.locale = function(localeCode, newFcOptions) {\\n\\tvar fcOptions;\\n\\tvar momOptions;\\n\\n\\t// get the FullCalendar internal option hash for this locale. create if necessary\\n\\tfcOptions = localeOptionHash[localeCode] || (localeOptionHash[localeCode] = {});\\n\\n\\t// provided new options for this locales? merge them in\\n\\tif (newFcOptions) {\\n\\t\\tfcOptions = localeOptionHash[localeCode] = mergeOptions([ fcOptions, newFcOptions ]);\\n\\t}\\n\\n\\t// compute locale options that weren't defined.\\n\\t// always do this. newFcOptions can be undefined when initializing from i18n file,\\n\\t// so no way to tell if this is an initialization or a default-setting.\\n\\tmomOptions = getMomentLocaleData(localeCode); // will fall back to en\\n\\t$.each(momComputableOptions, function(name, func) {\\n\\t\\tif (fcOptions[name] == null) {\\n\\t\\t\\tfcOptions[name] = func(momOptions, fcOptions);\\n\\t\\t}\\n\\t});\\n\\n\\t// set it as the default locale for FullCalendar\\n\\tCalendar.defaults.locale = localeCode;\\n};\\n\\n\\n// NOTE: can't guarantee any of these computations will run because not every locale has datepicker\\n// configs, so make sure there are English fallbacks for these in the defaults file.\\nvar dpComputableOptions = {\\n\\n\\tbuttonText: function(dpOptions) {\\n\\t\\treturn {\\n\\t\\t\\t// the translations sometimes wrongly contain HTML entities\\n\\t\\t\\tprev: stripHtmlEntities(dpOptions.prevText),\\n\\t\\t\\tnext: stripHtmlEntities(dpOptions.nextText),\\n\\t\\t\\ttoday: stripHtmlEntities(dpOptions.currentText)\\n\\t\\t};\\n\\t},\\n\\n\\t// Produces format strings like \\\"MMMM YYYY\\\" -> \\\"September 2014\\\"\\n\\tmonthYearFormat: function(dpOptions) {\\n\\t\\treturn dpOptions.showMonthAfterYear ?\\n\\t\\t\\t'YYYY[' + dpOptions.yearSuffix + '] MMMM' :\\n\\t\\t\\t'MMMM YYYY[' + dpOptions.yearSuffix + ']';\\n\\t}\\n\\n};\\n\\nvar momComputableOptions = {\\n\\n\\t// Produces format strings like \\\"ddd M/D\\\" -> \\\"Fri 9/15\\\"\\n\\tdayOfMonthFormat: function(momOptions, fcOptions) {\\n\\t\\tvar format = momOptions.longDateFormat('l'); // for the format like \\\"M/D/YYYY\\\"\\n\\n\\t\\t// strip the year off the edge, as well as other misc non-whitespace chars\\n\\t\\tformat = format.replace(/^Y+[^\\\\w\\\\s]*|[^\\\\w\\\\s]*Y+$/g, '');\\n\\n\\t\\tif (fcOptions.isRTL) {\\n\\t\\t\\tformat += ' ddd'; // for RTL, add day-of-week to end\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tformat = 'ddd ' + format; // for LTR, add day-of-week to beginning\\n\\t\\t}\\n\\t\\treturn format;\\n\\t},\\n\\n\\t// Produces format strings like \\\"h:mma\\\" -> \\\"6:00pm\\\"\\n\\tmediumTimeFormat: function(momOptions) { // can't be called `timeFormat` because collides with option\\n\\t\\treturn momOptions.longDateFormat('LT')\\n\\t\\t\\t.replace(/\\\\s*a$/i, 'a'); // convert AM/PM/am/pm to lowercase. remove any spaces beforehand\\n\\t},\\n\\n\\t// Produces format strings like \\\"h(:mm)a\\\" -> \\\"6pm\\\" / \\\"6:30pm\\\"\\n\\tsmallTimeFormat: function(momOptions) {\\n\\t\\treturn momOptions.longDateFormat('LT')\\n\\t\\t\\t.replace(':mm', '(:mm)')\\n\\t\\t\\t.replace(/(\\\\Wmm)$/, '($1)') // like above, but for foreign locales\\n\\t\\t\\t.replace(/\\\\s*a$/i, 'a'); // convert AM/PM/am/pm to lowercase. remove any spaces beforehand\\n\\t},\\n\\n\\t// Produces format strings like \\\"h(:mm)t\\\" -> \\\"6p\\\" / \\\"6:30p\\\"\\n\\textraSmallTimeFormat: function(momOptions) {\\n\\t\\treturn momOptions.longDateFormat('LT')\\n\\t\\t\\t.replace(':mm', '(:mm)')\\n\\t\\t\\t.replace(/(\\\\Wmm)$/, '($1)') // like above, but for foreign locales\\n\\t\\t\\t.replace(/\\\\s*a$/i, 't'); // convert to AM/PM/am/pm to lowercase one-letter. remove any spaces beforehand\\n\\t},\\n\\n\\t// Produces format strings like \\\"ha\\\" / \\\"H\\\" -> \\\"6pm\\\" / \\\"18\\\"\\n\\thourFormat: function(momOptions) {\\n\\t\\treturn momOptions.longDateFormat('LT')\\n\\t\\t\\t.replace(':mm', '')\\n\\t\\t\\t.replace(/(\\\\Wmm)$/, '') // like above, but for foreign locales\\n\\t\\t\\t.replace(/\\\\s*a$/i, 'a'); // convert AM/PM/am/pm to lowercase. remove any spaces beforehand\\n\\t},\\n\\n\\t// Produces format strings like \\\"h:mm\\\" -> \\\"6:30\\\" (with no AM/PM)\\n\\tnoMeridiemTimeFormat: function(momOptions) {\\n\\t\\treturn momOptions.longDateFormat('LT')\\n\\t\\t\\t.replace(/\\\\s*a$/i, ''); // remove trailing AM/PM\\n\\t}\\n\\n};\\n\\n\\n// options that should be computed off live calendar options (considers override options)\\n// TODO: best place for this? related to locale?\\n// TODO: flipping text based on isRTL is a bad idea because the CSS `direction` might want to handle it\\nvar instanceComputableOptions = {\\n\\n\\t// Produces format strings for results like \\\"Mo 16\\\"\\n\\tsmallDayDateFormat: function(options) {\\n\\t\\treturn options.isRTL ?\\n\\t\\t\\t'D dd' :\\n\\t\\t\\t'dd D';\\n\\t},\\n\\n\\t// Produces format strings for results like \\\"Wk 5\\\"\\n\\tweekFormat: function(options) {\\n\\t\\treturn options.isRTL ?\\n\\t\\t\\t'w[ ' + options.weekNumberTitle + ']' :\\n\\t\\t\\t'[' + options.weekNumberTitle + ' ]w';\\n\\t},\\n\\n\\t// Produces format strings for results like \\\"Wk5\\\"\\n\\tsmallWeekFormat: function(options) {\\n\\t\\treturn options.isRTL ?\\n\\t\\t\\t'w[' + options.weekNumberTitle + ']' :\\n\\t\\t\\t'[' + options.weekNumberTitle + ']w';\\n\\t}\\n\\n};\\n\\nfunction populateInstanceComputableOptions(options) {\\n\\t$.each(instanceComputableOptions, function(name, func) {\\n\\t\\tif (options[name] == null) {\\n\\t\\t\\toptions[name] = func(options);\\n\\t\\t}\\n\\t});\\n}\\n\\n\\n// Returns moment's internal locale data. If doesn't exist, returns English.\\nfunction getMomentLocaleData(localeCode) {\\n\\treturn moment.localeData(localeCode) || moment.localeData('en');\\n}\\n\\n\\n// Initialize English by forcing computation of moment-derived options.\\n// Also, sets it as the default.\\nFC.locale('en', Calendar.englishDefaults);\\n\\n;;\\n\\nFC.sourceNormalizers = [];\\nFC.sourceFetchers = [];\\n\\nvar ajaxDefaults = {\\n\\tdataType: 'json',\\n\\tcache: false\\n};\\n\\nvar eventGUID = 1;\\n\\n\\nfunction EventManager() { // assumed to be a calendar\\n\\tvar t = this;\\n\\n\\n\\t// exports\\n\\tt.requestEvents = requestEvents;\\n\\tt.reportEventChange = reportEventChange;\\n\\tt.isFetchNeeded = isFetchNeeded;\\n\\tt.fetchEvents = fetchEvents;\\n\\tt.fetchEventSources = fetchEventSources;\\n\\tt.refetchEvents = refetchEvents;\\n\\tt.refetchEventSources = refetchEventSources;\\n\\tt.getEventSources = getEventSources;\\n\\tt.getEventSourceById = getEventSourceById;\\n\\tt.addEventSource = addEventSource;\\n\\tt.removeEventSource = removeEventSource;\\n\\tt.removeEventSources = removeEventSources;\\n\\tt.updateEvent = updateEvent;\\n\\tt.updateEvents = updateEvents;\\n\\tt.renderEvent = renderEvent;\\n\\tt.renderEvents = renderEvents;\\n\\tt.removeEvents = removeEvents;\\n\\tt.clientEvents = clientEvents;\\n\\tt.mutateEvent = mutateEvent;\\n\\tt.normalizeEventDates = normalizeEventDates;\\n\\tt.normalizeEventTimes = normalizeEventTimes;\\n\\n\\n\\t// locals\\n\\tvar stickySource = { events: [] };\\n\\tvar sources = [ stickySource ];\\n\\tvar rangeStart, rangeEnd;\\n\\tvar pendingSourceCnt = 0; // outstanding fetch requests, max one per source\\n\\tvar cache = []; // holds events that have already been expanded\\n\\tvar prunedCache; // like cache, but only events that intersect with rangeStart/rangeEnd\\n\\n\\n\\t$.each(\\n\\t\\t(t.options.events ? [ t.options.events ] : []).concat(t.options.eventSources || []),\\n\\t\\tfunction(i, sourceInput) {\\n\\t\\t\\tvar source = buildEventSource(sourceInput);\\n\\t\\t\\tif (source) {\\n\\t\\t\\t\\tsources.push(source);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t);\\n\\n\\n\\n\\tfunction requestEvents(start, end) {\\n\\t\\tif (!t.options.lazyFetching || isFetchNeeded(start, end)) {\\n\\t\\t\\treturn fetchEvents(start, end);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn Promise.resolve(prunedCache);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction reportEventChange() {\\n\\t\\tprunedCache = filterEventsWithinRange(cache);\\n\\t\\tt.trigger('eventsReset', prunedCache);\\n\\t}\\n\\n\\n\\tfunction filterEventsWithinRange(events) {\\n\\t\\tvar filteredEvents = [];\\n\\t\\tvar i, event;\\n\\n\\t\\tfor (i = 0; i < events.length; i++) {\\n\\t\\t\\tevent = events[i];\\n\\n\\t\\t\\tif (\\n\\t\\t\\t\\tevent.start.clone().stripZone() < rangeEnd &&\\n\\t\\t\\t\\tt.getEventEnd(event).stripZone() > rangeStart\\n\\t\\t\\t) {\\n\\t\\t\\t\\tfilteredEvents.push(event);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn filteredEvents;\\n\\t}\\n\\n\\n\\tt.getEventCache = function() {\\n\\t\\treturn cache;\\n\\t};\\n\\n\\n\\tt.getPrunedEventCache = function() {\\n\\t\\treturn prunedCache;\\n\\t};\\n\\n\\n\\n\\t/* Fetching\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\t// start and end are assumed to be unzoned\\n\\tfunction isFetchNeeded(start, end) {\\n\\t\\treturn !rangeStart || // nothing has been fetched yet?\\n\\t\\t\\tstart < rangeStart || end > rangeEnd; // is part of the new range outside of the old range?\\n\\t}\\n\\n\\n\\tfunction fetchEvents(start, end) {\\n\\t\\trangeStart = start;\\n\\t\\trangeEnd = end;\\n\\t\\treturn refetchEvents();\\n\\t}\\n\\n\\n\\t// poorly named. fetches all sources with current `rangeStart` and `rangeEnd`.\\n\\tfunction refetchEvents() {\\n\\t\\treturn fetchEventSources(sources, 'reset');\\n\\t}\\n\\n\\n\\t// poorly named. fetches a subset of event sources.\\n\\tfunction refetchEventSources(matchInputs) {\\n\\t\\treturn fetchEventSources(getEventSourcesByMatchArray(matchInputs));\\n\\t}\\n\\n\\n\\t// expects an array of event source objects (the originals, not copies)\\n\\t// `specialFetchType` is an optimization parameter that affects purging of the event cache.\\n\\tfunction fetchEventSources(specificSources, specialFetchType) {\\n\\t\\tvar i, source;\\n\\n\\t\\tif (specialFetchType === 'reset') {\\n\\t\\t\\tcache = [];\\n\\t\\t}\\n\\t\\telse if (specialFetchType !== 'add') {\\n\\t\\t\\tcache = excludeEventsBySources(cache, specificSources);\\n\\t\\t}\\n\\n\\t\\tfor (i = 0; i < specificSources.length; i++) {\\n\\t\\t\\tsource = specificSources[i];\\n\\n\\t\\t\\t// already-pending sources have already been accounted for in pendingSourceCnt\\n\\t\\t\\tif (source._status !== 'pending') {\\n\\t\\t\\t\\tpendingSourceCnt++;\\n\\t\\t\\t}\\n\\n\\t\\t\\tsource._fetchId = (source._fetchId || 0) + 1;\\n\\t\\t\\tsource._status = 'pending';\\n\\t\\t}\\n\\n\\t\\tfor (i = 0; i < specificSources.length; i++) {\\n\\t\\t\\tsource = specificSources[i];\\n\\t\\t\\ttryFetchEventSource(source, source._fetchId);\\n\\t\\t}\\n\\n\\t\\tif (pendingSourceCnt) {\\n\\t\\t\\treturn new Promise(function(resolve) {\\n\\t\\t\\t\\tt.one('eventsReceived', resolve); // will send prunedCache\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\telse { // executed all synchronously, or no sources at all\\n\\t\\t\\treturn Promise.resolve(prunedCache);\\n\\t\\t}\\n\\t}\\n\\n\\n\\t// fetches an event source and processes its result ONLY if it is still the current fetch.\\n\\t// caller is responsible for incrementing pendingSourceCnt first.\\n\\tfunction tryFetchEventSource(source, fetchId) {\\n\\t\\t_fetchEventSource(source, function(eventInputs) {\\n\\t\\t\\tvar isArraySource = $.isArray(source.events);\\n\\t\\t\\tvar i, eventInput;\\n\\t\\t\\tvar abstractEvent;\\n\\n\\t\\t\\tif (\\n\\t\\t\\t\\t// is this the source's most recent fetch?\\n\\t\\t\\t\\t// if not, rely on an upcoming fetch of this source to decrement pendingSourceCnt\\n\\t\\t\\t\\tfetchId === source._fetchId &&\\n\\t\\t\\t\\t// event source no longer valid?\\n\\t\\t\\t\\tsource._status !== 'rejected'\\n\\t\\t\\t) {\\n\\t\\t\\t\\tsource._status = 'resolved';\\n\\n\\t\\t\\t\\tif (eventInputs) {\\n\\t\\t\\t\\t\\tfor (i = 0; i < eventInputs.length; i++) {\\n\\t\\t\\t\\t\\t\\teventInput = eventInputs[i];\\n\\n\\t\\t\\t\\t\\t\\tif (isArraySource) { // array sources have already been convert to Event Objects\\n\\t\\t\\t\\t\\t\\t\\tabstractEvent = eventInput;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\t\\tabstractEvent = buildEventFromInput(eventInput, source);\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif (abstractEvent) { // not false (an invalid event)\\n\\t\\t\\t\\t\\t\\t\\tcache.push.apply( // append\\n\\t\\t\\t\\t\\t\\t\\t\\tcache,\\n\\t\\t\\t\\t\\t\\t\\t\\texpandEvent(abstractEvent) // add individual expanded events to the cache\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tdecrementPendingSourceCnt();\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\n\\n\\tfunction rejectEventSource(source) {\\n\\t\\tvar wasPending = source._status === 'pending';\\n\\n\\t\\tsource._status = 'rejected';\\n\\n\\t\\tif (wasPending) {\\n\\t\\t\\tdecrementPendingSourceCnt();\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction decrementPendingSourceCnt() {\\n\\t\\tpendingSourceCnt--;\\n\\t\\tif (!pendingSourceCnt) {\\n\\t\\t\\treportEventChange(cache); // updates prunedCache\\n\\t\\t\\tt.trigger('eventsReceived', prunedCache);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction _fetchEventSource(source, callback) {\\n\\t\\tvar i;\\n\\t\\tvar fetchers = FC.sourceFetchers;\\n\\t\\tvar res;\\n\\n\\t\\tfor (i=0; i<fetchers.length; i++) {\\n\\t\\t\\tres = fetchers[i].call(\\n\\t\\t\\t\\tt, // this, the Calendar object\\n\\t\\t\\t\\tsource,\\n\\t\\t\\t\\trangeStart.clone(),\\n\\t\\t\\t\\trangeEnd.clone(),\\n\\t\\t\\t\\tt.options.timezone,\\n\\t\\t\\t\\tcallback\\n\\t\\t\\t);\\n\\n\\t\\t\\tif (res === true) {\\n\\t\\t\\t\\t// the fetcher is in charge. made its own async request\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\telse if (typeof res == 'object') {\\n\\t\\t\\t\\t// the fetcher returned a new source. process it\\n\\t\\t\\t\\t_fetchEventSource(res, callback);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tvar events = source.events;\\n\\t\\tif (events) {\\n\\t\\t\\tif ($.isFunction(events)) {\\n\\t\\t\\t\\tt.pushLoading();\\n\\t\\t\\t\\tevents.call(\\n\\t\\t\\t\\t\\tt, // this, the Calendar object\\n\\t\\t\\t\\t\\trangeStart.clone(),\\n\\t\\t\\t\\t\\trangeEnd.clone(),\\n\\t\\t\\t\\t\\tt.options.timezone,\\n\\t\\t\\t\\t\\tfunction(events) {\\n\\t\\t\\t\\t\\t\\tcallback(events);\\n\\t\\t\\t\\t\\t\\tt.popLoading();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t\\telse if ($.isArray(events)) {\\n\\t\\t\\t\\tcallback(events);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tcallback();\\n\\t\\t\\t}\\n\\t\\t}else{\\n\\t\\t\\tvar url = source.url;\\n\\t\\t\\tif (url) {\\n\\t\\t\\t\\tvar success = source.success;\\n\\t\\t\\t\\tvar error = source.error;\\n\\t\\t\\t\\tvar complete = source.complete;\\n\\n\\t\\t\\t\\t// retrieve any outbound GET/POST $.ajax data from the options\\n\\t\\t\\t\\tvar customData;\\n\\t\\t\\t\\tif ($.isFunction(source.data)) {\\n\\t\\t\\t\\t\\t// supplied as a function that returns a key/value object\\n\\t\\t\\t\\t\\tcustomData = source.data();\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t// supplied as a straight key/value object\\n\\t\\t\\t\\t\\tcustomData = source.data;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// use a copy of the custom data so we can modify the parameters\\n\\t\\t\\t\\t// and not affect the passed-in object.\\n\\t\\t\\t\\tvar data = $.extend({}, customData || {});\\n\\n\\t\\t\\t\\tvar startParam = firstDefined(source.startParam, t.options.startParam);\\n\\t\\t\\t\\tvar endParam = firstDefined(source.endParam, t.options.endParam);\\n\\t\\t\\t\\tvar timezoneParam = firstDefined(source.timezoneParam, t.options.timezoneParam);\\n\\n\\t\\t\\t\\tif (startParam) {\\n\\t\\t\\t\\t\\tdata[startParam] = rangeStart.format();\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (endParam) {\\n\\t\\t\\t\\t\\tdata[endParam] = rangeEnd.format();\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (t.options.timezone && t.options.timezone != 'local') {\\n\\t\\t\\t\\t\\tdata[timezoneParam] = t.options.timezone;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tt.pushLoading();\\n\\t\\t\\t\\t$.ajax($.extend({}, ajaxDefaults, source, {\\n\\t\\t\\t\\t\\tdata: data,\\n\\t\\t\\t\\t\\tsuccess: function(events) {\\n\\t\\t\\t\\t\\t\\tevents = events || [];\\n\\t\\t\\t\\t\\t\\tvar res = applyAll(success, this, arguments);\\n\\t\\t\\t\\t\\t\\tif ($.isArray(res)) {\\n\\t\\t\\t\\t\\t\\t\\tevents = res;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tcallback(events);\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\terror: function() {\\n\\t\\t\\t\\t\\t\\tapplyAll(error, this, arguments);\\n\\t\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\tcomplete: function() {\\n\\t\\t\\t\\t\\t\\tapplyAll(complete, this, arguments);\\n\\t\\t\\t\\t\\t\\tt.popLoading();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}));\\n\\t\\t\\t}else{\\n\\t\\t\\t\\tcallback();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\n\\n\\t/* Sources\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\tfunction addEventSource(sourceInput) {\\n\\t\\tvar source = buildEventSource(sourceInput);\\n\\t\\tif (source) {\\n\\t\\t\\tsources.push(source);\\n\\t\\t\\tfetchEventSources([ source ], 'add'); // will eventually call reportEventChange\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction buildEventSource(sourceInput) { // will return undefined if invalid source\\n\\t\\tvar normalizers = FC.sourceNormalizers;\\n\\t\\tvar source;\\n\\t\\tvar i;\\n\\n\\t\\tif ($.isFunction(sourceInput) || $.isArray(sourceInput)) {\\n\\t\\t\\tsource = { events: sourceInput };\\n\\t\\t}\\n\\t\\telse if (typeof sourceInput === 'string') {\\n\\t\\t\\tsource = { url: sourceInput };\\n\\t\\t}\\n\\t\\telse if (typeof sourceInput === 'object') {\\n\\t\\t\\tsource = $.extend({}, sourceInput); // shallow copy\\n\\t\\t}\\n\\n\\t\\tif (source) {\\n\\n\\t\\t\\t// TODO: repeat code, same code for event classNames\\n\\t\\t\\tif (source.className) {\\n\\t\\t\\t\\tif (typeof source.className === 'string') {\\n\\t\\t\\t\\t\\tsource.className = source.className.split(/\\\\s+/);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t// otherwise, assumed to be an array\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tsource.className = [];\\n\\t\\t\\t}\\n\\n\\t\\t\\t// for array sources, we convert to standard Event Objects up front\\n\\t\\t\\tif ($.isArray(source.events)) {\\n\\t\\t\\t\\tsource.origArray = source.events; // for removeEventSource\\n\\t\\t\\t\\tsource.events = $.map(source.events, function(eventInput) {\\n\\t\\t\\t\\t\\treturn buildEventFromInput(eventInput, source);\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor (i=0; i<normalizers.length; i++) {\\n\\t\\t\\t\\tnormalizers[i].call(t, source);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn source;\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction removeEventSource(matchInput) {\\n\\t\\tremoveSpecificEventSources(\\n\\t\\t\\tgetEventSourcesByMatch(matchInput)\\n\\t\\t);\\n\\t}\\n\\n\\n\\t// if called with no arguments, removes all.\\n\\tfunction removeEventSources(matchInputs) {\\n\\t\\tif (matchInputs == null) {\\n\\t\\t\\tremoveSpecificEventSources(sources, true); // isAll=true\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tremoveSpecificEventSources(\\n\\t\\t\\t\\tgetEventSourcesByMatchArray(matchInputs)\\n\\t\\t\\t);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction removeSpecificEventSources(targetSources, isAll) {\\n\\t\\tvar i;\\n\\n\\t\\t// cancel pending requests\\n\\t\\tfor (i = 0; i < targetSources.length; i++) {\\n\\t\\t\\trejectEventSource(targetSources[i]);\\n\\t\\t}\\n\\n\\t\\tif (isAll) { // an optimization\\n\\t\\t\\tsources = [];\\n\\t\\t\\tcache = [];\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\t// remove from persisted source list\\n\\t\\t\\tsources = $.grep(sources, function(source) {\\n\\t\\t\\t\\tfor (i = 0; i < targetSources.length; i++) {\\n\\t\\t\\t\\t\\tif (source === targetSources[i]) {\\n\\t\\t\\t\\t\\t\\treturn false; // exclude\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn true; // include\\n\\t\\t\\t});\\n\\n\\t\\t\\tcache = excludeEventsBySources(cache, targetSources);\\n\\t\\t}\\n\\n\\t\\treportEventChange();\\n\\t}\\n\\n\\n\\tfunction getEventSources() {\\n\\t\\treturn sources.slice(1); // returns a shallow copy of sources with stickySource removed\\n\\t}\\n\\n\\n\\tfunction getEventSourceById(id) {\\n\\t\\treturn $.grep(sources, function(source) {\\n\\t\\t\\treturn source.id && source.id === id;\\n\\t\\t})[0];\\n\\t}\\n\\n\\n\\t// like getEventSourcesByMatch, but accepts multple match criteria (like multiple IDs)\\n\\tfunction getEventSourcesByMatchArray(matchInputs) {\\n\\n\\t\\t// coerce into an array\\n\\t\\tif (!matchInputs) {\\n\\t\\t\\tmatchInputs = [];\\n\\t\\t}\\n\\t\\telse if (!$.isArray(matchInputs)) {\\n\\t\\t\\tmatchInputs = [ matchInputs ];\\n\\t\\t}\\n\\n\\t\\tvar matchingSources = [];\\n\\t\\tvar i;\\n\\n\\t\\t// resolve raw inputs to real event source objects\\n\\t\\tfor (i = 0; i < matchInputs.length; i++) {\\n\\t\\t\\tmatchingSources.push.apply( // append\\n\\t\\t\\t\\tmatchingSources,\\n\\t\\t\\t\\tgetEventSourcesByMatch(matchInputs[i])\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\treturn matchingSources;\\n\\t}\\n\\n\\n\\t// matchInput can either by a real event source object, an ID, or the function/URL for the source.\\n\\t// returns an array of matching source objects.\\n\\tfunction getEventSourcesByMatch(matchInput) {\\n\\t\\tvar i, source;\\n\\n\\t\\t// given an proper event source object\\n\\t\\tfor (i = 0; i < sources.length; i++) {\\n\\t\\t\\tsource = sources[i];\\n\\t\\t\\tif (source === matchInput) {\\n\\t\\t\\t\\treturn [ source ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// an ID match\\n\\t\\tsource = getEventSourceById(matchInput);\\n\\t\\tif (source) {\\n\\t\\t\\treturn [ source ];\\n\\t\\t}\\n\\n\\t\\treturn $.grep(sources, function(source) {\\n\\t\\t\\treturn isSourcesEquivalent(matchInput, source);\\n\\t\\t});\\n\\t}\\n\\n\\n\\tfunction isSourcesEquivalent(source1, source2) {\\n\\t\\treturn source1 && source2 && getSourcePrimitive(source1) == getSourcePrimitive(source2);\\n\\t}\\n\\n\\n\\tfunction getSourcePrimitive(source) {\\n\\t\\treturn (\\n\\t\\t\\t(typeof source === 'object') ? // a normalized event source?\\n\\t\\t\\t\\t(source.origArray || source.googleCalendarId || source.url || source.events) : // get the primitive\\n\\t\\t\\t\\tnull\\n\\t\\t) ||\\n\\t\\tsource; // the given argument *is* the primitive\\n\\t}\\n\\n\\n\\t// util\\n\\t// returns a filtered array without events that are part of any of the given sources\\n\\tfunction excludeEventsBySources(specificEvents, specificSources) {\\n\\t\\treturn $.grep(specificEvents, function(event) {\\n\\t\\t\\tfor (var i = 0; i < specificSources.length; i++) {\\n\\t\\t\\t\\tif (event.source === specificSources[i]) {\\n\\t\\t\\t\\t\\treturn false; // exclude\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn true; // keep\\n\\t\\t});\\n\\t}\\n\\n\\n\\n\\t/* Manipulation\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\t// Only ever called from the externally-facing API\\n\\tfunction updateEvent(event) {\\n\\t\\tupdateEvents([ event ]);\\n\\t}\\n\\n\\n\\t// Only ever called from the externally-facing API\\n\\tfunction updateEvents(events) {\\n\\t\\tvar i, event;\\n\\n\\t\\tfor (i = 0; i < events.length; i++) {\\n\\t\\t\\tevent = events[i];\\n\\n\\t\\t\\t// massage start/end values, even if date string values\\n\\t\\t\\tevent.start = t.moment(event.start);\\n\\t\\t\\tif (event.end) {\\n\\t\\t\\t\\tevent.end = t.moment(event.end);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tevent.end = null;\\n\\t\\t\\t}\\n\\n\\t\\t\\tmutateEvent(event, getMiscEventProps(event)); // will handle start/end/allDay normalization\\n\\t\\t}\\n\\n\\t\\treportEventChange(); // reports event modifications (so we can redraw)\\n\\t}\\n\\n\\n\\t// Returns a hash of misc event properties that should be copied over to related events.\\n\\tfunction getMiscEventProps(event) {\\n\\t\\tvar props = {};\\n\\n\\t\\t$.each(event, function(name, val) {\\n\\t\\t\\tif (isMiscEventPropName(name)) {\\n\\t\\t\\t\\tif (val !== undefined && isAtomic(val)) { // a defined non-object\\n\\t\\t\\t\\t\\tprops[name] = val;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn props;\\n\\t}\\n\\n\\t// non-date-related, non-id-related, non-secret\\n\\tfunction isMiscEventPropName(name) {\\n\\t\\treturn !/^_|^(id|allDay|start|end)$/.test(name);\\n\\t}\\n\\n\\n\\t// returns the expanded events that were created\\n\\tfunction renderEvent(eventInput, stick) {\\n\\t\\treturn renderEvents([ eventInput ], stick);\\n\\t}\\n\\n\\n\\t// returns the expanded events that were created\\n\\tfunction renderEvents(eventInputs, stick) {\\n\\t\\tvar renderedEvents = [];\\n\\t\\tvar renderableEvents;\\n\\t\\tvar abstractEvent;\\n\\t\\tvar i, j, event;\\n\\n\\t\\tfor (i = 0; i < eventInputs.length; i++) {\\n\\t\\t\\tabstractEvent = buildEventFromInput(eventInputs[i]);\\n\\n\\t\\t\\tif (abstractEvent) { // not false (a valid input)\\n\\t\\t\\t\\trenderableEvents = expandEvent(abstractEvent);\\n\\n\\t\\t\\t\\tfor (j = 0; j < renderableEvents.length; j++) {\\n\\t\\t\\t\\t\\tevent = renderableEvents[j];\\n\\n\\t\\t\\t\\t\\tif (!event.source) {\\n\\t\\t\\t\\t\\t\\tif (stick) {\\n\\t\\t\\t\\t\\t\\t\\tstickySource.events.push(event);\\n\\t\\t\\t\\t\\t\\t\\tevent.source = stickySource;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tcache.push(event);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\trenderedEvents = renderedEvents.concat(renderableEvents);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (renderedEvents.length) { // any new events rendered?\\n\\t\\t\\treportEventChange();\\n\\t\\t}\\n\\n\\t\\treturn renderedEvents;\\n\\t}\\n\\n\\n\\tfunction removeEvents(filter) {\\n\\t\\tvar eventID;\\n\\t\\tvar i;\\n\\n\\t\\tif (filter == null) { // null or undefined. remove all events\\n\\t\\t\\tfilter = function() { return true; }; // will always match\\n\\t\\t}\\n\\t\\telse if (!$.isFunction(filter)) { // an event ID\\n\\t\\t\\teventID = filter + '';\\n\\t\\t\\tfilter = function(event) {\\n\\t\\t\\t\\treturn event._id == eventID;\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// Purge event(s) from our local cache\\n\\t\\tcache = $.grep(cache, filter, true); // inverse=true\\n\\n\\t\\t// Remove events from array sources.\\n\\t\\t// This works because they have been converted to official Event Objects up front.\\n\\t\\t// (and as a result, event._id has been calculated).\\n\\t\\tfor (i=0; i<sources.length; i++) {\\n\\t\\t\\tif ($.isArray(sources[i].events)) {\\n\\t\\t\\t\\tsources[i].events = $.grep(sources[i].events, filter, true);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treportEventChange();\\n\\t}\\n\\n\\n\\tfunction clientEvents(filter) {\\n\\t\\tif ($.isFunction(filter)) {\\n\\t\\t\\treturn $.grep(cache, filter);\\n\\t\\t}\\n\\t\\telse if (filter != null) { // not null, not undefined. an event ID\\n\\t\\t\\tfilter += '';\\n\\t\\t\\treturn $.grep(cache, function(e) {\\n\\t\\t\\t\\treturn e._id == filter;\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\treturn cache; // else, return all\\n\\t}\\n\\n\\n\\t// Makes sure all array event sources have their internal event objects\\n\\t// converted over to the Calendar's current timezone.\\n\\tt.rezoneArrayEventSources = function() {\\n\\t\\tvar i;\\n\\t\\tvar events;\\n\\t\\tvar j;\\n\\n\\t\\tfor (i = 0; i < sources.length; i++) {\\n\\t\\t\\tevents = sources[i].events;\\n\\t\\t\\tif ($.isArray(events)) {\\n\\n\\t\\t\\t\\tfor (j = 0; j < events.length; j++) {\\n\\t\\t\\t\\t\\trezoneEventDates(events[j]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\tfunction rezoneEventDates(event) {\\n\\t\\tevent.start = t.moment(event.start);\\n\\t\\tif (event.end) {\\n\\t\\t\\tevent.end = t.moment(event.end);\\n\\t\\t}\\n\\t\\tbackupEventDates(event);\\n\\t}\\n\\n\\n\\t/* Event Normalization\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\t// Given a raw object with key/value properties, returns an \\\"abstract\\\" Event object.\\n\\t// An \\\"abstract\\\" event is an event that, if recurring, will not have been expanded yet.\\n\\t// Will return `false` when input is invalid.\\n\\t// `source` is optional\\n\\tfunction buildEventFromInput(input, source) {\\n\\t\\tvar out = {};\\n\\t\\tvar start, end;\\n\\t\\tvar allDay;\\n\\n\\t\\tif (t.options.eventDataTransform) {\\n\\t\\t\\tinput = t.options.eventDataTransform(input);\\n\\t\\t}\\n\\t\\tif (source && source.eventDataTransform) {\\n\\t\\t\\tinput = source.eventDataTransform(input);\\n\\t\\t}\\n\\n\\t\\t// Copy all properties over to the resulting object.\\n\\t\\t// The special-case properties will be copied over afterwards.\\n\\t\\t$.extend(out, input);\\n\\n\\t\\tif (source) {\\n\\t\\t\\tout.source = source;\\n\\t\\t}\\n\\n\\t\\tout._id = input._id || (input.id === undefined ? '_fc' + eventGUID++ : input.id + '');\\n\\n\\t\\tif (input.className) {\\n\\t\\t\\tif (typeof input.className == 'string') {\\n\\t\\t\\t\\tout.className = input.className.split(/\\\\s+/);\\n\\t\\t\\t}\\n\\t\\t\\telse { // assumed to be an array\\n\\t\\t\\t\\tout.className = input.className;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tout.className = [];\\n\\t\\t}\\n\\n\\t\\tstart = input.start || input.date; // \\\"date\\\" is an alias for \\\"start\\\"\\n\\t\\tend = input.end;\\n\\n\\t\\t// parse as a time (Duration) if applicable\\n\\t\\tif (isTimeString(start)) {\\n\\t\\t\\tstart = moment.duration(start);\\n\\t\\t}\\n\\t\\tif (isTimeString(end)) {\\n\\t\\t\\tend = moment.duration(end);\\n\\t\\t}\\n\\n\\t\\tif (input.dow || moment.isDuration(start) || moment.isDuration(end)) {\\n\\n\\t\\t\\t// the event is \\\"abstract\\\" (recurring) so don't calculate exact start/end dates just yet\\n\\t\\t\\tout.start = start ? moment.duration(start) : null; // will be a Duration or null\\n\\t\\t\\tout.end = end ? moment.duration(end) : null; // will be a Duration or null\\n\\t\\t\\tout._recurring = true; // our internal marker\\n\\t\\t}\\n\\t\\telse {\\n\\n\\t\\t\\tif (start) {\\n\\t\\t\\t\\tstart = t.moment(start);\\n\\t\\t\\t\\tif (!start.isValid()) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (end) {\\n\\t\\t\\t\\tend = t.moment(end);\\n\\t\\t\\t\\tif (!end.isValid()) {\\n\\t\\t\\t\\t\\tend = null; // let defaults take over\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tallDay = input.allDay;\\n\\t\\t\\tif (allDay === undefined) { // still undefined? fallback to default\\n\\t\\t\\t\\tallDay = firstDefined(\\n\\t\\t\\t\\t\\tsource ? source.allDayDefault : undefined,\\n\\t\\t\\t\\t\\tt.options.allDayDefault\\n\\t\\t\\t\\t);\\n\\t\\t\\t\\t// still undefined? normalizeEventDates will calculate it\\n\\t\\t\\t}\\n\\n\\t\\t\\tassignDatesToEvent(start, end, allDay, out);\\n\\t\\t}\\n\\n\\t\\tt.normalizeEvent(out); // hook for external use. a prototype method\\n\\n\\t\\treturn out;\\n\\t}\\n\\tt.buildEventFromInput = buildEventFromInput;\\n\\n\\n\\t// Normalizes and assigns the given dates to the given partially-formed event object.\\n\\t// NOTE: mutates the given start/end moments. does not make a copy.\\n\\tfunction assignDatesToEvent(start, end, allDay, event) {\\n\\t\\tevent.start = start;\\n\\t\\tevent.end = end;\\n\\t\\tevent.allDay = allDay;\\n\\t\\tnormalizeEventDates(event);\\n\\t\\tbackupEventDates(event);\\n\\t}\\n\\n\\n\\t// Ensures proper values for allDay/start/end. Accepts an Event object, or a plain object with event-ish properties.\\n\\t// NOTE: Will modify the given object.\\n\\tfunction normalizeEventDates(eventProps) {\\n\\n\\t\\tnormalizeEventTimes(eventProps);\\n\\n\\t\\tif (eventProps.end && !eventProps.end.isAfter(eventProps.start)) {\\n\\t\\t\\teventProps.end = null;\\n\\t\\t}\\n\\n\\t\\tif (!eventProps.end) {\\n\\t\\t\\tif (t.options.forceEventDuration) {\\n\\t\\t\\t\\teventProps.end = t.getDefaultEventEnd(eventProps.allDay, eventProps.start);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\teventProps.end = null;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\n\\t// Ensures the allDay property exists and the timeliness of the start/end dates are consistent\\n\\tfunction normalizeEventTimes(eventProps) {\\n\\t\\tif (eventProps.allDay == null) {\\n\\t\\t\\teventProps.allDay = !(eventProps.start.hasTime() || (eventProps.end && eventProps.end.hasTime()));\\n\\t\\t}\\n\\n\\t\\tif (eventProps.allDay) {\\n\\t\\t\\teventProps.start.stripTime();\\n\\t\\t\\tif (eventProps.end) {\\n\\t\\t\\t\\t// TODO: consider nextDayThreshold here? If so, will require a lot of testing and adjustment\\n\\t\\t\\t\\teventProps.end.stripTime();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tif (!eventProps.start.hasTime()) {\\n\\t\\t\\t\\teventProps.start = t.applyTimezone(eventProps.start.time(0)); // will assign a 00:00 time\\n\\t\\t\\t}\\n\\t\\t\\tif (eventProps.end && !eventProps.end.hasTime()) {\\n\\t\\t\\t\\teventProps.end = t.applyTimezone(eventProps.end.time(0)); // will assign a 00:00 time\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\n\\t// If the given event is a recurring event, break it down into an array of individual instances.\\n\\t// If not a recurring event, return an array with the single original event.\\n\\t// If given a falsy input (probably because of a failed buildEventFromInput call), returns an empty array.\\n\\t// HACK: can override the recurring window by providing custom rangeStart/rangeEnd (for businessHours).\\n\\tfunction expandEvent(abstractEvent, _rangeStart, _rangeEnd) {\\n\\t\\tvar events = [];\\n\\t\\tvar dowHash;\\n\\t\\tvar dow;\\n\\t\\tvar i;\\n\\t\\tvar date;\\n\\t\\tvar startTime, endTime;\\n\\t\\tvar start, end;\\n\\t\\tvar event;\\n\\n\\t\\t_rangeStart = _rangeStart || rangeStart;\\n\\t\\t_rangeEnd = _rangeEnd || rangeEnd;\\n\\n\\t\\tif (abstractEvent) {\\n\\t\\t\\tif (abstractEvent._recurring) {\\n\\n\\t\\t\\t\\t// make a boolean hash as to whether the event occurs on each day-of-week\\n\\t\\t\\t\\tif ((dow = abstractEvent.dow)) {\\n\\t\\t\\t\\t\\tdowHash = {};\\n\\t\\t\\t\\t\\tfor (i = 0; i < dow.length; i++) {\\n\\t\\t\\t\\t\\t\\tdowHash[dow[i]] = true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// iterate through every day in the current range\\n\\t\\t\\t\\tdate = _rangeStart.clone().stripTime(); // holds the date of the current day\\n\\t\\t\\t\\twhile (date.isBefore(_rangeEnd)) {\\n\\n\\t\\t\\t\\t\\tif (!dowHash || dowHash[date.day()]) { // if everyday, or this particular day-of-week\\n\\n\\t\\t\\t\\t\\t\\tstartTime = abstractEvent.start; // the stored start and end properties are times (Durations)\\n\\t\\t\\t\\t\\t\\tendTime = abstractEvent.end; // \\\"\\n\\t\\t\\t\\t\\t\\tstart = date.clone();\\n\\t\\t\\t\\t\\t\\tend = null;\\n\\n\\t\\t\\t\\t\\t\\tif (startTime) {\\n\\t\\t\\t\\t\\t\\t\\tstart = start.time(startTime);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif (endTime) {\\n\\t\\t\\t\\t\\t\\t\\tend = date.clone().time(endTime);\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tevent = $.extend({}, abstractEvent); // make a copy of the original\\n\\t\\t\\t\\t\\t\\tassignDatesToEvent(\\n\\t\\t\\t\\t\\t\\t\\tstart, end,\\n\\t\\t\\t\\t\\t\\t\\t!startTime && !endTime, // allDay?\\n\\t\\t\\t\\t\\t\\t\\tevent\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tevents.push(event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tdate.add(1, 'days');\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tevents.push(abstractEvent); // return the original event. will be a one-item array\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn events;\\n\\t}\\n\\tt.expandEvent = expandEvent;\\n\\n\\n\\n\\t/* Event Modification Math\\n\\t-----------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Modifies an event and all related events by applying the given properties.\\n\\t// Special date-diffing logic is used for manipulation of dates.\\n\\t// If `props` does not contain start/end dates, the updated values are assumed to be the event's current start/end.\\n\\t// All date comparisons are done against the event's pristine _start and _end dates.\\n\\t// Returns an object with delta information and a function to undo all operations.\\n\\t// For making computations in a granularity greater than day/time, specify largeUnit.\\n\\t// NOTE: The given `newProps` might be mutated for normalization purposes.\\n\\tfunction mutateEvent(event, newProps, largeUnit) {\\n\\t\\tvar miscProps = {};\\n\\t\\tvar oldProps;\\n\\t\\tvar clearEnd;\\n\\t\\tvar startDelta;\\n\\t\\tvar endDelta;\\n\\t\\tvar durationDelta;\\n\\t\\tvar undoFunc;\\n\\n\\t\\t// diffs the dates in the appropriate way, returning a duration\\n\\t\\tfunction diffDates(date1, date0) { // date1 - date0\\n\\t\\t\\tif (largeUnit) {\\n\\t\\t\\t\\treturn diffByUnit(date1, date0, largeUnit);\\n\\t\\t\\t}\\n\\t\\t\\telse if (newProps.allDay) {\\n\\t\\t\\t\\treturn diffDay(date1, date0);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\treturn diffDayTime(date1, date0);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tnewProps = newProps || {};\\n\\n\\t\\t// normalize new date-related properties\\n\\t\\tif (!newProps.start) {\\n\\t\\t\\tnewProps.start = event.start.clone();\\n\\t\\t}\\n\\t\\tif (newProps.end === undefined) {\\n\\t\\t\\tnewProps.end = event.end ? event.end.clone() : null;\\n\\t\\t}\\n\\t\\tif (newProps.allDay == null) { // is null or undefined?\\n\\t\\t\\tnewProps.allDay = event.allDay;\\n\\t\\t}\\n\\t\\tnormalizeEventDates(newProps);\\n\\n\\t\\t// create normalized versions of the original props to compare against\\n\\t\\t// need a real end value, for diffing\\n\\t\\toldProps = {\\n\\t\\t\\tstart: event._start.clone(),\\n\\t\\t\\tend: event._end ? event._end.clone() : t.getDefaultEventEnd(event._allDay, event._start),\\n\\t\\t\\tallDay: newProps.allDay // normalize the dates in the same regard as the new properties\\n\\t\\t};\\n\\t\\tnormalizeEventDates(oldProps);\\n\\n\\t\\t// need to clear the end date if explicitly changed to null\\n\\t\\tclearEnd = event._end !== null && newProps.end === null;\\n\\n\\t\\t// compute the delta for moving the start date\\n\\t\\tstartDelta = diffDates(newProps.start, oldProps.start);\\n\\n\\t\\t// compute the delta for moving the end date\\n\\t\\tif (newProps.end) {\\n\\t\\t\\tendDelta = diffDates(newProps.end, oldProps.end);\\n\\t\\t\\tdurationDelta = endDelta.subtract(startDelta);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tdurationDelta = null;\\n\\t\\t}\\n\\n\\t\\t// gather all non-date-related properties\\n\\t\\t$.each(newProps, function(name, val) {\\n\\t\\t\\tif (isMiscEventPropName(name)) {\\n\\t\\t\\t\\tif (val !== undefined) {\\n\\t\\t\\t\\t\\tmiscProps[name] = val;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\t// apply the operations to the event and all related events\\n\\t\\tundoFunc = mutateEvents(\\n\\t\\t\\tclientEvents(event._id), // get events with this ID\\n\\t\\t\\tclearEnd,\\n\\t\\t\\tnewProps.allDay,\\n\\t\\t\\tstartDelta,\\n\\t\\t\\tdurationDelta,\\n\\t\\t\\tmiscProps\\n\\t\\t);\\n\\n\\t\\treturn {\\n\\t\\t\\tdateDelta: startDelta,\\n\\t\\t\\tdurationDelta: durationDelta,\\n\\t\\t\\tundo: undoFunc\\n\\t\\t};\\n\\t}\\n\\n\\n\\t// Modifies an array of events in the following ways (operations are in order):\\n\\t// - clear the event's `end`\\n\\t// - convert the event to allDay\\n\\t// - add `dateDelta` to the start and end\\n\\t// - add `durationDelta` to the event's duration\\n\\t// - assign `miscProps` to the event\\n\\t//\\n\\t// Returns a function that can be called to undo all the operations.\\n\\t//\\n\\t// TODO: don't use so many closures. possible memory issues when lots of events with same ID.\\n\\t//\\n\\tfunction mutateEvents(events, clearEnd, allDay, dateDelta, durationDelta, miscProps) {\\n\\t\\tvar isAmbigTimezone = t.getIsAmbigTimezone();\\n\\t\\tvar undoFunctions = [];\\n\\n\\t\\t// normalize zero-length deltas to be null\\n\\t\\tif (dateDelta && !dateDelta.valueOf()) { dateDelta = null; }\\n\\t\\tif (durationDelta && !durationDelta.valueOf()) { durationDelta = null; }\\n\\n\\t\\t$.each(events, function(i, event) {\\n\\t\\t\\tvar oldProps;\\n\\t\\t\\tvar newProps;\\n\\n\\t\\t\\t// build an object holding all the old values, both date-related and misc.\\n\\t\\t\\t// for the undo function.\\n\\t\\t\\toldProps = {\\n\\t\\t\\t\\tstart: event.start.clone(),\\n\\t\\t\\t\\tend: event.end ? event.end.clone() : null,\\n\\t\\t\\t\\tallDay: event.allDay\\n\\t\\t\\t};\\n\\t\\t\\t$.each(miscProps, function(name) {\\n\\t\\t\\t\\toldProps[name] = event[name];\\n\\t\\t\\t});\\n\\n\\t\\t\\t// new date-related properties. work off the original date snapshot.\\n\\t\\t\\t// ok to use references because they will be thrown away when backupEventDates is called.\\n\\t\\t\\tnewProps = {\\n\\t\\t\\t\\tstart: event._start,\\n\\t\\t\\t\\tend: event._end,\\n\\t\\t\\t\\tallDay: allDay // normalize the dates in the same regard as the new properties\\n\\t\\t\\t};\\n\\t\\t\\tnormalizeEventDates(newProps); // massages start/end/allDay\\n\\n\\t\\t\\t// strip or ensure the end date\\n\\t\\t\\tif (clearEnd) {\\n\\t\\t\\t\\tnewProps.end = null;\\n\\t\\t\\t}\\n\\t\\t\\telse if (durationDelta && !newProps.end) { // the duration translation requires an end date\\n\\t\\t\\t\\tnewProps.end = t.getDefaultEventEnd(newProps.allDay, newProps.start);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (dateDelta) {\\n\\t\\t\\t\\tnewProps.start.add(dateDelta);\\n\\t\\t\\t\\tif (newProps.end) {\\n\\t\\t\\t\\t\\tnewProps.end.add(dateDelta);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (durationDelta) {\\n\\t\\t\\t\\tnewProps.end.add(durationDelta); // end already ensured above\\n\\t\\t\\t}\\n\\n\\t\\t\\t// if the dates have changed, and we know it is impossible to recompute the\\n\\t\\t\\t// timezone offsets, strip the zone.\\n\\t\\t\\tif (\\n\\t\\t\\t\\tisAmbigTimezone &&\\n\\t\\t\\t\\t!newProps.allDay &&\\n\\t\\t\\t\\t(dateDelta || durationDelta)\\n\\t\\t\\t) {\\n\\t\\t\\t\\tnewProps.start.stripZone();\\n\\t\\t\\t\\tif (newProps.end) {\\n\\t\\t\\t\\t\\tnewProps.end.stripZone();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t$.extend(event, miscProps, newProps); // copy over misc props, then date-related props\\n\\t\\t\\tbackupEventDates(event); // regenerate internal _start/_end/_allDay\\n\\n\\t\\t\\tundoFunctions.push(function() {\\n\\t\\t\\t\\t$.extend(event, oldProps);\\n\\t\\t\\t\\tbackupEventDates(event); // regenerate internal _start/_end/_allDay\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\treturn function() {\\n\\t\\t\\tfor (var i = 0; i < undoFunctions.length; i++) {\\n\\t\\t\\t\\tundoFunctions[i]();\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n\\n}\\n\\n\\n// hook for external libs to manipulate event properties upon creation.\\n// should manipulate the event in-place.\\nCalendar.prototype.normalizeEvent = function(event) {\\n};\\n\\n\\n// Does the given span (start, end, and other location information)\\n// fully contain the other?\\nCalendar.prototype.spanContainsSpan = function(outerSpan, innerSpan) {\\n\\tvar eventStart = outerSpan.start.clone().stripZone();\\n\\tvar eventEnd = this.getEventEnd(outerSpan).stripZone();\\n\\n\\treturn innerSpan.start >= eventStart && innerSpan.end <= eventEnd;\\n};\\n\\n\\n// Returns a list of events that the given event should be compared against when being considered for a move to\\n// the specified span. Attached to the Calendar's prototype because EventManager is a mixin for a Calendar.\\nCalendar.prototype.getPeerEvents = function(span, event) {\\n\\tvar cache = this.getEventCache();\\n\\tvar peerEvents = [];\\n\\tvar i, otherEvent;\\n\\n\\tfor (i = 0; i < cache.length; i++) {\\n\\t\\totherEvent = cache[i];\\n\\t\\tif (\\n\\t\\t\\t!event ||\\n\\t\\t\\tevent._id !== otherEvent._id // don't compare the event to itself or other related [repeating] events\\n\\t\\t) {\\n\\t\\t\\tpeerEvents.push(otherEvent);\\n\\t\\t}\\n\\t}\\n\\n\\treturn peerEvents;\\n};\\n\\n\\n// updates the \\\"backup\\\" properties, which are preserved in order to compute diffs later on.\\nfunction backupEventDates(event) {\\n\\tevent._allDay = event.allDay;\\n\\tevent._start = event.start.clone();\\n\\tevent._end = event.end ? event.end.clone() : null;\\n}\\n\\n\\n/* Overlapping / Constraining\\n-----------------------------------------------------------------------------------------*/\\n\\n\\n// Determines if the given event can be relocated to the given span (unzoned start/end with other misc data)\\nCalendar.prototype.isEventSpanAllowed = function(span, event) {\\n\\tvar source = event.source || {};\\n\\n\\tvar constraint = firstDefined(\\n\\t\\tevent.constraint,\\n\\t\\tsource.constraint,\\n\\t\\tthis.options.eventConstraint\\n\\t);\\n\\n\\tvar overlap = firstDefined(\\n\\t\\tevent.overlap,\\n\\t\\tsource.overlap,\\n\\t\\tthis.options.eventOverlap\\n\\t);\\n\\n\\treturn this.isSpanAllowed(span, constraint, overlap, event) &&\\n\\t\\t(!this.options.eventAllow || this.options.eventAllow(span, event) !== false);\\n};\\n\\n\\n// Determines if an external event can be relocated to the given span (unzoned start/end with other misc data)\\nCalendar.prototype.isExternalSpanAllowed = function(eventSpan, eventLocation, eventProps) {\\n\\tvar eventInput;\\n\\tvar event;\\n\\n\\t// note: very similar logic is in View's reportExternalDrop\\n\\tif (eventProps) {\\n\\t\\teventInput = $.extend({}, eventProps, eventLocation);\\n\\t\\tevent = this.expandEvent(\\n\\t\\t\\tthis.buildEventFromInput(eventInput)\\n\\t\\t)[0];\\n\\t}\\n\\n\\tif (event) {\\n\\t\\treturn this.isEventSpanAllowed(eventSpan, event);\\n\\t}\\n\\telse { // treat it as a selection\\n\\n\\t\\treturn this.isSelectionSpanAllowed(eventSpan);\\n\\t}\\n};\\n\\n\\n// Determines the given span (unzoned start/end with other misc data) can be selected.\\nCalendar.prototype.isSelectionSpanAllowed = function(span) {\\n\\treturn this.isSpanAllowed(span, this.options.selectConstraint, this.options.selectOverlap) &&\\n\\t\\t(!this.options.selectAllow || this.options.selectAllow(span) !== false);\\n};\\n\\n\\n// Returns true if the given span (caused by an event drop/resize or a selection) is allowed to exist\\n// according to the constraint/overlap settings.\\n// `event` is not required if checking a selection.\\nCalendar.prototype.isSpanAllowed = function(span, constraint, overlap, event) {\\n\\tvar constraintEvents;\\n\\tvar anyContainment;\\n\\tvar peerEvents;\\n\\tvar i, peerEvent;\\n\\tvar peerOverlap;\\n\\n\\t// the range must be fully contained by at least one of produced constraint events\\n\\tif (constraint != null) {\\n\\n\\t\\t// not treated as an event! intermediate data structure\\n\\t\\t// TODO: use ranges in the future\\n\\t\\tconstraintEvents = this.constraintToEvents(constraint);\\n\\t\\tif (constraintEvents) { // not invalid\\n\\n\\t\\t\\tanyContainment = false;\\n\\t\\t\\tfor (i = 0; i < constraintEvents.length; i++) {\\n\\t\\t\\t\\tif (this.spanContainsSpan(constraintEvents[i], span)) {\\n\\t\\t\\t\\t\\tanyContainment = true;\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!anyContainment) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tpeerEvents = this.getPeerEvents(span, event);\\n\\n\\tfor (i = 0; i < peerEvents.length; i++)  {\\n\\t\\tpeerEvent = peerEvents[i];\\n\\n\\t\\t// there needs to be an actual intersection before disallowing anything\\n\\t\\tif (this.eventIntersectsRange(peerEvent, span)) {\\n\\n\\t\\t\\t// evaluate overlap for the given range and short-circuit if necessary\\n\\t\\t\\tif (overlap === false) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t\\t// if the event's overlap is a test function, pass the peer event in question as the first param\\n\\t\\t\\telse if (typeof overlap === 'function' && !overlap(peerEvent, event)) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// if we are computing if the given range is allowable for an event, consider the other event's\\n\\t\\t\\t// EventObject-specific or Source-specific `overlap` property\\n\\t\\t\\tif (event) {\\n\\t\\t\\t\\tpeerOverlap = firstDefined(\\n\\t\\t\\t\\t\\tpeerEvent.overlap,\\n\\t\\t\\t\\t\\t(peerEvent.source || {}).overlap\\n\\t\\t\\t\\t\\t// we already considered the global `eventOverlap`\\n\\t\\t\\t\\t);\\n\\t\\t\\t\\tif (peerOverlap === false) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t// if the peer event's overlap is a test function, pass the subject event as the first param\\n\\t\\t\\t\\tif (typeof peerOverlap === 'function' && !peerOverlap(event, peerEvent)) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn true;\\n};\\n\\n\\n// Given an event input from the API, produces an array of event objects. Possible event inputs:\\n// 'businessHours'\\n// An event ID (number or string)\\n// An object with specific start/end dates or a recurring event (like what businessHours accepts)\\nCalendar.prototype.constraintToEvents = function(constraintInput) {\\n\\n\\tif (constraintInput === 'businessHours') {\\n\\t\\treturn this.getCurrentBusinessHourEvents();\\n\\t}\\n\\n\\tif (typeof constraintInput === 'object') {\\n\\t\\tif (constraintInput.start != null) { // needs to be event-like input\\n\\t\\t\\treturn this.expandEvent(this.buildEventFromInput(constraintInput));\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn null; // invalid\\n\\t\\t}\\n\\t}\\n\\n\\treturn this.clientEvents(constraintInput); // probably an ID\\n};\\n\\n\\n// Does the event's date range intersect with the given range?\\n// start/end already assumed to have stripped zones :(\\nCalendar.prototype.eventIntersectsRange = function(event, range) {\\n\\tvar eventStart = event.start.clone().stripZone();\\n\\tvar eventEnd = this.getEventEnd(event).stripZone();\\n\\n\\treturn range.start < eventEnd && range.end > eventStart;\\n};\\n\\n\\n/* Business Hours\\n-----------------------------------------------------------------------------------------*/\\n\\nvar BUSINESS_HOUR_EVENT_DEFAULTS = {\\n\\tid: '_fcBusinessHours', // will relate events from different calls to expandEvent\\n\\tstart: '09:00',\\n\\tend: '17:00',\\n\\tdow: [ 1, 2, 3, 4, 5 ], // monday - friday\\n\\trendering: 'inverse-background'\\n\\t// classNames are defined in businessHoursSegClasses\\n};\\n\\n// Return events objects for business hours within the current view.\\n// Abuse of our event system :(\\nCalendar.prototype.getCurrentBusinessHourEvents = function(wholeDay) {\\n\\treturn this.computeBusinessHourEvents(wholeDay, this.options.businessHours);\\n};\\n\\n// Given a raw input value from options, return events objects for business hours within the current view.\\nCalendar.prototype.computeBusinessHourEvents = function(wholeDay, input) {\\n\\tif (input === true) {\\n\\t\\treturn this.expandBusinessHourEvents(wholeDay, [ {} ]);\\n\\t}\\n\\telse if ($.isPlainObject(input)) {\\n\\t\\treturn this.expandBusinessHourEvents(wholeDay, [ input ]);\\n\\t}\\n\\telse if ($.isArray(input)) {\\n\\t\\treturn this.expandBusinessHourEvents(wholeDay, input, true);\\n\\t}\\n\\telse {\\n\\t\\treturn [];\\n\\t}\\n};\\n\\n// inputs expected to be an array of objects.\\n// if ignoreNoDow is true, will ignore entries that don't specify a day-of-week (dow) key.\\nCalendar.prototype.expandBusinessHourEvents = function(wholeDay, inputs, ignoreNoDow) {\\n\\tvar view = this.getView();\\n\\tvar events = [];\\n\\tvar i, input;\\n\\n\\tfor (i = 0; i < inputs.length; i++) {\\n\\t\\tinput = inputs[i];\\n\\n\\t\\tif (ignoreNoDow && !input.dow) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\t// give defaults. will make a copy\\n\\t\\tinput = $.extend({}, BUSINESS_HOUR_EVENT_DEFAULTS, input);\\n\\n\\t\\t// if a whole-day series is requested, clear the start/end times\\n\\t\\tif (wholeDay) {\\n\\t\\t\\tinput.start = null;\\n\\t\\t\\tinput.end = null;\\n\\t\\t}\\n\\n\\t\\tevents.push.apply(events, // append\\n\\t\\t\\tthis.expandEvent(\\n\\t\\t\\t\\tthis.buildEventFromInput(input),\\n\\t\\t\\t\\tview.start,\\n\\t\\t\\t\\tview.end\\n\\t\\t\\t)\\n\\t\\t);\\n\\t}\\n\\n\\treturn events;\\n};\\n\\n;;\\n\\n/* An abstract class for the \\\"basic\\\" views, as well as month view. Renders one or more rows of day cells.\\n----------------------------------------------------------------------------------------------------------------------*/\\n// It is a manager for a DayGrid subcomponent, which does most of the heavy lifting.\\n// It is responsible for managing width/height.\\n\\nvar BasicView = FC.BasicView = View.extend({\\n\\n\\tscroller: null,\\n\\n\\tdayGridClass: DayGrid, // class the dayGrid will be instantiated from (overridable by subclasses)\\n\\tdayGrid: null, // the main subcomponent that does most of the heavy lifting\\n\\n\\tdayNumbersVisible: false, // display day numbers on each day cell?\\n\\tcolWeekNumbersVisible: false, // display week numbers along the side?\\n\\tcellWeekNumbersVisible: false, // display week numbers in day cell?\\n\\n\\tweekNumberWidth: null, // width of all the week-number cells running down the side\\n\\n\\theadContainerEl: null, // div that hold's the dayGrid's rendered date header\\n\\theadRowEl: null, // the fake row element of the day-of-week header\\n\\n\\n\\tinitialize: function() {\\n\\t\\tthis.dayGrid = this.instantiateDayGrid();\\n\\n\\t\\tthis.scroller = new Scroller({\\n\\t\\t\\toverflowX: 'hidden',\\n\\t\\t\\toverflowY: 'auto'\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Generates the DayGrid object this view needs. Draws from this.dayGridClass\\n\\tinstantiateDayGrid: function() {\\n\\t\\t// generate a subclass on the fly with BasicView-specific behavior\\n\\t\\t// TODO: cache this subclass\\n\\t\\tvar subclass = this.dayGridClass.extend(basicDayGridMethods);\\n\\n\\t\\treturn new subclass(this);\\n\\t},\\n\\n\\n\\t// Sets the display range and computes all necessary dates\\n\\tsetRange: function(range) {\\n\\t\\tView.prototype.setRange.call(this, range); // call the super-method\\n\\n\\t\\tthis.dayGrid.breakOnWeeks = /year|month|week/.test(this.intervalUnit); // do before setRange\\n\\t\\tthis.dayGrid.setRange(range);\\n\\t},\\n\\n\\n\\t// Compute the value to feed into setRange. Overrides superclass.\\n\\tcomputeRange: function(date) {\\n\\t\\tvar range = View.prototype.computeRange.call(this, date); // get value from the super-method\\n\\n\\t\\t// year and month views should be aligned with weeks. this is already done for week\\n\\t\\tif (/year|month/.test(range.intervalUnit)) {\\n\\t\\t\\trange.start.startOf('week');\\n\\t\\t\\trange.start = this.skipHiddenDays(range.start);\\n\\n\\t\\t\\t// make end-of-week if not already\\n\\t\\t\\tif (range.end.weekday()) {\\n\\t\\t\\t\\trange.end.add(1, 'week').startOf('week');\\n\\t\\t\\t\\trange.end = this.skipHiddenDays(range.end, -1, true); // exclusively move backwards\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn range;\\n\\t},\\n\\n\\n\\t// Renders the view into `this.el`, which should already be assigned\\n\\trenderDates: function() {\\n\\n\\t\\tthis.dayNumbersVisible = this.dayGrid.rowCnt > 1; // TODO: make grid responsible\\n\\t\\tif (this.opt('weekNumbers')) {\\n\\t\\t\\tif (this.opt('weekNumbersWithinDays')) {\\n\\t\\t\\t\\tthis.cellWeekNumbersVisible = true;\\n\\t\\t\\t\\tthis.colWeekNumbersVisible = false;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tthis.cellWeekNumbersVisible = false;\\n\\t\\t\\t\\tthis.colWeekNumbersVisible = true;\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tthis.dayGrid.numbersVisible = this.dayNumbersVisible ||\\n\\t\\t\\tthis.cellWeekNumbersVisible || this.colWeekNumbersVisible;\\n\\n\\t\\tthis.el.addClass('fc-basic-view').html(this.renderSkeletonHtml());\\n\\t\\tthis.renderHead();\\n\\n\\t\\tthis.scroller.render();\\n\\t\\tvar dayGridContainerEl = this.scroller.el.addClass('fc-day-grid-container');\\n\\t\\tvar dayGridEl = $('<div class=\\\"fc-day-grid\\\" />').appendTo(dayGridContainerEl);\\n\\t\\tthis.el.find('.fc-body > tr > td').append(dayGridContainerEl);\\n\\n\\t\\tthis.dayGrid.setElement(dayGridEl);\\n\\t\\tthis.dayGrid.renderDates(this.hasRigidRows());\\n\\t},\\n\\n\\n\\t// render the day-of-week headers\\n\\trenderHead: function() {\\n\\t\\tthis.headContainerEl =\\n\\t\\t\\tthis.el.find('.fc-head-container')\\n\\t\\t\\t\\t.html(this.dayGrid.renderHeadHtml());\\n\\t\\tthis.headRowEl = this.headContainerEl.find('.fc-row');\\n\\t},\\n\\n\\n\\t// Unrenders the content of the view. Since we haven't separated skeleton rendering from date rendering,\\n\\t// always completely kill the dayGrid's rendering.\\n\\tunrenderDates: function() {\\n\\t\\tthis.dayGrid.unrenderDates();\\n\\t\\tthis.dayGrid.removeElement();\\n\\t\\tthis.scroller.destroy();\\n\\t},\\n\\n\\n\\trenderBusinessHours: function() {\\n\\t\\tthis.dayGrid.renderBusinessHours();\\n\\t},\\n\\n\\n\\tunrenderBusinessHours: function() {\\n\\t\\tthis.dayGrid.unrenderBusinessHours();\\n\\t},\\n\\n\\n\\t// Builds the HTML skeleton for the view.\\n\\t// The day-grid component will render inside of a container defined by this HTML.\\n\\trenderSkeletonHtml: function() {\\n\\t\\treturn '' +\\n\\t\\t\\t'<table>' +\\n\\t\\t\\t\\t'<thead class=\\\"fc-head\\\">' +\\n\\t\\t\\t\\t\\t'<tr>' +\\n\\t\\t\\t\\t\\t\\t'<td class=\\\"fc-head-container ' + this.widgetHeaderClass + '\\\"></td>' +\\n\\t\\t\\t\\t\\t'</tr>' +\\n\\t\\t\\t\\t'</thead>' +\\n\\t\\t\\t\\t'<tbody class=\\\"fc-body\\\">' +\\n\\t\\t\\t\\t\\t'<tr>' +\\n\\t\\t\\t\\t\\t\\t'<td class=\\\"' + this.widgetContentClass + '\\\"></td>' +\\n\\t\\t\\t\\t\\t'</tr>' +\\n\\t\\t\\t\\t'</tbody>' +\\n\\t\\t\\t'</table>';\\n\\t},\\n\\n\\n\\t// Generates an HTML attribute string for setting the width of the week number column, if it is known\\n\\tweekNumberStyleAttr: function() {\\n\\t\\tif (this.weekNumberWidth !== null) {\\n\\t\\t\\treturn 'style=\\\"width:' + this.weekNumberWidth + 'px\\\"';\\n\\t\\t}\\n\\t\\treturn '';\\n\\t},\\n\\n\\n\\t// Determines whether each row should have a constant height\\n\\thasRigidRows: function() {\\n\\t\\tvar eventLimit = this.opt('eventLimit');\\n\\t\\treturn eventLimit && typeof eventLimit !== 'number';\\n\\t},\\n\\n\\n\\t/* Dimensions\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Refreshes the horizontal dimensions of the view\\n\\tupdateWidth: function() {\\n\\t\\tif (this.colWeekNumbersVisible) {\\n\\t\\t\\t// Make sure all week number cells running down the side have the same width.\\n\\t\\t\\t// Record the width for cells created later.\\n\\t\\t\\tthis.weekNumberWidth = matchCellWidths(\\n\\t\\t\\t\\tthis.el.find('.fc-week-number')\\n\\t\\t\\t);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Adjusts the vertical dimensions of the view to the specified values\\n\\tsetHeight: function(totalHeight, isAuto) {\\n\\t\\tvar eventLimit = this.opt('eventLimit');\\n\\t\\tvar scrollerHeight;\\n\\t\\tvar scrollbarWidths;\\n\\n\\t\\t// reset all heights to be natural\\n\\t\\tthis.scroller.clear();\\n\\t\\tuncompensateScroll(this.headRowEl);\\n\\n\\t\\tthis.dayGrid.removeSegPopover(); // kill the \\\"more\\\" popover if displayed\\n\\n\\t\\t// is the event limit a constant level number?\\n\\t\\tif (eventLimit && typeof eventLimit === 'number') {\\n\\t\\t\\tthis.dayGrid.limitRows(eventLimit); // limit the levels first so the height can redistribute after\\n\\t\\t}\\n\\n\\t\\t// distribute the height to the rows\\n\\t\\t// (totalHeight is a \\\"recommended\\\" value if isAuto)\\n\\t\\tscrollerHeight = this.computeScrollerHeight(totalHeight);\\n\\t\\tthis.setGridHeight(scrollerHeight, isAuto);\\n\\n\\t\\t// is the event limit dynamically calculated?\\n\\t\\tif (eventLimit && typeof eventLimit !== 'number') {\\n\\t\\t\\tthis.dayGrid.limitRows(eventLimit); // limit the levels after the grid's row heights have been set\\n\\t\\t}\\n\\n\\t\\tif (!isAuto) { // should we force dimensions of the scroll container?\\n\\n\\t\\t\\tthis.scroller.setHeight(scrollerHeight);\\n\\t\\t\\tscrollbarWidths = this.scroller.getScrollbarWidths();\\n\\n\\t\\t\\tif (scrollbarWidths.left || scrollbarWidths.right) { // using scrollbars?\\n\\n\\t\\t\\t\\tcompensateScroll(this.headRowEl, scrollbarWidths);\\n\\n\\t\\t\\t\\t// doing the scrollbar compensation might have created text overflow which created more height. redo\\n\\t\\t\\t\\tscrollerHeight = this.computeScrollerHeight(totalHeight);\\n\\t\\t\\t\\tthis.scroller.setHeight(scrollerHeight);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// guarantees the same scrollbar widths\\n\\t\\t\\tthis.scroller.lockOverflow(scrollbarWidths);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// given a desired total height of the view, returns what the height of the scroller should be\\n\\tcomputeScrollerHeight: function(totalHeight) {\\n\\t\\treturn totalHeight -\\n\\t\\t\\tsubtractInnerElHeight(this.el, this.scroller.el); // everything that's NOT the scroller\\n\\t},\\n\\n\\n\\t// Sets the height of just the DayGrid component in this view\\n\\tsetGridHeight: function(height, isAuto) {\\n\\t\\tif (isAuto) {\\n\\t\\t\\tundistributeHeight(this.dayGrid.rowEls); // let the rows be their natural height with no expanding\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tdistributeHeight(this.dayGrid.rowEls, height, true); // true = compensate for height-hogging rows\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Scroll\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tcomputeInitialScroll: function() {\\n\\t\\treturn { top: 0 };\\n\\t},\\n\\n\\n\\tqueryScroll: function() {\\n\\t\\treturn { top: this.scroller.getScrollTop() };\\n\\t},\\n\\n\\n\\tsetScroll: function(scroll) {\\n\\t\\tthis.scroller.setScrollTop(scroll.top);\\n\\t},\\n\\n\\n\\t/* Hit Areas\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\t// forward all hit-related method calls to dayGrid\\n\\n\\n\\tprepareHits: function() {\\n\\t\\tthis.dayGrid.prepareHits();\\n\\t},\\n\\n\\n\\treleaseHits: function() {\\n\\t\\tthis.dayGrid.releaseHits();\\n\\t},\\n\\n\\n\\tqueryHit: function(left, top) {\\n\\t\\treturn this.dayGrid.queryHit(left, top);\\n\\t},\\n\\n\\n\\tgetHitSpan: function(hit) {\\n\\t\\treturn this.dayGrid.getHitSpan(hit);\\n\\t},\\n\\n\\n\\tgetHitEl: function(hit) {\\n\\t\\treturn this.dayGrid.getHitEl(hit);\\n\\t},\\n\\n\\n\\t/* Events\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders the given events onto the view and populates the segments array\\n\\trenderEvents: function(events) {\\n\\t\\tthis.dayGrid.renderEvents(events);\\n\\n\\t\\tthis.updateHeight(); // must compensate for events that overflow the row\\n\\t},\\n\\n\\n\\t// Retrieves all segment objects that are rendered in the view\\n\\tgetEventSegs: function() {\\n\\t\\treturn this.dayGrid.getEventSegs();\\n\\t},\\n\\n\\n\\t// Unrenders all event elements and clears internal segment data\\n\\tunrenderEvents: function() {\\n\\t\\tthis.dayGrid.unrenderEvents();\\n\\n\\t\\t// we DON'T need to call updateHeight() because\\n\\t\\t// a renderEvents() call always happens after this, which will eventually call updateHeight()\\n\\t},\\n\\n\\n\\t/* Dragging (for both events and external elements)\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// A returned value of `true` signals that a mock \\\"helper\\\" event has been rendered.\\n\\trenderDrag: function(dropLocation, seg) {\\n\\t\\treturn this.dayGrid.renderDrag(dropLocation, seg);\\n\\t},\\n\\n\\n\\tunrenderDrag: function() {\\n\\t\\tthis.dayGrid.unrenderDrag();\\n\\t},\\n\\n\\n\\t/* Selection\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of a selection\\n\\trenderSelection: function(span) {\\n\\t\\tthis.dayGrid.renderSelection(span);\\n\\t},\\n\\n\\n\\t// Unrenders a visual indications of a selection\\n\\tunrenderSelection: function() {\\n\\t\\tthis.dayGrid.unrenderSelection();\\n\\t}\\n\\n});\\n\\n\\n// Methods that will customize the rendering behavior of the BasicView's dayGrid\\nvar basicDayGridMethods = {\\n\\n\\n\\t// Generates the HTML that will go before the day-of week header cells\\n\\trenderHeadIntroHtml: function() {\\n\\t\\tvar view = this.view;\\n\\n\\t\\tif (view.colWeekNumbersVisible) {\\n\\t\\t\\treturn '' +\\n\\t\\t\\t\\t'<th class=\\\"fc-week-number ' + view.widgetHeaderClass + '\\\" ' + view.weekNumberStyleAttr() + '>' +\\n\\t\\t\\t\\t\\t'<span>' + // needed for matchCellWidths\\n\\t\\t\\t\\t\\t\\thtmlEscape(view.opt('weekNumberTitle')) +\\n\\t\\t\\t\\t\\t'</span>' +\\n\\t\\t\\t\\t'</th>';\\n\\t\\t}\\n\\n\\t\\treturn '';\\n\\t},\\n\\n\\n\\t// Generates the HTML that will go before content-skeleton cells that display the day/week numbers\\n\\trenderNumberIntroHtml: function(row) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar weekStart = this.getCellDate(row, 0);\\n\\n\\t\\tif (view.colWeekNumbersVisible) {\\n\\t\\t\\treturn '' +\\n\\t\\t\\t\\t'<td class=\\\"fc-week-number\\\" ' + view.weekNumberStyleAttr() + '>' +\\n\\t\\t\\t\\t\\tview.buildGotoAnchorHtml( // aside from link, important for matchCellWidths\\n\\t\\t\\t\\t\\t\\t{ date: weekStart, type: 'week', forceOff: this.colCnt === 1 },\\n\\t\\t\\t\\t\\t\\tweekStart.format('w') // inner HTML\\n\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t'</td>';\\n\\t\\t}\\n\\n\\t\\treturn '';\\n\\t},\\n\\n\\n\\t// Generates the HTML that goes before the day bg cells for each day-row\\n\\trenderBgIntroHtml: function() {\\n\\t\\tvar view = this.view;\\n\\n\\t\\tif (view.colWeekNumbersVisible) {\\n\\t\\t\\treturn '<td class=\\\"fc-week-number ' + view.widgetContentClass + '\\\" ' +\\n\\t\\t\\t\\tview.weekNumberStyleAttr() + '></td>';\\n\\t\\t}\\n\\n\\t\\treturn '';\\n\\t},\\n\\n\\n\\t// Generates the HTML that goes before every other type of row generated by DayGrid.\\n\\t// Affects helper-skeleton and highlight-skeleton rows.\\n\\trenderIntroHtml: function() {\\n\\t\\tvar view = this.view;\\n\\n\\t\\tif (view.colWeekNumbersVisible) {\\n\\t\\t\\treturn '<td class=\\\"fc-week-number\\\" ' + view.weekNumberStyleAttr() + '></td>';\\n\\t\\t}\\n\\n\\t\\treturn '';\\n\\t}\\n\\n};\\n\\n;;\\n\\n/* A month view with day cells running in rows (one-per-week) and columns\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nvar MonthView = FC.MonthView = BasicView.extend({\\n\\n\\t// Produces information about what range to display\\n\\tcomputeRange: function(date) {\\n\\t\\tvar range = BasicView.prototype.computeRange.call(this, date); // get value from super-method\\n\\t\\tvar rowCnt;\\n\\n\\t\\t// ensure 6 weeks\\n\\t\\tif (this.isFixedWeeks()) {\\n\\t\\t\\trowCnt = Math.ceil(range.end.diff(range.start, 'weeks', true)); // could be partial weeks due to hiddenDays\\n\\t\\t\\trange.end.add(6 - rowCnt, 'weeks');\\n\\t\\t}\\n\\n\\t\\treturn range;\\n\\t},\\n\\n\\n\\t// Overrides the default BasicView behavior to have special multi-week auto-height logic\\n\\tsetGridHeight: function(height, isAuto) {\\n\\n\\t\\t// if auto, make the height of each row the height that it would be if there were 6 weeks\\n\\t\\tif (isAuto) {\\n\\t\\t\\theight *= this.rowCnt / 6;\\n\\t\\t}\\n\\n\\t\\tdistributeHeight(this.dayGrid.rowEls, height, !isAuto); // if auto, don't compensate for height-hogging rows\\n\\t},\\n\\n\\n\\tisFixedWeeks: function() {\\n\\t\\treturn this.opt('fixedWeekCount');\\n\\t}\\n\\n});\\n\\n;;\\n\\nfcViews.basic = {\\n\\t'class': BasicView\\n};\\n\\nfcViews.basicDay = {\\n\\ttype: 'basic',\\n\\tduration: { days: 1 }\\n};\\n\\nfcViews.basicWeek = {\\n\\ttype: 'basic',\\n\\tduration: { weeks: 1 }\\n};\\n\\nfcViews.month = {\\n\\t'class': MonthView,\\n\\tduration: { months: 1 }, // important for prev/next\\n\\tdefaults: {\\n\\t\\tfixedWeekCount: true\\n\\t}\\n};\\n;;\\n\\n/* An abstract class for all agenda-related views. Displays one more columns with time slots running vertically.\\n----------------------------------------------------------------------------------------------------------------------*/\\n// Is a manager for the TimeGrid subcomponent and possibly the DayGrid subcomponent (if allDaySlot is on).\\n// Responsible for managing width/height.\\n\\nvar AgendaView = FC.AgendaView = View.extend({\\n\\n\\tscroller: null,\\n\\n\\ttimeGridClass: TimeGrid, // class used to instantiate the timeGrid. subclasses can override\\n\\ttimeGrid: null, // the main time-grid subcomponent of this view\\n\\n\\tdayGridClass: DayGrid, // class used to instantiate the dayGrid. subclasses can override\\n\\tdayGrid: null, // the \\\"all-day\\\" subcomponent. if all-day is turned off, this will be null\\n\\n\\taxisWidth: null, // the width of the time axis running down the side\\n\\n\\theadContainerEl: null, // div that hold's the timeGrid's rendered date header\\n\\tnoScrollRowEls: null, // set of fake row elements that must compensate when scroller has scrollbars\\n\\n\\t// when the time-grid isn't tall enough to occupy the given height, we render an <hr> underneath\\n\\tbottomRuleEl: null,\\n\\n\\n\\tinitialize: function() {\\n\\t\\tthis.timeGrid = this.instantiateTimeGrid();\\n\\n\\t\\tif (this.opt('allDaySlot')) { // should we display the \\\"all-day\\\" area?\\n\\t\\t\\tthis.dayGrid = this.instantiateDayGrid(); // the all-day subcomponent of this view\\n\\t\\t}\\n\\n\\t\\tthis.scroller = new Scroller({\\n\\t\\t\\toverflowX: 'hidden',\\n\\t\\t\\toverflowY: 'auto'\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Instantiates the TimeGrid object this view needs. Draws from this.timeGridClass\\n\\tinstantiateTimeGrid: function() {\\n\\t\\tvar subclass = this.timeGridClass.extend(agendaTimeGridMethods);\\n\\n\\t\\treturn new subclass(this);\\n\\t},\\n\\n\\n\\t// Instantiates the DayGrid object this view might need. Draws from this.dayGridClass\\n\\tinstantiateDayGrid: function() {\\n\\t\\tvar subclass = this.dayGridClass.extend(agendaDayGridMethods);\\n\\n\\t\\treturn new subclass(this);\\n\\t},\\n\\n\\n\\t/* Rendering\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Sets the display range and computes all necessary dates\\n\\tsetRange: function(range) {\\n\\t\\tView.prototype.setRange.call(this, range); // call the super-method\\n\\n\\t\\tthis.timeGrid.setRange(range);\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.setRange(range);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Renders the view into `this.el`, which has already been assigned\\n\\trenderDates: function() {\\n\\n\\t\\tthis.el.addClass('fc-agenda-view').html(this.renderSkeletonHtml());\\n\\t\\tthis.renderHead();\\n\\n\\t\\tthis.scroller.render();\\n\\t\\tvar timeGridWrapEl = this.scroller.el.addClass('fc-time-grid-container');\\n\\t\\tvar timeGridEl = $('<div class=\\\"fc-time-grid\\\" />').appendTo(timeGridWrapEl);\\n\\t\\tthis.el.find('.fc-body > tr > td').append(timeGridWrapEl);\\n\\n\\t\\tthis.timeGrid.setElement(timeGridEl);\\n\\t\\tthis.timeGrid.renderDates();\\n\\n\\t\\t// the <hr> that sometimes displays under the time-grid\\n\\t\\tthis.bottomRuleEl = $('<hr class=\\\"fc-divider ' + this.widgetHeaderClass + '\\\"/>')\\n\\t\\t\\t.appendTo(this.timeGrid.el); // inject it into the time-grid\\n\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.setElement(this.el.find('.fc-day-grid'));\\n\\t\\t\\tthis.dayGrid.renderDates();\\n\\n\\t\\t\\t// have the day-grid extend it's coordinate area over the <hr> dividing the two grids\\n\\t\\t\\tthis.dayGrid.bottomCoordPadding = this.dayGrid.el.next('hr').outerHeight();\\n\\t\\t}\\n\\n\\t\\tthis.noScrollRowEls = this.el.find('.fc-row:not(.fc-scroller *)'); // fake rows not within the scroller\\n\\t},\\n\\n\\n\\t// render the day-of-week headers\\n\\trenderHead: function() {\\n\\t\\tthis.headContainerEl =\\n\\t\\t\\tthis.el.find('.fc-head-container')\\n\\t\\t\\t\\t.html(this.timeGrid.renderHeadHtml());\\n\\t},\\n\\n\\n\\t// Unrenders the content of the view. Since we haven't separated skeleton rendering from date rendering,\\n\\t// always completely kill each grid's rendering.\\n\\tunrenderDates: function() {\\n\\t\\tthis.timeGrid.unrenderDates();\\n\\t\\tthis.timeGrid.removeElement();\\n\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.unrenderDates();\\n\\t\\t\\tthis.dayGrid.removeElement();\\n\\t\\t}\\n\\n\\t\\tthis.scroller.destroy();\\n\\t},\\n\\n\\n\\t// Builds the HTML skeleton for the view.\\n\\t// The day-grid and time-grid components will render inside containers defined by this HTML.\\n\\trenderSkeletonHtml: function() {\\n\\t\\treturn '' +\\n\\t\\t\\t'<table>' +\\n\\t\\t\\t\\t'<thead class=\\\"fc-head\\\">' +\\n\\t\\t\\t\\t\\t'<tr>' +\\n\\t\\t\\t\\t\\t\\t'<td class=\\\"fc-head-container ' + this.widgetHeaderClass + '\\\"></td>' +\\n\\t\\t\\t\\t\\t'</tr>' +\\n\\t\\t\\t\\t'</thead>' +\\n\\t\\t\\t\\t'<tbody class=\\\"fc-body\\\">' +\\n\\t\\t\\t\\t\\t'<tr>' +\\n\\t\\t\\t\\t\\t\\t'<td class=\\\"' + this.widgetContentClass + '\\\">' +\\n\\t\\t\\t\\t\\t\\t\\t(this.dayGrid ?\\n\\t\\t\\t\\t\\t\\t\\t\\t'<div class=\\\"fc-day-grid\\\"/>' +\\n\\t\\t\\t\\t\\t\\t\\t\\t'<hr class=\\\"fc-divider ' + this.widgetHeaderClass + '\\\"/>' :\\n\\t\\t\\t\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t\\t\\t'</td>' +\\n\\t\\t\\t\\t\\t'</tr>' +\\n\\t\\t\\t\\t'</tbody>' +\\n\\t\\t\\t'</table>';\\n\\t},\\n\\n\\n\\t// Generates an HTML attribute string for setting the width of the axis, if it is known\\n\\taxisStyleAttr: function() {\\n\\t\\tif (this.axisWidth !== null) {\\n\\t\\t\\t return 'style=\\\"width:' + this.axisWidth + 'px\\\"';\\n\\t\\t}\\n\\t\\treturn '';\\n\\t},\\n\\n\\n\\t/* Business Hours\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderBusinessHours: function() {\\n\\t\\tthis.timeGrid.renderBusinessHours();\\n\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.renderBusinessHours();\\n\\t\\t}\\n\\t},\\n\\n\\n\\tunrenderBusinessHours: function() {\\n\\t\\tthis.timeGrid.unrenderBusinessHours();\\n\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.unrenderBusinessHours();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Now Indicator\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tgetNowIndicatorUnit: function() {\\n\\t\\treturn this.timeGrid.getNowIndicatorUnit();\\n\\t},\\n\\n\\n\\trenderNowIndicator: function(date) {\\n\\t\\tthis.timeGrid.renderNowIndicator(date);\\n\\t},\\n\\n\\n\\tunrenderNowIndicator: function() {\\n\\t\\tthis.timeGrid.unrenderNowIndicator();\\n\\t},\\n\\n\\n\\t/* Dimensions\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tupdateSize: function(isResize) {\\n\\t\\tthis.timeGrid.updateSize(isResize);\\n\\n\\t\\tView.prototype.updateSize.call(this, isResize); // call the super-method\\n\\t},\\n\\n\\n\\t// Refreshes the horizontal dimensions of the view\\n\\tupdateWidth: function() {\\n\\t\\t// make all axis cells line up, and record the width so newly created axis cells will have it\\n\\t\\tthis.axisWidth = matchCellWidths(this.el.find('.fc-axis'));\\n\\t},\\n\\n\\n\\t// Adjusts the vertical dimensions of the view to the specified values\\n\\tsetHeight: function(totalHeight, isAuto) {\\n\\t\\tvar eventLimit;\\n\\t\\tvar scrollerHeight;\\n\\t\\tvar scrollbarWidths;\\n\\n\\t\\t// reset all dimensions back to the original state\\n\\t\\tthis.bottomRuleEl.hide(); // .show() will be called later if this <hr> is necessary\\n\\t\\tthis.scroller.clear(); // sets height to 'auto' and clears overflow\\n\\t\\tuncompensateScroll(this.noScrollRowEls);\\n\\n\\t\\t// limit number of events in the all-day area\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.removeSegPopover(); // kill the \\\"more\\\" popover if displayed\\n\\n\\t\\t\\teventLimit = this.opt('eventLimit');\\n\\t\\t\\tif (eventLimit && typeof eventLimit !== 'number') {\\n\\t\\t\\t\\teventLimit = AGENDA_ALL_DAY_EVENT_LIMIT; // make sure \\\"auto\\\" goes to a real number\\n\\t\\t\\t}\\n\\t\\t\\tif (eventLimit) {\\n\\t\\t\\t\\tthis.dayGrid.limitRows(eventLimit);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (!isAuto) { // should we force dimensions of the scroll container?\\n\\n\\t\\t\\tscrollerHeight = this.computeScrollerHeight(totalHeight);\\n\\t\\t\\tthis.scroller.setHeight(scrollerHeight);\\n\\t\\t\\tscrollbarWidths = this.scroller.getScrollbarWidths();\\n\\n\\t\\t\\tif (scrollbarWidths.left || scrollbarWidths.right) { // using scrollbars?\\n\\n\\t\\t\\t\\t// make the all-day and header rows lines up\\n\\t\\t\\t\\tcompensateScroll(this.noScrollRowEls, scrollbarWidths);\\n\\n\\t\\t\\t\\t// the scrollbar compensation might have changed text flow, which might affect height, so recalculate\\n\\t\\t\\t\\t// and reapply the desired height to the scroller.\\n\\t\\t\\t\\tscrollerHeight = this.computeScrollerHeight(totalHeight);\\n\\t\\t\\t\\tthis.scroller.setHeight(scrollerHeight);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// guarantees the same scrollbar widths\\n\\t\\t\\tthis.scroller.lockOverflow(scrollbarWidths);\\n\\n\\t\\t\\t// if there's any space below the slats, show the horizontal rule.\\n\\t\\t\\t// this won't cause any new overflow, because lockOverflow already called.\\n\\t\\t\\tif (this.timeGrid.getTotalSlatHeight() < scrollerHeight) {\\n\\t\\t\\t\\tthis.bottomRuleEl.show();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// given a desired total height of the view, returns what the height of the scroller should be\\n\\tcomputeScrollerHeight: function(totalHeight) {\\n\\t\\treturn totalHeight -\\n\\t\\t\\tsubtractInnerElHeight(this.el, this.scroller.el); // everything that's NOT the scroller\\n\\t},\\n\\n\\n\\t/* Scroll\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Computes the initial pre-configured scroll state prior to allowing the user to change it\\n\\tcomputeInitialScroll: function() {\\n\\t\\tvar scrollTime = moment.duration(this.opt('scrollTime'));\\n\\t\\tvar top = this.timeGrid.computeTimeTop(scrollTime);\\n\\n\\t\\t// zoom can give weird floating-point values. rather scroll a little bit further\\n\\t\\ttop = Math.ceil(top);\\n\\n\\t\\tif (top) {\\n\\t\\t\\ttop++; // to overcome top border that slots beyond the first have. looks better\\n\\t\\t}\\n\\n\\t\\treturn { top: top };\\n\\t},\\n\\n\\n\\tqueryScroll: function() {\\n\\t\\treturn { top: this.scroller.getScrollTop() };\\n\\t},\\n\\n\\n\\tsetScroll: function(scroll) {\\n\\t\\tthis.scroller.setScrollTop(scroll.top);\\n\\t},\\n\\n\\n\\t/* Hit Areas\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\t// forward all hit-related method calls to the grids (dayGrid might not be defined)\\n\\n\\n\\tprepareHits: function() {\\n\\t\\tthis.timeGrid.prepareHits();\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.prepareHits();\\n\\t\\t}\\n\\t},\\n\\n\\n\\treleaseHits: function() {\\n\\t\\tthis.timeGrid.releaseHits();\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.releaseHits();\\n\\t\\t}\\n\\t},\\n\\n\\n\\tqueryHit: function(left, top) {\\n\\t\\tvar hit = this.timeGrid.queryHit(left, top);\\n\\n\\t\\tif (!hit && this.dayGrid) {\\n\\t\\t\\thit = this.dayGrid.queryHit(left, top);\\n\\t\\t}\\n\\n\\t\\treturn hit;\\n\\t},\\n\\n\\n\\tgetHitSpan: function(hit) {\\n\\t\\t// TODO: hit.component is set as a hack to identify where the hit came from\\n\\t\\treturn hit.component.getHitSpan(hit);\\n\\t},\\n\\n\\n\\tgetHitEl: function(hit) {\\n\\t\\t// TODO: hit.component is set as a hack to identify where the hit came from\\n\\t\\treturn hit.component.getHitEl(hit);\\n\\t},\\n\\n\\n\\t/* Events\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders events onto the view and populates the View's segment array\\n\\trenderEvents: function(events) {\\n\\t\\tvar dayEvents = [];\\n\\t\\tvar timedEvents = [];\\n\\t\\tvar daySegs = [];\\n\\t\\tvar timedSegs;\\n\\t\\tvar i;\\n\\n\\t\\t// separate the events into all-day and timed\\n\\t\\tfor (i = 0; i < events.length; i++) {\\n\\t\\t\\tif (events[i].allDay) {\\n\\t\\t\\t\\tdayEvents.push(events[i]);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\ttimedEvents.push(events[i]);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// render the events in the subcomponents\\n\\t\\ttimedSegs = this.timeGrid.renderEvents(timedEvents);\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tdaySegs = this.dayGrid.renderEvents(dayEvents);\\n\\t\\t}\\n\\n\\t\\t// the all-day area is flexible and might have a lot of events, so shift the height\\n\\t\\tthis.updateHeight();\\n\\t},\\n\\n\\n\\t// Retrieves all segment objects that are rendered in the view\\n\\tgetEventSegs: function() {\\n\\t\\treturn this.timeGrid.getEventSegs().concat(\\n\\t\\t\\tthis.dayGrid ? this.dayGrid.getEventSegs() : []\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Unrenders all event elements and clears internal segment data\\n\\tunrenderEvents: function() {\\n\\n\\t\\t// unrender the events in the subcomponents\\n\\t\\tthis.timeGrid.unrenderEvents();\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.unrenderEvents();\\n\\t\\t}\\n\\n\\t\\t// we DON'T need to call updateHeight() because\\n\\t\\t// a renderEvents() call always happens after this, which will eventually call updateHeight()\\n\\t},\\n\\n\\n\\t/* Dragging (for events and external elements)\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// A returned value of `true` signals that a mock \\\"helper\\\" event has been rendered.\\n\\trenderDrag: function(dropLocation, seg) {\\n\\t\\tif (dropLocation.start.hasTime()) {\\n\\t\\t\\treturn this.timeGrid.renderDrag(dropLocation, seg);\\n\\t\\t}\\n\\t\\telse if (this.dayGrid) {\\n\\t\\t\\treturn this.dayGrid.renderDrag(dropLocation, seg);\\n\\t\\t}\\n\\t},\\n\\n\\n\\tunrenderDrag: function() {\\n\\t\\tthis.timeGrid.unrenderDrag();\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.unrenderDrag();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Selection\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of a selection\\n\\trenderSelection: function(span) {\\n\\t\\tif (span.start.hasTime() || span.end.hasTime()) {\\n\\t\\t\\tthis.timeGrid.renderSelection(span);\\n\\t\\t}\\n\\t\\telse if (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.renderSelection(span);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Unrenders a visual indications of a selection\\n\\tunrenderSelection: function() {\\n\\t\\tthis.timeGrid.unrenderSelection();\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.unrenderSelection();\\n\\t\\t}\\n\\t}\\n\\n});\\n\\n\\n// Methods that will customize the rendering behavior of the AgendaView's timeGrid\\n// TODO: move into TimeGrid\\nvar agendaTimeGridMethods = {\\n\\n\\n\\t// Generates the HTML that will go before the day-of week header cells\\n\\trenderHeadIntroHtml: function() {\\n\\t\\tvar view = this.view;\\n\\t\\tvar weekText;\\n\\n\\t\\tif (view.opt('weekNumbers')) {\\n\\t\\t\\tweekText = this.start.format(view.opt('smallWeekFormat'));\\n\\n\\t\\t\\treturn '' +\\n\\t\\t\\t\\t'<th class=\\\"fc-axis fc-week-number ' + view.widgetHeaderClass + '\\\" ' + view.axisStyleAttr() + '>' +\\n\\t\\t\\t\\t\\tview.buildGotoAnchorHtml( // aside from link, important for matchCellWidths\\n\\t\\t\\t\\t\\t\\t{ date: this.start, type: 'week', forceOff: this.colCnt > 1 },\\n\\t\\t\\t\\t\\t\\thtmlEscape(weekText) // inner HTML\\n\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t'</th>';\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn '<th class=\\\"fc-axis ' + view.widgetHeaderClass + '\\\" ' + view.axisStyleAttr() + '></th>';\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Generates the HTML that goes before the bg of the TimeGrid slot area. Long vertical column.\\n\\trenderBgIntroHtml: function() {\\n\\t\\tvar view = this.view;\\n\\n\\t\\treturn '<td class=\\\"fc-axis ' + view.widgetContentClass + '\\\" ' + view.axisStyleAttr() + '></td>';\\n\\t},\\n\\n\\n\\t// Generates the HTML that goes before all other types of cells.\\n\\t// Affects content-skeleton, helper-skeleton, highlight-skeleton for both the time-grid and day-grid.\\n\\trenderIntroHtml: function() {\\n\\t\\tvar view = this.view;\\n\\n\\t\\treturn '<td class=\\\"fc-axis\\\" ' + view.axisStyleAttr() + '></td>';\\n\\t}\\n\\n};\\n\\n\\n// Methods that will customize the rendering behavior of the AgendaView's dayGrid\\nvar agendaDayGridMethods = {\\n\\n\\n\\t// Generates the HTML that goes before the all-day cells\\n\\trenderBgIntroHtml: function() {\\n\\t\\tvar view = this.view;\\n\\n\\t\\treturn '' +\\n\\t\\t\\t'<td class=\\\"fc-axis ' + view.widgetContentClass + '\\\" ' + view.axisStyleAttr() + '>' +\\n\\t\\t\\t\\t'<span>' + // needed for matchCellWidths\\n\\t\\t\\t\\t\\tview.getAllDayHtml() +\\n\\t\\t\\t\\t'</span>' +\\n\\t\\t\\t'</td>';\\n\\t},\\n\\n\\n\\t// Generates the HTML that goes before all other types of cells.\\n\\t// Affects content-skeleton, helper-skeleton, highlight-skeleton for both the time-grid and day-grid.\\n\\trenderIntroHtml: function() {\\n\\t\\tvar view = this.view;\\n\\n\\t\\treturn '<td class=\\\"fc-axis\\\" ' + view.axisStyleAttr() + '></td>';\\n\\t}\\n\\n};\\n\\n;;\\n\\nvar AGENDA_ALL_DAY_EVENT_LIMIT = 5;\\n\\n// potential nice values for the slot-duration and interval-duration\\n// from largest to smallest\\nvar AGENDA_STOCK_SUB_DURATIONS = [\\n\\t{ hours: 1 },\\n\\t{ minutes: 30 },\\n\\t{ minutes: 15 },\\n\\t{ seconds: 30 },\\n\\t{ seconds: 15 }\\n];\\n\\nfcViews.agenda = {\\n\\t'class': AgendaView,\\n\\tdefaults: {\\n\\t\\tallDaySlot: true,\\n\\t\\tslotDuration: '00:30:00',\\n\\t\\tminTime: '00:00:00',\\n\\t\\tmaxTime: '24:00:00',\\n\\t\\tslotEventOverlap: true // a bad name. confused with overlap/constraint system\\n\\t}\\n};\\n\\nfcViews.agendaDay = {\\n\\ttype: 'agenda',\\n\\tduration: { days: 1 }\\n};\\n\\nfcViews.agendaWeek = {\\n\\ttype: 'agenda',\\n\\tduration: { weeks: 1 }\\n};\\n;;\\n\\n/*\\nResponsible for the scroller, and forwarding event-related actions into the \\\"grid\\\"\\n*/\\nvar ListView = View.extend({\\n\\n\\tgrid: null,\\n\\tscroller: null,\\n\\n\\tinitialize: function() {\\n\\t\\tthis.grid = new ListViewGrid(this);\\n\\t\\tthis.scroller = new Scroller({\\n\\t\\t\\toverflowX: 'hidden',\\n\\t\\t\\toverflowY: 'auto'\\n\\t\\t});\\n\\t},\\n\\n\\tsetRange: function(range) {\\n\\t\\tView.prototype.setRange.call(this, range); // super\\n\\n\\t\\tthis.grid.setRange(range); // needs to process range-related options\\n\\t},\\n\\n\\trenderSkeleton: function() {\\n\\t\\tthis.el.addClass(\\n\\t\\t\\t'fc-list-view ' +\\n\\t\\t\\tthis.widgetContentClass\\n\\t\\t);\\n\\n\\t\\tthis.scroller.render();\\n\\t\\tthis.scroller.el.appendTo(this.el);\\n\\n\\t\\tthis.grid.setElement(this.scroller.scrollEl);\\n\\t},\\n\\n\\tunrenderSkeleton: function() {\\n\\t\\tthis.scroller.destroy(); // will remove the Grid too\\n\\t},\\n\\n\\tsetHeight: function(totalHeight, isAuto) {\\n\\t\\tthis.scroller.setHeight(this.computeScrollerHeight(totalHeight));\\n\\t},\\n\\n\\tcomputeScrollerHeight: function(totalHeight) {\\n\\t\\treturn totalHeight -\\n\\t\\t\\tsubtractInnerElHeight(this.el, this.scroller.el); // everything that's NOT the scroller\\n\\t},\\n\\n\\trenderEvents: function(events) {\\n\\t\\tthis.grid.renderEvents(events);\\n\\t},\\n\\n\\tunrenderEvents: function() {\\n\\t\\tthis.grid.unrenderEvents();\\n\\t},\\n\\n\\tisEventResizable: function(event) {\\n\\t\\treturn false;\\n\\t},\\n\\n\\tisEventDraggable: function(event) {\\n\\t\\treturn false;\\n\\t}\\n\\n});\\n\\n/*\\nResponsible for event rendering and user-interaction.\\nIts \\\"el\\\" is the inner-content of the above view's scroller.\\n*/\\nvar ListViewGrid = Grid.extend({\\n\\n\\tsegSelector: '.fc-list-item', // which elements accept event actions\\n\\thasDayInteractions: false, // no day selection or day clicking\\n\\n\\t// slices by day\\n\\tspanToSegs: function(span) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar dayStart = view.start.clone().time(0); // timed, so segs get times!\\n\\t\\tvar dayIndex = 0;\\n\\t\\tvar seg;\\n\\t\\tvar segs = [];\\n\\n\\t\\twhile (dayStart < view.end) {\\n\\n\\t\\t\\tseg = intersectRanges(span, {\\n\\t\\t\\t\\tstart: dayStart,\\n\\t\\t\\t\\tend: dayStart.clone().add(1, 'day')\\n\\t\\t\\t});\\n\\n\\t\\t\\tif (seg) {\\n\\t\\t\\t\\tseg.dayIndex = dayIndex;\\n\\t\\t\\t\\tsegs.push(seg);\\n\\t\\t\\t}\\n\\n\\t\\t\\tdayStart.add(1, 'day');\\n\\t\\t\\tdayIndex++;\\n\\n\\t\\t\\t// detect when span won't go fully into the next day,\\n\\t\\t\\t// and mutate the latest seg to the be the end.\\n\\t\\t\\tif (\\n\\t\\t\\t\\tseg && !seg.isEnd && span.end.hasTime() &&\\n\\t\\t\\t\\tspan.end < dayStart.clone().add(this.view.nextDayThreshold)\\n\\t\\t\\t) {\\n\\t\\t\\t\\tseg.end = span.end.clone();\\n\\t\\t\\t\\tseg.isEnd = true;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\t// like \\\"4:00am\\\"\\n\\tcomputeEventTimeFormat: function() {\\n\\t\\treturn this.view.opt('mediumTimeFormat');\\n\\t},\\n\\n\\t// for events with a url, the whole <tr> should be clickable,\\n\\t// but it's impossible to wrap with an <a> tag. simulate this.\\n\\thandleSegClick: function(seg, ev) {\\n\\t\\tvar url;\\n\\n\\t\\tGrid.prototype.handleSegClick.apply(this, arguments); // super. might prevent the default action\\n\\n\\t\\t// not clicking on or within an <a> with an href\\n\\t\\tif (!$(ev.target).closest('a[href]').length) {\\n\\t\\t\\turl = seg.event.url;\\n\\t\\t\\tif (url && !ev.isDefaultPrevented()) { // jsEvent not cancelled in handler\\n\\t\\t\\t\\twindow.location.href = url; // simulate link click\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\t// returns list of foreground segs that were actually rendered\\n\\trenderFgSegs: function(segs) {\\n\\t\\tsegs = this.renderFgSegEls(segs); // might filter away hidden events\\n\\n\\t\\tif (!segs.length) {\\n\\t\\t\\tthis.renderEmptyMessage();\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tthis.renderSegList(segs);\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\trenderEmptyMessage: function() {\\n\\t\\tthis.el.html(\\n\\t\\t\\t'<div class=\\\"fc-list-empty-wrap2\\\">' + // TODO: try less wraps\\n\\t\\t\\t'<div class=\\\"fc-list-empty-wrap1\\\">' +\\n\\t\\t\\t'<div class=\\\"fc-list-empty\\\">' +\\n\\t\\t\\t\\thtmlEscape(this.view.opt('noEventsMessage')) +\\n\\t\\t\\t'</div>' +\\n\\t\\t\\t'</div>' +\\n\\t\\t\\t'</div>'\\n\\t\\t);\\n\\t},\\n\\n\\t// render the event segments in the view\\n\\trenderSegList: function(allSegs) {\\n\\t\\tvar segsByDay = this.groupSegsByDay(allSegs); // sparse array\\n\\t\\tvar dayIndex;\\n\\t\\tvar daySegs;\\n\\t\\tvar i;\\n\\t\\tvar tableEl = $('<table class=\\\"fc-list-table\\\"><tbody/></table>');\\n\\t\\tvar tbodyEl = tableEl.find('tbody');\\n\\n\\t\\tfor (dayIndex = 0; dayIndex < segsByDay.length; dayIndex++) {\\n\\t\\t\\tdaySegs = segsByDay[dayIndex];\\n\\t\\t\\tif (daySegs) { // sparse array, so might be undefined\\n\\n\\t\\t\\t\\t// append a day header\\n\\t\\t\\t\\ttbodyEl.append(this.dayHeaderHtml(\\n\\t\\t\\t\\t\\tthis.view.start.clone().add(dayIndex, 'days')\\n\\t\\t\\t\\t));\\n\\n\\t\\t\\t\\tthis.sortEventSegs(daySegs);\\n\\n\\t\\t\\t\\tfor (i = 0; i < daySegs.length; i++) {\\n\\t\\t\\t\\t\\ttbodyEl.append(daySegs[i].el); // append event row\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tthis.el.empty().append(tableEl);\\n\\t},\\n\\n\\t// Returns a sparse array of arrays, segs grouped by their dayIndex\\n\\tgroupSegsByDay: function(segs) {\\n\\t\\tvar segsByDay = []; // sparse array\\n\\t\\tvar i, seg;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\t\\t\\t(segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = []))\\n\\t\\t\\t\\t.push(seg);\\n\\t\\t}\\n\\n\\t\\treturn segsByDay;\\n\\t},\\n\\n\\t// generates the HTML for the day headers that live amongst the event rows\\n\\tdayHeaderHtml: function(dayDate) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar mainFormat = view.opt('listDayFormat');\\n\\t\\tvar altFormat = view.opt('listDayAltFormat');\\n\\n\\t\\treturn '<tr class=\\\"fc-list-heading\\\" data-date=\\\"' + dayDate.format('YYYY-MM-DD') + '\\\">' +\\n\\t\\t\\t'<td class=\\\"' + view.widgetHeaderClass + '\\\" colspan=\\\"3\\\">' +\\n\\t\\t\\t\\t(mainFormat ?\\n\\t\\t\\t\\t\\tview.buildGotoAnchorHtml(\\n\\t\\t\\t\\t\\t\\tdayDate,\\n\\t\\t\\t\\t\\t\\t{ 'class': 'fc-list-heading-main' },\\n\\t\\t\\t\\t\\t\\thtmlEscape(dayDate.format(mainFormat)) // inner HTML\\n\\t\\t\\t\\t\\t) :\\n\\t\\t\\t\\t\\t'') +\\n\\t\\t\\t\\t(altFormat ?\\n\\t\\t\\t\\t\\tview.buildGotoAnchorHtml(\\n\\t\\t\\t\\t\\t\\tdayDate,\\n\\t\\t\\t\\t\\t\\t{ 'class': 'fc-list-heading-alt' },\\n\\t\\t\\t\\t\\t\\thtmlEscape(dayDate.format(altFormat)) // inner HTML\\n\\t\\t\\t\\t\\t) :\\n\\t\\t\\t\\t\\t'') +\\n\\t\\t\\t'</td>' +\\n\\t\\t'</tr>';\\n\\t},\\n\\n\\t// generates the HTML for a single event row\\n\\tfgSegHtml: function(seg) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar classes = [ 'fc-list-item' ].concat(this.getSegCustomClasses(seg));\\n\\t\\tvar bgColor = this.getSegBackgroundColor(seg);\\n\\t\\tvar event = seg.event;\\n\\t\\tvar url = event.url;\\n\\t\\tvar timeHtml;\\n\\n\\t\\tif (event.allDay) {\\n\\t\\t\\ttimeHtml = view.getAllDayHtml();\\n\\t\\t}\\n\\t\\telse if (view.isMultiDayEvent(event)) { // if the event appears to span more than one day\\n\\t\\t\\tif (seg.isStart || seg.isEnd) { // outer segment that probably lasts part of the day\\n\\t\\t\\t\\ttimeHtml = htmlEscape(this.getEventTimeText(seg));\\n\\t\\t\\t}\\n\\t\\t\\telse { // inner segment that lasts the whole day\\n\\t\\t\\t\\ttimeHtml = view.getAllDayHtml();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\t// Display the normal time text for the *event's* times\\n\\t\\t\\ttimeHtml = htmlEscape(this.getEventTimeText(event));\\n\\t\\t}\\n\\n\\t\\tif (url) {\\n\\t\\t\\tclasses.push('fc-has-url');\\n\\t\\t}\\n\\n\\t\\treturn '<tr class=\\\"' + classes.join(' ') + '\\\">' +\\n\\t\\t\\t(this.displayEventTime ?\\n\\t\\t\\t\\t'<td class=\\\"fc-list-item-time ' + view.widgetContentClass + '\\\">' +\\n\\t\\t\\t\\t\\t(timeHtml || '') +\\n\\t\\t\\t\\t'</td>' :\\n\\t\\t\\t\\t'') +\\n\\t\\t\\t'<td class=\\\"fc-list-item-marker ' + view.widgetContentClass + '\\\">' +\\n\\t\\t\\t\\t'<span class=\\\"fc-event-dot\\\"' +\\n\\t\\t\\t\\t(bgColor ?\\n\\t\\t\\t\\t\\t' style=\\\"background-color:' + bgColor + '\\\"' :\\n\\t\\t\\t\\t\\t'') +\\n\\t\\t\\t\\t'></span>' +\\n\\t\\t\\t'</td>' +\\n\\t\\t\\t'<td class=\\\"fc-list-item-title ' + view.widgetContentClass + '\\\">' +\\n\\t\\t\\t\\t'<a' + (url ? ' href=\\\"' + htmlEscape(url) + '\\\"' : '') + '>' +\\n\\t\\t\\t\\t\\thtmlEscape(seg.event.title || '') +\\n\\t\\t\\t\\t'</a>' +\\n\\t\\t\\t'</td>' +\\n\\t\\t'</tr>';\\n\\t}\\n\\n});\\n\\n;;\\n\\nfcViews.list = {\\n\\t'class': ListView,\\n\\tbuttonTextKey: 'list', // what to lookup in locale files\\n\\tdefaults: {\\n\\t\\tbuttonText: 'list', // text to display for English\\n\\t\\tlistDayFormat: 'LL', // like \\\"January 1, 2016\\\"\\n\\t\\tnoEventsMessage: 'No events to display'\\n\\t}\\n};\\n\\nfcViews.listDay = {\\n\\ttype: 'list',\\n\\tduration: { days: 1 },\\n\\tdefaults: {\\n\\t\\tlistDayFormat: 'dddd' // day-of-week is all we need. full date is probably in header\\n\\t}\\n};\\n\\nfcViews.listWeek = {\\n\\ttype: 'list',\\n\\tduration: { weeks: 1 },\\n\\tdefaults: {\\n\\t\\tlistDayFormat: 'dddd', // day-of-week is more important\\n\\t\\tlistDayAltFormat: 'LL'\\n\\t}\\n};\\n\\nfcViews.listMonth = {\\n\\ttype: 'list',\\n\\tduration: { month: 1 },\\n\\tdefaults: {\\n\\t\\tlistDayAltFormat: 'dddd' // day-of-week is nice-to-have\\n\\t}\\n};\\n\\nfcViews.listYear = {\\n\\ttype: 'list',\\n\\tduration: { year: 1 },\\n\\tdefaults: {\\n\\t\\tlistDayAltFormat: 'dddd' // day-of-week is nice-to-have\\n\\t}\\n};\\n\\n;;\\n\\r\\nreturn FC; // export for Node/CommonJS\\r\\n});\"\n\n/***/ },\n\n/***/ 750:\n/***/ function(module, exports) {\n\nmodule.exports = \"/*! jQuery v3.1.1 | (c) jQuery Foundation | jquery.org/license */\\n!function(a,b){\\\"use strict\\\";\\\"object\\\"==typeof module&&\\\"object\\\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\\\"jQuery requires a window with a document\\\");return b(a)}:b(a)}(\\\"undefined\\\"!=typeof window?window:this,function(a,b){\\\"use strict\\\";var c=[],d=a.document,e=Object.getPrototypeOf,f=c.slice,g=c.concat,h=c.push,i=c.indexOf,j={},k=j.toString,l=j.hasOwnProperty,m=l.toString,n=m.call(Object),o={};function p(a,b){b=b||d;var c=b.createElement(\\\"script\\\");c.text=a,b.head.appendChild(c).parentNode.removeChild(c)}var q=\\\"3.1.1\\\",r=function(a,b){return new r.fn.init(a,b)},s=/^[\\\\s\\\\uFEFF\\\\xA0]+|[\\\\s\\\\uFEFF\\\\xA0]+$/g,t=/^-ms-/,u=/-([a-z])/g,v=function(a,b){return b.toUpperCase()};r.fn=r.prototype={jquery:q,constructor:r,length:0,toArray:function(){return f.call(this)},get:function(a){return null==a?f.call(this):a<0?this[a+this.length]:this[a]},pushStack:function(a){var b=r.merge(this.constructor(),a);return b.prevObject=this,b},each:function(a){return r.each(this,a)},map:function(a){return this.pushStack(r.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(f.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(a<0?b:0);return this.pushStack(c>=0&&c<b?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:h,sort:c.sort,splice:c.splice},r.extend=r.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\\\"boolean\\\"==typeof g&&(j=g,g=arguments[h]||{},h++),\\\"object\\\"==typeof g||r.isFunction(g)||(g={}),h===i&&(g=this,h--);h<i;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(r.isPlainObject(d)||(e=r.isArray(d)))?(e?(e=!1,f=c&&r.isArray(c)?c:[]):f=c&&r.isPlainObject(c)?c:{},g[b]=r.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},r.extend({expando:\\\"jQuery\\\"+(q+Math.random()).replace(/\\\\D/g,\\\"\\\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\\\"function\\\"===r.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){var b=r.type(a);return(\\\"number\\\"===b||\\\"string\\\"===b)&&!isNaN(a-parseFloat(a))},isPlainObject:function(a){var b,c;return!(!a||\\\"[object Object]\\\"!==k.call(a))&&(!(b=e(a))||(c=l.call(b,\\\"constructor\\\")&&b.constructor,\\\"function\\\"==typeof c&&m.call(c)===n))},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\\\"\\\":\\\"object\\\"==typeof a||\\\"function\\\"==typeof a?j[k.call(a)]||\\\"object\\\":typeof a},globalEval:function(a){p(a)},camelCase:function(a){return a.replace(t,\\\"ms-\\\").replace(u,v)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b){var c,d=0;if(w(a)){for(c=a.length;d<c;d++)if(b.call(a[d],d,a[d])===!1)break}else for(d in a)if(b.call(a[d],d,a[d])===!1)break;return a},trim:function(a){return null==a?\\\"\\\":(a+\\\"\\\").replace(s,\\\"\\\")},makeArray:function(a,b){var c=b||[];return null!=a&&(w(Object(a))?r.merge(c,\\\"string\\\"==typeof a?[a]:a):h.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:i.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;d<c;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;f<g;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,f=0,h=[];if(w(a))for(d=a.length;f<d;f++)e=b(a[f],f,c),null!=e&&h.push(e);else for(f in a)e=b(a[f],f,c),null!=e&&h.push(e);return g.apply([],h)},guid:1,proxy:function(a,b){var c,d,e;if(\\\"string\\\"==typeof b&&(c=a[b],b=a,a=c),r.isFunction(a))return d=f.call(arguments,2),e=function(){return a.apply(b||this,d.concat(f.call(arguments)))},e.guid=a.guid=a.guid||r.guid++,e},now:Date.now,support:o}),\\\"function\\\"==typeof Symbol&&(r.fn[Symbol.iterator]=c[Symbol.iterator]),r.each(\\\"Boolean Number String Function Array Date RegExp Object Error Symbol\\\".split(\\\" \\\"),function(a,b){j[\\\"[object \\\"+b+\\\"]\\\"]=b.toLowerCase()});function w(a){var b=!!a&&\\\"length\\\"in a&&a.length,c=r.type(a);return\\\"function\\\"!==c&&!r.isWindow(a)&&(\\\"array\\\"===c||0===b||\\\"number\\\"==typeof b&&b>0&&b-1 in a)}var x=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\\\"sizzle\\\"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C={}.hasOwnProperty,D=[],E=D.pop,F=D.push,G=D.push,H=D.slice,I=function(a,b){for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},J=\\\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\\\",K=\\\"[\\\\\\\\x20\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\f]\\\",L=\\\"(?:\\\\\\\\\\\\\\\\.|[\\\\\\\\w-]|[^\\\\0-\\\\\\\\xa0])+\\\",M=\\\"\\\\\\\\[\\\"+K+\\\"*(\\\"+L+\\\")(?:\\\"+K+\\\"*([*^$|!~]?=)\\\"+K+\\\"*(?:'((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\"|(\\\"+L+\\\"))|)\\\"+K+\\\"*\\\\\\\\]\\\",N=\\\":(\\\"+L+\\\")(?:\\\\\\\\((('((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\")|((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\()[\\\\\\\\]]|\\\"+M+\\\")*)|.*)\\\\\\\\)|)\\\",O=new RegExp(K+\\\"+\\\",\\\"g\\\"),P=new RegExp(\\\"^\\\"+K+\\\"+|((?:^|[^\\\\\\\\\\\\\\\\])(?:\\\\\\\\\\\\\\\\.)*)\\\"+K+\\\"+$\\\",\\\"g\\\"),Q=new RegExp(\\\"^\\\"+K+\\\"*,\\\"+K+\\\"*\\\"),R=new RegExp(\\\"^\\\"+K+\\\"*([>+~]|\\\"+K+\\\")\\\"+K+\\\"*\\\"),S=new RegExp(\\\"=\\\"+K+\\\"*([^\\\\\\\\]'\\\\\\\"]*?)\\\"+K+\\\"*\\\\\\\\]\\\",\\\"g\\\"),T=new RegExp(N),U=new RegExp(\\\"^\\\"+L+\\\"$\\\"),V={ID:new RegExp(\\\"^#(\\\"+L+\\\")\\\"),CLASS:new RegExp(\\\"^\\\\\\\\.(\\\"+L+\\\")\\\"),TAG:new RegExp(\\\"^(\\\"+L+\\\"|[*])\\\"),ATTR:new RegExp(\\\"^\\\"+M),PSEUDO:new RegExp(\\\"^\\\"+N),CHILD:new RegExp(\\\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\\\\\(\\\"+K+\\\"*(even|odd|(([+-]|)(\\\\\\\\d*)n|)\\\"+K+\\\"*(?:([+-]|)\\\"+K+\\\"*(\\\\\\\\d+)|))\\\"+K+\\\"*\\\\\\\\)|)\\\",\\\"i\\\"),bool:new RegExp(\\\"^(?:\\\"+J+\\\")$\\\",\\\"i\\\"),needsContext:new RegExp(\\\"^\\\"+K+\\\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\\\\\(\\\"+K+\\\"*((?:-\\\\\\\\d)?\\\\\\\\d*)\\\"+K+\\\"*\\\\\\\\)|)(?=[^-]|$)\\\",\\\"i\\\")},W=/^(?:input|select|textarea|button)$/i,X=/^h\\\\d$/i,Y=/^[^{]+\\\\{\\\\s*\\\\[native \\\\w/,Z=/^(?:#([\\\\w-]+)|(\\\\w+)|\\\\.([\\\\w-]+))$/,$=/[+~]/,_=new RegExp(\\\"\\\\\\\\\\\\\\\\([\\\\\\\\da-f]{1,6}\\\"+K+\\\"?|(\\\"+K+\\\")|.)\\\",\\\"ig\\\"),aa=function(a,b,c){var d=\\\"0x\\\"+b-65536;return d!==d||c?b:d<0?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ba=/([\\\\0-\\\\x1f\\\\x7f]|^-?\\\\d)|^-$|[^\\\\0-\\\\x1f\\\\x7f-\\\\uFFFF\\\\w-]/g,ca=function(a,b){return b?\\\"\\\\0\\\"===a?\\\"\\\\ufffd\\\":a.slice(0,-1)+\\\"\\\\\\\\\\\"+a.charCodeAt(a.length-1).toString(16)+\\\" \\\":\\\"\\\\\\\\\\\"+a},da=function(){m()},ea=ta(function(a){return a.disabled===!0&&(\\\"form\\\"in a||\\\"label\\\"in a)},{dir:\\\"parentNode\\\",next:\\\"legend\\\"});try{G.apply(D=H.call(v.childNodes),v.childNodes),D[v.childNodes.length].nodeType}catch(fa){G={apply:D.length?function(a,b){F.apply(a,H.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s=b&&b.ownerDocument,w=b?b.nodeType:9;if(d=d||[],\\\"string\\\"!=typeof a||!a||1!==w&&9!==w&&11!==w)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==w&&(l=Z.exec(a)))if(f=l[1]){if(9===w){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(s&&(j=s.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(l[2])return G.apply(d,b.getElementsByTagName(a)),d;if((f=l[3])&&c.getElementsByClassName&&b.getElementsByClassName)return G.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\\\" \\\"]&&(!q||!q.test(a))){if(1!==w)s=b,r=a;else if(\\\"object\\\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\\\"id\\\"))?k=k.replace(ba,ca):b.setAttribute(\\\"id\\\",k=u),o=g(a),h=o.length;while(h--)o[h]=\\\"#\\\"+k+\\\" \\\"+sa(o[h]);r=o.join(\\\",\\\"),s=$.test(a)&&qa(b.parentNode)||b}if(r)try{return G.apply(d,s.querySelectorAll(r)),d}catch(x){}finally{k===u&&b.removeAttribute(\\\"id\\\")}}}return i(a.replace(P,\\\"$1\\\"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+\\\" \\\")>d.cacheLength&&delete b[a.shift()],b[c+\\\" \\\"]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement(\\\"fieldset\\\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split(\\\"|\\\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&a.sourceIndex-b.sourceIndex;if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return\\\"input\\\"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return(\\\"input\\\"===c||\\\"button\\\"===c)&&b.type===a}}function oa(a){return function(b){return\\\"form\\\"in b?b.parentNode&&b.disabled===!1?\\\"label\\\"in b?\\\"label\\\"in b.parentNode?b.parentNode.disabled===a:b.disabled===a:b.isDisabled===a||b.isDisabled!==!a&&ea(b)===a:b.disabled===a:\\\"label\\\"in b&&b.disabled===a}}function pa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function qa(a){return a&&\\\"undefined\\\"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return!!b&&\\\"HTML\\\"!==b.nodeName},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),v!==n&&(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener(\\\"unload\\\",da,!1):e.attachEvent&&e.attachEvent(\\\"onunload\\\",da)),c.attributes=ja(function(a){return a.className=\\\"i\\\",!a.getAttribute(\\\"className\\\")}),c.getElementsByTagName=ja(function(a){return a.appendChild(n.createComment(\\\"\\\")),!a.getElementsByTagName(\\\"*\\\").length}),c.getElementsByClassName=Y.test(n.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){return a.getAttribute(\\\"id\\\")===b}},d.find.ID=function(a,b){if(\\\"undefined\\\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}}):(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){var c=\\\"undefined\\\"!=typeof a.getAttributeNode&&a.getAttributeNode(\\\"id\\\");return c&&c.value===b}},d.find.ID=function(a,b){if(\\\"undefined\\\"!=typeof b.getElementById&&p){var c,d,e,f=b.getElementById(a);if(f){if(c=f.getAttributeNode(\\\"id\\\"),c&&c.value===a)return[f];e=b.getElementsByName(a),d=0;while(f=e[d++])if(c=f.getAttributeNode(\\\"id\\\"),c&&c.value===a)return[f]}return[]}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\\\"undefined\\\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\\\"*\\\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){if(\\\"undefined\\\"!=typeof b.getElementsByClassName&&p)return b.getElementsByClassName(a)},r=[],q=[],(c.qsa=Y.test(n.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML=\\\"<a id='\\\"+u+\\\"'></a><select id='\\\"+u+\\\"-\\\\r\\\\\\\\' msallowcapture=''><option selected=''></option></select>\\\",a.querySelectorAll(\\\"[msallowcapture^='']\\\").length&&q.push(\\\"[*^$]=\\\"+K+\\\"*(?:''|\\\\\\\"\\\\\\\")\\\"),a.querySelectorAll(\\\"[selected]\\\").length||q.push(\\\"\\\\\\\\[\\\"+K+\\\"*(?:value|\\\"+J+\\\")\\\"),a.querySelectorAll(\\\"[id~=\\\"+u+\\\"-]\\\").length||q.push(\\\"~=\\\"),a.querySelectorAll(\\\":checked\\\").length||q.push(\\\":checked\\\"),a.querySelectorAll(\\\"a#\\\"+u+\\\"+*\\\").length||q.push(\\\".#.+[+~]\\\")}),ja(function(a){a.innerHTML=\\\"<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>\\\";var b=n.createElement(\\\"input\\\");b.setAttribute(\\\"type\\\",\\\"hidden\\\"),a.appendChild(b).setAttribute(\\\"name\\\",\\\"D\\\"),a.querySelectorAll(\\\"[name=d]\\\").length&&q.push(\\\"name\\\"+K+\\\"*[*^$|!~]?=\\\"),2!==a.querySelectorAll(\\\":enabled\\\").length&&q.push(\\\":enabled\\\",\\\":disabled\\\"),o.appendChild(a).disabled=!0,2!==a.querySelectorAll(\\\":disabled\\\").length&&q.push(\\\":enabled\\\",\\\":disabled\\\"),a.querySelectorAll(\\\"*,:x\\\"),q.push(\\\",.*:\\\")})),(c.matchesSelector=Y.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,\\\"*\\\"),s.call(a,\\\"[s!='']:x\\\"),r.push(\\\"!=\\\",N)}),q=q.length&&new RegExp(q.join(\\\"|\\\")),r=r.length&&new RegExp(r.join(\\\"|\\\")),b=Y.test(o.compareDocumentPosition),t=b||Y.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?I(k,a)-I(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?I(k,a)-I(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?la(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(S,\\\"='$1']\\\"),c.matchesSelector&&p&&!A[b+\\\" \\\"]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&C.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.escape=function(a){return(a+\\\"\\\").replace(ba,ca)},ga.error=function(a){throw new Error(\\\"Syntax error, unrecognized expression: \\\"+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c=\\\"\\\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\\\"string\\\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:V,attrHandle:{},find:{},relative:{\\\">\\\":{dir:\\\"parentNode\\\",first:!0},\\\" \\\":{dir:\\\"parentNode\\\"},\\\"+\\\":{dir:\\\"previousSibling\\\",first:!0},\\\"~\\\":{dir:\\\"previousSibling\\\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(_,aa),a[3]=(a[3]||a[4]||a[5]||\\\"\\\").replace(_,aa),\\\"~=\\\"===a[2]&&(a[3]=\\\" \\\"+a[3]+\\\" \\\"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\\\"nth\\\"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\\\"even\\\"===a[3]||\\\"odd\\\"===a[3])),a[5]=+(a[7]+a[8]||\\\"odd\\\"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return V.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\\\"\\\":c&&T.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\\\")\\\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(_,aa).toLowerCase();return\\\"*\\\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\\\" \\\"];return b||(b=new RegExp(\\\"(^|\\\"+K+\\\")\\\"+a+\\\"(\\\"+K+\\\"|$)\\\"))&&y(a,function(a){return b.test(\\\"string\\\"==typeof a.className&&a.className||\\\"undefined\\\"!=typeof a.getAttribute&&a.getAttribute(\\\"class\\\")||\\\"\\\")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?\\\"!=\\\"===b:!b||(e+=\\\"\\\",\\\"=\\\"===b?e===c:\\\"!=\\\"===b?e!==c:\\\"^=\\\"===b?c&&0===e.indexOf(c):\\\"*=\\\"===b?c&&e.indexOf(c)>-1:\\\"$=\\\"===b?c&&e.slice(-c.length)===c:\\\"~=\\\"===b?(\\\" \\\"+e.replace(O,\\\" \\\")+\\\" \\\").indexOf(c)>-1:\\\"|=\\\"===b&&(e===c||e.slice(0,c.length+1)===c+\\\"-\\\"))}},CHILD:function(a,b,c,d,e){var f=\\\"nth\\\"!==a.slice(0,3),g=\\\"last\\\"!==a.slice(-4),h=\\\"of-type\\\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\\\"nextSibling\\\":\\\"previousSibling\\\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p=\\\"only\\\"===a&&!o&&\\\"nextSibling\\\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error(\\\"unsupported pseudo: \\\"+a);return e[u]?e(b):e.length>1?(c=[a,a,\\\"\\\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=I(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(P,\\\"$1\\\"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(_,aa),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return U.test(a||\\\"\\\")||ga.error(\\\"unsupported lang: \\\"+a),a=a.replace(_,aa).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\\\"xml:lang\\\")||b.getAttribute(\\\"lang\\\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\\\"-\\\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:oa(!1),disabled:oa(!0),checked:function(a){var b=a.nodeName.toLowerCase();return\\\"input\\\"===b&&!!a.checked||\\\"option\\\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return X.test(a.nodeName)},input:function(a){return W.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\\\"input\\\"===b&&\\\"button\\\"===a.type||\\\"button\\\"===b},text:function(a){var b;return\\\"input\\\"===a.nodeName.toLowerCase()&&\\\"text\\\"===a.type&&(null==(b=a.getAttribute(\\\"type\\\"))||\\\"text\\\"===b.toLowerCase())},first:pa(function(){return[0]}),last:pa(function(a,b){return[b-1]}),eq:pa(function(a,b,c){return[c<0?c+b:c]}),even:pa(function(a,b){for(var c=0;c<b;c+=2)a.push(c);return a}),odd:pa(function(a,b){for(var c=1;c<b;c+=2)a.push(c);return a}),lt:pa(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:pa(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function ra(){}ra.prototype=d.filters=d.pseudos,d.setFilters=new ra,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\\\" \\\"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){c&&!(e=Q.exec(h))||(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=R.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(P,\\\" \\\")}),h=h.slice(c.length));for(g in d.filter)!(e=V[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function sa(a){for(var b=0,c=a.length,d=\\\"\\\";b<c;b++)d+=a[b].value;return d}function ta(a,b,c){var d=b.dir,e=b.next,f=e||d,g=c&&\\\"parentNode\\\"===f,h=x++;return b.first?function(b,c,e){while(b=b[d])if(1===b.nodeType||g)return a(b,c,e);return!1}:function(b,c,i){var j,k,l,m=[w,h];if(i){while(b=b[d])if((1===b.nodeType||g)&&a(b,c,i))return!0}else while(b=b[d])if(1===b.nodeType||g)if(l=b[u]||(b[u]={}),k=l[b.uniqueID]||(l[b.uniqueID]={}),e&&e===b.nodeName.toLowerCase())b=b[d]||b;else{if((j=k[f])&&j[0]===w&&j[1]===h)return m[2]=j[2];if(k[f]=m,m[2]=a(b,c,i))return!0}return!1}}function ua(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function va(a,b,c){for(var d=0,e=b.length;d<e;d++)ga(a,b[d],c);return c}function wa(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;h<i;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}function xa(a,b,c,d,e,f){return d&&!d[u]&&(d=xa(d)),e&&!e[u]&&(e=xa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||va(b||\\\"*\\\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:wa(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=wa(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?I(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=wa(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):G.apply(g,r)})}function ya(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\\\" \\\"],i=g?1:0,k=ta(function(a){return a===b},h,!0),l=ta(function(a){return I(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];i<f;i++)if(c=d.relative[a[i].type])m=[ta(ua(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;e<f;e++)if(d.relative[a[e].type])break;return xa(i>1&&ua(m),i>1&&sa(a.slice(0,i-1).concat({value:\\\" \\\"===a[i-2].type?\\\"*\\\":\\\"\\\"})).replace(P,\\\"$1\\\"),c,i<e&&ya(a.slice(i,e)),e<f&&ya(a=a.slice(e)),e<f&&sa(a))}m.push(c)}return ua(m)}function za(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\\\"0\\\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\\\"*\\\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=E.call(i));u=wa(u)}G.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&ga.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+\\\" \\\"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=ya(b[c]),f[u]?d.push(f):e.push(f);f=A(a,za(e,d)),f.selector=a}return f},i=ga.select=function(a,b,c,e){var f,i,j,k,l,m=\\\"function\\\"==typeof a&&a,n=!e&&g(a=m.selector||a);if(c=c||[],1===n.length){if(i=n[0]=n[0].slice(0),i.length>2&&\\\"ID\\\"===(j=i[0]).type&&9===b.nodeType&&p&&d.relative[i[1].type]){if(b=(d.find.ID(j.matches[0].replace(_,aa),b)||[])[0],!b)return c;m&&(b=b.parentNode),a=a.slice(i.shift().value.length)}f=V.needsContext.test(a)?0:i.length;while(f--){if(j=i[f],d.relative[k=j.type])break;if((l=d.find[k])&&(e=l(j.matches[0].replace(_,aa),$.test(i[0].type)&&qa(b.parentNode)||b))){if(i.splice(f,1),a=e.length&&sa(i),!a)return G.apply(c,e),c;break}}}return(m||h(a,n))(e,b,!p,c,!b||$.test(a)&&qa(b.parentNode)||b),c},c.sortStable=u.split(\\\"\\\").sort(B).join(\\\"\\\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement(\\\"fieldset\\\"))}),ja(function(a){return a.innerHTML=\\\"<a href='#'></a>\\\",\\\"#\\\"===a.firstChild.getAttribute(\\\"href\\\")})||ka(\\\"type|href|height|width\\\",function(a,b,c){if(!c)return a.getAttribute(b,\\\"type\\\"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML=\\\"<input/>\\\",a.firstChild.setAttribute(\\\"value\\\",\\\"\\\"),\\\"\\\"===a.firstChild.getAttribute(\\\"value\\\")})||ka(\\\"value\\\",function(a,b,c){if(!c&&\\\"input\\\"===a.nodeName.toLowerCase())return a.defaultValue}),ja(function(a){return null==a.getAttribute(\\\"disabled\\\")})||ka(J,function(a,b,c){var d;if(!c)return a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);r.find=x,r.expr=x.selectors,r.expr[\\\":\\\"]=r.expr.pseudos,r.uniqueSort=r.unique=x.uniqueSort,r.text=x.getText,r.isXMLDoc=x.isXML,r.contains=x.contains,r.escapeSelector=x.escape;var y=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&r(a).is(c))break;d.push(a)}return d},z=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},A=r.expr.match.needsContext,B=/^<([a-z][^\\\\/\\\\0>:\\\\x20\\\\t\\\\r\\\\n\\\\f]*)[\\\\x20\\\\t\\\\r\\\\n\\\\f]*\\\\/?>(?:<\\\\/\\\\1>|)$/i,C=/^.[^:#\\\\[\\\\.,]*$/;function D(a,b,c){return r.isFunction(b)?r.grep(a,function(a,d){return!!b.call(a,d,a)!==c}):b.nodeType?r.grep(a,function(a){return a===b!==c}):\\\"string\\\"!=typeof b?r.grep(a,function(a){return i.call(b,a)>-1!==c}):C.test(b)?r.filter(b,a,c):(b=r.filter(b,a),r.grep(a,function(a){return i.call(b,a)>-1!==c&&1===a.nodeType}))}r.filter=function(a,b,c){var d=b[0];return c&&(a=\\\":not(\\\"+a+\\\")\\\"),1===b.length&&1===d.nodeType?r.find.matchesSelector(d,a)?[d]:[]:r.find.matches(a,r.grep(b,function(a){return 1===a.nodeType}))},r.fn.extend({find:function(a){var b,c,d=this.length,e=this;if(\\\"string\\\"!=typeof a)return this.pushStack(r(a).filter(function(){for(b=0;b<d;b++)if(r.contains(e[b],this))return!0}));for(c=this.pushStack([]),b=0;b<d;b++)r.find(a,e[b],c);return d>1?r.uniqueSort(c):c},filter:function(a){return this.pushStack(D(this,a||[],!1))},not:function(a){return this.pushStack(D(this,a||[],!0))},is:function(a){return!!D(this,\\\"string\\\"==typeof a&&A.test(a)?r(a):a||[],!1).length}});var E,F=/^(?:\\\\s*(<[\\\\w\\\\W]+>)[^>]*|#([\\\\w-]+))$/,G=r.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||E,\\\"string\\\"==typeof a){if(e=\\\"<\\\"===a[0]&&\\\">\\\"===a[a.length-1]&&a.length>=3?[null,a,null]:F.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof r?b[0]:b,r.merge(this,r.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),B.test(e[1])&&r.isPlainObject(b))for(e in b)r.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&(this[0]=f,this.length=1),this}return a.nodeType?(this[0]=a,this.length=1,this):r.isFunction(a)?void 0!==c.ready?c.ready(a):a(r):r.makeArray(a,this)};G.prototype=r.fn,E=r(d);var H=/^(?:parents|prev(?:Until|All))/,I={children:!0,contents:!0,next:!0,prev:!0};r.fn.extend({has:function(a){var b=r(a,this),c=b.length;return this.filter(function(){for(var a=0;a<c;a++)if(r.contains(this,b[a]))return!0})},closest:function(a,b){var c,d=0,e=this.length,f=[],g=\\\"string\\\"!=typeof a&&r(a);if(!A.test(a))for(;d<e;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&r.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?r.uniqueSort(f):f)},index:function(a){return a?\\\"string\\\"==typeof a?i.call(r(a),this[0]):i.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(r.uniqueSort(r.merge(this.get(),r(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function J(a,b){while((a=a[b])&&1!==a.nodeType);return a}r.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return y(a,\\\"parentNode\\\")},parentsUntil:function(a,b,c){return y(a,\\\"parentNode\\\",c)},next:function(a){return J(a,\\\"nextSibling\\\")},prev:function(a){return J(a,\\\"previousSibling\\\")},nextAll:function(a){return y(a,\\\"nextSibling\\\")},prevAll:function(a){return y(a,\\\"previousSibling\\\")},nextUntil:function(a,b,c){return y(a,\\\"nextSibling\\\",c)},prevUntil:function(a,b,c){return y(a,\\\"previousSibling\\\",c)},siblings:function(a){return z((a.parentNode||{}).firstChild,a)},children:function(a){return z(a.firstChild)},contents:function(a){return a.contentDocument||r.merge([],a.childNodes)}},function(a,b){r.fn[a]=function(c,d){var e=r.map(this,b,c);return\\\"Until\\\"!==a.slice(-5)&&(d=c),d&&\\\"string\\\"==typeof d&&(e=r.filter(d,e)),this.length>1&&(I[a]||r.uniqueSort(e),H.test(a)&&e.reverse()),this.pushStack(e)}});var K=/[^\\\\x20\\\\t\\\\r\\\\n\\\\f]+/g;function L(a){var b={};return r.each(a.match(K)||[],function(a,c){b[c]=!0}),b}r.Callbacks=function(a){a=\\\"string\\\"==typeof a?L(a):r.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\\\"\\\")},j={add:function(){return f&&(c&&!b&&(h=f.length-1,g.push(c)),function d(b){r.each(b,function(b,c){r.isFunction(c)?a.unique&&j.has(c)||f.push(c):c&&c.length&&\\\"string\\\"!==r.type(c)&&d(c)})}(arguments),c&&!b&&i()),this},remove:function(){return r.each(arguments,function(a,b){var c;while((c=r.inArray(b,f,c))>-1)f.splice(c,1),c<=h&&h--}),this},has:function(a){return a?r.inArray(a,f)>-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c=\\\"\\\",this},disabled:function(){return!f},lock:function(){return e=g=[],c||b||(f=c=\\\"\\\"),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j};function M(a){return a}function N(a){throw a}function O(a,b,c){var d;try{a&&r.isFunction(d=a.promise)?d.call(a).done(b).fail(c):a&&r.isFunction(d=a.then)?d.call(a,b,c):b.call(void 0,a)}catch(a){c.call(void 0,a)}}r.extend({Deferred:function(b){var c=[[\\\"notify\\\",\\\"progress\\\",r.Callbacks(\\\"memory\\\"),r.Callbacks(\\\"memory\\\"),2],[\\\"resolve\\\",\\\"done\\\",r.Callbacks(\\\"once memory\\\"),r.Callbacks(\\\"once memory\\\"),0,\\\"resolved\\\"],[\\\"reject\\\",\\\"fail\\\",r.Callbacks(\\\"once memory\\\"),r.Callbacks(\\\"once memory\\\"),1,\\\"rejected\\\"]],d=\\\"pending\\\",e={state:function(){return d},always:function(){return f.done(arguments).fail(arguments),this},\\\"catch\\\":function(a){return e.then(null,a)},pipe:function(){var a=arguments;return r.Deferred(function(b){r.each(c,function(c,d){var e=r.isFunction(a[d[4]])&&a[d[4]];f[d[1]](function(){var a=e&&e.apply(this,arguments);a&&r.isFunction(a.promise)?a.promise().progress(b.notify).done(b.resolve).fail(b.reject):b[d[0]+\\\"With\\\"](this,e?[a]:arguments)})}),a=null}).promise()},then:function(b,d,e){var f=0;function g(b,c,d,e){return function(){var h=this,i=arguments,j=function(){var a,j;if(!(b<f)){if(a=d.apply(h,i),a===c.promise())throw new TypeError(\\\"Thenable self-resolution\\\");j=a&&(\\\"object\\\"==typeof a||\\\"function\\\"==typeof a)&&a.then,r.isFunction(j)?e?j.call(a,g(f,c,M,e),g(f,c,N,e)):(f++,j.call(a,g(f,c,M,e),g(f,c,N,e),g(f,c,M,c.notifyWith))):(d!==M&&(h=void 0,i=[a]),(e||c.resolveWith)(h,i))}},k=e?j:function(){try{j()}catch(a){r.Deferred.exceptionHook&&r.Deferred.exceptionHook(a,k.stackTrace),b+1>=f&&(d!==N&&(h=void 0,i=[a]),c.rejectWith(h,i))}};b?k():(r.Deferred.getStackHook&&(k.stackTrace=r.Deferred.getStackHook()),a.setTimeout(k))}}return r.Deferred(function(a){c[0][3].add(g(0,a,r.isFunction(e)?e:M,a.notifyWith)),c[1][3].add(g(0,a,r.isFunction(b)?b:M)),c[2][3].add(g(0,a,r.isFunction(d)?d:N))}).promise()},promise:function(a){return null!=a?r.extend(a,e):e}},f={};return r.each(c,function(a,b){var g=b[2],h=b[5];e[b[1]]=g.add,h&&g.add(function(){d=h},c[3-a][2].disable,c[0][2].lock),g.add(b[3].fire),f[b[0]]=function(){return f[b[0]+\\\"With\\\"](this===f?void 0:this,arguments),this},f[b[0]+\\\"With\\\"]=g.fireWith}),e.promise(f),b&&b.call(f,f),f},when:function(a){var b=arguments.length,c=b,d=Array(c),e=f.call(arguments),g=r.Deferred(),h=function(a){return function(c){d[a]=this,e[a]=arguments.length>1?f.call(arguments):c,--b||g.resolveWith(d,e)}};if(b<=1&&(O(a,g.done(h(c)).resolve,g.reject),\\\"pending\\\"===g.state()||r.isFunction(e[c]&&e[c].then)))return g.then();while(c--)O(e[c],h(c),g.reject);return g.promise()}});var P=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;r.Deferred.exceptionHook=function(b,c){a.console&&a.console.warn&&b&&P.test(b.name)&&a.console.warn(\\\"jQuery.Deferred exception: \\\"+b.message,b.stack,c)},r.readyException=function(b){a.setTimeout(function(){throw b})};var Q=r.Deferred();r.fn.ready=function(a){return Q.then(a)[\\\"catch\\\"](function(a){r.readyException(a)}),this},r.extend({isReady:!1,readyWait:1,holdReady:function(a){a?r.readyWait++:r.ready(!0)},ready:function(a){(a===!0?--r.readyWait:r.isReady)||(r.isReady=!0,a!==!0&&--r.readyWait>0||Q.resolveWith(d,[r]))}}),r.ready.then=Q.then;function R(){d.removeEventListener(\\\"DOMContentLoaded\\\",R),\\na.removeEventListener(\\\"load\\\",R),r.ready()}\\\"complete\\\"===d.readyState||\\\"loading\\\"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(r.ready):(d.addEventListener(\\\"DOMContentLoaded\\\",R),a.addEventListener(\\\"load\\\",R));var S=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\\\"object\\\"===r.type(c)){e=!0;for(h in c)S(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,r.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(r(a),c)})),b))for(;h<i;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},T=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function U(){this.expando=r.expando+U.uid++}U.uid=1,U.prototype={cache:function(a){var b=a[this.expando];return b||(b={},T(a)&&(a.nodeType?a[this.expando]=b:Object.defineProperty(a,this.expando,{value:b,configurable:!0}))),b},set:function(a,b,c){var d,e=this.cache(a);if(\\\"string\\\"==typeof b)e[r.camelCase(b)]=c;else for(d in b)e[r.camelCase(d)]=b[d];return e},get:function(a,b){return void 0===b?this.cache(a):a[this.expando]&&a[this.expando][r.camelCase(b)]},access:function(a,b,c){return void 0===b||b&&\\\"string\\\"==typeof b&&void 0===c?this.get(a,b):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d=a[this.expando];if(void 0!==d){if(void 0!==b){r.isArray(b)?b=b.map(r.camelCase):(b=r.camelCase(b),b=b in d?[b]:b.match(K)||[]),c=b.length;while(c--)delete d[b[c]]}(void 0===b||r.isEmptyObject(d))&&(a.nodeType?a[this.expando]=void 0:delete a[this.expando])}},hasData:function(a){var b=a[this.expando];return void 0!==b&&!r.isEmptyObject(b)}};var V=new U,W=new U,X=/^(?:\\\\{[\\\\w\\\\W]*\\\\}|\\\\[[\\\\w\\\\W]*\\\\])$/,Y=/[A-Z]/g;function Z(a){return\\\"true\\\"===a||\\\"false\\\"!==a&&(\\\"null\\\"===a?null:a===+a+\\\"\\\"?+a:X.test(a)?JSON.parse(a):a)}function $(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\\\"data-\\\"+b.replace(Y,\\\"-$&\\\").toLowerCase(),c=a.getAttribute(d),\\\"string\\\"==typeof c){try{c=Z(c)}catch(e){}W.set(a,b,c)}else c=void 0;return c}r.extend({hasData:function(a){return W.hasData(a)||V.hasData(a)},data:function(a,b,c){return W.access(a,b,c)},removeData:function(a,b){W.remove(a,b)},_data:function(a,b,c){return V.access(a,b,c)},_removeData:function(a,b){V.remove(a,b)}}),r.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=W.get(f),1===f.nodeType&&!V.get(f,\\\"hasDataAttrs\\\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\\\"data-\\\")&&(d=r.camelCase(d.slice(5)),$(f,d,e[d])));V.set(f,\\\"hasDataAttrs\\\",!0)}return e}return\\\"object\\\"==typeof a?this.each(function(){W.set(this,a)}):S(this,function(b){var c;if(f&&void 0===b){if(c=W.get(f,a),void 0!==c)return c;if(c=$(f,a),void 0!==c)return c}else this.each(function(){W.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){W.remove(this,a)})}}),r.extend({queue:function(a,b,c){var d;if(a)return b=(b||\\\"fx\\\")+\\\"queue\\\",d=V.get(a,b),c&&(!d||r.isArray(c)?d=V.access(a,b,r.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||\\\"fx\\\";var c=r.queue(a,b),d=c.length,e=c.shift(),f=r._queueHooks(a,b),g=function(){r.dequeue(a,b)};\\\"inprogress\\\"===e&&(e=c.shift(),d--),e&&(\\\"fx\\\"===b&&c.unshift(\\\"inprogress\\\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\\\"queueHooks\\\";return V.get(a,c)||V.access(a,c,{empty:r.Callbacks(\\\"once memory\\\").add(function(){V.remove(a,[b+\\\"queue\\\",c])})})}}),r.fn.extend({queue:function(a,b){var c=2;return\\\"string\\\"!=typeof a&&(b=a,a=\\\"fx\\\",c--),arguments.length<c?r.queue(this[0],a):void 0===b?this:this.each(function(){var c=r.queue(this,a,b);r._queueHooks(this,a),\\\"fx\\\"===a&&\\\"inprogress\\\"!==c[0]&&r.dequeue(this,a)})},dequeue:function(a){return this.each(function(){r.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\\\"fx\\\",[])},promise:function(a,b){var c,d=1,e=r.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\\\"string\\\"!=typeof a&&(b=a,a=void 0),a=a||\\\"fx\\\";while(g--)c=V.get(f[g],a+\\\"queueHooks\\\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var _=/[+-]?(?:\\\\d*\\\\.|)\\\\d+(?:[eE][+-]?\\\\d+|)/.source,aa=new RegExp(\\\"^(?:([+-])=|)(\\\"+_+\\\")([a-z%]*)$\\\",\\\"i\\\"),ba=[\\\"Top\\\",\\\"Right\\\",\\\"Bottom\\\",\\\"Left\\\"],ca=function(a,b){return a=b||a,\\\"none\\\"===a.style.display||\\\"\\\"===a.style.display&&r.contains(a.ownerDocument,a)&&\\\"none\\\"===r.css(a,\\\"display\\\")},da=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};function ea(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return r.css(a,b,\\\"\\\")},i=h(),j=c&&c[3]||(r.cssNumber[b]?\\\"\\\":\\\"px\\\"),k=(r.cssNumber[b]||\\\"px\\\"!==j&&+i)&&aa.exec(r.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\\\".5\\\",k/=f,r.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}var fa={};function ga(a){var b,c=a.ownerDocument,d=a.nodeName,e=fa[d];return e?e:(b=c.body.appendChild(c.createElement(d)),e=r.css(b,\\\"display\\\"),b.parentNode.removeChild(b),\\\"none\\\"===e&&(e=\\\"block\\\"),fa[d]=e,e)}function ha(a,b){for(var c,d,e=[],f=0,g=a.length;f<g;f++)d=a[f],d.style&&(c=d.style.display,b?(\\\"none\\\"===c&&(e[f]=V.get(d,\\\"display\\\")||null,e[f]||(d.style.display=\\\"\\\")),\\\"\\\"===d.style.display&&ca(d)&&(e[f]=ga(d))):\\\"none\\\"!==c&&(e[f]=\\\"none\\\",V.set(d,\\\"display\\\",c)));for(f=0;f<g;f++)null!=e[f]&&(a[f].style.display=e[f]);return a}r.fn.extend({show:function(){return ha(this,!0)},hide:function(){return ha(this)},toggle:function(a){return\\\"boolean\\\"==typeof a?a?this.show():this.hide():this.each(function(){ca(this)?r(this).show():r(this).hide()})}});var ia=/^(?:checkbox|radio)$/i,ja=/<([a-z][^\\\\/\\\\0>\\\\x20\\\\t\\\\r\\\\n\\\\f]+)/i,ka=/^$|\\\\/(?:java|ecma)script/i,la={option:[1,\\\"<select multiple='multiple'>\\\",\\\"</select>\\\"],thead:[1,\\\"<table>\\\",\\\"</table>\\\"],col:[2,\\\"<table><colgroup>\\\",\\\"</colgroup></table>\\\"],tr:[2,\\\"<table><tbody>\\\",\\\"</tbody></table>\\\"],td:[3,\\\"<table><tbody><tr>\\\",\\\"</tr></tbody></table>\\\"],_default:[0,\\\"\\\",\\\"\\\"]};la.optgroup=la.option,la.tbody=la.tfoot=la.colgroup=la.caption=la.thead,la.th=la.td;function ma(a,b){var c;return c=\\\"undefined\\\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\\\"*\\\"):\\\"undefined\\\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\\\"*\\\"):[],void 0===b||b&&r.nodeName(a,b)?r.merge([a],c):c}function na(a,b){for(var c=0,d=a.length;c<d;c++)V.set(a[c],\\\"globalEval\\\",!b||V.get(b[c],\\\"globalEval\\\"))}var oa=/<|&#?\\\\w+;/;function pa(a,b,c,d,e){for(var f,g,h,i,j,k,l=b.createDocumentFragment(),m=[],n=0,o=a.length;n<o;n++)if(f=a[n],f||0===f)if(\\\"object\\\"===r.type(f))r.merge(m,f.nodeType?[f]:f);else if(oa.test(f)){g=g||l.appendChild(b.createElement(\\\"div\\\")),h=(ja.exec(f)||[\\\"\\\",\\\"\\\"])[1].toLowerCase(),i=la[h]||la._default,g.innerHTML=i[1]+r.htmlPrefilter(f)+i[2],k=i[0];while(k--)g=g.lastChild;r.merge(m,g.childNodes),g=l.firstChild,g.textContent=\\\"\\\"}else m.push(b.createTextNode(f));l.textContent=\\\"\\\",n=0;while(f=m[n++])if(d&&r.inArray(f,d)>-1)e&&e.push(f);else if(j=r.contains(f.ownerDocument,f),g=ma(l.appendChild(f),\\\"script\\\"),j&&na(g),c){k=0;while(f=g[k++])ka.test(f.type||\\\"\\\")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement(\\\"div\\\")),c=d.createElement(\\\"input\\\");c.setAttribute(\\\"type\\\",\\\"radio\\\"),c.setAttribute(\\\"checked\\\",\\\"checked\\\"),c.setAttribute(\\\"name\\\",\\\"t\\\"),b.appendChild(c),o.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\\\"<textarea>x</textarea>\\\",o.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var qa=d.documentElement,ra=/^key/,sa=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,ta=/^([^.]*)(?:\\\\.(.+)|)/;function ua(){return!0}function va(){return!1}function wa(){try{return d.activeElement}catch(a){}}function xa(a,b,c,d,e,f){var g,h;if(\\\"object\\\"==typeof b){\\\"string\\\"!=typeof c&&(d=d||c,c=void 0);for(h in b)xa(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&(\\\"string\\\"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=va;else if(!e)return a;return 1===f&&(g=e,e=function(a){return r().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=r.guid++)),a.each(function(){r.event.add(this,b,e,d,c)})}r.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.get(a);if(q){c.handler&&(f=c,c=f.handler,e=f.selector),e&&r.find.matchesSelector(qa,e),c.guid||(c.guid=r.guid++),(i=q.events)||(i=q.events={}),(g=q.handle)||(g=q.handle=function(b){return\\\"undefined\\\"!=typeof r&&r.event.triggered!==b.type?r.event.dispatch.apply(a,arguments):void 0}),b=(b||\\\"\\\").match(K)||[\\\"\\\"],j=b.length;while(j--)h=ta.exec(b[j])||[],n=p=h[1],o=(h[2]||\\\"\\\").split(\\\".\\\").sort(),n&&(l=r.event.special[n]||{},n=(e?l.delegateType:l.bindType)||n,l=r.event.special[n]||{},k=r.extend({type:n,origType:p,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&r.expr.match.needsContext.test(e),namespace:o.join(\\\".\\\")},f),(m=i[n])||(m=i[n]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,o,g)!==!1||a.addEventListener&&a.addEventListener(n,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),r.event.global[n]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.hasData(a)&&V.get(a);if(q&&(i=q.events)){b=(b||\\\"\\\").match(K)||[\\\"\\\"],j=b.length;while(j--)if(h=ta.exec(b[j])||[],n=p=h[1],o=(h[2]||\\\"\\\").split(\\\".\\\").sort(),n){l=r.event.special[n]||{},n=(d?l.delegateType:l.bindType)||n,m=i[n]||[],h=h[2]&&new RegExp(\\\"(^|\\\\\\\\.)\\\"+o.join(\\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\")+\\\"(\\\\\\\\.|$)\\\"),g=f=m.length;while(f--)k=m[f],!e&&p!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\\\"**\\\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,o,q.handle)!==!1||r.removeEvent(a,n,q.handle),delete i[n])}else for(n in i)r.event.remove(a,n+b[j],c,d,!0);r.isEmptyObject(i)&&V.remove(a,\\\"handle events\\\")}},dispatch:function(a){var b=r.event.fix(a),c,d,e,f,g,h,i=new Array(arguments.length),j=(V.get(this,\\\"events\\\")||{})[b.type]||[],k=r.event.special[b.type]||{};for(i[0]=b,c=1;c<arguments.length;c++)i[c]=arguments[c];if(b.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,b)!==!1){h=r.event.handlers.call(this,b,j),c=0;while((f=h[c++])&&!b.isPropagationStopped()){b.currentTarget=f.elem,d=0;while((g=f.handlers[d++])&&!b.isImmediatePropagationStopped())b.rnamespace&&!b.rnamespace.test(g.namespace)||(b.handleObj=g,b.data=g.data,e=((r.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(b.result=e)===!1&&(b.preventDefault(),b.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,b),b.result}},handlers:function(a,b){var c,d,e,f,g,h=[],i=b.delegateCount,j=a.target;if(i&&j.nodeType&&!(\\\"click\\\"===a.type&&a.button>=1))for(;j!==this;j=j.parentNode||this)if(1===j.nodeType&&(\\\"click\\\"!==a.type||j.disabled!==!0)){for(f=[],g={},c=0;c<i;c++)d=b[c],e=d.selector+\\\" \\\",void 0===g[e]&&(g[e]=d.needsContext?r(e,this).index(j)>-1:r.find(e,this,null,[j]).length),g[e]&&f.push(d);f.length&&h.push({elem:j,handlers:f})}return j=this,i<b.length&&h.push({elem:j,handlers:b.slice(i)}),h},addProp:function(a,b){Object.defineProperty(r.Event.prototype,a,{enumerable:!0,configurable:!0,get:r.isFunction(b)?function(){if(this.originalEvent)return b(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[a]},set:function(b){Object.defineProperty(this,a,{enumerable:!0,configurable:!0,writable:!0,value:b})}})},fix:function(a){return a[r.expando]?a:new r.Event(a)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==wa()&&this.focus)return this.focus(),!1},delegateType:\\\"focusin\\\"},blur:{trigger:function(){if(this===wa()&&this.blur)return this.blur(),!1},delegateType:\\\"focusout\\\"},click:{trigger:function(){if(\\\"checkbox\\\"===this.type&&this.click&&r.nodeName(this,\\\"input\\\"))return this.click(),!1},_default:function(a){return r.nodeName(a.target,\\\"a\\\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}}},r.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)},r.Event=function(a,b){return this instanceof r.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?ua:va,this.target=a.target&&3===a.target.nodeType?a.target.parentNode:a.target,this.currentTarget=a.currentTarget,this.relatedTarget=a.relatedTarget):this.type=a,b&&r.extend(this,b),this.timeStamp=a&&a.timeStamp||r.now(),void(this[r.expando]=!0)):new r.Event(a,b)},r.Event.prototype={constructor:r.Event,isDefaultPrevented:va,isPropagationStopped:va,isImmediatePropagationStopped:va,isSimulated:!1,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=ua,a&&!this.isSimulated&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=ua,a&&!this.isSimulated&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=ua,a&&!this.isSimulated&&a.stopImmediatePropagation(),this.stopPropagation()}},r.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,\\\"char\\\":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(a){var b=a.button;return null==a.which&&ra.test(a.type)?null!=a.charCode?a.charCode:a.keyCode:!a.which&&void 0!==b&&sa.test(a.type)?1&b?1:2&b?3:4&b?2:0:a.which}},r.event.addProp),r.each({mouseenter:\\\"mouseover\\\",mouseleave:\\\"mouseout\\\",pointerenter:\\\"pointerover\\\",pointerleave:\\\"pointerout\\\"},function(a,b){r.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return e&&(e===d||r.contains(d,e))||(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),r.fn.extend({on:function(a,b,c,d){return xa(this,a,b,c,d)},one:function(a,b,c,d){return xa(this,a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,r(a.delegateTarget).off(d.namespace?d.origType+\\\".\\\"+d.namespace:d.origType,d.selector,d.handler),this;if(\\\"object\\\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return b!==!1&&\\\"function\\\"!=typeof b||(c=b,b=void 0),c===!1&&(c=va),this.each(function(){r.event.remove(this,a,c,b)})}});var ya=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\\\/\\\\0>\\\\x20\\\\t\\\\r\\\\n\\\\f]*)[^>]*)\\\\/>/gi,za=/<script|<style|<link/i,Aa=/checked\\\\s*(?:[^=]|=\\\\s*.checked.)/i,Ba=/^true\\\\/(.*)/,Ca=/^\\\\s*<!(?:\\\\[CDATA\\\\[|--)|(?:\\\\]\\\\]|--)>\\\\s*$/g;function Da(a,b){return r.nodeName(a,\\\"table\\\")&&r.nodeName(11!==b.nodeType?b:b.firstChild,\\\"tr\\\")?a.getElementsByTagName(\\\"tbody\\\")[0]||a:a}function Ea(a){return a.type=(null!==a.getAttribute(\\\"type\\\"))+\\\"/\\\"+a.type,a}function Fa(a){var b=Ba.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\\\"type\\\"),a}function Ga(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(V.hasData(a)&&(f=V.access(a),g=V.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;c<d;c++)r.event.add(b,e,j[e][c])}W.hasData(a)&&(h=W.access(a),i=r.extend({},h),W.set(b,i))}}function Ha(a,b){var c=b.nodeName.toLowerCase();\\\"input\\\"===c&&ia.test(a.type)?b.checked=a.checked:\\\"input\\\"!==c&&\\\"textarea\\\"!==c||(b.defaultValue=a.defaultValue)}function Ia(a,b,c,d){b=g.apply([],b);var e,f,h,i,j,k,l=0,m=a.length,n=m-1,q=b[0],s=r.isFunction(q);if(s||m>1&&\\\"string\\\"==typeof q&&!o.checkClone&&Aa.test(q))return a.each(function(e){var f=a.eq(e);s&&(b[0]=q.call(this,e,f.html())),Ia(f,b,c,d)});if(m&&(e=pa(b,a[0].ownerDocument,!1,a,d),f=e.firstChild,1===e.childNodes.length&&(e=f),f||d)){for(h=r.map(ma(e,\\\"script\\\"),Ea),i=h.length;l<m;l++)j=e,l!==n&&(j=r.clone(j,!0,!0),i&&r.merge(h,ma(j,\\\"script\\\"))),c.call(a[l],j,l);if(i)for(k=h[h.length-1].ownerDocument,r.map(h,Fa),l=0;l<i;l++)j=h[l],ka.test(j.type||\\\"\\\")&&!V.access(j,\\\"globalEval\\\")&&r.contains(k,j)&&(j.src?r._evalUrl&&r._evalUrl(j.src):p(j.textContent.replace(Ca,\\\"\\\"),k))}return a}function Ja(a,b,c){for(var d,e=b?r.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||r.cleanData(ma(d)),d.parentNode&&(c&&r.contains(d.ownerDocument,d)&&na(ma(d,\\\"script\\\")),d.parentNode.removeChild(d));return a}r.extend({htmlPrefilter:function(a){return a.replace(ya,\\\"<$1></$2>\\\")},clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=r.contains(a.ownerDocument,a);if(!(o.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||r.isXMLDoc(a)))for(g=ma(h),f=ma(a),d=0,e=f.length;d<e;d++)Ha(f[d],g[d]);if(b)if(c)for(f=f||ma(a),g=g||ma(h),d=0,e=f.length;d<e;d++)Ga(f[d],g[d]);else Ga(a,h);return g=ma(h,\\\"script\\\"),g.length>0&&na(g,!i&&ma(a,\\\"script\\\")),h},cleanData:function(a){for(var b,c,d,e=r.event.special,f=0;void 0!==(c=a[f]);f++)if(T(c)){if(b=c[V.expando]){if(b.events)for(d in b.events)e[d]?r.event.remove(c,d):r.removeEvent(c,d,b.handle);c[V.expando]=void 0}c[W.expando]&&(c[W.expando]=void 0)}}}),r.fn.extend({detach:function(a){return Ja(this,a,!0)},remove:function(a){return Ja(this,a)},text:function(a){return S(this,function(a){return void 0===a?r.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=a)})},null,a,arguments.length)},append:function(){return Ia(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Da(this,a);b.appendChild(a)}})},prepend:function(){return Ia(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Da(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return Ia(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return Ia(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(r.cleanData(ma(a,!1)),a.textContent=\\\"\\\");return this},clone:function(a,b){return a=null!=a&&a,b=null==b?a:b,this.map(function(){return r.clone(this,a,b)})},html:function(a){return S(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\\\"string\\\"==typeof a&&!za.test(a)&&!la[(ja.exec(a)||[\\\"\\\",\\\"\\\"])[1].toLowerCase()]){a=r.htmlPrefilter(a);try{for(;c<d;c++)b=this[c]||{},1===b.nodeType&&(r.cleanData(ma(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return Ia(this,arguments,function(b){var c=this.parentNode;r.inArray(this,a)<0&&(r.cleanData(ma(this)),c&&c.replaceChild(b,this))},a)}}),r.each({appendTo:\\\"append\\\",prependTo:\\\"prepend\\\",insertBefore:\\\"before\\\",insertAfter:\\\"after\\\",replaceAll:\\\"replaceWith\\\"},function(a,b){r.fn[a]=function(a){for(var c,d=[],e=r(a),f=e.length-1,g=0;g<=f;g++)c=g===f?this:this.clone(!0),r(e[g])[b](c),h.apply(d,c.get());return this.pushStack(d)}});var Ka=/^margin/,La=new RegExp(\\\"^(\\\"+_+\\\")(?!px)[a-z%]+$\\\",\\\"i\\\"),Ma=function(b){var c=b.ownerDocument.defaultView;return c&&c.opener||(c=a),c.getComputedStyle(b)};!function(){function b(){if(i){i.style.cssText=\\\"box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\\\",i.innerHTML=\\\"\\\",qa.appendChild(h);var b=a.getComputedStyle(i);c=\\\"1%\\\"!==b.top,g=\\\"2px\\\"===b.marginLeft,e=\\\"4px\\\"===b.width,i.style.marginRight=\\\"50%\\\",f=\\\"4px\\\"===b.marginRight,qa.removeChild(h),i=null}}var c,e,f,g,h=d.createElement(\\\"div\\\"),i=d.createElement(\\\"div\\\");i.style&&(i.style.backgroundClip=\\\"content-box\\\",i.cloneNode(!0).style.backgroundClip=\\\"\\\",o.clearCloneStyle=\\\"content-box\\\"===i.style.backgroundClip,h.style.cssText=\\\"border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute\\\",h.appendChild(i),r.extend(o,{pixelPosition:function(){return b(),c},boxSizingReliable:function(){return b(),e},pixelMarginRight:function(){return b(),f},reliableMarginLeft:function(){return b(),g}}))}();function Na(a,b,c){var d,e,f,g,h=a.style;return c=c||Ma(a),c&&(g=c.getPropertyValue(b)||c[b],\\\"\\\"!==g||r.contains(a.ownerDocument,a)||(g=r.style(a,b)),!o.pixelMarginRight()&&La.test(g)&&Ka.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\\\"\\\":g}function Oa(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}var Pa=/^(none|table(?!-c[ea]).+)/,Qa={position:\\\"absolute\\\",visibility:\\\"hidden\\\",display:\\\"block\\\"},Ra={letterSpacing:\\\"0\\\",fontWeight:\\\"400\\\"},Sa=[\\\"Webkit\\\",\\\"Moz\\\",\\\"ms\\\"],Ta=d.createElement(\\\"div\\\").style;function Ua(a){if(a in Ta)return a;var b=a[0].toUpperCase()+a.slice(1),c=Sa.length;while(c--)if(a=Sa[c]+b,a in Ta)return a}function Va(a,b,c){var d=aa.exec(b);return d?Math.max(0,d[2]-(c||0))+(d[3]||\\\"px\\\"):b}function Wa(a,b,c,d,e){var f,g=0;for(f=c===(d?\\\"border\\\":\\\"content\\\")?4:\\\"width\\\"===b?1:0;f<4;f+=2)\\\"margin\\\"===c&&(g+=r.css(a,c+ba[f],!0,e)),d?(\\\"content\\\"===c&&(g-=r.css(a,\\\"padding\\\"+ba[f],!0,e)),\\\"margin\\\"!==c&&(g-=r.css(a,\\\"border\\\"+ba[f]+\\\"Width\\\",!0,e))):(g+=r.css(a,\\\"padding\\\"+ba[f],!0,e),\\\"padding\\\"!==c&&(g+=r.css(a,\\\"border\\\"+ba[f]+\\\"Width\\\",!0,e)));return g}function Xa(a,b,c){var d,e=!0,f=Ma(a),g=\\\"border-box\\\"===r.css(a,\\\"boxSizing\\\",!1,f);if(a.getClientRects().length&&(d=a.getBoundingClientRect()[b]),d<=0||null==d){if(d=Na(a,b,f),(d<0||null==d)&&(d=a.style[b]),La.test(d))return d;e=g&&(o.boxSizingReliable()||d===a.style[b]),d=parseFloat(d)||0}return d+Wa(a,b,c||(g?\\\"border\\\":\\\"content\\\"),e,f)+\\\"px\\\"}r.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Na(a,\\\"opacity\\\");return\\\"\\\"===c?\\\"1\\\":c}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\\\"float\\\":\\\"cssFloat\\\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=r.camelCase(b),i=a.style;return b=r.cssProps[h]||(r.cssProps[h]=Ua(h)||h),g=r.cssHooks[b]||r.cssHooks[h],void 0===c?g&&\\\"get\\\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\\\"string\\\"===f&&(e=aa.exec(c))&&e[1]&&(c=ea(a,b,e),f=\\\"number\\\"),null!=c&&c===c&&(\\\"number\\\"===f&&(c+=e&&e[3]||(r.cssNumber[h]?\\\"\\\":\\\"px\\\")),o.clearCloneStyle||\\\"\\\"!==c||0!==b.indexOf(\\\"background\\\")||(i[b]=\\\"inherit\\\"),g&&\\\"set\\\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=r.camelCase(b);return b=r.cssProps[h]||(r.cssProps[h]=Ua(h)||h),g=r.cssHooks[b]||r.cssHooks[h],g&&\\\"get\\\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=Na(a,b,d)),\\\"normal\\\"===e&&b in Ra&&(e=Ra[b]),\\\"\\\"===c||c?(f=parseFloat(e),c===!0||isFinite(f)?f||0:e):e}}),r.each([\\\"height\\\",\\\"width\\\"],function(a,b){r.cssHooks[b]={get:function(a,c,d){if(c)return!Pa.test(r.css(a,\\\"display\\\"))||a.getClientRects().length&&a.getBoundingClientRect().width?Xa(a,b,d):da(a,Qa,function(){return Xa(a,b,d)})},set:function(a,c,d){var e,f=d&&Ma(a),g=d&&Wa(a,b,d,\\\"border-box\\\"===r.css(a,\\\"boxSizing\\\",!1,f),f);return g&&(e=aa.exec(c))&&\\\"px\\\"!==(e[3]||\\\"px\\\")&&(a.style[b]=c,c=r.css(a,b)),Va(a,c,g)}}}),r.cssHooks.marginLeft=Oa(o.reliableMarginLeft,function(a,b){if(b)return(parseFloat(Na(a,\\\"marginLeft\\\"))||a.getBoundingClientRect().left-da(a,{marginLeft:0},function(){return a.getBoundingClientRect().left}))+\\\"px\\\"}),r.each({margin:\\\"\\\",padding:\\\"\\\",border:\\\"Width\\\"},function(a,b){r.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\\\"string\\\"==typeof c?c.split(\\\" \\\"):[c];d<4;d++)e[a+ba[d]+b]=f[d]||f[d-2]||f[0];return e}},Ka.test(a)||(r.cssHooks[a+b].set=Va)}),r.fn.extend({css:function(a,b){return S(this,function(a,b,c){var d,e,f={},g=0;if(r.isArray(b)){for(d=Ma(a),e=b.length;g<e;g++)f[b[g]]=r.css(a,b[g],!1,d);return f}return void 0!==c?r.style(a,b,c):r.css(a,b)},a,b,arguments.length>1)}});function Ya(a,b,c,d,e){return new Ya.prototype.init(a,b,c,d,e)}r.Tween=Ya,Ya.prototype={constructor:Ya,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||r.easing._default,this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(r.cssNumber[c]?\\\"\\\":\\\"px\\\")},cur:function(){var a=Ya.propHooks[this.prop];return a&&a.get?a.get(this):Ya.propHooks._default.get(this)},run:function(a){var b,c=Ya.propHooks[this.prop];return this.options.duration?this.pos=b=r.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Ya.propHooks._default.set(this),this}},Ya.prototype.init.prototype=Ya.prototype,Ya.propHooks={_default:{get:function(a){var b;return 1!==a.elem.nodeType||null!=a.elem[a.prop]&&null==a.elem.style[a.prop]?a.elem[a.prop]:(b=r.css(a.elem,a.prop,\\\"\\\"),b&&\\\"auto\\\"!==b?b:0)},set:function(a){r.fx.step[a.prop]?r.fx.step[a.prop](a):1!==a.elem.nodeType||null==a.elem.style[r.cssProps[a.prop]]&&!r.cssHooks[a.prop]?a.elem[a.prop]=a.now:r.style(a.elem,a.prop,a.now+a.unit)}}},Ya.propHooks.scrollTop=Ya.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},r.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},_default:\\\"swing\\\"},r.fx=Ya.prototype.init,r.fx.step={};var Za,$a,_a=/^(?:toggle|show|hide)$/,ab=/queueHooks$/;function bb(){$a&&(a.requestAnimationFrame(bb),r.fx.tick())}function cb(){return a.setTimeout(function(){Za=void 0}),Za=r.now()}function db(a,b){var c,d=0,e={height:a};for(b=b?1:0;d<4;d+=2-b)c=ba[d],e[\\\"margin\\\"+c]=e[\\\"padding\\\"+c]=a;return b&&(e.opacity=e.width=a),e}function eb(a,b,c){for(var d,e=(hb.tweeners[b]||[]).concat(hb.tweeners[\\\"*\\\"]),f=0,g=e.length;f<g;f++)if(d=e[f].call(c,b,a))return d}function fb(a,b,c){var d,e,f,g,h,i,j,k,l=\\\"width\\\"in b||\\\"height\\\"in b,m=this,n={},o=a.style,p=a.nodeType&&ca(a),q=V.get(a,\\\"fxshow\\\");c.queue||(g=r._queueHooks(a,\\\"fx\\\"),null==g.unqueued&&(g.unqueued=0,h=g.empty.fire,g.empty.fire=function(){g.unqueued||h()}),g.unqueued++,m.always(function(){m.always(function(){g.unqueued--,r.queue(a,\\\"fx\\\").length||g.empty.fire()})}));for(d in b)if(e=b[d],_a.test(e)){if(delete b[d],f=f||\\\"toggle\\\"===e,e===(p?\\\"hide\\\":\\\"show\\\")){if(\\\"show\\\"!==e||!q||void 0===q[d])continue;p=!0}n[d]=q&&q[d]||r.style(a,d)}if(i=!r.isEmptyObject(b),i||!r.isEmptyObject(n)){l&&1===a.nodeType&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=q&&q.display,null==j&&(j=V.get(a,\\\"display\\\")),k=r.css(a,\\\"display\\\"),\\\"none\\\"===k&&(j?k=j:(ha([a],!0),j=a.style.display||j,k=r.css(a,\\\"display\\\"),ha([a]))),(\\\"inline\\\"===k||\\\"inline-block\\\"===k&&null!=j)&&\\\"none\\\"===r.css(a,\\\"float\\\")&&(i||(m.done(function(){o.display=j}),null==j&&(k=o.display,j=\\\"none\\\"===k?\\\"\\\":k)),o.display=\\\"inline-block\\\")),c.overflow&&(o.overflow=\\\"hidden\\\",m.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]})),i=!1;for(d in n)i||(q?\\\"hidden\\\"in q&&(p=q.hidden):q=V.access(a,\\\"fxshow\\\",{display:j}),f&&(q.hidden=!p),p&&ha([a],!0),m.done(function(){p||ha([a]),V.remove(a,\\\"fxshow\\\");for(d in n)r.style(a,d,n[d])})),i=eb(p?q[d]:0,d,m),d in q||(q[d]=i.start,p&&(i.end=i.start,i.start=0))}}function gb(a,b){var c,d,e,f,g;for(c in a)if(d=r.camelCase(c),e=b[d],f=a[c],r.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=r.cssHooks[d],g&&\\\"expand\\\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function hb(a,b,c){var d,e,f=0,g=hb.prefilters.length,h=r.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Za||cb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;g<i;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),f<1&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:r.extend({},b),opts:r.extend(!0,{specialEasing:{},easing:r.easing._default},c),originalProperties:b,originalOptions:c,startTime:Za||cb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=r.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;c<d;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(gb(k,j.opts.specialEasing);f<g;f++)if(d=hb.prefilters[f].call(j,a,k,j.opts))return r.isFunction(d.stop)&&(r._queueHooks(j.elem,j.opts.queue).stop=r.proxy(d.stop,d)),d;return r.map(k,eb,j),r.isFunction(j.opts.start)&&j.opts.start.call(a,j),r.fx.timer(r.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}r.Animation=r.extend(hb,{tweeners:{\\\"*\\\":[function(a,b){var c=this.createTween(a,b);return ea(c.elem,a,aa.exec(b),c),c}]},tweener:function(a,b){r.isFunction(a)?(b=a,a=[\\\"*\\\"]):a=a.match(K);for(var c,d=0,e=a.length;d<e;d++)c=a[d],hb.tweeners[c]=hb.tweeners[c]||[],hb.tweeners[c].unshift(b)},prefilters:[fb],prefilter:function(a,b){b?hb.prefilters.unshift(a):hb.prefilters.push(a)}}),r.speed=function(a,b,c){var e=a&&\\\"object\\\"==typeof a?r.extend({},a):{complete:c||!c&&b||r.isFunction(a)&&a,duration:a,easing:c&&b||b&&!r.isFunction(b)&&b};return r.fx.off||d.hidden?e.duration=0:\\\"number\\\"!=typeof e.duration&&(e.duration in r.fx.speeds?e.duration=r.fx.speeds[e.duration]:e.duration=r.fx.speeds._default),null!=e.queue&&e.queue!==!0||(e.queue=\\\"fx\\\"),e.old=e.complete,e.complete=function(){r.isFunction(e.old)&&e.old.call(this),e.queue&&r.dequeue(this,e.queue)},e},r.fn.extend({fadeTo:function(a,b,c,d){return this.filter(ca).css(\\\"opacity\\\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=r.isEmptyObject(a),f=r.speed(b,c,d),g=function(){var b=hb(this,r.extend({},a),f);(e||V.get(this,\\\"finish\\\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\\\"string\\\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\\\"fx\\\",[]),this.each(function(){var b=!0,e=null!=a&&a+\\\"queueHooks\\\",f=r.timers,g=V.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&ab.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));!b&&c||r.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\\\"fx\\\"),this.each(function(){var b,c=V.get(this),d=c[a+\\\"queue\\\"],e=c[a+\\\"queueHooks\\\"],f=r.timers,g=d?d.length:0;for(c.finish=!0,r.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;b<g;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),r.each([\\\"toggle\\\",\\\"show\\\",\\\"hide\\\"],function(a,b){var c=r.fn[b];r.fn[b]=function(a,d,e){return null==a||\\\"boolean\\\"==typeof a?c.apply(this,arguments):this.animate(db(b,!0),a,d,e)}}),r.each({slideDown:db(\\\"show\\\"),slideUp:db(\\\"hide\\\"),slideToggle:db(\\\"toggle\\\"),fadeIn:{opacity:\\\"show\\\"},fadeOut:{opacity:\\\"hide\\\"},fadeToggle:{opacity:\\\"toggle\\\"}},function(a,b){r.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),r.timers=[],r.fx.tick=function(){var a,b=0,c=r.timers;for(Za=r.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||r.fx.stop(),Za=void 0},r.fx.timer=function(a){r.timers.push(a),a()?r.fx.start():r.timers.pop()},r.fx.interval=13,r.fx.start=function(){$a||($a=a.requestAnimationFrame?a.requestAnimationFrame(bb):a.setInterval(r.fx.tick,r.fx.interval))},r.fx.stop=function(){a.cancelAnimationFrame?a.cancelAnimationFrame($a):a.clearInterval($a),$a=null},r.fx.speeds={slow:600,fast:200,_default:400},r.fn.delay=function(b,c){return b=r.fx?r.fx.speeds[b]||b:b,c=c||\\\"fx\\\",this.queue(c,function(c,d){var e=a.setTimeout(c,b);d.stop=function(){a.clearTimeout(e)}})},function(){var a=d.createElement(\\\"input\\\"),b=d.createElement(\\\"select\\\"),c=b.appendChild(d.createElement(\\\"option\\\"));a.type=\\\"checkbox\\\",o.checkOn=\\\"\\\"!==a.value,o.optSelected=c.selected,a=d.createElement(\\\"input\\\"),a.value=\\\"t\\\",a.type=\\\"radio\\\",o.radioValue=\\\"t\\\"===a.value}();var ib,jb=r.expr.attrHandle;r.fn.extend({attr:function(a,b){return S(this,r.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){r.removeAttr(this,a)})}}),r.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return\\\"undefined\\\"==typeof a.getAttribute?r.prop(a,b,c):(1===f&&r.isXMLDoc(a)||(e=r.attrHooks[b.toLowerCase()]||(r.expr.match.bool.test(b)?ib:void 0)),\\nvoid 0!==c?null===c?void r.removeAttr(a,b):e&&\\\"set\\\"in e&&void 0!==(d=e.set(a,c,b))?d:(a.setAttribute(b,c+\\\"\\\"),c):e&&\\\"get\\\"in e&&null!==(d=e.get(a,b))?d:(d=r.find.attr(a,b),null==d?void 0:d))},attrHooks:{type:{set:function(a,b){if(!o.radioValue&&\\\"radio\\\"===b&&r.nodeName(a,\\\"input\\\")){var c=a.value;return a.setAttribute(\\\"type\\\",b),c&&(a.value=c),b}}}},removeAttr:function(a,b){var c,d=0,e=b&&b.match(K);if(e&&1===a.nodeType)while(c=e[d++])a.removeAttribute(c)}}),ib={set:function(a,b,c){return b===!1?r.removeAttr(a,c):a.setAttribute(c,c),c}},r.each(r.expr.match.bool.source.match(/\\\\w+/g),function(a,b){var c=jb[b]||r.find.attr;jb[b]=function(a,b,d){var e,f,g=b.toLowerCase();return d||(f=jb[g],jb[g]=e,e=null!=c(a,b,d)?g:null,jb[g]=f),e}});var kb=/^(?:input|select|textarea|button)$/i,lb=/^(?:a|area)$/i;r.fn.extend({prop:function(a,b){return S(this,r.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[r.propFix[a]||a]})}}),r.extend({prop:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return 1===f&&r.isXMLDoc(a)||(b=r.propFix[b]||b,e=r.propHooks[b]),void 0!==c?e&&\\\"set\\\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\\\"get\\\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=r.find.attr(a,\\\"tabindex\\\");return b?parseInt(b,10):kb.test(a.nodeName)||lb.test(a.nodeName)&&a.href?0:-1}}},propFix:{\\\"for\\\":\\\"htmlFor\\\",\\\"class\\\":\\\"className\\\"}}),o.optSelected||(r.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null},set:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}}),r.each([\\\"tabIndex\\\",\\\"readOnly\\\",\\\"maxLength\\\",\\\"cellSpacing\\\",\\\"cellPadding\\\",\\\"rowSpan\\\",\\\"colSpan\\\",\\\"useMap\\\",\\\"frameBorder\\\",\\\"contentEditable\\\"],function(){r.propFix[this.toLowerCase()]=this});function mb(a){var b=a.match(K)||[];return b.join(\\\" \\\")}function nb(a){return a.getAttribute&&a.getAttribute(\\\"class\\\")||\\\"\\\"}r.fn.extend({addClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).addClass(a.call(this,b,nb(this)))});if(\\\"string\\\"==typeof a&&a){b=a.match(K)||[];while(c=this[i++])if(e=nb(c),d=1===c.nodeType&&\\\" \\\"+mb(e)+\\\" \\\"){g=0;while(f=b[g++])d.indexOf(\\\" \\\"+f+\\\" \\\")<0&&(d+=f+\\\" \\\");h=mb(d),e!==h&&c.setAttribute(\\\"class\\\",h)}}return this},removeClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).removeClass(a.call(this,b,nb(this)))});if(!arguments.length)return this.attr(\\\"class\\\",\\\"\\\");if(\\\"string\\\"==typeof a&&a){b=a.match(K)||[];while(c=this[i++])if(e=nb(c),d=1===c.nodeType&&\\\" \\\"+mb(e)+\\\" \\\"){g=0;while(f=b[g++])while(d.indexOf(\\\" \\\"+f+\\\" \\\")>-1)d=d.replace(\\\" \\\"+f+\\\" \\\",\\\" \\\");h=mb(d),e!==h&&c.setAttribute(\\\"class\\\",h)}}return this},toggleClass:function(a,b){var c=typeof a;return\\\"boolean\\\"==typeof b&&\\\"string\\\"===c?b?this.addClass(a):this.removeClass(a):r.isFunction(a)?this.each(function(c){r(this).toggleClass(a.call(this,c,nb(this),b),b)}):this.each(function(){var b,d,e,f;if(\\\"string\\\"===c){d=0,e=r(this),f=a.match(K)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else void 0!==a&&\\\"boolean\\\"!==c||(b=nb(this),b&&V.set(this,\\\"__className__\\\",b),this.setAttribute&&this.setAttribute(\\\"class\\\",b||a===!1?\\\"\\\":V.get(this,\\\"__className__\\\")||\\\"\\\"))})},hasClass:function(a){var b,c,d=0;b=\\\" \\\"+a+\\\" \\\";while(c=this[d++])if(1===c.nodeType&&(\\\" \\\"+mb(nb(c))+\\\" \\\").indexOf(b)>-1)return!0;return!1}});var ob=/\\\\r/g;r.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=r.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,r(this).val()):a,null==e?e=\\\"\\\":\\\"number\\\"==typeof e?e+=\\\"\\\":r.isArray(e)&&(e=r.map(e,function(a){return null==a?\\\"\\\":a+\\\"\\\"})),b=r.valHooks[this.type]||r.valHooks[this.nodeName.toLowerCase()],b&&\\\"set\\\"in b&&void 0!==b.set(this,e,\\\"value\\\")||(this.value=e))});if(e)return b=r.valHooks[e.type]||r.valHooks[e.nodeName.toLowerCase()],b&&\\\"get\\\"in b&&void 0!==(c=b.get(e,\\\"value\\\"))?c:(c=e.value,\\\"string\\\"==typeof c?c.replace(ob,\\\"\\\"):null==c?\\\"\\\":c)}}}),r.extend({valHooks:{option:{get:function(a){var b=r.find.attr(a,\\\"value\\\");return null!=b?b:mb(r.text(a))}},select:{get:function(a){var b,c,d,e=a.options,f=a.selectedIndex,g=\\\"select-one\\\"===a.type,h=g?null:[],i=g?f+1:e.length;for(d=f<0?i:g?f:0;d<i;d++)if(c=e[d],(c.selected||d===f)&&!c.disabled&&(!c.parentNode.disabled||!r.nodeName(c.parentNode,\\\"optgroup\\\"))){if(b=r(c).val(),g)return b;h.push(b)}return h},set:function(a,b){var c,d,e=a.options,f=r.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=r.inArray(r.valHooks.option.get(d),f)>-1)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),r.each([\\\"radio\\\",\\\"checkbox\\\"],function(){r.valHooks[this]={set:function(a,b){if(r.isArray(b))return a.checked=r.inArray(r(a).val(),b)>-1}},o.checkOn||(r.valHooks[this].get=function(a){return null===a.getAttribute(\\\"value\\\")?\\\"on\\\":a.value})});var pb=/^(?:focusinfocus|focusoutblur)$/;r.extend(r.event,{trigger:function(b,c,e,f){var g,h,i,j,k,m,n,o=[e||d],p=l.call(b,\\\"type\\\")?b.type:b,q=l.call(b,\\\"namespace\\\")?b.namespace.split(\\\".\\\"):[];if(h=i=e=e||d,3!==e.nodeType&&8!==e.nodeType&&!pb.test(p+r.event.triggered)&&(p.indexOf(\\\".\\\")>-1&&(q=p.split(\\\".\\\"),p=q.shift(),q.sort()),k=p.indexOf(\\\":\\\")<0&&\\\"on\\\"+p,b=b[r.expando]?b:new r.Event(p,\\\"object\\\"==typeof b&&b),b.isTrigger=f?2:3,b.namespace=q.join(\\\".\\\"),b.rnamespace=b.namespace?new RegExp(\\\"(^|\\\\\\\\.)\\\"+q.join(\\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\")+\\\"(\\\\\\\\.|$)\\\"):null,b.result=void 0,b.target||(b.target=e),c=null==c?[b]:r.makeArray(c,[b]),n=r.event.special[p]||{},f||!n.trigger||n.trigger.apply(e,c)!==!1)){if(!f&&!n.noBubble&&!r.isWindow(e)){for(j=n.delegateType||p,pb.test(j+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),i=h;i===(e.ownerDocument||d)&&o.push(i.defaultView||i.parentWindow||a)}g=0;while((h=o[g++])&&!b.isPropagationStopped())b.type=g>1?j:n.bindType||p,m=(V.get(h,\\\"events\\\")||{})[b.type]&&V.get(h,\\\"handle\\\"),m&&m.apply(h,c),m=k&&h[k],m&&m.apply&&T(h)&&(b.result=m.apply(h,c),b.result===!1&&b.preventDefault());return b.type=p,f||b.isDefaultPrevented()||n._default&&n._default.apply(o.pop(),c)!==!1||!T(e)||k&&r.isFunction(e[p])&&!r.isWindow(e)&&(i=e[k],i&&(e[k]=null),r.event.triggered=p,e[p](),r.event.triggered=void 0,i&&(e[k]=i)),b.result}},simulate:function(a,b,c){var d=r.extend(new r.Event,c,{type:a,isSimulated:!0});r.event.trigger(d,null,b)}}),r.fn.extend({trigger:function(a,b){return this.each(function(){r.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];if(c)return r.event.trigger(a,b,c,!0)}}),r.each(\\\"blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\\\".split(\\\" \\\"),function(a,b){r.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),r.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),o.focusin=\\\"onfocusin\\\"in a,o.focusin||r.each({focus:\\\"focusin\\\",blur:\\\"focusout\\\"},function(a,b){var c=function(a){r.event.simulate(b,a.target,r.event.fix(a))};r.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=V.access(d,b);e||d.addEventListener(a,c,!0),V.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=V.access(d,b)-1;e?V.access(d,b,e):(d.removeEventListener(a,c,!0),V.remove(d,b))}}});var qb=a.location,rb=r.now(),sb=/\\\\?/;r.parseXML=function(b){var c;if(!b||\\\"string\\\"!=typeof b)return null;try{c=(new a.DOMParser).parseFromString(b,\\\"text/xml\\\")}catch(d){c=void 0}return c&&!c.getElementsByTagName(\\\"parsererror\\\").length||r.error(\\\"Invalid XML: \\\"+b),c};var tb=/\\\\[\\\\]$/,ub=/\\\\r?\\\\n/g,vb=/^(?:submit|button|image|reset|file)$/i,wb=/^(?:input|select|textarea|keygen)/i;function xb(a,b,c,d){var e;if(r.isArray(b))r.each(b,function(b,e){c||tb.test(a)?d(a,e):xb(a+\\\"[\\\"+(\\\"object\\\"==typeof e&&null!=e?b:\\\"\\\")+\\\"]\\\",e,c,d)});else if(c||\\\"object\\\"!==r.type(b))d(a,b);else for(e in b)xb(a+\\\"[\\\"+e+\\\"]\\\",b[e],c,d)}r.param=function(a,b){var c,d=[],e=function(a,b){var c=r.isFunction(b)?b():b;d[d.length]=encodeURIComponent(a)+\\\"=\\\"+encodeURIComponent(null==c?\\\"\\\":c)};if(r.isArray(a)||a.jquery&&!r.isPlainObject(a))r.each(a,function(){e(this.name,this.value)});else for(c in a)xb(c,a[c],b,e);return d.join(\\\"&\\\")},r.fn.extend({serialize:function(){return r.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=r.prop(this,\\\"elements\\\");return a?r.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!r(this).is(\\\":disabled\\\")&&wb.test(this.nodeName)&&!vb.test(a)&&(this.checked||!ia.test(a))}).map(function(a,b){var c=r(this).val();return null==c?null:r.isArray(c)?r.map(c,function(a){return{name:b.name,value:a.replace(ub,\\\"\\\\r\\\\n\\\")}}):{name:b.name,value:c.replace(ub,\\\"\\\\r\\\\n\\\")}}).get()}});var yb=/%20/g,zb=/#.*$/,Ab=/([?&])_=[^&]*/,Bb=/^(.*?):[ \\\\t]*([^\\\\r\\\\n]*)$/gm,Cb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Db=/^(?:GET|HEAD)$/,Eb=/^\\\\/\\\\//,Fb={},Gb={},Hb=\\\"*/\\\".concat(\\\"*\\\"),Ib=d.createElement(\\\"a\\\");Ib.href=qb.href;function Jb(a){return function(b,c){\\\"string\\\"!=typeof b&&(c=b,b=\\\"*\\\");var d,e=0,f=b.toLowerCase().match(K)||[];if(r.isFunction(c))while(d=f[e++])\\\"+\\\"===d[0]?(d=d.slice(1)||\\\"*\\\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Kb(a,b,c,d){var e={},f=a===Gb;function g(h){var i;return e[h]=!0,r.each(a[h]||[],function(a,h){var j=h(b,c,d);return\\\"string\\\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\\\"*\\\"]&&g(\\\"*\\\")}function Lb(a,b){var c,d,e=r.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&r.extend(!0,a,d),a}function Mb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\\\"*\\\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\\\"Content-Type\\\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\\\" \\\"+i[0]]){f=e;break}g||(g=e)}f=f||g}if(f)return f!==i[0]&&i.unshift(f),c[f]}function Nb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\\\"*\\\"===f)f=i;else if(\\\"*\\\"!==i&&i!==f){if(g=j[i+\\\" \\\"+f]||j[\\\"* \\\"+f],!g)for(e in j)if(h=e.split(\\\" \\\"),h[1]===f&&(g=j[i+\\\" \\\"+h[0]]||j[\\\"* \\\"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\\\"throws\\\"])b=g(b);else try{b=g(b)}catch(l){return{state:\\\"parsererror\\\",error:g?l:\\\"No conversion from \\\"+i+\\\" to \\\"+f}}}return{state:\\\"success\\\",data:b}}r.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:qb.href,type:\\\"GET\\\",isLocal:Cb.test(qb.protocol),global:!0,processData:!0,async:!0,contentType:\\\"application/x-www-form-urlencoded; charset=UTF-8\\\",accepts:{\\\"*\\\":Hb,text:\\\"text/plain\\\",html:\\\"text/html\\\",xml:\\\"application/xml, text/xml\\\",json:\\\"application/json, text/javascript\\\"},contents:{xml:/\\\\bxml\\\\b/,html:/\\\\bhtml/,json:/\\\\bjson\\\\b/},responseFields:{xml:\\\"responseXML\\\",text:\\\"responseText\\\",json:\\\"responseJSON\\\"},converters:{\\\"* text\\\":String,\\\"text html\\\":!0,\\\"text json\\\":JSON.parse,\\\"text xml\\\":r.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Lb(Lb(a,r.ajaxSettings),b):Lb(r.ajaxSettings,a)},ajaxPrefilter:Jb(Fb),ajaxTransport:Jb(Gb),ajax:function(b,c){\\\"object\\\"==typeof b&&(c=b,b=void 0),c=c||{};var e,f,g,h,i,j,k,l,m,n,o=r.ajaxSetup({},c),p=o.context||o,q=o.context&&(p.nodeType||p.jquery)?r(p):r.event,s=r.Deferred(),t=r.Callbacks(\\\"once memory\\\"),u=o.statusCode||{},v={},w={},x=\\\"canceled\\\",y={readyState:0,getResponseHeader:function(a){var b;if(k){if(!h){h={};while(b=Bb.exec(g))h[b[1].toLowerCase()]=b[2]}b=h[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return k?g:null},setRequestHeader:function(a,b){return null==k&&(a=w[a.toLowerCase()]=w[a.toLowerCase()]||a,v[a]=b),this},overrideMimeType:function(a){return null==k&&(o.mimeType=a),this},statusCode:function(a){var b;if(a)if(k)y.always(a[y.status]);else for(b in a)u[b]=[u[b],a[b]];return this},abort:function(a){var b=a||x;return e&&e.abort(b),A(0,b),this}};if(s.promise(y),o.url=((b||o.url||qb.href)+\\\"\\\").replace(Eb,qb.protocol+\\\"//\\\"),o.type=c.method||c.type||o.method||o.type,o.dataTypes=(o.dataType||\\\"*\\\").toLowerCase().match(K)||[\\\"\\\"],null==o.crossDomain){j=d.createElement(\\\"a\\\");try{j.href=o.url,j.href=j.href,o.crossDomain=Ib.protocol+\\\"//\\\"+Ib.host!=j.protocol+\\\"//\\\"+j.host}catch(z){o.crossDomain=!0}}if(o.data&&o.processData&&\\\"string\\\"!=typeof o.data&&(o.data=r.param(o.data,o.traditional)),Kb(Fb,o,c,y),k)return y;l=r.event&&o.global,l&&0===r.active++&&r.event.trigger(\\\"ajaxStart\\\"),o.type=o.type.toUpperCase(),o.hasContent=!Db.test(o.type),f=o.url.replace(zb,\\\"\\\"),o.hasContent?o.data&&o.processData&&0===(o.contentType||\\\"\\\").indexOf(\\\"application/x-www-form-urlencoded\\\")&&(o.data=o.data.replace(yb,\\\"+\\\")):(n=o.url.slice(f.length),o.data&&(f+=(sb.test(f)?\\\"&\\\":\\\"?\\\")+o.data,delete o.data),o.cache===!1&&(f=f.replace(Ab,\\\"$1\\\"),n=(sb.test(f)?\\\"&\\\":\\\"?\\\")+\\\"_=\\\"+rb++ +n),o.url=f+n),o.ifModified&&(r.lastModified[f]&&y.setRequestHeader(\\\"If-Modified-Since\\\",r.lastModified[f]),r.etag[f]&&y.setRequestHeader(\\\"If-None-Match\\\",r.etag[f])),(o.data&&o.hasContent&&o.contentType!==!1||c.contentType)&&y.setRequestHeader(\\\"Content-Type\\\",o.contentType),y.setRequestHeader(\\\"Accept\\\",o.dataTypes[0]&&o.accepts[o.dataTypes[0]]?o.accepts[o.dataTypes[0]]+(\\\"*\\\"!==o.dataTypes[0]?\\\", \\\"+Hb+\\\"; q=0.01\\\":\\\"\\\"):o.accepts[\\\"*\\\"]);for(m in o.headers)y.setRequestHeader(m,o.headers[m]);if(o.beforeSend&&(o.beforeSend.call(p,y,o)===!1||k))return y.abort();if(x=\\\"abort\\\",t.add(o.complete),y.done(o.success),y.fail(o.error),e=Kb(Gb,o,c,y)){if(y.readyState=1,l&&q.trigger(\\\"ajaxSend\\\",[y,o]),k)return y;o.async&&o.timeout>0&&(i=a.setTimeout(function(){y.abort(\\\"timeout\\\")},o.timeout));try{k=!1,e.send(v,A)}catch(z){if(k)throw z;A(-1,z)}}else A(-1,\\\"No Transport\\\");function A(b,c,d,h){var j,m,n,v,w,x=c;k||(k=!0,i&&a.clearTimeout(i),e=void 0,g=h||\\\"\\\",y.readyState=b>0?4:0,j=b>=200&&b<300||304===b,d&&(v=Mb(o,y,d)),v=Nb(o,v,y,j),j?(o.ifModified&&(w=y.getResponseHeader(\\\"Last-Modified\\\"),w&&(r.lastModified[f]=w),w=y.getResponseHeader(\\\"etag\\\"),w&&(r.etag[f]=w)),204===b||\\\"HEAD\\\"===o.type?x=\\\"nocontent\\\":304===b?x=\\\"notmodified\\\":(x=v.state,m=v.data,n=v.error,j=!n)):(n=x,!b&&x||(x=\\\"error\\\",b<0&&(b=0))),y.status=b,y.statusText=(c||x)+\\\"\\\",j?s.resolveWith(p,[m,x,y]):s.rejectWith(p,[y,x,n]),y.statusCode(u),u=void 0,l&&q.trigger(j?\\\"ajaxSuccess\\\":\\\"ajaxError\\\",[y,o,j?m:n]),t.fireWith(p,[y,x]),l&&(q.trigger(\\\"ajaxComplete\\\",[y,o]),--r.active||r.event.trigger(\\\"ajaxStop\\\")))}return y},getJSON:function(a,b,c){return r.get(a,b,c,\\\"json\\\")},getScript:function(a,b){return r.get(a,void 0,b,\\\"script\\\")}}),r.each([\\\"get\\\",\\\"post\\\"],function(a,b){r[b]=function(a,c,d,e){return r.isFunction(c)&&(e=e||d,d=c,c=void 0),r.ajax(r.extend({url:a,type:b,dataType:e,data:c,success:d},r.isPlainObject(a)&&a))}}),r._evalUrl=function(a){return r.ajax({url:a,type:\\\"GET\\\",dataType:\\\"script\\\",cache:!0,async:!1,global:!1,\\\"throws\\\":!0})},r.fn.extend({wrapAll:function(a){var b;return this[0]&&(r.isFunction(a)&&(a=a.call(this[0])),b=r(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this},wrapInner:function(a){return r.isFunction(a)?this.each(function(b){r(this).wrapInner(a.call(this,b))}):this.each(function(){var b=r(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=r.isFunction(a);return this.each(function(c){r(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(a){return this.parent(a).not(\\\"body\\\").each(function(){r(this).replaceWith(this.childNodes)}),this}}),r.expr.pseudos.hidden=function(a){return!r.expr.pseudos.visible(a)},r.expr.pseudos.visible=function(a){return!!(a.offsetWidth||a.offsetHeight||a.getClientRects().length)},r.ajaxSettings.xhr=function(){try{return new a.XMLHttpRequest}catch(b){}};var Ob={0:200,1223:204},Pb=r.ajaxSettings.xhr();o.cors=!!Pb&&\\\"withCredentials\\\"in Pb,o.ajax=Pb=!!Pb,r.ajaxTransport(function(b){var c,d;if(o.cors||Pb&&!b.crossDomain)return{send:function(e,f){var g,h=b.xhr();if(h.open(b.type,b.url,b.async,b.username,b.password),b.xhrFields)for(g in b.xhrFields)h[g]=b.xhrFields[g];b.mimeType&&h.overrideMimeType&&h.overrideMimeType(b.mimeType),b.crossDomain||e[\\\"X-Requested-With\\\"]||(e[\\\"X-Requested-With\\\"]=\\\"XMLHttpRequest\\\");for(g in e)h.setRequestHeader(g,e[g]);c=function(a){return function(){c&&(c=d=h.onload=h.onerror=h.onabort=h.onreadystatechange=null,\\\"abort\\\"===a?h.abort():\\\"error\\\"===a?\\\"number\\\"!=typeof h.status?f(0,\\\"error\\\"):f(h.status,h.statusText):f(Ob[h.status]||h.status,h.statusText,\\\"text\\\"!==(h.responseType||\\\"text\\\")||\\\"string\\\"!=typeof h.responseText?{binary:h.response}:{text:h.responseText},h.getAllResponseHeaders()))}},h.onload=c(),d=h.onerror=c(\\\"error\\\"),void 0!==h.onabort?h.onabort=d:h.onreadystatechange=function(){4===h.readyState&&a.setTimeout(function(){c&&d()})},c=c(\\\"abort\\\");try{h.send(b.hasContent&&b.data||null)}catch(i){if(c)throw i}},abort:function(){c&&c()}}}),r.ajaxPrefilter(function(a){a.crossDomain&&(a.contents.script=!1)}),r.ajaxSetup({accepts:{script:\\\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\\\"},contents:{script:/\\\\b(?:java|ecma)script\\\\b/},converters:{\\\"text script\\\":function(a){return r.globalEval(a),a}}}),r.ajaxPrefilter(\\\"script\\\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\\\"GET\\\")}),r.ajaxTransport(\\\"script\\\",function(a){if(a.crossDomain){var b,c;return{send:function(e,f){b=r(\\\"<script>\\\").prop({charset:a.scriptCharset,src:a.url}).on(\\\"load error\\\",c=function(a){b.remove(),c=null,a&&f(\\\"error\\\"===a.type?404:200,a.type)}),d.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Qb=[],Rb=/(=)\\\\?(?=&|$)|\\\\?\\\\?/;r.ajaxSetup({jsonp:\\\"callback\\\",jsonpCallback:function(){var a=Qb.pop()||r.expando+\\\"_\\\"+rb++;return this[a]=!0,a}}),r.ajaxPrefilter(\\\"json jsonp\\\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Rb.test(b.url)?\\\"url\\\":\\\"string\\\"==typeof b.data&&0===(b.contentType||\\\"\\\").indexOf(\\\"application/x-www-form-urlencoded\\\")&&Rb.test(b.data)&&\\\"data\\\");if(h||\\\"jsonp\\\"===b.dataTypes[0])return e=b.jsonpCallback=r.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Rb,\\\"$1\\\"+e):b.jsonp!==!1&&(b.url+=(sb.test(b.url)?\\\"&\\\":\\\"?\\\")+b.jsonp+\\\"=\\\"+e),b.converters[\\\"script json\\\"]=function(){return g||r.error(e+\\\" was not called\\\"),g[0]},b.dataTypes[0]=\\\"json\\\",f=a[e],a[e]=function(){g=arguments},d.always(function(){void 0===f?r(a).removeProp(e):a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Qb.push(e)),g&&r.isFunction(f)&&f(g[0]),g=f=void 0}),\\\"script\\\"}),o.createHTMLDocument=function(){var a=d.implementation.createHTMLDocument(\\\"\\\").body;return a.innerHTML=\\\"<form></form><form></form>\\\",2===a.childNodes.length}(),r.parseHTML=function(a,b,c){if(\\\"string\\\"!=typeof a)return[];\\\"boolean\\\"==typeof b&&(c=b,b=!1);var e,f,g;return b||(o.createHTMLDocument?(b=d.implementation.createHTMLDocument(\\\"\\\"),e=b.createElement(\\\"base\\\"),e.href=d.location.href,b.head.appendChild(e)):b=d),f=B.exec(a),g=!c&&[],f?[b.createElement(f[1])]:(f=pa([a],b,g),g&&g.length&&r(g).remove(),r.merge([],f.childNodes))},r.fn.load=function(a,b,c){var d,e,f,g=this,h=a.indexOf(\\\" \\\");return h>-1&&(d=mb(a.slice(h)),a=a.slice(0,h)),r.isFunction(b)?(c=b,b=void 0):b&&\\\"object\\\"==typeof b&&(e=\\\"POST\\\"),g.length>0&&r.ajax({url:a,type:e||\\\"GET\\\",dataType:\\\"html\\\",data:b}).done(function(a){f=arguments,g.html(d?r(\\\"<div>\\\").append(r.parseHTML(a)).find(d):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})}),this},r.each([\\\"ajaxStart\\\",\\\"ajaxStop\\\",\\\"ajaxComplete\\\",\\\"ajaxError\\\",\\\"ajaxSuccess\\\",\\\"ajaxSend\\\"],function(a,b){r.fn[b]=function(a){return this.on(b,a)}}),r.expr.pseudos.animated=function(a){return r.grep(r.timers,function(b){return a===b.elem}).length};function Sb(a){return r.isWindow(a)?a:9===a.nodeType&&a.defaultView}r.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=r.css(a,\\\"position\\\"),l=r(a),m={};\\\"static\\\"===k&&(a.style.position=\\\"relative\\\"),h=l.offset(),f=r.css(a,\\\"top\\\"),i=r.css(a,\\\"left\\\"),j=(\\\"absolute\\\"===k||\\\"fixed\\\"===k)&&(f+i).indexOf(\\\"auto\\\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),r.isFunction(b)&&(b=b.call(a,c,r.extend({},h))),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\\\"using\\\"in b?b.using.call(a,m):l.css(m)}},r.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){r.offset.setOffset(this,a,b)});var b,c,d,e,f=this[0];if(f)return f.getClientRects().length?(d=f.getBoundingClientRect(),d.width||d.height?(e=f.ownerDocument,c=Sb(e),b=e.documentElement,{top:d.top+c.pageYOffset-b.clientTop,left:d.left+c.pageXOffset-b.clientLeft}):d):{top:0,left:0}},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\\\"fixed\\\"===r.css(c,\\\"position\\\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),r.nodeName(a[0],\\\"html\\\")||(d=a.offset()),d={top:d.top+r.css(a[0],\\\"borderTopWidth\\\",!0),left:d.left+r.css(a[0],\\\"borderLeftWidth\\\",!0)}),{top:b.top-d.top-r.css(c,\\\"marginTop\\\",!0),left:b.left-d.left-r.css(c,\\\"marginLeft\\\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent;while(a&&\\\"static\\\"===r.css(a,\\\"position\\\"))a=a.offsetParent;return a||qa})}}),r.each({scrollLeft:\\\"pageXOffset\\\",scrollTop:\\\"pageYOffset\\\"},function(a,b){var c=\\\"pageYOffset\\\"===b;r.fn[a]=function(d){return S(this,function(a,d,e){var f=Sb(a);return void 0===e?f?f[b]:a[d]:void(f?f.scrollTo(c?f.pageXOffset:e,c?e:f.pageYOffset):a[d]=e)},a,d,arguments.length)}}),r.each([\\\"top\\\",\\\"left\\\"],function(a,b){r.cssHooks[b]=Oa(o.pixelPosition,function(a,c){if(c)return c=Na(a,b),La.test(c)?r(a).position()[b]+\\\"px\\\":c})}),r.each({Height:\\\"height\\\",Width:\\\"width\\\"},function(a,b){r.each({padding:\\\"inner\\\"+a,content:b,\\\"\\\":\\\"outer\\\"+a},function(c,d){r.fn[d]=function(e,f){var g=arguments.length&&(c||\\\"boolean\\\"!=typeof e),h=c||(e===!0||f===!0?\\\"margin\\\":\\\"border\\\");return S(this,function(b,c,e){var f;return r.isWindow(b)?0===d.indexOf(\\\"outer\\\")?b[\\\"inner\\\"+a]:b.document.documentElement[\\\"client\\\"+a]:9===b.nodeType?(f=b.documentElement,Math.max(b.body[\\\"scroll\\\"+a],f[\\\"scroll\\\"+a],b.body[\\\"offset\\\"+a],f[\\\"offset\\\"+a],f[\\\"client\\\"+a])):void 0===e?r.css(b,c,h):r.style(b,c,e,h)},b,g?e:void 0,g)}})}),r.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\\\"**\\\"):this.off(b,a||\\\"**\\\",c)}}),r.parseJSON=JSON.parse,\\\"function\\\"==typeof define&&define.amd&&define(\\\"jquery\\\",[],function(){return r});var Tb=a.jQuery,Ub=a.$;return r.noConflict=function(b){return a.$===r&&(a.$=Ub),b&&a.jQuery===r&&(a.jQuery=Tb),r},b||(a.jQuery=a.$=r),r});\\n\"\n\n/***/ },\n\n/***/ 751:\n/***/ function(module, exports) {\n\nmodule.exports = \"//! moment.js\\n//! version : 2.17.1\\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\\n//! license : MIT\\n//! momentjs.com\\n!function(a,b){\\\"object\\\"==typeof exports&&\\\"undefined\\\"!=typeof module?module.exports=b():\\\"function\\\"==typeof define&&define.amd?define(b):a.moment=b()}(this,function(){\\\"use strict\\\";function a(){return od.apply(null,arguments)}\\n// This is done to register the method called with moment()\\n// without creating circular dependencies.\\nfunction b(a){od=a}function c(a){return a instanceof Array||\\\"[object Array]\\\"===Object.prototype.toString.call(a)}function d(a){\\n// IE8 will treat undefined and null as object if it wasn't for\\n// input != null\\nreturn null!=a&&\\\"[object Object]\\\"===Object.prototype.toString.call(a)}function e(a){var b;for(b in a)\\n// even if its not own property I'd still call it non-empty\\nreturn!1;return!0}function f(a){return\\\"number\\\"==typeof a||\\\"[object Number]\\\"===Object.prototype.toString.call(a)}function g(a){return a instanceof Date||\\\"[object Date]\\\"===Object.prototype.toString.call(a)}function h(a,b){var c,d=[];for(c=0;c<a.length;++c)d.push(b(a[c],c));return d}function i(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function j(a,b){for(var c in b)i(b,c)&&(a[c]=b[c]);return i(b,\\\"toString\\\")&&(a.toString=b.toString),i(b,\\\"valueOf\\\")&&(a.valueOf=b.valueOf),a}function k(a,b,c,d){return rb(a,b,c,d,!0).utc()}function l(){\\n// We need to deep clone this object.\\nreturn{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null}}function m(a){return null==a._pf&&(a._pf=l()),a._pf}function n(a){if(null==a._isValid){var b=m(a),c=qd.call(b.parsedDateParts,function(a){return null!=a}),d=!isNaN(a._d.getTime())&&b.overflow<0&&!b.empty&&!b.invalidMonth&&!b.invalidWeekday&&!b.nullInput&&!b.invalidFormat&&!b.userInvalidated&&(!b.meridiem||b.meridiem&&c);if(a._strict&&(d=d&&0===b.charsLeftOver&&0===b.unusedTokens.length&&void 0===b.bigHour),null!=Object.isFrozen&&Object.isFrozen(a))return d;a._isValid=d}return a._isValid}function o(a){var b=k(NaN);return null!=a?j(m(b),a):m(b).userInvalidated=!0,b}function p(a){return void 0===a}function q(a,b){var c,d,e;if(p(b._isAMomentObject)||(a._isAMomentObject=b._isAMomentObject),p(b._i)||(a._i=b._i),p(b._f)||(a._f=b._f),p(b._l)||(a._l=b._l),p(b._strict)||(a._strict=b._strict),p(b._tzm)||(a._tzm=b._tzm),p(b._isUTC)||(a._isUTC=b._isUTC),p(b._offset)||(a._offset=b._offset),p(b._pf)||(a._pf=m(b)),p(b._locale)||(a._locale=b._locale),rd.length>0)for(c in rd)d=rd[c],e=b[d],p(e)||(a[d]=e);return a}\\n// Moment prototype object\\nfunction r(b){q(this,b),this._d=new Date(null!=b._d?b._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),\\n// Prevent infinite loop in case updateOffset creates new moment\\n// objects.\\nsd===!1&&(sd=!0,a.updateOffset(this),sd=!1)}function s(a){return a instanceof r||null!=a&&null!=a._isAMomentObject}function t(a){return a<0?Math.ceil(a)||0:Math.floor(a)}function u(a){var b=+a,c=0;return 0!==b&&isFinite(b)&&(c=t(b)),c}\\n// compare two arrays, return the number of differences\\nfunction v(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;d<e;d++)(c&&a[d]!==b[d]||!c&&u(a[d])!==u(b[d]))&&g++;return g+f}function w(b){a.suppressDeprecationWarnings===!1&&\\\"undefined\\\"!=typeof console&&console.warn&&console.warn(\\\"Deprecation warning: \\\"+b)}function x(b,c){var d=!0;return j(function(){if(null!=a.deprecationHandler&&a.deprecationHandler(null,b),d){for(var e,f=[],g=0;g<arguments.length;g++){if(e=\\\"\\\",\\\"object\\\"==typeof arguments[g]){e+=\\\"\\\\n[\\\"+g+\\\"] \\\";for(var h in arguments[0])e+=h+\\\": \\\"+arguments[0][h]+\\\", \\\";e=e.slice(0,-2)}else e=arguments[g];f.push(e)}w(b+\\\"\\\\nArguments: \\\"+Array.prototype.slice.call(f).join(\\\"\\\")+\\\"\\\\n\\\"+(new Error).stack),d=!1}return c.apply(this,arguments)},c)}function y(b,c){null!=a.deprecationHandler&&a.deprecationHandler(b,c),td[b]||(w(c),td[b]=!0)}function z(a){return a instanceof Function||\\\"[object Function]\\\"===Object.prototype.toString.call(a)}function A(a){var b,c;for(c in a)b=a[c],z(b)?this[c]=b:this[\\\"_\\\"+c]=b;this._config=a,\\n// Lenient ordinal parsing accepts just a number in addition to\\n// number + (possibly) stuff coming from _ordinalParseLenient.\\nthis._ordinalParseLenient=new RegExp(this._ordinalParse.source+\\\"|\\\"+/\\\\d{1,2}/.source)}function B(a,b){var c,e=j({},a);for(c in b)i(b,c)&&(d(a[c])&&d(b[c])?(e[c]={},j(e[c],a[c]),j(e[c],b[c])):null!=b[c]?e[c]=b[c]:delete e[c]);for(c in a)i(a,c)&&!i(b,c)&&d(a[c])&&(\\n// make sure changes to properties don't modify parent config\\ne[c]=j({},e[c]));return e}function C(a){null!=a&&this.set(a)}function D(a,b,c){var d=this._calendar[a]||this._calendar.sameElse;return z(d)?d.call(b,c):d}function E(a){var b=this._longDateFormat[a],c=this._longDateFormat[a.toUpperCase()];return b||!c?b:(this._longDateFormat[a]=c.replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a])}function F(){return this._invalidDate}function G(a){return this._ordinal.replace(\\\"%d\\\",a)}function H(a,b,c,d){var e=this._relativeTime[c];return z(e)?e(a,b,c,d):e.replace(/%d/i,a)}function I(a,b){var c=this._relativeTime[a>0?\\\"future\\\":\\\"past\\\"];return z(c)?c(b):c.replace(/%s/i,b)}function J(a,b){var c=a.toLowerCase();Dd[c]=Dd[c+\\\"s\\\"]=Dd[b]=a}function K(a){return\\\"string\\\"==typeof a?Dd[a]||Dd[a.toLowerCase()]:void 0}function L(a){var b,c,d={};for(c in a)i(a,c)&&(b=K(c),b&&(d[b]=a[c]));return d}function M(a,b){Ed[a]=b}function N(a){var b=[];for(var c in a)b.push({unit:c,priority:Ed[c]});return b.sort(function(a,b){return a.priority-b.priority}),b}function O(b,c){return function(d){return null!=d?(Q(this,b,d),a.updateOffset(this,c),this):P(this,b)}}function P(a,b){return a.isValid()?a._d[\\\"get\\\"+(a._isUTC?\\\"UTC\\\":\\\"\\\")+b]():NaN}function Q(a,b,c){a.isValid()&&a._d[\\\"set\\\"+(a._isUTC?\\\"UTC\\\":\\\"\\\")+b](c)}\\n// MOMENTS\\nfunction R(a){return a=K(a),z(this[a])?this[a]():this}function S(a,b){if(\\\"object\\\"==typeof a){a=L(a);for(var c=N(a),d=0;d<c.length;d++)this[c[d].unit](a[c[d].unit])}else if(a=K(a),z(this[a]))return this[a](b);return this}function T(a,b,c){var d=\\\"\\\"+Math.abs(a),e=b-d.length,f=a>=0;return(f?c?\\\"+\\\":\\\"\\\":\\\"-\\\")+Math.pow(10,Math.max(0,e)).toString().substr(1)+d}\\n// token:    'M'\\n// padded:   ['MM', 2]\\n// ordinal:  'Mo'\\n// callback: function () { this.month() + 1 }\\nfunction U(a,b,c,d){var e=d;\\\"string\\\"==typeof d&&(e=function(){return this[d]()}),a&&(Id[a]=e),b&&(Id[b[0]]=function(){return T(e.apply(this,arguments),b[1],b[2])}),c&&(Id[c]=function(){return this.localeData().ordinal(e.apply(this,arguments),a)})}function V(a){return a.match(/\\\\[[\\\\s\\\\S]/)?a.replace(/^\\\\[|\\\\]$/g,\\\"\\\"):a.replace(/\\\\\\\\/g,\\\"\\\")}function W(a){var b,c,d=a.match(Fd);for(b=0,c=d.length;b<c;b++)Id[d[b]]?d[b]=Id[d[b]]:d[b]=V(d[b]);return function(b){var e,f=\\\"\\\";for(e=0;e<c;e++)f+=d[e]instanceof Function?d[e].call(b,a):d[e];return f}}\\n// format date using native date object\\nfunction X(a,b){return a.isValid()?(b=Y(b,a.localeData()),Hd[b]=Hd[b]||W(b),Hd[b](a)):a.localeData().invalidDate()}function Y(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(Gd.lastIndex=0;d>=0&&Gd.test(a);)a=a.replace(Gd,c),Gd.lastIndex=0,d-=1;return a}function Z(a,b,c){$d[a]=z(b)?b:function(a,d){return a&&c?c:b}}function $(a,b){return i($d,a)?$d[a](b._strict,b._locale):new RegExp(_(a))}\\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\\nfunction _(a){return aa(a.replace(\\\"\\\\\\\\\\\",\\\"\\\").replace(/\\\\\\\\(\\\\[)|\\\\\\\\(\\\\])|\\\\[([^\\\\]\\\\[]*)\\\\]|\\\\\\\\(.)/g,function(a,b,c,d,e){return b||c||d||e}))}function aa(a){return a.replace(/[-\\\\/\\\\\\\\^$*+?.()|[\\\\]{}]/g,\\\"\\\\\\\\$&\\\")}function ba(a,b){var c,d=b;for(\\\"string\\\"==typeof a&&(a=[a]),f(b)&&(d=function(a,c){c[b]=u(a)}),c=0;c<a.length;c++)_d[a[c]]=d}function ca(a,b){ba(a,function(a,c,d,e){d._w=d._w||{},b(a,d._w,d,e)})}function da(a,b,c){null!=b&&i(_d,a)&&_d[a](b,c._a,c,a)}function ea(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function fa(a,b){return a?c(this._months)?this._months[a.month()]:this._months[(this._months.isFormat||ke).test(b)?\\\"format\\\":\\\"standalone\\\"][a.month()]:this._months}function ga(a,b){return a?c(this._monthsShort)?this._monthsShort[a.month()]:this._monthsShort[ke.test(b)?\\\"format\\\":\\\"standalone\\\"][a.month()]:this._monthsShort}function ha(a,b,c){var d,e,f,g=a.toLocaleLowerCase();if(!this._monthsParse)for(\\n// this is not used\\nthis._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],d=0;d<12;++d)f=k([2e3,d]),this._shortMonthsParse[d]=this.monthsShort(f,\\\"\\\").toLocaleLowerCase(),this._longMonthsParse[d]=this.months(f,\\\"\\\").toLocaleLowerCase();return c?\\\"MMM\\\"===b?(e=je.call(this._shortMonthsParse,g),e!==-1?e:null):(e=je.call(this._longMonthsParse,g),e!==-1?e:null):\\\"MMM\\\"===b?(e=je.call(this._shortMonthsParse,g),e!==-1?e:(e=je.call(this._longMonthsParse,g),e!==-1?e:null)):(e=je.call(this._longMonthsParse,g),e!==-1?e:(e=je.call(this._shortMonthsParse,g),e!==-1?e:null))}function ia(a,b,c){var d,e,f;if(this._monthsParseExact)return ha.call(this,a,b,c);\\n// TODO: add sorting\\n// Sorting makes sure if one month (or abbr) is a prefix of another\\n// see sorting in computeMonthsParse\\nfor(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),d=0;d<12;d++){\\n// test the regex\\nif(\\n// make the regex if we don't have it already\\ne=k([2e3,d]),c&&!this._longMonthsParse[d]&&(this._longMonthsParse[d]=new RegExp(\\\"^\\\"+this.months(e,\\\"\\\").replace(\\\".\\\",\\\"\\\")+\\\"$\\\",\\\"i\\\"),this._shortMonthsParse[d]=new RegExp(\\\"^\\\"+this.monthsShort(e,\\\"\\\").replace(\\\".\\\",\\\"\\\")+\\\"$\\\",\\\"i\\\")),c||this._monthsParse[d]||(f=\\\"^\\\"+this.months(e,\\\"\\\")+\\\"|^\\\"+this.monthsShort(e,\\\"\\\"),this._monthsParse[d]=new RegExp(f.replace(\\\".\\\",\\\"\\\"),\\\"i\\\")),c&&\\\"MMMM\\\"===b&&this._longMonthsParse[d].test(a))return d;if(c&&\\\"MMM\\\"===b&&this._shortMonthsParse[d].test(a))return d;if(!c&&this._monthsParse[d].test(a))return d}}\\n// MOMENTS\\nfunction ja(a,b){var c;if(!a.isValid())\\n// No op\\nreturn a;if(\\\"string\\\"==typeof b)if(/^\\\\d+$/.test(b))b=u(b);else\\n// TODO: Another silent failure?\\nif(b=a.localeData().monthsParse(b),!f(b))return a;return c=Math.min(a.date(),ea(a.year(),b)),a._d[\\\"set\\\"+(a._isUTC?\\\"UTC\\\":\\\"\\\")+\\\"Month\\\"](b,c),a}function ka(b){return null!=b?(ja(this,b),a.updateOffset(this,!0),this):P(this,\\\"Month\\\")}function la(){return ea(this.year(),this.month())}function ma(a){return this._monthsParseExact?(i(this,\\\"_monthsRegex\\\")||oa.call(this),a?this._monthsShortStrictRegex:this._monthsShortRegex):(i(this,\\\"_monthsShortRegex\\\")||(this._monthsShortRegex=ne),this._monthsShortStrictRegex&&a?this._monthsShortStrictRegex:this._monthsShortRegex)}function na(a){return this._monthsParseExact?(i(this,\\\"_monthsRegex\\\")||oa.call(this),a?this._monthsStrictRegex:this._monthsRegex):(i(this,\\\"_monthsRegex\\\")||(this._monthsRegex=oe),this._monthsStrictRegex&&a?this._monthsStrictRegex:this._monthsRegex)}function oa(){function a(a,b){return b.length-a.length}var b,c,d=[],e=[],f=[];for(b=0;b<12;b++)\\n// make the regex if we don't have it already\\nc=k([2e3,b]),d.push(this.monthsShort(c,\\\"\\\")),e.push(this.months(c,\\\"\\\")),f.push(this.months(c,\\\"\\\")),f.push(this.monthsShort(c,\\\"\\\"));for(\\n// Sorting makes sure if one month (or abbr) is a prefix of another it\\n// will match the longer piece.\\nd.sort(a),e.sort(a),f.sort(a),b=0;b<12;b++)d[b]=aa(d[b]),e[b]=aa(e[b]);for(b=0;b<24;b++)f[b]=aa(f[b]);this._monthsRegex=new RegExp(\\\"^(\\\"+f.join(\\\"|\\\")+\\\")\\\",\\\"i\\\"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp(\\\"^(\\\"+e.join(\\\"|\\\")+\\\")\\\",\\\"i\\\"),this._monthsShortStrictRegex=new RegExp(\\\"^(\\\"+d.join(\\\"|\\\")+\\\")\\\",\\\"i\\\")}\\n// HELPERS\\nfunction pa(a){return qa(a)?366:365}function qa(a){return a%4===0&&a%100!==0||a%400===0}function ra(){return qa(this.year())}function sa(a,b,c,d,e,f,g){\\n//can't just apply() to create a date:\\n//http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\\nvar h=new Date(a,b,c,d,e,f,g);\\n//the date constructor remaps years 0-99 to 1900-1999\\nreturn a<100&&a>=0&&isFinite(h.getFullYear())&&h.setFullYear(a),h}function ta(a){var b=new Date(Date.UTC.apply(null,arguments));\\n//the Date.UTC function remaps years 0-99 to 1900-1999\\nreturn a<100&&a>=0&&isFinite(b.getUTCFullYear())&&b.setUTCFullYear(a),b}\\n// start-of-first-week - start-of-year\\nfunction ua(a,b,c){var// first-week day -- which january is always in the first week (4 for iso, 1 for other)\\nd=7+b-c,\\n// first-week day local weekday -- which local weekday is fwd\\ne=(7+ta(a,0,d).getUTCDay()-b)%7;return-e+d-1}\\n//http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\\nfunction va(a,b,c,d,e){var f,g,h=(7+c-d)%7,i=ua(a,d,e),j=1+7*(b-1)+h+i;return j<=0?(f=a-1,g=pa(f)+j):j>pa(a)?(f=a+1,g=j-pa(a)):(f=a,g=j),{year:f,dayOfYear:g}}function wa(a,b,c){var d,e,f=ua(a.year(),b,c),g=Math.floor((a.dayOfYear()-f-1)/7)+1;return g<1?(e=a.year()-1,d=g+xa(e,b,c)):g>xa(a.year(),b,c)?(d=g-xa(a.year(),b,c),e=a.year()+1):(e=a.year(),d=g),{week:d,year:e}}function xa(a,b,c){var d=ua(a,b,c),e=ua(a+1,b,c);return(pa(a)-d+e)/7}\\n// HELPERS\\n// LOCALES\\nfunction ya(a){return wa(a,this._week.dow,this._week.doy).week}function za(){return this._week.dow}function Aa(){return this._week.doy}\\n// MOMENTS\\nfunction Ba(a){var b=this.localeData().week(this);return null==a?b:this.add(7*(a-b),\\\"d\\\")}function Ca(a){var b=wa(this,1,4).week;return null==a?b:this.add(7*(a-b),\\\"d\\\")}\\n// HELPERS\\nfunction Da(a,b){return\\\"string\\\"!=typeof a?a:isNaN(a)?(a=b.weekdaysParse(a),\\\"number\\\"==typeof a?a:null):parseInt(a,10)}function Ea(a,b){return\\\"string\\\"==typeof a?b.weekdaysParse(a)%7||7:isNaN(a)?null:a}function Fa(a,b){return a?c(this._weekdays)?this._weekdays[a.day()]:this._weekdays[this._weekdays.isFormat.test(b)?\\\"format\\\":\\\"standalone\\\"][a.day()]:this._weekdays}function Ga(a){return a?this._weekdaysShort[a.day()]:this._weekdaysShort}function Ha(a){return a?this._weekdaysMin[a.day()]:this._weekdaysMin}function Ia(a,b,c){var d,e,f,g=a.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],d=0;d<7;++d)f=k([2e3,1]).day(d),this._minWeekdaysParse[d]=this.weekdaysMin(f,\\\"\\\").toLocaleLowerCase(),this._shortWeekdaysParse[d]=this.weekdaysShort(f,\\\"\\\").toLocaleLowerCase(),this._weekdaysParse[d]=this.weekdays(f,\\\"\\\").toLocaleLowerCase();return c?\\\"dddd\\\"===b?(e=je.call(this._weekdaysParse,g),e!==-1?e:null):\\\"ddd\\\"===b?(e=je.call(this._shortWeekdaysParse,g),e!==-1?e:null):(e=je.call(this._minWeekdaysParse,g),e!==-1?e:null):\\\"dddd\\\"===b?(e=je.call(this._weekdaysParse,g),e!==-1?e:(e=je.call(this._shortWeekdaysParse,g),e!==-1?e:(e=je.call(this._minWeekdaysParse,g),e!==-1?e:null))):\\\"ddd\\\"===b?(e=je.call(this._shortWeekdaysParse,g),e!==-1?e:(e=je.call(this._weekdaysParse,g),e!==-1?e:(e=je.call(this._minWeekdaysParse,g),e!==-1?e:null))):(e=je.call(this._minWeekdaysParse,g),e!==-1?e:(e=je.call(this._weekdaysParse,g),e!==-1?e:(e=je.call(this._shortWeekdaysParse,g),e!==-1?e:null)))}function Ja(a,b,c){var d,e,f;if(this._weekdaysParseExact)return Ia.call(this,a,b,c);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),d=0;d<7;d++){\\n// test the regex\\nif(\\n// make the regex if we don't have it already\\ne=k([2e3,1]).day(d),c&&!this._fullWeekdaysParse[d]&&(this._fullWeekdaysParse[d]=new RegExp(\\\"^\\\"+this.weekdays(e,\\\"\\\").replace(\\\".\\\",\\\".?\\\")+\\\"$\\\",\\\"i\\\"),this._shortWeekdaysParse[d]=new RegExp(\\\"^\\\"+this.weekdaysShort(e,\\\"\\\").replace(\\\".\\\",\\\".?\\\")+\\\"$\\\",\\\"i\\\"),this._minWeekdaysParse[d]=new RegExp(\\\"^\\\"+this.weekdaysMin(e,\\\"\\\").replace(\\\".\\\",\\\".?\\\")+\\\"$\\\",\\\"i\\\")),this._weekdaysParse[d]||(f=\\\"^\\\"+this.weekdays(e,\\\"\\\")+\\\"|^\\\"+this.weekdaysShort(e,\\\"\\\")+\\\"|^\\\"+this.weekdaysMin(e,\\\"\\\"),this._weekdaysParse[d]=new RegExp(f.replace(\\\".\\\",\\\"\\\"),\\\"i\\\")),c&&\\\"dddd\\\"===b&&this._fullWeekdaysParse[d].test(a))return d;if(c&&\\\"ddd\\\"===b&&this._shortWeekdaysParse[d].test(a))return d;if(c&&\\\"dd\\\"===b&&this._minWeekdaysParse[d].test(a))return d;if(!c&&this._weekdaysParse[d].test(a))return d}}\\n// MOMENTS\\nfunction Ka(a){if(!this.isValid())return null!=a?this:NaN;var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=Da(a,this.localeData()),this.add(a-b,\\\"d\\\")):b}function La(a){if(!this.isValid())return null!=a?this:NaN;var b=(this.day()+7-this.localeData()._week.dow)%7;return null==a?b:this.add(a-b,\\\"d\\\")}function Ma(a){if(!this.isValid())return null!=a?this:NaN;\\n// behaves the same as moment#day except\\n// as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\\n// as a setter, sunday should belong to the previous week.\\nif(null!=a){var b=Ea(a,this.localeData());return this.day(this.day()%7?b:b-7)}return this.day()||7}function Na(a){return this._weekdaysParseExact?(i(this,\\\"_weekdaysRegex\\\")||Qa.call(this),a?this._weekdaysStrictRegex:this._weekdaysRegex):(i(this,\\\"_weekdaysRegex\\\")||(this._weekdaysRegex=ue),this._weekdaysStrictRegex&&a?this._weekdaysStrictRegex:this._weekdaysRegex)}function Oa(a){return this._weekdaysParseExact?(i(this,\\\"_weekdaysRegex\\\")||Qa.call(this),a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(i(this,\\\"_weekdaysShortRegex\\\")||(this._weekdaysShortRegex=ve),this._weekdaysShortStrictRegex&&a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function Pa(a){return this._weekdaysParseExact?(i(this,\\\"_weekdaysRegex\\\")||Qa.call(this),a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(i(this,\\\"_weekdaysMinRegex\\\")||(this._weekdaysMinRegex=we),this._weekdaysMinStrictRegex&&a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function Qa(){function a(a,b){return b.length-a.length}var b,c,d,e,f,g=[],h=[],i=[],j=[];for(b=0;b<7;b++)\\n// make the regex if we don't have it already\\nc=k([2e3,1]).day(b),d=this.weekdaysMin(c,\\\"\\\"),e=this.weekdaysShort(c,\\\"\\\"),f=this.weekdays(c,\\\"\\\"),g.push(d),h.push(e),i.push(f),j.push(d),j.push(e),j.push(f);for(\\n// Sorting makes sure if one weekday (or abbr) is a prefix of another it\\n// will match the longer piece.\\ng.sort(a),h.sort(a),i.sort(a),j.sort(a),b=0;b<7;b++)h[b]=aa(h[b]),i[b]=aa(i[b]),j[b]=aa(j[b]);this._weekdaysRegex=new RegExp(\\\"^(\\\"+j.join(\\\"|\\\")+\\\")\\\",\\\"i\\\"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp(\\\"^(\\\"+i.join(\\\"|\\\")+\\\")\\\",\\\"i\\\"),this._weekdaysShortStrictRegex=new RegExp(\\\"^(\\\"+h.join(\\\"|\\\")+\\\")\\\",\\\"i\\\"),this._weekdaysMinStrictRegex=new RegExp(\\\"^(\\\"+g.join(\\\"|\\\")+\\\")\\\",\\\"i\\\")}\\n// FORMATTING\\nfunction Ra(){return this.hours()%12||12}function Sa(){return this.hours()||24}function Ta(a,b){U(a,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),b)})}\\n// PARSING\\nfunction Ua(a,b){return b._meridiemParse}\\n// LOCALES\\nfunction Va(a){\\n// IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\\n// Using charAt should be more compatible.\\nreturn\\\"p\\\"===(a+\\\"\\\").toLowerCase().charAt(0)}function Wa(a,b,c){return a>11?c?\\\"pm\\\":\\\"PM\\\":c?\\\"am\\\":\\\"AM\\\"}function Xa(a){return a?a.toLowerCase().replace(\\\"_\\\",\\\"-\\\"):a}\\n// pick the locale from the array\\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\\nfunction Ya(a){for(var b,c,d,e,f=0;f<a.length;){for(e=Xa(a[f]).split(\\\"-\\\"),b=e.length,c=Xa(a[f+1]),c=c?c.split(\\\"-\\\"):null;b>0;){if(d=Za(e.slice(0,b).join(\\\"-\\\")))return d;if(c&&c.length>=b&&v(e,c,!0)>=b-1)\\n//the next array item is better than a shallower substring of this one\\nbreak;b--}f++}return null}function Za(a){var b=null;\\n// TODO: Find a better way to register and load all the locales in Node\\nif(!Be[a]&&\\\"undefined\\\"!=typeof module&&module&&module.exports)try{b=xe._abbr,require(\\\"./locale/\\\"+a),\\n// because defineLocale currently also sets the global locale, we\\n// want to undo that for lazy loaded locales\\n$a(b)}catch(a){}return Be[a]}\\n// This function will load locale and then set the global locale.  If\\n// no arguments are passed in, it will simply return the current global\\n// locale key.\\nfunction $a(a,b){var c;\\n// moment.duration._locale = moment._locale = data;\\nreturn a&&(c=p(b)?bb(a):_a(a,b),c&&(xe=c)),xe._abbr}function _a(a,b){if(null!==b){var c=Ae;if(b.abbr=a,null!=Be[a])y(\\\"defineLocaleOverride\\\",\\\"use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.\\\"),c=Be[a]._config;else if(null!=b.parentLocale){if(null==Be[b.parentLocale])return Ce[b.parentLocale]||(Ce[b.parentLocale]=[]),Ce[b.parentLocale].push({name:a,config:b}),null;c=Be[b.parentLocale]._config}\\n// backwards compat for now: also set the locale\\n// make sure we set the locale AFTER all child locales have been\\n// created, so we won't end up with the child locale set.\\nreturn Be[a]=new C(B(c,b)),Ce[a]&&Ce[a].forEach(function(a){_a(a.name,a.config)}),$a(a),Be[a]}\\n// useful for testing\\nreturn delete Be[a],null}function ab(a,b){if(null!=b){var c,d=Ae;\\n// MERGE\\nnull!=Be[a]&&(d=Be[a]._config),b=B(d,b),c=new C(b),c.parentLocale=Be[a],Be[a]=c,\\n// backwards compat for now: also set the locale\\n$a(a)}else\\n// pass null for config to unupdate, useful for tests\\nnull!=Be[a]&&(null!=Be[a].parentLocale?Be[a]=Be[a].parentLocale:null!=Be[a]&&delete Be[a]);return Be[a]}\\n// returns locale data\\nfunction bb(a){var b;if(a&&a._locale&&a._locale._abbr&&(a=a._locale._abbr),!a)return xe;if(!c(a)){if(\\n//short-circuit everything else\\nb=Za(a))return b;a=[a]}return Ya(a)}function cb(){return wd(Be)}function db(a){var b,c=a._a;return c&&m(a).overflow===-2&&(b=c[be]<0||c[be]>11?be:c[ce]<1||c[ce]>ea(c[ae],c[be])?ce:c[de]<0||c[de]>24||24===c[de]&&(0!==c[ee]||0!==c[fe]||0!==c[ge])?de:c[ee]<0||c[ee]>59?ee:c[fe]<0||c[fe]>59?fe:c[ge]<0||c[ge]>999?ge:-1,m(a)._overflowDayOfYear&&(b<ae||b>ce)&&(b=ce),m(a)._overflowWeeks&&b===-1&&(b=he),m(a)._overflowWeekday&&b===-1&&(b=ie),m(a).overflow=b),a}\\n// date from iso format\\nfunction eb(a){var b,c,d,e,f,g,h=a._i,i=De.exec(h)||Ee.exec(h);if(i){for(m(a).iso=!0,b=0,c=Ge.length;b<c;b++)if(Ge[b][1].exec(i[1])){e=Ge[b][0],d=Ge[b][2]!==!1;break}if(null==e)return void(a._isValid=!1);if(i[3]){for(b=0,c=He.length;b<c;b++)if(He[b][1].exec(i[3])){\\n// match[2] should be 'T' or space\\nf=(i[2]||\\\" \\\")+He[b][0];break}if(null==f)return void(a._isValid=!1)}if(!d&&null!=f)return void(a._isValid=!1);if(i[4]){if(!Fe.exec(i[4]))return void(a._isValid=!1);g=\\\"Z\\\"}a._f=e+(f||\\\"\\\")+(g||\\\"\\\"),kb(a)}else a._isValid=!1}\\n// date from iso format or fallback\\nfunction fb(b){var c=Ie.exec(b._i);return null!==c?void(b._d=new Date(+c[1])):(eb(b),void(b._isValid===!1&&(delete b._isValid,a.createFromInputFallback(b))))}\\n// Pick the first defined of two or three arguments.\\nfunction gb(a,b,c){return null!=a?a:null!=b?b:c}function hb(b){\\n// hooks is actually the exported moment object\\nvar c=new Date(a.now());return b._useUTC?[c.getUTCFullYear(),c.getUTCMonth(),c.getUTCDate()]:[c.getFullYear(),c.getMonth(),c.getDate()]}\\n// convert an array to a date.\\n// the array should mirror the parameters below\\n// note: all values past the year are optional and will default to the lowest possible value.\\n// [year, month, day , hour, minute, second, millisecond]\\nfunction ib(a){var b,c,d,e,f=[];if(!a._d){\\n// Default to current date.\\n// * if no year, month, day of month are given, default to today\\n// * if day of month is given, default month and year\\n// * if month is given, default only year\\n// * if year is given, don't default anything\\nfor(d=hb(a),\\n//compute day of the year from weeks and weekdays\\na._w&&null==a._a[ce]&&null==a._a[be]&&jb(a),\\n//if the day of the year is set, figure out what it is\\na._dayOfYear&&(e=gb(a._a[ae],d[ae]),a._dayOfYear>pa(e)&&(m(a)._overflowDayOfYear=!0),c=ta(e,0,a._dayOfYear),a._a[be]=c.getUTCMonth(),a._a[ce]=c.getUTCDate()),b=0;b<3&&null==a._a[b];++b)a._a[b]=f[b]=d[b];\\n// Zero out whatever was not defaulted, including time\\nfor(;b<7;b++)a._a[b]=f[b]=null==a._a[b]?2===b?1:0:a._a[b];\\n// Check for 24:00:00.000\\n24===a._a[de]&&0===a._a[ee]&&0===a._a[fe]&&0===a._a[ge]&&(a._nextDay=!0,a._a[de]=0),a._d=(a._useUTC?ta:sa).apply(null,f),\\n// Apply timezone offset from input. The actual utcOffset can be changed\\n// with parseZone.\\nnull!=a._tzm&&a._d.setUTCMinutes(a._d.getUTCMinutes()-a._tzm),a._nextDay&&(a._a[de]=24)}}function jb(a){var b,c,d,e,f,g,h,i;if(b=a._w,null!=b.GG||null!=b.W||null!=b.E)f=1,g=4,\\n// TODO: We need to take the current isoWeekYear, but that depends on\\n// how we interpret now (local, utc, fixed offset). So create\\n// a now version of current config (take local/utc/offset flags, and\\n// create now).\\nc=gb(b.GG,a._a[ae],wa(sb(),1,4).year),d=gb(b.W,1),e=gb(b.E,1),(e<1||e>7)&&(i=!0);else{f=a._locale._week.dow,g=a._locale._week.doy;var j=wa(sb(),f,g);c=gb(b.gg,a._a[ae],j.year),\\n// Default to current week.\\nd=gb(b.w,j.week),null!=b.d?(\\n// weekday -- low day numbers are considered next week\\ne=b.d,(e<0||e>6)&&(i=!0)):null!=b.e?(\\n// local weekday -- counting starts from begining of week\\ne=b.e+f,(b.e<0||b.e>6)&&(i=!0)):\\n// default to begining of week\\ne=f}d<1||d>xa(c,f,g)?m(a)._overflowWeeks=!0:null!=i?m(a)._overflowWeekday=!0:(h=va(c,d,e,f,g),a._a[ae]=h.year,a._dayOfYear=h.dayOfYear)}\\n// date from string and format string\\nfunction kb(b){\\n// TODO: Move this to another part of the creation flow to prevent circular deps\\nif(b._f===a.ISO_8601)return void eb(b);b._a=[],m(b).empty=!0;\\n// This array is used to make a Date, either with `new Date` or `Date.UTC`\\nvar c,d,e,f,g,h=\\\"\\\"+b._i,i=h.length,j=0;for(e=Y(b._f,b._locale).match(Fd)||[],c=0;c<e.length;c++)f=e[c],d=(h.match($(f,b))||[])[0],\\n// console.log('token', token, 'parsedInput', parsedInput,\\n//         'regex', getParseRegexForToken(token, config));\\nd&&(g=h.substr(0,h.indexOf(d)),g.length>0&&m(b).unusedInput.push(g),h=h.slice(h.indexOf(d)+d.length),j+=d.length),\\n// don't parse if it's not a known token\\nId[f]?(d?m(b).empty=!1:m(b).unusedTokens.push(f),da(f,d,b)):b._strict&&!d&&m(b).unusedTokens.push(f);\\n// add remaining unparsed input length to the string\\nm(b).charsLeftOver=i-j,h.length>0&&m(b).unusedInput.push(h),\\n// clear _12h flag if hour is <= 12\\nb._a[de]<=12&&m(b).bigHour===!0&&b._a[de]>0&&(m(b).bigHour=void 0),m(b).parsedDateParts=b._a.slice(0),m(b).meridiem=b._meridiem,\\n// handle meridiem\\nb._a[de]=lb(b._locale,b._a[de],b._meridiem),ib(b),db(b)}function lb(a,b,c){var d;\\n// Fallback\\nreturn null==c?b:null!=a.meridiemHour?a.meridiemHour(b,c):null!=a.isPM?(d=a.isPM(c),d&&b<12&&(b+=12),d||12!==b||(b=0),b):b}\\n// date from string and array of format strings\\nfunction mb(a){var b,c,d,e,f;if(0===a._f.length)return m(a).invalidFormat=!0,void(a._d=new Date(NaN));for(e=0;e<a._f.length;e++)f=0,b=q({},a),null!=a._useUTC&&(b._useUTC=a._useUTC),b._f=a._f[e],kb(b),n(b)&&(\\n// if there is any input that was not parsed add a penalty for that format\\nf+=m(b).charsLeftOver,\\n//or tokens\\nf+=10*m(b).unusedTokens.length,m(b).score=f,(null==d||f<d)&&(d=f,c=b));j(a,c||b)}function nb(a){if(!a._d){var b=L(a._i);a._a=h([b.year,b.month,b.day||b.date,b.hour,b.minute,b.second,b.millisecond],function(a){return a&&parseInt(a,10)}),ib(a)}}function ob(a){var b=new r(db(pb(a)));\\n// Adding is smart enough around DST\\nreturn b._nextDay&&(b.add(1,\\\"d\\\"),b._nextDay=void 0),b}function pb(a){var b=a._i,d=a._f;return a._locale=a._locale||bb(a._l),null===b||void 0===d&&\\\"\\\"===b?o({nullInput:!0}):(\\\"string\\\"==typeof b&&(a._i=b=a._locale.preparse(b)),s(b)?new r(db(b)):(g(b)?a._d=b:c(d)?mb(a):d?kb(a):qb(a),n(a)||(a._d=null),a))}function qb(b){var d=b._i;void 0===d?b._d=new Date(a.now()):g(d)?b._d=new Date(d.valueOf()):\\\"string\\\"==typeof d?fb(b):c(d)?(b._a=h(d.slice(0),function(a){return parseInt(a,10)}),ib(b)):\\\"object\\\"==typeof d?nb(b):f(d)?\\n// from milliseconds\\nb._d=new Date(d):a.createFromInputFallback(b)}function rb(a,b,f,g,h){var i={};\\n// object construction must be done this way.\\n// https://github.com/moment/moment/issues/1423\\nreturn f!==!0&&f!==!1||(g=f,f=void 0),(d(a)&&e(a)||c(a)&&0===a.length)&&(a=void 0),i._isAMomentObject=!0,i._useUTC=i._isUTC=h,i._l=f,i._i=a,i._f=b,i._strict=g,ob(i)}function sb(a,b,c,d){return rb(a,b,c,d,!1)}\\n// Pick a moment m from moments so that m[fn](other) is true for all\\n// other. This relies on the function fn to be transitive.\\n//\\n// moments should either be an array of moment objects or an array, whose\\n// first element is an array of moment objects.\\nfunction tb(a,b){var d,e;if(1===b.length&&c(b[0])&&(b=b[0]),!b.length)return sb();for(d=b[0],e=1;e<b.length;++e)b[e].isValid()&&!b[e][a](d)||(d=b[e]);return d}\\n// TODO: Use [].sort instead?\\nfunction ub(){var a=[].slice.call(arguments,0);return tb(\\\"isBefore\\\",a)}function vb(){var a=[].slice.call(arguments,0);return tb(\\\"isAfter\\\",a)}function wb(a){var b=L(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;\\n// representation for dateAddRemove\\nthis._milliseconds=+k+1e3*j+// 1000\\n6e4*i+// 1000 * 60\\n1e3*h*60*60,//using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\\n// Because of dateAddRemove treats 24 hours as different from a\\n// day when working around DST, we need to store them separately\\nthis._days=+g+7*f,\\n// It is impossible translate months into days without knowing\\n// which months you are are talking about, so we have to store\\n// it separately.\\nthis._months=+e+3*d+12*c,this._data={},this._locale=bb(),this._bubble()}function xb(a){return a instanceof wb}function yb(a){return a<0?Math.round(-1*a)*-1:Math.round(a)}\\n// FORMATTING\\nfunction zb(a,b){U(a,0,0,function(){var a=this.utcOffset(),c=\\\"+\\\";return a<0&&(a=-a,c=\\\"-\\\"),c+T(~~(a/60),2)+b+T(~~a%60,2)})}function Ab(a,b){var c=(b||\\\"\\\").match(a);if(null===c)return null;var d=c[c.length-1]||[],e=(d+\\\"\\\").match(Me)||[\\\"-\\\",0,0],f=+(60*e[1])+u(e[2]);return 0===f?0:\\\"+\\\"===e[0]?f:-f}\\n// Return a moment from input, that is local/utc/zone equivalent to model.\\nfunction Bb(b,c){var d,e;\\n// Use low-level api, because this fn is low-level api.\\nreturn c._isUTC?(d=c.clone(),e=(s(b)||g(b)?b.valueOf():sb(b).valueOf())-d.valueOf(),d._d.setTime(d._d.valueOf()+e),a.updateOffset(d,!1),d):sb(b).local()}function Cb(a){\\n// On Firefox.24 Date#getTimezoneOffset returns a floating point.\\n// https://github.com/moment/moment/pull/1871\\nreturn 15*-Math.round(a._d.getTimezoneOffset()/15)}\\n// MOMENTS\\n// keepLocalTime = true means only change the timezone, without\\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\\n// +0200, so we adjust the time as needed, to be valid.\\n//\\n// Keeping the time actually adds/subtracts (one hour)\\n// from the actual represented time. That is why we call updateOffset\\n// a second time. In case it wants us to change the offset again\\n// _changeInProgress == true case, then we have to adjust, because\\n// there is no such time in the given timezone.\\nfunction Db(b,c){var d,e=this._offset||0;if(!this.isValid())return null!=b?this:NaN;if(null!=b){if(\\\"string\\\"==typeof b){if(b=Ab(Xd,b),null===b)return this}else Math.abs(b)<16&&(b=60*b);return!this._isUTC&&c&&(d=Cb(this)),this._offset=b,this._isUTC=!0,null!=d&&this.add(d,\\\"m\\\"),e!==b&&(!c||this._changeInProgress?Tb(this,Ob(b-e,\\\"m\\\"),1,!1):this._changeInProgress||(this._changeInProgress=!0,a.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?e:Cb(this)}function Eb(a,b){return null!=a?(\\\"string\\\"!=typeof a&&(a=-a),this.utcOffset(a,b),this):-this.utcOffset()}function Fb(a){return this.utcOffset(0,a)}function Gb(a){return this._isUTC&&(this.utcOffset(0,a),this._isUTC=!1,a&&this.subtract(Cb(this),\\\"m\\\")),this}function Hb(){if(null!=this._tzm)this.utcOffset(this._tzm);else if(\\\"string\\\"==typeof this._i){var a=Ab(Wd,this._i);null!=a?this.utcOffset(a):this.utcOffset(0,!0)}return this}function Ib(a){return!!this.isValid()&&(a=a?sb(a).utcOffset():0,(this.utcOffset()-a)%60===0)}function Jb(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function Kb(){if(!p(this._isDSTShifted))return this._isDSTShifted;var a={};if(q(a,this),a=pb(a),a._a){var b=a._isUTC?k(a._a):sb(a._a);this._isDSTShifted=this.isValid()&&v(a._a,b.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}function Lb(){return!!this.isValid()&&!this._isUTC}function Mb(){return!!this.isValid()&&this._isUTC}function Nb(){return!!this.isValid()&&(this._isUTC&&0===this._offset)}function Ob(a,b){var c,d,e,g=a,\\n// matching against regexp is expensive, do it on demand\\nh=null;// checks for null or undefined\\nreturn xb(a)?g={ms:a._milliseconds,d:a._days,M:a._months}:f(a)?(g={},b?g[b]=a:g.milliseconds=a):(h=Ne.exec(a))?(c=\\\"-\\\"===h[1]?-1:1,g={y:0,d:u(h[ce])*c,h:u(h[de])*c,m:u(h[ee])*c,s:u(h[fe])*c,ms:u(yb(1e3*h[ge]))*c}):(h=Oe.exec(a))?(c=\\\"-\\\"===h[1]?-1:1,g={y:Pb(h[2],c),M:Pb(h[3],c),w:Pb(h[4],c),d:Pb(h[5],c),h:Pb(h[6],c),m:Pb(h[7],c),s:Pb(h[8],c)}):null==g?g={}:\\\"object\\\"==typeof g&&(\\\"from\\\"in g||\\\"to\\\"in g)&&(e=Rb(sb(g.from),sb(g.to)),g={},g.ms=e.milliseconds,g.M=e.months),d=new wb(g),xb(a)&&i(a,\\\"_locale\\\")&&(d._locale=a._locale),d}function Pb(a,b){\\n// We'd normally use ~~inp for this, but unfortunately it also\\n// converts floats to ints.\\n// inp may be undefined, so careful calling replace on it.\\nvar c=a&&parseFloat(a.replace(\\\",\\\",\\\".\\\"));\\n// apply sign while we're at it\\nreturn(isNaN(c)?0:c)*b}function Qb(a,b){var c={milliseconds:0,months:0};return c.months=b.month()-a.month()+12*(b.year()-a.year()),a.clone().add(c.months,\\\"M\\\").isAfter(b)&&--c.months,c.milliseconds=+b-+a.clone().add(c.months,\\\"M\\\"),c}function Rb(a,b){var c;return a.isValid()&&b.isValid()?(b=Bb(b,a),a.isBefore(b)?c=Qb(a,b):(c=Qb(b,a),c.milliseconds=-c.milliseconds,c.months=-c.months),c):{milliseconds:0,months:0}}\\n// TODO: remove 'name' arg after deprecation is removed\\nfunction Sb(a,b){return function(c,d){var e,f;\\n//invert the arguments, but complain about it\\nreturn null===d||isNaN(+d)||(y(b,\\\"moment().\\\"+b+\\\"(period, number) is deprecated. Please use moment().\\\"+b+\\\"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.\\\"),f=c,c=d,d=f),c=\\\"string\\\"==typeof c?+c:c,e=Ob(c,d),Tb(this,e,a),this}}function Tb(b,c,d,e){var f=c._milliseconds,g=yb(c._days),h=yb(c._months);b.isValid()&&(e=null==e||e,f&&b._d.setTime(b._d.valueOf()+f*d),g&&Q(b,\\\"Date\\\",P(b,\\\"Date\\\")+g*d),h&&ja(b,P(b,\\\"Month\\\")+h*d),e&&a.updateOffset(b,g||h))}function Ub(a,b){var c=a.diff(b,\\\"days\\\",!0);return c<-6?\\\"sameElse\\\":c<-1?\\\"lastWeek\\\":c<0?\\\"lastDay\\\":c<1?\\\"sameDay\\\":c<2?\\\"nextDay\\\":c<7?\\\"nextWeek\\\":\\\"sameElse\\\"}function Vb(b,c){\\n// We want to compare the start of today, vs this.\\n// Getting start-of-today depends on whether we're local/utc/offset or not.\\nvar d=b||sb(),e=Bb(d,this).startOf(\\\"day\\\"),f=a.calendarFormat(this,e)||\\\"sameElse\\\",g=c&&(z(c[f])?c[f].call(this,d):c[f]);return this.format(g||this.localeData().calendar(f,this,sb(d)))}function Wb(){return new r(this)}function Xb(a,b){var c=s(a)?a:sb(a);return!(!this.isValid()||!c.isValid())&&(b=K(p(b)?\\\"millisecond\\\":b),\\\"millisecond\\\"===b?this.valueOf()>c.valueOf():c.valueOf()<this.clone().startOf(b).valueOf())}function Yb(a,b){var c=s(a)?a:sb(a);return!(!this.isValid()||!c.isValid())&&(b=K(p(b)?\\\"millisecond\\\":b),\\\"millisecond\\\"===b?this.valueOf()<c.valueOf():this.clone().endOf(b).valueOf()<c.valueOf())}function Zb(a,b,c,d){return d=d||\\\"()\\\",(\\\"(\\\"===d[0]?this.isAfter(a,c):!this.isBefore(a,c))&&(\\\")\\\"===d[1]?this.isBefore(b,c):!this.isAfter(b,c))}function $b(a,b){var c,d=s(a)?a:sb(a);return!(!this.isValid()||!d.isValid())&&(b=K(b||\\\"millisecond\\\"),\\\"millisecond\\\"===b?this.valueOf()===d.valueOf():(c=d.valueOf(),this.clone().startOf(b).valueOf()<=c&&c<=this.clone().endOf(b).valueOf()))}function _b(a,b){return this.isSame(a,b)||this.isAfter(a,b)}function ac(a,b){return this.isSame(a,b)||this.isBefore(a,b)}function bc(a,b,c){var d,e,f,g;// 1000\\n// 1000 * 60\\n// 1000 * 60 * 60\\n// 1000 * 60 * 60 * 24, negate dst\\n// 1000 * 60 * 60 * 24 * 7, negate dst\\nreturn this.isValid()?(d=Bb(a,this),d.isValid()?(e=6e4*(d.utcOffset()-this.utcOffset()),b=K(b),\\\"year\\\"===b||\\\"month\\\"===b||\\\"quarter\\\"===b?(g=cc(this,d),\\\"quarter\\\"===b?g/=3:\\\"year\\\"===b&&(g/=12)):(f=this-d,g=\\\"second\\\"===b?f/1e3:\\\"minute\\\"===b?f/6e4:\\\"hour\\\"===b?f/36e5:\\\"day\\\"===b?(f-e)/864e5:\\\"week\\\"===b?(f-e)/6048e5:f),c?g:t(g)):NaN):NaN}function cc(a,b){\\n// difference in months\\nvar c,d,e=12*(b.year()-a.year())+(b.month()-a.month()),\\n// b is in (anchor - 1 month, anchor + 1 month)\\nf=a.clone().add(e,\\\"months\\\");\\n//check for negative zero, return zero if negative zero\\n// linear across the month\\n// linear across the month\\nreturn b-f<0?(c=a.clone().add(e-1,\\\"months\\\"),d=(b-f)/(f-c)):(c=a.clone().add(e+1,\\\"months\\\"),d=(b-f)/(c-f)),-(e+d)||0}function dc(){return this.clone().locale(\\\"en\\\").format(\\\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\\\")}function ec(){var a=this.clone().utc();return 0<a.year()&&a.year()<=9999?z(Date.prototype.toISOString)?this.toDate().toISOString():X(a,\\\"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\\\"):X(a,\\\"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\\\")}/**\\n * Return a human readable representation of a moment that can\\n * also be evaluated to get a new moment which is the same\\n *\\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\\n */\\nfunction fc(){if(!this.isValid())return\\\"moment.invalid(/* \\\"+this._i+\\\" */)\\\";var a=\\\"moment\\\",b=\\\"\\\";this.isLocal()||(a=0===this.utcOffset()?\\\"moment.utc\\\":\\\"moment.parseZone\\\",b=\\\"Z\\\");var c=\\\"[\\\"+a+'(\\\"]',d=0<this.year()&&this.year()<=9999?\\\"YYYY\\\":\\\"YYYYYY\\\",e=\\\"-MM-DD[T]HH:mm:ss.SSS\\\",f=b+'[\\\")]';return this.format(c+d+e+f)}function gc(b){b||(b=this.isUtc()?a.defaultFormatUtc:a.defaultFormat);var c=X(this,b);return this.localeData().postformat(c)}function hc(a,b){return this.isValid()&&(s(a)&&a.isValid()||sb(a).isValid())?Ob({to:this,from:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function ic(a){return this.from(sb(),a)}function jc(a,b){return this.isValid()&&(s(a)&&a.isValid()||sb(a).isValid())?Ob({from:this,to:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function kc(a){return this.to(sb(),a)}\\n// If passed a locale key, it will set the locale for this\\n// instance.  Otherwise, it will return the locale configuration\\n// variables for this instance.\\nfunction lc(a){var b;return void 0===a?this._locale._abbr:(b=bb(a),null!=b&&(this._locale=b),this)}function mc(){return this._locale}function nc(a){\\n// the following switch intentionally omits break keywords\\n// to utilize falling through the cases.\\nswitch(a=K(a)){case\\\"year\\\":this.month(0);/* falls through */\\ncase\\\"quarter\\\":case\\\"month\\\":this.date(1);/* falls through */\\ncase\\\"week\\\":case\\\"isoWeek\\\":case\\\"day\\\":case\\\"date\\\":this.hours(0);/* falls through */\\ncase\\\"hour\\\":this.minutes(0);/* falls through */\\ncase\\\"minute\\\":this.seconds(0);/* falls through */\\ncase\\\"second\\\":this.milliseconds(0)}\\n// weeks are a special case\\n// quarters are also special\\nreturn\\\"week\\\"===a&&this.weekday(0),\\\"isoWeek\\\"===a&&this.isoWeekday(1),\\\"quarter\\\"===a&&this.month(3*Math.floor(this.month()/3)),this}function oc(a){\\n// 'date' is an alias for 'day', so it should be considered as such.\\nreturn a=K(a),void 0===a||\\\"millisecond\\\"===a?this:(\\\"date\\\"===a&&(a=\\\"day\\\"),this.startOf(a).add(1,\\\"isoWeek\\\"===a?\\\"week\\\":a).subtract(1,\\\"ms\\\"))}function pc(){return this._d.valueOf()-6e4*(this._offset||0)}function qc(){return Math.floor(this.valueOf()/1e3)}function rc(){return new Date(this.valueOf())}function sc(){var a=this;return[a.year(),a.month(),a.date(),a.hour(),a.minute(),a.second(),a.millisecond()]}function tc(){var a=this;return{years:a.year(),months:a.month(),date:a.date(),hours:a.hours(),minutes:a.minutes(),seconds:a.seconds(),milliseconds:a.milliseconds()}}function uc(){\\n// new Date(NaN).toJSON() === null\\nreturn this.isValid()?this.toISOString():null}function vc(){return n(this)}function wc(){return j({},m(this))}function xc(){return m(this).overflow}function yc(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}function zc(a,b){U(0,[a,a.length],0,b)}\\n// MOMENTS\\nfunction Ac(a){return Ec.call(this,a,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}function Bc(a){return Ec.call(this,a,this.isoWeek(),this.isoWeekday(),1,4)}function Cc(){return xa(this.year(),1,4)}function Dc(){var a=this.localeData()._week;return xa(this.year(),a.dow,a.doy)}function Ec(a,b,c,d,e){var f;return null==a?wa(this,d,e).year:(f=xa(a,d,e),b>f&&(b=f),Fc.call(this,a,b,c,d,e))}function Fc(a,b,c,d,e){var f=va(a,b,c,d,e),g=ta(f.year,0,f.dayOfYear);return this.year(g.getUTCFullYear()),this.month(g.getUTCMonth()),this.date(g.getUTCDate()),this}\\n// MOMENTS\\nfunction Gc(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)}\\n// HELPERS\\n// MOMENTS\\nfunction Hc(a){var b=Math.round((this.clone().startOf(\\\"day\\\")-this.clone().startOf(\\\"year\\\"))/864e5)+1;return null==a?b:this.add(a-b,\\\"d\\\")}function Ic(a,b){b[ge]=u(1e3*(\\\"0.\\\"+a))}\\n// MOMENTS\\nfunction Jc(){return this._isUTC?\\\"UTC\\\":\\\"\\\"}function Kc(){return this._isUTC?\\\"Coordinated Universal Time\\\":\\\"\\\"}function Lc(a){return sb(1e3*a)}function Mc(){return sb.apply(null,arguments).parseZone()}function Nc(a){return a}function Oc(a,b,c,d){var e=bb(),f=k().set(d,b);return e[c](f,a)}function Pc(a,b,c){if(f(a)&&(b=a,a=void 0),a=a||\\\"\\\",null!=b)return Oc(a,b,c,\\\"month\\\");var d,e=[];for(d=0;d<12;d++)e[d]=Oc(a,d,c,\\\"month\\\");return e}\\n// ()\\n// (5)\\n// (fmt, 5)\\n// (fmt)\\n// (true)\\n// (true, 5)\\n// (true, fmt, 5)\\n// (true, fmt)\\nfunction Qc(a,b,c,d){\\\"boolean\\\"==typeof a?(f(b)&&(c=b,b=void 0),b=b||\\\"\\\"):(b=a,c=b,a=!1,f(b)&&(c=b,b=void 0),b=b||\\\"\\\");var e=bb(),g=a?e._week.dow:0;if(null!=c)return Oc(b,(c+g)%7,d,\\\"day\\\");var h,i=[];for(h=0;h<7;h++)i[h]=Oc(b,(h+g)%7,d,\\\"day\\\");return i}function Rc(a,b){return Pc(a,b,\\\"months\\\")}function Sc(a,b){return Pc(a,b,\\\"monthsShort\\\")}function Tc(a,b,c){return Qc(a,b,c,\\\"weekdays\\\")}function Uc(a,b,c){return Qc(a,b,c,\\\"weekdaysShort\\\")}function Vc(a,b,c){return Qc(a,b,c,\\\"weekdaysMin\\\")}function Wc(){var a=this._data;return this._milliseconds=Ze(this._milliseconds),this._days=Ze(this._days),this._months=Ze(this._months),a.milliseconds=Ze(a.milliseconds),a.seconds=Ze(a.seconds),a.minutes=Ze(a.minutes),a.hours=Ze(a.hours),a.months=Ze(a.months),a.years=Ze(a.years),this}function Xc(a,b,c,d){var e=Ob(b,c);return a._milliseconds+=d*e._milliseconds,a._days+=d*e._days,a._months+=d*e._months,a._bubble()}\\n// supports only 2.0-style add(1, 's') or add(duration)\\nfunction Yc(a,b){return Xc(this,a,b,1)}\\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\\nfunction Zc(a,b){return Xc(this,a,b,-1)}function $c(a){return a<0?Math.floor(a):Math.ceil(a)}function _c(){var a,b,c,d,e,f=this._milliseconds,g=this._days,h=this._months,i=this._data;\\n// if we have a mix of positive and negative values, bubble down first\\n// check: https://github.com/moment/moment/issues/2166\\n// The following code bubbles up values, see the tests for\\n// examples of what that means.\\n// convert days to months\\n// 12 months -> 1 year\\nreturn f>=0&&g>=0&&h>=0||f<=0&&g<=0&&h<=0||(f+=864e5*$c(bd(h)+g),g=0,h=0),i.milliseconds=f%1e3,a=t(f/1e3),i.seconds=a%60,b=t(a/60),i.minutes=b%60,c=t(b/60),i.hours=c%24,g+=t(c/24),e=t(ad(g)),h+=e,g-=$c(bd(e)),d=t(h/12),h%=12,i.days=g,i.months=h,i.years=d,this}function ad(a){\\n// 400 years have 146097 days (taking into account leap year rules)\\n// 400 years have 12 months === 4800\\nreturn 4800*a/146097}function bd(a){\\n// the reverse of daysToMonths\\nreturn 146097*a/4800}function cd(a){var b,c,d=this._milliseconds;if(a=K(a),\\\"month\\\"===a||\\\"year\\\"===a)return b=this._days+d/864e5,c=this._months+ad(b),\\\"month\\\"===a?c:c/12;switch(\\n// handle milliseconds separately because of floating point math errors (issue #1867)\\nb=this._days+Math.round(bd(this._months)),a){case\\\"week\\\":return b/7+d/6048e5;case\\\"day\\\":return b+d/864e5;case\\\"hour\\\":return 24*b+d/36e5;case\\\"minute\\\":return 1440*b+d/6e4;case\\\"second\\\":return 86400*b+d/1e3;\\n// Math.floor prevents floating point math errors here\\ncase\\\"millisecond\\\":return Math.floor(864e5*b)+d;default:throw new Error(\\\"Unknown unit \\\"+a)}}\\n// TODO: Use this.as('ms')?\\nfunction dd(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*u(this._months/12)}function ed(a){return function(){return this.as(a)}}function fd(a){return a=K(a),this[a+\\\"s\\\"]()}function gd(a){return function(){return this._data[a]}}function hd(){return t(this.days()/7)}\\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\\nfunction id(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function jd(a,b,c){var d=Ob(a).abs(),e=of(d.as(\\\"s\\\")),f=of(d.as(\\\"m\\\")),g=of(d.as(\\\"h\\\")),h=of(d.as(\\\"d\\\")),i=of(d.as(\\\"M\\\")),j=of(d.as(\\\"y\\\")),k=e<pf.s&&[\\\"s\\\",e]||f<=1&&[\\\"m\\\"]||f<pf.m&&[\\\"mm\\\",f]||g<=1&&[\\\"h\\\"]||g<pf.h&&[\\\"hh\\\",g]||h<=1&&[\\\"d\\\"]||h<pf.d&&[\\\"dd\\\",h]||i<=1&&[\\\"M\\\"]||i<pf.M&&[\\\"MM\\\",i]||j<=1&&[\\\"y\\\"]||[\\\"yy\\\",j];return k[2]=b,k[3]=+a>0,k[4]=c,id.apply(null,k)}\\n// This function allows you to set the rounding function for relative time strings\\nfunction kd(a){return void 0===a?of:\\\"function\\\"==typeof a&&(of=a,!0)}\\n// This function allows you to set a threshold for relative time strings\\nfunction ld(a,b){return void 0!==pf[a]&&(void 0===b?pf[a]:(pf[a]=b,!0))}function md(a){var b=this.localeData(),c=jd(this,!a,b);return a&&(c=b.pastFuture(+this,c)),b.postformat(c)}function nd(){\\n// for ISO strings we do not use the normal bubbling rules:\\n//  * milliseconds bubble up until they become hours\\n//  * days do not bubble at all\\n//  * months bubble up until they become years\\n// This is because there is no context-free conversion between hours and days\\n// (think of clock changes)\\n// and also not between days and months (28-31 days per month)\\nvar a,b,c,d=qf(this._milliseconds)/1e3,e=qf(this._days),f=qf(this._months);\\n// 3600 seconds -> 60 minutes -> 1 hour\\na=t(d/60),b=t(a/60),d%=60,a%=60,\\n// 12 months -> 1 year\\nc=t(f/12),f%=12;\\n// inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\\nvar g=c,h=f,i=e,j=b,k=a,l=d,m=this.asSeconds();return m?(m<0?\\\"-\\\":\\\"\\\")+\\\"P\\\"+(g?g+\\\"Y\\\":\\\"\\\")+(h?h+\\\"M\\\":\\\"\\\")+(i?i+\\\"D\\\":\\\"\\\")+(j||k||l?\\\"T\\\":\\\"\\\")+(j?j+\\\"H\\\":\\\"\\\")+(k?k+\\\"M\\\":\\\"\\\")+(l?l+\\\"S\\\":\\\"\\\"):\\\"P0D\\\"}var od,pd;pd=Array.prototype.some?Array.prototype.some:function(a){for(var b=Object(this),c=b.length>>>0,d=0;d<c;d++)if(d in b&&a.call(this,b[d],d,b))return!0;return!1};var qd=pd,rd=a.momentProperties=[],sd=!1,td={};a.suppressDeprecationWarnings=!1,a.deprecationHandler=null;var ud;ud=Object.keys?Object.keys:function(a){var b,c=[];for(b in a)i(a,b)&&c.push(b);return c};var vd,wd=ud,xd={sameDay:\\\"[Today at] LT\\\",nextDay:\\\"[Tomorrow at] LT\\\",nextWeek:\\\"dddd [at] LT\\\",lastDay:\\\"[Yesterday at] LT\\\",lastWeek:\\\"[Last] dddd [at] LT\\\",sameElse:\\\"L\\\"},yd={LTS:\\\"h:mm:ss A\\\",LT:\\\"h:mm A\\\",L:\\\"MM/DD/YYYY\\\",LL:\\\"MMMM D, YYYY\\\",LLL:\\\"MMMM D, YYYY h:mm A\\\",LLLL:\\\"dddd, MMMM D, YYYY h:mm A\\\"},zd=\\\"Invalid date\\\",Ad=\\\"%d\\\",Bd=/\\\\d{1,2}/,Cd={future:\\\"in %s\\\",past:\\\"%s ago\\\",s:\\\"a few seconds\\\",m:\\\"a minute\\\",mm:\\\"%d minutes\\\",h:\\\"an hour\\\",hh:\\\"%d hours\\\",d:\\\"a day\\\",dd:\\\"%d days\\\",M:\\\"a month\\\",MM:\\\"%d months\\\",y:\\\"a year\\\",yy:\\\"%d years\\\"},Dd={},Ed={},Fd=/(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,Gd=/(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Hd={},Id={},Jd=/\\\\d/,Kd=/\\\\d\\\\d/,Ld=/\\\\d{3}/,Md=/\\\\d{4}/,Nd=/[+-]?\\\\d{6}/,Od=/\\\\d\\\\d?/,Pd=/\\\\d\\\\d\\\\d\\\\d?/,Qd=/\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d?/,Rd=/\\\\d{1,3}/,Sd=/\\\\d{1,4}/,Td=/[+-]?\\\\d{1,6}/,Ud=/\\\\d+/,Vd=/[+-]?\\\\d+/,Wd=/Z|[+-]\\\\d\\\\d:?\\\\d\\\\d/gi,Xd=/Z|[+-]\\\\d\\\\d(?::?\\\\d\\\\d)?/gi,Yd=/[+-]?\\\\d+(\\\\.\\\\d{1,3})?/,Zd=/[0-9]*['a-z\\\\u00A0-\\\\u05FF\\\\u0700-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]+|[\\\\u0600-\\\\u06FF\\\\/]+(\\\\s*?[\\\\u0600-\\\\u06FF]+){1,2}/i,$d={},_d={},ae=0,be=1,ce=2,de=3,ee=4,fe=5,ge=6,he=7,ie=8;vd=Array.prototype.indexOf?Array.prototype.indexOf:function(a){\\n// I know\\nvar b;for(b=0;b<this.length;++b)if(this[b]===a)return b;return-1};var je=vd;\\n// FORMATTING\\nU(\\\"M\\\",[\\\"MM\\\",2],\\\"Mo\\\",function(){return this.month()+1}),U(\\\"MMM\\\",0,0,function(a){return this.localeData().monthsShort(this,a)}),U(\\\"MMMM\\\",0,0,function(a){return this.localeData().months(this,a)}),\\n// ALIASES\\nJ(\\\"month\\\",\\\"M\\\"),\\n// PRIORITY\\nM(\\\"month\\\",8),\\n// PARSING\\nZ(\\\"M\\\",Od),Z(\\\"MM\\\",Od,Kd),Z(\\\"MMM\\\",function(a,b){return b.monthsShortRegex(a)}),Z(\\\"MMMM\\\",function(a,b){return b.monthsRegex(a)}),ba([\\\"M\\\",\\\"MM\\\"],function(a,b){b[be]=u(a)-1}),ba([\\\"MMM\\\",\\\"MMMM\\\"],function(a,b,c,d){var e=c._locale.monthsParse(a,d,c._strict);\\n// if we didn't find a month name, mark the date as invalid.\\nnull!=e?b[be]=e:m(c).invalidMonth=a});\\n// LOCALES\\nvar ke=/D[oD]?(\\\\[[^\\\\[\\\\]]*\\\\]|\\\\s)+MMMM?/,le=\\\"January_February_March_April_May_June_July_August_September_October_November_December\\\".split(\\\"_\\\"),me=\\\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\\\".split(\\\"_\\\"),ne=Zd,oe=Zd;\\n// FORMATTING\\nU(\\\"Y\\\",0,0,function(){var a=this.year();return a<=9999?\\\"\\\"+a:\\\"+\\\"+a}),U(0,[\\\"YY\\\",2],0,function(){return this.year()%100}),U(0,[\\\"YYYY\\\",4],0,\\\"year\\\"),U(0,[\\\"YYYYY\\\",5],0,\\\"year\\\"),U(0,[\\\"YYYYYY\\\",6,!0],0,\\\"year\\\"),\\n// ALIASES\\nJ(\\\"year\\\",\\\"y\\\"),\\n// PRIORITIES\\nM(\\\"year\\\",1),\\n// PARSING\\nZ(\\\"Y\\\",Vd),Z(\\\"YY\\\",Od,Kd),Z(\\\"YYYY\\\",Sd,Md),Z(\\\"YYYYY\\\",Td,Nd),Z(\\\"YYYYYY\\\",Td,Nd),ba([\\\"YYYYY\\\",\\\"YYYYYY\\\"],ae),ba(\\\"YYYY\\\",function(b,c){c[ae]=2===b.length?a.parseTwoDigitYear(b):u(b)}),ba(\\\"YY\\\",function(b,c){c[ae]=a.parseTwoDigitYear(b)}),ba(\\\"Y\\\",function(a,b){b[ae]=parseInt(a,10)}),\\n// HOOKS\\na.parseTwoDigitYear=function(a){return u(a)+(u(a)>68?1900:2e3)};\\n// MOMENTS\\nvar pe=O(\\\"FullYear\\\",!0);\\n// FORMATTING\\nU(\\\"w\\\",[\\\"ww\\\",2],\\\"wo\\\",\\\"week\\\"),U(\\\"W\\\",[\\\"WW\\\",2],\\\"Wo\\\",\\\"isoWeek\\\"),\\n// ALIASES\\nJ(\\\"week\\\",\\\"w\\\"),J(\\\"isoWeek\\\",\\\"W\\\"),\\n// PRIORITIES\\nM(\\\"week\\\",5),M(\\\"isoWeek\\\",5),\\n// PARSING\\nZ(\\\"w\\\",Od),Z(\\\"ww\\\",Od,Kd),Z(\\\"W\\\",Od),Z(\\\"WW\\\",Od,Kd),ca([\\\"w\\\",\\\"ww\\\",\\\"W\\\",\\\"WW\\\"],function(a,b,c,d){b[d.substr(0,1)]=u(a)});var qe={dow:0,// Sunday is the first day of the week.\\ndoy:6};\\n// FORMATTING\\nU(\\\"d\\\",0,\\\"do\\\",\\\"day\\\"),U(\\\"dd\\\",0,0,function(a){return this.localeData().weekdaysMin(this,a)}),U(\\\"ddd\\\",0,0,function(a){return this.localeData().weekdaysShort(this,a)}),U(\\\"dddd\\\",0,0,function(a){return this.localeData().weekdays(this,a)}),U(\\\"e\\\",0,0,\\\"weekday\\\"),U(\\\"E\\\",0,0,\\\"isoWeekday\\\"),\\n// ALIASES\\nJ(\\\"day\\\",\\\"d\\\"),J(\\\"weekday\\\",\\\"e\\\"),J(\\\"isoWeekday\\\",\\\"E\\\"),\\n// PRIORITY\\nM(\\\"day\\\",11),M(\\\"weekday\\\",11),M(\\\"isoWeekday\\\",11),\\n// PARSING\\nZ(\\\"d\\\",Od),Z(\\\"e\\\",Od),Z(\\\"E\\\",Od),Z(\\\"dd\\\",function(a,b){return b.weekdaysMinRegex(a)}),Z(\\\"ddd\\\",function(a,b){return b.weekdaysShortRegex(a)}),Z(\\\"dddd\\\",function(a,b){return b.weekdaysRegex(a)}),ca([\\\"dd\\\",\\\"ddd\\\",\\\"dddd\\\"],function(a,b,c,d){var e=c._locale.weekdaysParse(a,d,c._strict);\\n// if we didn't get a weekday name, mark the date as invalid\\nnull!=e?b.d=e:m(c).invalidWeekday=a}),ca([\\\"d\\\",\\\"e\\\",\\\"E\\\"],function(a,b,c,d){b[d]=u(a)});\\n// LOCALES\\nvar re=\\\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\\\".split(\\\"_\\\"),se=\\\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\\\".split(\\\"_\\\"),te=\\\"Su_Mo_Tu_We_Th_Fr_Sa\\\".split(\\\"_\\\"),ue=Zd,ve=Zd,we=Zd;U(\\\"H\\\",[\\\"HH\\\",2],0,\\\"hour\\\"),U(\\\"h\\\",[\\\"hh\\\",2],0,Ra),U(\\\"k\\\",[\\\"kk\\\",2],0,Sa),U(\\\"hmm\\\",0,0,function(){return\\\"\\\"+Ra.apply(this)+T(this.minutes(),2)}),U(\\\"hmmss\\\",0,0,function(){return\\\"\\\"+Ra.apply(this)+T(this.minutes(),2)+T(this.seconds(),2)}),U(\\\"Hmm\\\",0,0,function(){return\\\"\\\"+this.hours()+T(this.minutes(),2)}),U(\\\"Hmmss\\\",0,0,function(){return\\\"\\\"+this.hours()+T(this.minutes(),2)+T(this.seconds(),2)}),Ta(\\\"a\\\",!0),Ta(\\\"A\\\",!1),\\n// ALIASES\\nJ(\\\"hour\\\",\\\"h\\\"),\\n// PRIORITY\\nM(\\\"hour\\\",13),Z(\\\"a\\\",Ua),Z(\\\"A\\\",Ua),Z(\\\"H\\\",Od),Z(\\\"h\\\",Od),Z(\\\"HH\\\",Od,Kd),Z(\\\"hh\\\",Od,Kd),Z(\\\"hmm\\\",Pd),Z(\\\"hmmss\\\",Qd),Z(\\\"Hmm\\\",Pd),Z(\\\"Hmmss\\\",Qd),ba([\\\"H\\\",\\\"HH\\\"],de),ba([\\\"a\\\",\\\"A\\\"],function(a,b,c){c._isPm=c._locale.isPM(a),c._meridiem=a}),ba([\\\"h\\\",\\\"hh\\\"],function(a,b,c){b[de]=u(a),m(c).bigHour=!0}),ba(\\\"hmm\\\",function(a,b,c){var d=a.length-2;b[de]=u(a.substr(0,d)),b[ee]=u(a.substr(d)),m(c).bigHour=!0}),ba(\\\"hmmss\\\",function(a,b,c){var d=a.length-4,e=a.length-2;b[de]=u(a.substr(0,d)),b[ee]=u(a.substr(d,2)),b[fe]=u(a.substr(e)),m(c).bigHour=!0}),ba(\\\"Hmm\\\",function(a,b,c){var d=a.length-2;b[de]=u(a.substr(0,d)),b[ee]=u(a.substr(d))}),ba(\\\"Hmmss\\\",function(a,b,c){var d=a.length-4,e=a.length-2;b[de]=u(a.substr(0,d)),b[ee]=u(a.substr(d,2)),b[fe]=u(a.substr(e))});var xe,ye=/[ap]\\\\.?m?\\\\.?/i,ze=O(\\\"Hours\\\",!0),Ae={calendar:xd,longDateFormat:yd,invalidDate:zd,ordinal:Ad,ordinalParse:Bd,relativeTime:Cd,months:le,monthsShort:me,week:qe,weekdays:re,weekdaysMin:te,weekdaysShort:se,meridiemParse:ye},Be={},Ce={},De=/^\\\\s*((?:[+-]\\\\d{6}|\\\\d{4})-(?:\\\\d\\\\d-\\\\d\\\\d|W\\\\d\\\\d-\\\\d|W\\\\d\\\\d|\\\\d\\\\d\\\\d|\\\\d\\\\d))(?:(T| )(\\\\d\\\\d(?::\\\\d\\\\d(?::\\\\d\\\\d(?:[.,]\\\\d+)?)?)?)([\\\\+\\\\-]\\\\d\\\\d(?::?\\\\d\\\\d)?|\\\\s*Z)?)?$/,Ee=/^\\\\s*((?:[+-]\\\\d{6}|\\\\d{4})(?:\\\\d\\\\d\\\\d\\\\d|W\\\\d\\\\d\\\\d|W\\\\d\\\\d|\\\\d\\\\d\\\\d|\\\\d\\\\d))(?:(T| )(\\\\d\\\\d(?:\\\\d\\\\d(?:\\\\d\\\\d(?:[.,]\\\\d+)?)?)?)([\\\\+\\\\-]\\\\d\\\\d(?::?\\\\d\\\\d)?|\\\\s*Z)?)?$/,Fe=/Z|[+-]\\\\d\\\\d(?::?\\\\d\\\\d)?/,Ge=[[\\\"YYYYYY-MM-DD\\\",/[+-]\\\\d{6}-\\\\d\\\\d-\\\\d\\\\d/],[\\\"YYYY-MM-DD\\\",/\\\\d{4}-\\\\d\\\\d-\\\\d\\\\d/],[\\\"GGGG-[W]WW-E\\\",/\\\\d{4}-W\\\\d\\\\d-\\\\d/],[\\\"GGGG-[W]WW\\\",/\\\\d{4}-W\\\\d\\\\d/,!1],[\\\"YYYY-DDD\\\",/\\\\d{4}-\\\\d{3}/],[\\\"YYYY-MM\\\",/\\\\d{4}-\\\\d\\\\d/,!1],[\\\"YYYYYYMMDD\\\",/[+-]\\\\d{10}/],[\\\"YYYYMMDD\\\",/\\\\d{8}/],\\n// YYYYMM is NOT allowed by the standard\\n[\\\"GGGG[W]WWE\\\",/\\\\d{4}W\\\\d{3}/],[\\\"GGGG[W]WW\\\",/\\\\d{4}W\\\\d{2}/,!1],[\\\"YYYYDDD\\\",/\\\\d{7}/]],He=[[\\\"HH:mm:ss.SSSS\\\",/\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d\\\\.\\\\d+/],[\\\"HH:mm:ss,SSSS\\\",/\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d,\\\\d+/],[\\\"HH:mm:ss\\\",/\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d/],[\\\"HH:mm\\\",/\\\\d\\\\d:\\\\d\\\\d/],[\\\"HHmmss.SSSS\\\",/\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\.\\\\d+/],[\\\"HHmmss,SSSS\\\",/\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d,\\\\d+/],[\\\"HHmmss\\\",/\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d/],[\\\"HHmm\\\",/\\\\d\\\\d\\\\d\\\\d/],[\\\"HH\\\",/\\\\d\\\\d/]],Ie=/^\\\\/?Date\\\\((\\\\-?\\\\d+)/i;a.createFromInputFallback=x(\\\"value provided is not in a recognized ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.\\\",function(a){a._d=new Date(a._i+(a._useUTC?\\\" UTC\\\":\\\"\\\"))}),\\n// constant that refers to the ISO standard\\na.ISO_8601=function(){};var Je=x(\\\"moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/\\\",function(){var a=sb.apply(null,arguments);return this.isValid()&&a.isValid()?a<this?this:a:o()}),Ke=x(\\\"moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/\\\",function(){var a=sb.apply(null,arguments);return this.isValid()&&a.isValid()?a>this?this:a:o()}),Le=function(){return Date.now?Date.now():+new Date};zb(\\\"Z\\\",\\\":\\\"),zb(\\\"ZZ\\\",\\\"\\\"),\\n// PARSING\\nZ(\\\"Z\\\",Xd),Z(\\\"ZZ\\\",Xd),ba([\\\"Z\\\",\\\"ZZ\\\"],function(a,b,c){c._useUTC=!0,c._tzm=Ab(Xd,a)});\\n// HELPERS\\n// timezone chunker\\n// '+10:00' > ['10',  '00']\\n// '-1530'  > ['-15', '30']\\nvar Me=/([\\\\+\\\\-]|\\\\d\\\\d)/gi;\\n// HOOKS\\n// This function will be called whenever a moment is mutated.\\n// It is intended to keep the offset in sync with the timezone.\\na.updateOffset=function(){};\\n// ASP.NET json date format regex\\nvar Ne=/^(\\\\-)?(?:(\\\\d*)[. ])?(\\\\d+)\\\\:(\\\\d+)(?:\\\\:(\\\\d+)(\\\\.\\\\d*)?)?$/,Oe=/^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;Ob.fn=wb.prototype;var Pe=Sb(1,\\\"add\\\"),Qe=Sb(-1,\\\"subtract\\\");a.defaultFormat=\\\"YYYY-MM-DDTHH:mm:ssZ\\\",a.defaultFormatUtc=\\\"YYYY-MM-DDTHH:mm:ss[Z]\\\";var Re=x(\\\"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.\\\",function(a){return void 0===a?this.localeData():this.locale(a)});\\n// FORMATTING\\nU(0,[\\\"gg\\\",2],0,function(){return this.weekYear()%100}),U(0,[\\\"GG\\\",2],0,function(){return this.isoWeekYear()%100}),zc(\\\"gggg\\\",\\\"weekYear\\\"),zc(\\\"ggggg\\\",\\\"weekYear\\\"),zc(\\\"GGGG\\\",\\\"isoWeekYear\\\"),zc(\\\"GGGGG\\\",\\\"isoWeekYear\\\"),\\n// ALIASES\\nJ(\\\"weekYear\\\",\\\"gg\\\"),J(\\\"isoWeekYear\\\",\\\"GG\\\"),\\n// PRIORITY\\nM(\\\"weekYear\\\",1),M(\\\"isoWeekYear\\\",1),\\n// PARSING\\nZ(\\\"G\\\",Vd),Z(\\\"g\\\",Vd),Z(\\\"GG\\\",Od,Kd),Z(\\\"gg\\\",Od,Kd),Z(\\\"GGGG\\\",Sd,Md),Z(\\\"gggg\\\",Sd,Md),Z(\\\"GGGGG\\\",Td,Nd),Z(\\\"ggggg\\\",Td,Nd),ca([\\\"gggg\\\",\\\"ggggg\\\",\\\"GGGG\\\",\\\"GGGGG\\\"],function(a,b,c,d){b[d.substr(0,2)]=u(a)}),ca([\\\"gg\\\",\\\"GG\\\"],function(b,c,d,e){c[e]=a.parseTwoDigitYear(b)}),\\n// FORMATTING\\nU(\\\"Q\\\",0,\\\"Qo\\\",\\\"quarter\\\"),\\n// ALIASES\\nJ(\\\"quarter\\\",\\\"Q\\\"),\\n// PRIORITY\\nM(\\\"quarter\\\",7),\\n// PARSING\\nZ(\\\"Q\\\",Jd),ba(\\\"Q\\\",function(a,b){b[be]=3*(u(a)-1)}),\\n// FORMATTING\\nU(\\\"D\\\",[\\\"DD\\\",2],\\\"Do\\\",\\\"date\\\"),\\n// ALIASES\\nJ(\\\"date\\\",\\\"D\\\"),\\n// PRIOROITY\\nM(\\\"date\\\",9),\\n// PARSING\\nZ(\\\"D\\\",Od),Z(\\\"DD\\\",Od,Kd),Z(\\\"Do\\\",function(a,b){return a?b._ordinalParse:b._ordinalParseLenient}),ba([\\\"D\\\",\\\"DD\\\"],ce),ba(\\\"Do\\\",function(a,b){b[ce]=u(a.match(Od)[0],10)});\\n// MOMENTS\\nvar Se=O(\\\"Date\\\",!0);\\n// FORMATTING\\nU(\\\"DDD\\\",[\\\"DDDD\\\",3],\\\"DDDo\\\",\\\"dayOfYear\\\"),\\n// ALIASES\\nJ(\\\"dayOfYear\\\",\\\"DDD\\\"),\\n// PRIORITY\\nM(\\\"dayOfYear\\\",4),\\n// PARSING\\nZ(\\\"DDD\\\",Rd),Z(\\\"DDDD\\\",Ld),ba([\\\"DDD\\\",\\\"DDDD\\\"],function(a,b,c){c._dayOfYear=u(a)}),\\n// FORMATTING\\nU(\\\"m\\\",[\\\"mm\\\",2],0,\\\"minute\\\"),\\n// ALIASES\\nJ(\\\"minute\\\",\\\"m\\\"),\\n// PRIORITY\\nM(\\\"minute\\\",14),\\n// PARSING\\nZ(\\\"m\\\",Od),Z(\\\"mm\\\",Od,Kd),ba([\\\"m\\\",\\\"mm\\\"],ee);\\n// MOMENTS\\nvar Te=O(\\\"Minutes\\\",!1);\\n// FORMATTING\\nU(\\\"s\\\",[\\\"ss\\\",2],0,\\\"second\\\"),\\n// ALIASES\\nJ(\\\"second\\\",\\\"s\\\"),\\n// PRIORITY\\nM(\\\"second\\\",15),\\n// PARSING\\nZ(\\\"s\\\",Od),Z(\\\"ss\\\",Od,Kd),ba([\\\"s\\\",\\\"ss\\\"],fe);\\n// MOMENTS\\nvar Ue=O(\\\"Seconds\\\",!1);\\n// FORMATTING\\nU(\\\"S\\\",0,0,function(){return~~(this.millisecond()/100)}),U(0,[\\\"SS\\\",2],0,function(){return~~(this.millisecond()/10)}),U(0,[\\\"SSS\\\",3],0,\\\"millisecond\\\"),U(0,[\\\"SSSS\\\",4],0,function(){return 10*this.millisecond()}),U(0,[\\\"SSSSS\\\",5],0,function(){return 100*this.millisecond()}),U(0,[\\\"SSSSSS\\\",6],0,function(){return 1e3*this.millisecond()}),U(0,[\\\"SSSSSSS\\\",7],0,function(){return 1e4*this.millisecond()}),U(0,[\\\"SSSSSSSS\\\",8],0,function(){return 1e5*this.millisecond()}),U(0,[\\\"SSSSSSSSS\\\",9],0,function(){return 1e6*this.millisecond()}),\\n// ALIASES\\nJ(\\\"millisecond\\\",\\\"ms\\\"),\\n// PRIORITY\\nM(\\\"millisecond\\\",16),\\n// PARSING\\nZ(\\\"S\\\",Rd,Jd),Z(\\\"SS\\\",Rd,Kd),Z(\\\"SSS\\\",Rd,Ld);var Ve;for(Ve=\\\"SSSS\\\";Ve.length<=9;Ve+=\\\"S\\\")Z(Ve,Ud);for(Ve=\\\"S\\\";Ve.length<=9;Ve+=\\\"S\\\")ba(Ve,Ic);\\n// MOMENTS\\nvar We=O(\\\"Milliseconds\\\",!1);\\n// FORMATTING\\nU(\\\"z\\\",0,0,\\\"zoneAbbr\\\"),U(\\\"zz\\\",0,0,\\\"zoneName\\\");var Xe=r.prototype;Xe.add=Pe,Xe.calendar=Vb,Xe.clone=Wb,Xe.diff=bc,Xe.endOf=oc,Xe.format=gc,Xe.from=hc,Xe.fromNow=ic,Xe.to=jc,Xe.toNow=kc,Xe.get=R,Xe.invalidAt=xc,Xe.isAfter=Xb,Xe.isBefore=Yb,Xe.isBetween=Zb,Xe.isSame=$b,Xe.isSameOrAfter=_b,Xe.isSameOrBefore=ac,Xe.isValid=vc,Xe.lang=Re,Xe.locale=lc,Xe.localeData=mc,Xe.max=Ke,Xe.min=Je,Xe.parsingFlags=wc,Xe.set=S,Xe.startOf=nc,Xe.subtract=Qe,Xe.toArray=sc,Xe.toObject=tc,Xe.toDate=rc,Xe.toISOString=ec,Xe.inspect=fc,Xe.toJSON=uc,Xe.toString=dc,Xe.unix=qc,Xe.valueOf=pc,Xe.creationData=yc,\\n// Year\\nXe.year=pe,Xe.isLeapYear=ra,\\n// Week Year\\nXe.weekYear=Ac,Xe.isoWeekYear=Bc,\\n// Quarter\\nXe.quarter=Xe.quarters=Gc,\\n// Month\\nXe.month=ka,Xe.daysInMonth=la,\\n// Week\\nXe.week=Xe.weeks=Ba,Xe.isoWeek=Xe.isoWeeks=Ca,Xe.weeksInYear=Dc,Xe.isoWeeksInYear=Cc,\\n// Day\\nXe.date=Se,Xe.day=Xe.days=Ka,Xe.weekday=La,Xe.isoWeekday=Ma,Xe.dayOfYear=Hc,\\n// Hour\\nXe.hour=Xe.hours=ze,\\n// Minute\\nXe.minute=Xe.minutes=Te,\\n// Second\\nXe.second=Xe.seconds=Ue,\\n// Millisecond\\nXe.millisecond=Xe.milliseconds=We,\\n// Offset\\nXe.utcOffset=Db,Xe.utc=Fb,Xe.local=Gb,Xe.parseZone=Hb,Xe.hasAlignedHourOffset=Ib,Xe.isDST=Jb,Xe.isLocal=Lb,Xe.isUtcOffset=Mb,Xe.isUtc=Nb,Xe.isUTC=Nb,\\n// Timezone\\nXe.zoneAbbr=Jc,Xe.zoneName=Kc,\\n// Deprecations\\nXe.dates=x(\\\"dates accessor is deprecated. Use date instead.\\\",Se),Xe.months=x(\\\"months accessor is deprecated. Use month instead\\\",ka),Xe.years=x(\\\"years accessor is deprecated. Use year instead\\\",pe),Xe.zone=x(\\\"moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/\\\",Eb),Xe.isDSTShifted=x(\\\"isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information\\\",Kb);var Ye=C.prototype;Ye.calendar=D,Ye.longDateFormat=E,Ye.invalidDate=F,Ye.ordinal=G,Ye.preparse=Nc,Ye.postformat=Nc,Ye.relativeTime=H,Ye.pastFuture=I,Ye.set=A,\\n// Month\\nYe.months=fa,Ye.monthsShort=ga,Ye.monthsParse=ia,Ye.monthsRegex=na,Ye.monthsShortRegex=ma,\\n// Week\\nYe.week=ya,Ye.firstDayOfYear=Aa,Ye.firstDayOfWeek=za,\\n// Day of Week\\nYe.weekdays=Fa,Ye.weekdaysMin=Ha,Ye.weekdaysShort=Ga,Ye.weekdaysParse=Ja,Ye.weekdaysRegex=Na,Ye.weekdaysShortRegex=Oa,Ye.weekdaysMinRegex=Pa,\\n// Hours\\nYe.isPM=Va,Ye.meridiem=Wa,$a(\\\"en\\\",{ordinalParse:/\\\\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===u(a%100/10)?\\\"th\\\":1===b?\\\"st\\\":2===b?\\\"nd\\\":3===b?\\\"rd\\\":\\\"th\\\";return a+c}}),\\n// Side effect imports\\na.lang=x(\\\"moment.lang is deprecated. Use moment.locale instead.\\\",$a),a.langData=x(\\\"moment.langData is deprecated. Use moment.localeData instead.\\\",bb);var Ze=Math.abs,$e=ed(\\\"ms\\\"),_e=ed(\\\"s\\\"),af=ed(\\\"m\\\"),bf=ed(\\\"h\\\"),cf=ed(\\\"d\\\"),df=ed(\\\"w\\\"),ef=ed(\\\"M\\\"),ff=ed(\\\"y\\\"),gf=gd(\\\"milliseconds\\\"),hf=gd(\\\"seconds\\\"),jf=gd(\\\"minutes\\\"),kf=gd(\\\"hours\\\"),lf=gd(\\\"days\\\"),mf=gd(\\\"months\\\"),nf=gd(\\\"years\\\"),of=Math.round,pf={s:45,// seconds to minute\\nm:45,// minutes to hour\\nh:22,// hours to day\\nd:26,// days to month\\nM:11},qf=Math.abs,rf=wb.prototype;\\n// Deprecations\\n// Side effect imports\\n// FORMATTING\\n// PARSING\\n// Side effect imports\\nreturn rf.abs=Wc,rf.add=Yc,rf.subtract=Zc,rf.as=cd,rf.asMilliseconds=$e,rf.asSeconds=_e,rf.asMinutes=af,rf.asHours=bf,rf.asDays=cf,rf.asWeeks=df,rf.asMonths=ef,rf.asYears=ff,rf.valueOf=dd,rf._bubble=_c,rf.get=fd,rf.milliseconds=gf,rf.seconds=hf,rf.minutes=jf,rf.hours=kf,rf.days=lf,rf.weeks=hd,rf.months=mf,rf.years=nf,rf.humanize=md,rf.toISOString=nd,rf.toString=nd,rf.toJSON=nd,rf.locale=lc,rf.localeData=mc,rf.toIsoString=x(\\\"toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)\\\",nd),rf.lang=Re,U(\\\"X\\\",0,0,\\\"unix\\\"),U(\\\"x\\\",0,0,\\\"valueOf\\\"),Z(\\\"x\\\",Vd),Z(\\\"X\\\",Yd),ba(\\\"X\\\",function(a,b,c){c._d=new Date(1e3*parseFloat(a,10))}),ba(\\\"x\\\",function(a,b,c){c._d=new Date(u(a))}),a.version=\\\"2.17.1\\\",b(sb),a.fn=Xe,a.min=ub,a.max=vb,a.now=Le,a.utc=k,a.unix=Lc,a.months=Rc,a.isDate=g,a.locale=$a,a.invalid=o,a.duration=Ob,a.isMoment=s,a.weekdays=Tc,a.parseZone=Mc,a.localeData=bb,a.isDuration=xb,a.monthsShort=Sc,a.weekdaysMin=Vc,a.defineLocale=_a,a.updateLocale=ab,a.locales=cb,a.weekdaysShort=Uc,a.normalizeUnits=K,a.relativeTimeRounding=kd,a.relativeTimeThreshold=ld,a.calendarFormat=Ub,a.prototype=Xe,a});\"\n\n/***/ },\n\n/***/ 781:\n/***/ function(module, exports, __webpack_require__) {\n\n__webpack_require__(409);\n__webpack_require__(410);\nmodule.exports = __webpack_require__(408);\n\n\n/***/ }\n\n},[781]);\n\n\n// WEBPACK FOOTER //\n// scripts.a2646449cd7cb0a7fc61.bundle.js","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript !== \"undefined\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader/addScript.js\n// module id = 253\n// module chunks = 2","require(\"!!/Users/maymaywong/workspace/playground/calendar-app/node_modules/script-loader/addScript.js\")(require(\"!!/Users/maymaywong/workspace/playground/calendar-app/node_modules/raw-loader/index.js!/Users/maymaywong/workspace/playground/calendar-app/node_modules/fullcalendar/dist/fullcalendar.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fullcalendar/dist/fullcalendar.js\n// module id = 408\n// module chunks = 2","require(\"!!/Users/maymaywong/workspace/playground/calendar-app/node_modules/script-loader/addScript.js\")(require(\"!!/Users/maymaywong/workspace/playground/calendar-app/node_modules/raw-loader/index.js!/Users/maymaywong/workspace/playground/calendar-app/node_modules/jquery/dist/jquery.min.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jquery/dist/jquery.min.js\n// module id = 409\n// module chunks = 2","require(\"!!/Users/maymaywong/workspace/playground/calendar-app/node_modules/script-loader/addScript.js\")(require(\"!!/Users/maymaywong/workspace/playground/calendar-app/node_modules/raw-loader/index.js!/Users/maymaywong/workspace/playground/calendar-app/node_modules/moment/min/moment.min.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/min/moment.min.js\n// module id = 410\n// module chunks = 2","module.exports = \"/*!\\n * FullCalendar v3.1.0\\n * Docs & License: http://fullcalendar.io/\\n * (c) 2016 Adam Shaw\\n */\\n\\n(function(factory) {\\n\\tif (typeof define === 'function' && define.amd) {\\n\\t\\tdefine([ 'jquery', 'moment' ], factory);\\n\\t}\\n\\telse if (typeof exports === 'object') { // Node/CommonJS\\n\\t\\tmodule.exports = factory(require('jquery'), require('moment'));\\n\\t}\\n\\telse {\\n\\t\\tfactory(jQuery, moment);\\n\\t}\\n})(function($, moment) {\\n\\n;;\\n\\nvar FC = $.fullCalendar = {\\n\\tversion: \\\"3.1.0\\\",\\n\\tinternalApiVersion: 7\\n};\\nvar fcViews = FC.views = {};\\n\\n\\n$.fn.fullCalendar = function(options) {\\n\\tvar args = Array.prototype.slice.call(arguments, 1); // for a possible method call\\n\\tvar res = this; // what this function will return (this jQuery object by default)\\n\\n\\tthis.each(function(i, _element) { // loop each DOM element involved\\n\\t\\tvar element = $(_element);\\n\\t\\tvar calendar = element.data('fullCalendar'); // get the existing calendar object (if any)\\n\\t\\tvar singleRes; // the returned value of this single method call\\n\\n\\t\\t// a method call\\n\\t\\tif (typeof options === 'string') {\\n\\t\\t\\tif (calendar && $.isFunction(calendar[options])) {\\n\\t\\t\\t\\tsingleRes = calendar[options].apply(calendar, args);\\n\\t\\t\\t\\tif (!i) {\\n\\t\\t\\t\\t\\tres = singleRes; // record the first method call result\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (options === 'destroy') { // for the destroy method, must remove Calendar object data\\n\\t\\t\\t\\t\\telement.removeData('fullCalendar');\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t// a new calendar initialization\\n\\t\\telse if (!calendar) { // don't initialize twice\\n\\t\\t\\tcalendar = new Calendar(element, options);\\n\\t\\t\\telement.data('fullCalendar', calendar);\\n\\t\\t\\tcalendar.render();\\n\\t\\t}\\n\\t});\\n\\n\\treturn res;\\n};\\n\\n\\nvar complexOptions = [ // names of options that are objects whose properties should be combined\\n\\t'header',\\n\\t'footer',\\n\\t'buttonText',\\n\\t'buttonIcons',\\n\\t'themeButtonIcons'\\n];\\n\\n\\n// Merges an array of option objects into a single object\\nfunction mergeOptions(optionObjs) {\\n\\treturn mergeProps(optionObjs, complexOptions);\\n}\\n\\n;;\\n\\n// exports\\nFC.intersectRanges = intersectRanges;\\nFC.applyAll = applyAll;\\nFC.debounce = debounce;\\nFC.isInt = isInt;\\nFC.htmlEscape = htmlEscape;\\nFC.cssToStr = cssToStr;\\nFC.proxy = proxy;\\nFC.capitaliseFirstLetter = capitaliseFirstLetter;\\n\\n\\n/* FullCalendar-specific DOM Utilities\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n// Given the scrollbar widths of some other container, create borders/margins on rowEls in order to match the left\\n// and right space that was offset by the scrollbars. A 1-pixel border first, then margin beyond that.\\nfunction compensateScroll(rowEls, scrollbarWidths) {\\n\\tif (scrollbarWidths.left) {\\n\\t\\trowEls.css({\\n\\t\\t\\t'border-left-width': 1,\\n\\t\\t\\t'margin-left': scrollbarWidths.left - 1\\n\\t\\t});\\n\\t}\\n\\tif (scrollbarWidths.right) {\\n\\t\\trowEls.css({\\n\\t\\t\\t'border-right-width': 1,\\n\\t\\t\\t'margin-right': scrollbarWidths.right - 1\\n\\t\\t});\\n\\t}\\n}\\n\\n\\n// Undoes compensateScroll and restores all borders/margins\\nfunction uncompensateScroll(rowEls) {\\n\\trowEls.css({\\n\\t\\t'margin-left': '',\\n\\t\\t'margin-right': '',\\n\\t\\t'border-left-width': '',\\n\\t\\t'border-right-width': ''\\n\\t});\\n}\\n\\n\\n// Make the mouse cursor express that an event is not allowed in the current area\\nfunction disableCursor() {\\n\\t$('body').addClass('fc-not-allowed');\\n}\\n\\n\\n// Returns the mouse cursor to its original look\\nfunction enableCursor() {\\n\\t$('body').removeClass('fc-not-allowed');\\n}\\n\\n\\n// Given a total available height to fill, have `els` (essentially child rows) expand to accomodate.\\n// By default, all elements that are shorter than the recommended height are expanded uniformly, not considering\\n// any other els that are already too tall. if `shouldRedistribute` is on, it considers these tall rows and \\n// reduces the available height.\\nfunction distributeHeight(els, availableHeight, shouldRedistribute) {\\n\\n\\t// *FLOORING NOTE*: we floor in certain places because zoom can give inaccurate floating-point dimensions,\\n\\t// and it is better to be shorter than taller, to avoid creating unnecessary scrollbars.\\n\\n\\tvar minOffset1 = Math.floor(availableHeight / els.length); // for non-last element\\n\\tvar minOffset2 = Math.floor(availableHeight - minOffset1 * (els.length - 1)); // for last element *FLOORING NOTE*\\n\\tvar flexEls = []; // elements that are allowed to expand. array of DOM nodes\\n\\tvar flexOffsets = []; // amount of vertical space it takes up\\n\\tvar flexHeights = []; // actual css height\\n\\tvar usedHeight = 0;\\n\\n\\tundistributeHeight(els); // give all elements their natural height\\n\\n\\t// find elements that are below the recommended height (expandable).\\n\\t// important to query for heights in a single first pass (to avoid reflow oscillation).\\n\\tels.each(function(i, el) {\\n\\t\\tvar minOffset = i === els.length - 1 ? minOffset2 : minOffset1;\\n\\t\\tvar naturalOffset = $(el).outerHeight(true);\\n\\n\\t\\tif (naturalOffset < minOffset) {\\n\\t\\t\\tflexEls.push(el);\\n\\t\\t\\tflexOffsets.push(naturalOffset);\\n\\t\\t\\tflexHeights.push($(el).height());\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\t// this element stretches past recommended height (non-expandable). mark the space as occupied.\\n\\t\\t\\tusedHeight += naturalOffset;\\n\\t\\t}\\n\\t});\\n\\n\\t// readjust the recommended height to only consider the height available to non-maxed-out rows.\\n\\tif (shouldRedistribute) {\\n\\t\\tavailableHeight -= usedHeight;\\n\\t\\tminOffset1 = Math.floor(availableHeight / flexEls.length);\\n\\t\\tminOffset2 = Math.floor(availableHeight - minOffset1 * (flexEls.length - 1)); // *FLOORING NOTE*\\n\\t}\\n\\n\\t// assign heights to all expandable elements\\n\\t$(flexEls).each(function(i, el) {\\n\\t\\tvar minOffset = i === flexEls.length - 1 ? minOffset2 : minOffset1;\\n\\t\\tvar naturalOffset = flexOffsets[i];\\n\\t\\tvar naturalHeight = flexHeights[i];\\n\\t\\tvar newHeight = minOffset - (naturalOffset - naturalHeight); // subtract the margin/padding\\n\\n\\t\\tif (naturalOffset < minOffset) { // we check this again because redistribution might have changed things\\n\\t\\t\\t$(el).height(newHeight);\\n\\t\\t}\\n\\t});\\n}\\n\\n\\n// Undoes distrubuteHeight, restoring all els to their natural height\\nfunction undistributeHeight(els) {\\n\\tels.height('');\\n}\\n\\n\\n// Given `els`, a jQuery set of <td> cells, find the cell with the largest natural width and set the widths of all the\\n// cells to be that width.\\n// PREREQUISITE: if you want a cell to take up width, it needs to have a single inner element w/ display:inline\\nfunction matchCellWidths(els) {\\n\\tvar maxInnerWidth = 0;\\n\\n\\tels.find('> *').each(function(i, innerEl) {\\n\\t\\tvar innerWidth = $(innerEl).outerWidth();\\n\\t\\tif (innerWidth > maxInnerWidth) {\\n\\t\\t\\tmaxInnerWidth = innerWidth;\\n\\t\\t}\\n\\t});\\n\\n\\tmaxInnerWidth++; // sometimes not accurate of width the text needs to stay on one line. insurance\\n\\n\\tels.width(maxInnerWidth);\\n\\n\\treturn maxInnerWidth;\\n}\\n\\n\\n// Given one element that resides inside another,\\n// Subtracts the height of the inner element from the outer element.\\nfunction subtractInnerElHeight(outerEl, innerEl) {\\n\\tvar both = outerEl.add(innerEl);\\n\\tvar diff;\\n\\n\\t// effin' IE8/9/10/11 sometimes returns 0 for dimensions. this weird hack was the only thing that worked\\n\\tboth.css({\\n\\t\\tposition: 'relative', // cause a reflow, which will force fresh dimension recalculation\\n\\t\\tleft: -1 // ensure reflow in case the el was already relative. negative is less likely to cause new scroll\\n\\t});\\n\\tdiff = outerEl.outerHeight() - innerEl.outerHeight(); // grab the dimensions\\n\\tboth.css({ position: '', left: '' }); // undo hack\\n\\n\\treturn diff;\\n}\\n\\n\\n/* Element Geom Utilities\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nFC.getOuterRect = getOuterRect;\\nFC.getClientRect = getClientRect;\\nFC.getContentRect = getContentRect;\\nFC.getScrollbarWidths = getScrollbarWidths;\\n\\n\\n// borrowed from https://github.com/jquery/jquery-ui/blob/1.11.0/ui/core.js#L51\\nfunction getScrollParent(el) {\\n\\tvar position = el.css('position'),\\n\\t\\tscrollParent = el.parents().filter(function() {\\n\\t\\t\\tvar parent = $(this);\\n\\t\\t\\treturn (/(auto|scroll)/).test(\\n\\t\\t\\t\\tparent.css('overflow') + parent.css('overflow-y') + parent.css('overflow-x')\\n\\t\\t\\t);\\n\\t\\t}).eq(0);\\n\\n\\treturn position === 'fixed' || !scrollParent.length ? $(el[0].ownerDocument || document) : scrollParent;\\n}\\n\\n\\n// Queries the outer bounding area of a jQuery element.\\n// Returns a rectangle with absolute coordinates: left, right (exclusive), top, bottom (exclusive).\\n// Origin is optional.\\nfunction getOuterRect(el, origin) {\\n\\tvar offset = el.offset();\\n\\tvar left = offset.left - (origin ? origin.left : 0);\\n\\tvar top = offset.top - (origin ? origin.top : 0);\\n\\n\\treturn {\\n\\t\\tleft: left,\\n\\t\\tright: left + el.outerWidth(),\\n\\t\\ttop: top,\\n\\t\\tbottom: top + el.outerHeight()\\n\\t};\\n}\\n\\n\\n// Queries the area within the margin/border/scrollbars of a jQuery element. Does not go within the padding.\\n// Returns a rectangle with absolute coordinates: left, right (exclusive), top, bottom (exclusive).\\n// Origin is optional.\\n// NOTE: should use clientLeft/clientTop, but very unreliable cross-browser.\\nfunction getClientRect(el, origin) {\\n\\tvar offset = el.offset();\\n\\tvar scrollbarWidths = getScrollbarWidths(el);\\n\\tvar left = offset.left + getCssFloat(el, 'border-left-width') + scrollbarWidths.left - (origin ? origin.left : 0);\\n\\tvar top = offset.top + getCssFloat(el, 'border-top-width') + scrollbarWidths.top - (origin ? origin.top : 0);\\n\\n\\treturn {\\n\\t\\tleft: left,\\n\\t\\tright: left + el[0].clientWidth, // clientWidth includes padding but NOT scrollbars\\n\\t\\ttop: top,\\n\\t\\tbottom: top + el[0].clientHeight // clientHeight includes padding but NOT scrollbars\\n\\t};\\n}\\n\\n\\n// Queries the area within the margin/border/padding of a jQuery element. Assumed not to have scrollbars.\\n// Returns a rectangle with absolute coordinates: left, right (exclusive), top, bottom (exclusive).\\n// Origin is optional.\\nfunction getContentRect(el, origin) {\\n\\tvar offset = el.offset(); // just outside of border, margin not included\\n\\tvar left = offset.left + getCssFloat(el, 'border-left-width') + getCssFloat(el, 'padding-left') -\\n\\t\\t(origin ? origin.left : 0);\\n\\tvar top = offset.top + getCssFloat(el, 'border-top-width') + getCssFloat(el, 'padding-top') -\\n\\t\\t(origin ? origin.top : 0);\\n\\n\\treturn {\\n\\t\\tleft: left,\\n\\t\\tright: left + el.width(),\\n\\t\\ttop: top,\\n\\t\\tbottom: top + el.height()\\n\\t};\\n}\\n\\n\\n// Returns the computed left/right/top/bottom scrollbar widths for the given jQuery element.\\n// NOTE: should use clientLeft/clientTop, but very unreliable cross-browser.\\nfunction getScrollbarWidths(el) {\\n\\tvar leftRightWidth = el.innerWidth() - el[0].clientWidth; // the paddings cancel out, leaving the scrollbars\\n\\tvar widths = {\\n\\t\\tleft: 0,\\n\\t\\tright: 0,\\n\\t\\ttop: 0,\\n\\t\\tbottom: el.innerHeight() - el[0].clientHeight // the paddings cancel out, leaving the bottom scrollbar\\n\\t};\\n\\n\\tif (getIsLeftRtlScrollbars() && el.css('direction') == 'rtl') { // is the scrollbar on the left side?\\n\\t\\twidths.left = leftRightWidth;\\n\\t}\\n\\telse {\\n\\t\\twidths.right = leftRightWidth;\\n\\t}\\n\\n\\treturn widths;\\n}\\n\\n\\n// Logic for determining if, when the element is right-to-left, the scrollbar appears on the left side\\n\\nvar _isLeftRtlScrollbars = null;\\n\\nfunction getIsLeftRtlScrollbars() { // responsible for caching the computation\\n\\tif (_isLeftRtlScrollbars === null) {\\n\\t\\t_isLeftRtlScrollbars = computeIsLeftRtlScrollbars();\\n\\t}\\n\\treturn _isLeftRtlScrollbars;\\n}\\n\\nfunction computeIsLeftRtlScrollbars() { // creates an offscreen test element, then removes it\\n\\tvar el = $('<div><div/></div>')\\n\\t\\t.css({\\n\\t\\t\\tposition: 'absolute',\\n\\t\\t\\ttop: -1000,\\n\\t\\t\\tleft: 0,\\n\\t\\t\\tborder: 0,\\n\\t\\t\\tpadding: 0,\\n\\t\\t\\toverflow: 'scroll',\\n\\t\\t\\tdirection: 'rtl'\\n\\t\\t})\\n\\t\\t.appendTo('body');\\n\\tvar innerEl = el.children();\\n\\tvar res = innerEl.offset().left > el.offset().left; // is the inner div shifted to accommodate a left scrollbar?\\n\\tel.remove();\\n\\treturn res;\\n}\\n\\n\\n// Retrieves a jQuery element's computed CSS value as a floating-point number.\\n// If the queried value is non-numeric (ex: IE can return \\\"medium\\\" for border width), will just return zero.\\nfunction getCssFloat(el, prop) {\\n\\treturn parseFloat(el.css(prop)) || 0;\\n}\\n\\n\\n/* Mouse / Touch Utilities\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nFC.preventDefault = preventDefault;\\n\\n\\n// Returns a boolean whether this was a left mouse click and no ctrl key (which means right click on Mac)\\nfunction isPrimaryMouseButton(ev) {\\n\\treturn ev.which == 1 && !ev.ctrlKey;\\n}\\n\\n\\nfunction getEvX(ev) {\\n\\tif (ev.pageX !== undefined) {\\n\\t\\treturn ev.pageX;\\n\\t}\\n\\tvar touches = ev.originalEvent.touches;\\n\\tif (touches) {\\n\\t\\treturn touches[0].pageX;\\n\\t}\\n}\\n\\n\\nfunction getEvY(ev) {\\n\\tif (ev.pageY !== undefined) {\\n\\t\\treturn ev.pageY;\\n\\t}\\n\\tvar touches = ev.originalEvent.touches;\\n\\tif (touches) {\\n\\t\\treturn touches[0].pageY;\\n\\t}\\n}\\n\\n\\nfunction getEvIsTouch(ev) {\\n\\treturn /^touch/.test(ev.type);\\n}\\n\\n\\nfunction preventSelection(el) {\\n\\tel.addClass('fc-unselectable')\\n\\t\\t.on('selectstart', preventDefault);\\n}\\n\\n\\n// Stops a mouse/touch event from doing it's native browser action\\nfunction preventDefault(ev) {\\n\\tev.preventDefault();\\n}\\n\\n\\n// attach a handler to get called when ANY scroll action happens on the page.\\n// this was impossible to do with normal on/off because 'scroll' doesn't bubble.\\n// http://stackoverflow.com/a/32954565/96342\\n// returns `true` on success.\\nfunction bindAnyScroll(handler) {\\n\\tif (window.addEventListener) {\\n\\t\\twindow.addEventListener('scroll', handler, true); // useCapture=true\\n\\t\\treturn true;\\n\\t}\\n\\treturn false;\\n}\\n\\n\\n// undoes bindAnyScroll. must pass in the original function.\\n// returns `true` on success.\\nfunction unbindAnyScroll(handler) {\\n\\tif (window.removeEventListener) {\\n\\t\\twindow.removeEventListener('scroll', handler, true); // useCapture=true\\n\\t\\treturn true;\\n\\t}\\n\\treturn false;\\n}\\n\\n\\n/* General Geometry Utils\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nFC.intersectRects = intersectRects;\\n\\n// Returns a new rectangle that is the intersection of the two rectangles. If they don't intersect, returns false\\nfunction intersectRects(rect1, rect2) {\\n\\tvar res = {\\n\\t\\tleft: Math.max(rect1.left, rect2.left),\\n\\t\\tright: Math.min(rect1.right, rect2.right),\\n\\t\\ttop: Math.max(rect1.top, rect2.top),\\n\\t\\tbottom: Math.min(rect1.bottom, rect2.bottom)\\n\\t};\\n\\n\\tif (res.left < res.right && res.top < res.bottom) {\\n\\t\\treturn res;\\n\\t}\\n\\treturn false;\\n}\\n\\n\\n// Returns a new point that will have been moved to reside within the given rectangle\\nfunction constrainPoint(point, rect) {\\n\\treturn {\\n\\t\\tleft: Math.min(Math.max(point.left, rect.left), rect.right),\\n\\t\\ttop: Math.min(Math.max(point.top, rect.top), rect.bottom)\\n\\t};\\n}\\n\\n\\n// Returns a point that is the center of the given rectangle\\nfunction getRectCenter(rect) {\\n\\treturn {\\n\\t\\tleft: (rect.left + rect.right) / 2,\\n\\t\\ttop: (rect.top + rect.bottom) / 2\\n\\t};\\n}\\n\\n\\n// Subtracts point2's coordinates from point1's coordinates, returning a delta\\nfunction diffPoints(point1, point2) {\\n\\treturn {\\n\\t\\tleft: point1.left - point2.left,\\n\\t\\ttop: point1.top - point2.top\\n\\t};\\n}\\n\\n\\n/* Object Ordering by Field\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nFC.parseFieldSpecs = parseFieldSpecs;\\nFC.compareByFieldSpecs = compareByFieldSpecs;\\nFC.compareByFieldSpec = compareByFieldSpec;\\nFC.flexibleCompare = flexibleCompare;\\n\\n\\nfunction parseFieldSpecs(input) {\\n\\tvar specs = [];\\n\\tvar tokens = [];\\n\\tvar i, token;\\n\\n\\tif (typeof input === 'string') {\\n\\t\\ttokens = input.split(/\\\\s*,\\\\s*/);\\n\\t}\\n\\telse if (typeof input === 'function') {\\n\\t\\ttokens = [ input ];\\n\\t}\\n\\telse if ($.isArray(input)) {\\n\\t\\ttokens = input;\\n\\t}\\n\\n\\tfor (i = 0; i < tokens.length; i++) {\\n\\t\\ttoken = tokens[i];\\n\\n\\t\\tif (typeof token === 'string') {\\n\\t\\t\\tspecs.push(\\n\\t\\t\\t\\ttoken.charAt(0) == '-' ?\\n\\t\\t\\t\\t\\t{ field: token.substring(1), order: -1 } :\\n\\t\\t\\t\\t\\t{ field: token, order: 1 }\\n\\t\\t\\t);\\n\\t\\t}\\n\\t\\telse if (typeof token === 'function') {\\n\\t\\t\\tspecs.push({ func: token });\\n\\t\\t}\\n\\t}\\n\\n\\treturn specs;\\n}\\n\\n\\nfunction compareByFieldSpecs(obj1, obj2, fieldSpecs) {\\n\\tvar i;\\n\\tvar cmp;\\n\\n\\tfor (i = 0; i < fieldSpecs.length; i++) {\\n\\t\\tcmp = compareByFieldSpec(obj1, obj2, fieldSpecs[i]);\\n\\t\\tif (cmp) {\\n\\t\\t\\treturn cmp;\\n\\t\\t}\\n\\t}\\n\\n\\treturn 0;\\n}\\n\\n\\nfunction compareByFieldSpec(obj1, obj2, fieldSpec) {\\n\\tif (fieldSpec.func) {\\n\\t\\treturn fieldSpec.func(obj1, obj2);\\n\\t}\\n\\treturn flexibleCompare(obj1[fieldSpec.field], obj2[fieldSpec.field]) *\\n\\t\\t(fieldSpec.order || 1);\\n}\\n\\n\\nfunction flexibleCompare(a, b) {\\n\\tif (!a && !b) {\\n\\t\\treturn 0;\\n\\t}\\n\\tif (b == null) {\\n\\t\\treturn -1;\\n\\t}\\n\\tif (a == null) {\\n\\t\\treturn 1;\\n\\t}\\n\\tif ($.type(a) === 'string' || $.type(b) === 'string') {\\n\\t\\treturn String(a).localeCompare(String(b));\\n\\t}\\n\\treturn a - b;\\n}\\n\\n\\n/* FullCalendar-specific Misc Utilities\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n// Computes the intersection of the two ranges. Will return fresh date clones in a range.\\n// Returns undefined if no intersection.\\n// Expects all dates to be normalized to the same timezone beforehand.\\n// TODO: move to date section?\\nfunction intersectRanges(subjectRange, constraintRange) {\\n\\tvar subjectStart = subjectRange.start;\\n\\tvar subjectEnd = subjectRange.end;\\n\\tvar constraintStart = constraintRange.start;\\n\\tvar constraintEnd = constraintRange.end;\\n\\tvar segStart, segEnd;\\n\\tvar isStart, isEnd;\\n\\n\\tif (subjectEnd > constraintStart && subjectStart < constraintEnd) { // in bounds at all?\\n\\n\\t\\tif (subjectStart >= constraintStart) {\\n\\t\\t\\tsegStart = subjectStart.clone();\\n\\t\\t\\tisStart = true;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tsegStart = constraintStart.clone();\\n\\t\\t\\tisStart =  false;\\n\\t\\t}\\n\\n\\t\\tif (subjectEnd <= constraintEnd) {\\n\\t\\t\\tsegEnd = subjectEnd.clone();\\n\\t\\t\\tisEnd = true;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tsegEnd = constraintEnd.clone();\\n\\t\\t\\tisEnd = false;\\n\\t\\t}\\n\\n\\t\\treturn {\\n\\t\\t\\tstart: segStart,\\n\\t\\t\\tend: segEnd,\\n\\t\\t\\tisStart: isStart,\\n\\t\\t\\tisEnd: isEnd\\n\\t\\t};\\n\\t}\\n}\\n\\n\\n/* Date Utilities\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nFC.computeIntervalUnit = computeIntervalUnit;\\nFC.divideRangeByDuration = divideRangeByDuration;\\nFC.divideDurationByDuration = divideDurationByDuration;\\nFC.multiplyDuration = multiplyDuration;\\nFC.durationHasTime = durationHasTime;\\n\\nvar dayIDs = [ 'sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat' ];\\nvar intervalUnits = [ 'year', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond' ];\\n\\n\\n// Diffs the two moments into a Duration where full-days are recorded first, then the remaining time.\\n// Moments will have their timezones normalized.\\nfunction diffDayTime(a, b) {\\n\\treturn moment.duration({\\n\\t\\tdays: a.clone().stripTime().diff(b.clone().stripTime(), 'days'),\\n\\t\\tms: a.time() - b.time() // time-of-day from day start. disregards timezone\\n\\t});\\n}\\n\\n\\n// Diffs the two moments via their start-of-day (regardless of timezone). Produces whole-day durations.\\nfunction diffDay(a, b) {\\n\\treturn moment.duration({\\n\\t\\tdays: a.clone().stripTime().diff(b.clone().stripTime(), 'days')\\n\\t});\\n}\\n\\n\\n// Diffs two moments, producing a duration, made of a whole-unit-increment of the given unit. Uses rounding.\\nfunction diffByUnit(a, b, unit) {\\n\\treturn moment.duration(\\n\\t\\tMath.round(a.diff(b, unit, true)), // returnFloat=true\\n\\t\\tunit\\n\\t);\\n}\\n\\n\\n// Computes the unit name of the largest whole-unit period of time.\\n// For example, 48 hours will be \\\"days\\\" whereas 49 hours will be \\\"hours\\\".\\n// Accepts start/end, a range object, or an original duration object.\\nfunction computeIntervalUnit(start, end) {\\n\\tvar i, unit;\\n\\tvar val;\\n\\n\\tfor (i = 0; i < intervalUnits.length; i++) {\\n\\t\\tunit = intervalUnits[i];\\n\\t\\tval = computeRangeAs(unit, start, end);\\n\\n\\t\\tif (val >= 1 && isInt(val)) {\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\n\\treturn unit; // will be \\\"milliseconds\\\" if nothing else matches\\n}\\n\\n\\n// Computes the number of units (like \\\"hours\\\") in the given range.\\n// Range can be a {start,end} object, separate start/end args, or a Duration.\\n// Results are based on Moment's .as() and .diff() methods, so results can depend on internal handling\\n// of month-diffing logic (which tends to vary from version to version).\\nfunction computeRangeAs(unit, start, end) {\\n\\n\\tif (end != null) { // given start, end\\n\\t\\treturn end.diff(start, unit, true);\\n\\t}\\n\\telse if (moment.isDuration(start)) { // given duration\\n\\t\\treturn start.as(unit);\\n\\t}\\n\\telse { // given { start, end } range object\\n\\t\\treturn start.end.diff(start.start, unit, true);\\n\\t}\\n}\\n\\n\\n// Intelligently divides a range (specified by a start/end params) by a duration\\nfunction divideRangeByDuration(start, end, dur) {\\n\\tvar months;\\n\\n\\tif (durationHasTime(dur)) {\\n\\t\\treturn (end - start) / dur;\\n\\t}\\n\\tmonths = dur.asMonths();\\n\\tif (Math.abs(months) >= 1 && isInt(months)) {\\n\\t\\treturn end.diff(start, 'months', true) / months;\\n\\t}\\n\\treturn end.diff(start, 'days', true) / dur.asDays();\\n}\\n\\n\\n// Intelligently divides one duration by another\\nfunction divideDurationByDuration(dur1, dur2) {\\n\\tvar months1, months2;\\n\\n\\tif (durationHasTime(dur1) || durationHasTime(dur2)) {\\n\\t\\treturn dur1 / dur2;\\n\\t}\\n\\tmonths1 = dur1.asMonths();\\n\\tmonths2 = dur2.asMonths();\\n\\tif (\\n\\t\\tMath.abs(months1) >= 1 && isInt(months1) &&\\n\\t\\tMath.abs(months2) >= 1 && isInt(months2)\\n\\t) {\\n\\t\\treturn months1 / months2;\\n\\t}\\n\\treturn dur1.asDays() / dur2.asDays();\\n}\\n\\n\\n// Intelligently multiplies a duration by a number\\nfunction multiplyDuration(dur, n) {\\n\\tvar months;\\n\\n\\tif (durationHasTime(dur)) {\\n\\t\\treturn moment.duration(dur * n);\\n\\t}\\n\\tmonths = dur.asMonths();\\n\\tif (Math.abs(months) >= 1 && isInt(months)) {\\n\\t\\treturn moment.duration({ months: months * n });\\n\\t}\\n\\treturn moment.duration({ days: dur.asDays() * n });\\n}\\n\\n\\n// Returns a boolean about whether the given duration has any time parts (hours/minutes/seconds/ms)\\nfunction durationHasTime(dur) {\\n\\treturn Boolean(dur.hours() || dur.minutes() || dur.seconds() || dur.milliseconds());\\n}\\n\\n\\nfunction isNativeDate(input) {\\n\\treturn  Object.prototype.toString.call(input) === '[object Date]' || input instanceof Date;\\n}\\n\\n\\n// Returns a boolean about whether the given input is a time string, like \\\"06:40:00\\\" or \\\"06:00\\\"\\nfunction isTimeString(str) {\\n\\treturn /^\\\\d+\\\\:\\\\d+(?:\\\\:\\\\d+\\\\.?(?:\\\\d{3})?)?$/.test(str);\\n}\\n\\n\\n/* Logging and Debug\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nFC.log = function() {\\n\\tvar console = window.console;\\n\\n\\tif (console && console.log) {\\n\\t\\treturn console.log.apply(console, arguments);\\n\\t}\\n};\\n\\nFC.warn = function() {\\n\\tvar console = window.console;\\n\\n\\tif (console && console.warn) {\\n\\t\\treturn console.warn.apply(console, arguments);\\n\\t}\\n\\telse {\\n\\t\\treturn FC.log.apply(FC, arguments);\\n\\t}\\n};\\n\\n\\n/* General Utilities\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nvar hasOwnPropMethod = {}.hasOwnProperty;\\n\\n\\n// Merges an array of objects into a single object.\\n// The second argument allows for an array of property names who's object values will be merged together.\\nfunction mergeProps(propObjs, complexProps) {\\n\\tvar dest = {};\\n\\tvar i, name;\\n\\tvar complexObjs;\\n\\tvar j, val;\\n\\tvar props;\\n\\n\\tif (complexProps) {\\n\\t\\tfor (i = 0; i < complexProps.length; i++) {\\n\\t\\t\\tname = complexProps[i];\\n\\t\\t\\tcomplexObjs = [];\\n\\n\\t\\t\\t// collect the trailing object values, stopping when a non-object is discovered\\n\\t\\t\\tfor (j = propObjs.length - 1; j >= 0; j--) {\\n\\t\\t\\t\\tval = propObjs[j][name];\\n\\n\\t\\t\\t\\tif (typeof val === 'object') {\\n\\t\\t\\t\\t\\tcomplexObjs.unshift(val);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse if (val !== undefined) {\\n\\t\\t\\t\\t\\tdest[name] = val; // if there were no objects, this value will be used\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// if the trailing values were objects, use the merged value\\n\\t\\t\\tif (complexObjs.length) {\\n\\t\\t\\t\\tdest[name] = mergeProps(complexObjs);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// copy values into the destination, going from last to first\\n\\tfor (i = propObjs.length - 1; i >= 0; i--) {\\n\\t\\tprops = propObjs[i];\\n\\n\\t\\tfor (name in props) {\\n\\t\\t\\tif (!(name in dest)) { // if already assigned by previous props or complex props, don't reassign\\n\\t\\t\\t\\tdest[name] = props[name];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn dest;\\n}\\n\\n\\n// Create an object that has the given prototype. Just like Object.create\\nfunction createObject(proto) {\\n\\tvar f = function() {};\\n\\tf.prototype = proto;\\n\\treturn new f();\\n}\\nFC.createObject = createObject;\\n\\n\\nfunction copyOwnProps(src, dest) {\\n\\tfor (var name in src) {\\n\\t\\tif (hasOwnProp(src, name)) {\\n\\t\\t\\tdest[name] = src[name];\\n\\t\\t}\\n\\t}\\n}\\n\\n\\nfunction hasOwnProp(obj, name) {\\n\\treturn hasOwnPropMethod.call(obj, name);\\n}\\n\\n\\n// Is the given value a non-object non-function value?\\nfunction isAtomic(val) {\\n\\treturn /undefined|null|boolean|number|string/.test($.type(val));\\n}\\n\\n\\nfunction applyAll(functions, thisObj, args) {\\n\\tif ($.isFunction(functions)) {\\n\\t\\tfunctions = [ functions ];\\n\\t}\\n\\tif (functions) {\\n\\t\\tvar i;\\n\\t\\tvar ret;\\n\\t\\tfor (i=0; i<functions.length; i++) {\\n\\t\\t\\tret = functions[i].apply(thisObj, args) || ret;\\n\\t\\t}\\n\\t\\treturn ret;\\n\\t}\\n}\\n\\n\\nfunction firstDefined() {\\n\\tfor (var i=0; i<arguments.length; i++) {\\n\\t\\tif (arguments[i] !== undefined) {\\n\\t\\t\\treturn arguments[i];\\n\\t\\t}\\n\\t}\\n}\\n\\n\\nfunction htmlEscape(s) {\\n\\treturn (s + '').replace(/&/g, '&amp;')\\n\\t\\t.replace(/</g, '&lt;')\\n\\t\\t.replace(/>/g, '&gt;')\\n\\t\\t.replace(/'/g, '&#039;')\\n\\t\\t.replace(/\\\"/g, '&quot;')\\n\\t\\t.replace(/\\\\n/g, '<br />');\\n}\\n\\n\\nfunction stripHtmlEntities(text) {\\n\\treturn text.replace(/&.*?;/g, '');\\n}\\n\\n\\n// Given a hash of CSS properties, returns a string of CSS.\\n// Uses property names as-is (no camel-case conversion). Will not make statements for null/undefined values.\\nfunction cssToStr(cssProps) {\\n\\tvar statements = [];\\n\\n\\t$.each(cssProps, function(name, val) {\\n\\t\\tif (val != null) {\\n\\t\\t\\tstatements.push(name + ':' + val);\\n\\t\\t}\\n\\t});\\n\\n\\treturn statements.join(';');\\n}\\n\\n\\n// Given an object hash of HTML attribute names to values,\\n// generates a string that can be injected between < > in HTML\\nfunction attrsToStr(attrs) {\\n\\tvar parts = [];\\n\\n\\t$.each(attrs, function(name, val) {\\n\\t\\tif (val != null) {\\n\\t\\t\\tparts.push(name + '=\\\"' + htmlEscape(val) + '\\\"');\\n\\t\\t}\\n\\t});\\n\\n\\treturn parts.join(' ');\\n}\\n\\n\\nfunction capitaliseFirstLetter(str) {\\n\\treturn str.charAt(0).toUpperCase() + str.slice(1);\\n}\\n\\n\\nfunction compareNumbers(a, b) { // for .sort()\\n\\treturn a - b;\\n}\\n\\n\\nfunction isInt(n) {\\n\\treturn n % 1 === 0;\\n}\\n\\n\\n// Returns a method bound to the given object context.\\n// Just like one of the jQuery.proxy signatures, but without the undesired behavior of treating the same method with\\n// different contexts as identical when binding/unbinding events.\\nfunction proxy(obj, methodName) {\\n\\tvar method = obj[methodName];\\n\\n\\treturn function() {\\n\\t\\treturn method.apply(obj, arguments);\\n\\t};\\n}\\n\\n\\n// Returns a function, that, as long as it continues to be invoked, will not\\n// be triggered. The function will be called after it stops being called for\\n// N milliseconds. If `immediate` is passed, trigger the function on the\\n// leading edge, instead of the trailing.\\n// https://github.com/jashkenas/underscore/blob/1.6.0/underscore.js#L714\\nfunction debounce(func, wait, immediate) {\\n\\tvar timeout, args, context, timestamp, result;\\n\\n\\tvar later = function() {\\n\\t\\tvar last = +new Date() - timestamp;\\n\\t\\tif (last < wait) {\\n\\t\\t\\ttimeout = setTimeout(later, wait - last);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\ttimeout = null;\\n\\t\\t\\tif (!immediate) {\\n\\t\\t\\t\\tresult = func.apply(context, args);\\n\\t\\t\\t\\tcontext = args = null;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\treturn function() {\\n\\t\\tcontext = this;\\n\\t\\targs = arguments;\\n\\t\\ttimestamp = +new Date();\\n\\t\\tvar callNow = immediate && !timeout;\\n\\t\\tif (!timeout) {\\n\\t\\t\\ttimeout = setTimeout(later, wait);\\n\\t\\t}\\n\\t\\tif (callNow) {\\n\\t\\t\\tresult = func.apply(context, args);\\n\\t\\t\\tcontext = args = null;\\n\\t\\t}\\n\\t\\treturn result;\\n\\t};\\n}\\n\\n;;\\n\\n/*\\nGENERAL NOTE on moments throughout the *entire rest* of the codebase:\\nAll moments are assumed to be ambiguously-zoned unless otherwise noted,\\nwith the NOTABLE EXCEOPTION of start/end dates that live on *Event Objects*.\\nAmbiguously-TIMED moments are assumed to be ambiguously-zoned by nature.\\n*/\\n\\nvar ambigDateOfMonthRegex = /^\\\\s*\\\\d{4}-\\\\d\\\\d$/;\\nvar ambigTimeOrZoneRegex =\\n\\t/^\\\\s*\\\\d{4}-(?:(\\\\d\\\\d-\\\\d\\\\d)|(W\\\\d\\\\d$)|(W\\\\d\\\\d-\\\\d)|(\\\\d\\\\d\\\\d))((T| )(\\\\d\\\\d(:\\\\d\\\\d(:\\\\d\\\\d(\\\\.\\\\d+)?)?)?)?)?$/;\\nvar newMomentProto = moment.fn; // where we will attach our new methods\\nvar oldMomentProto = $.extend({}, newMomentProto); // copy of original moment methods\\n\\n// tell momentjs to transfer these properties upon clone\\nvar momentProperties = moment.momentProperties;\\nmomentProperties.push('_fullCalendar');\\nmomentProperties.push('_ambigTime');\\nmomentProperties.push('_ambigZone');\\n\\n\\n// Creating\\n// -------------------------------------------------------------------------------------------------\\n\\n// Creates a new moment, similar to the vanilla moment(...) constructor, but with\\n// extra features (ambiguous time, enhanced formatting). When given an existing moment,\\n// it will function as a clone (and retain the zone of the moment). Anything else will\\n// result in a moment in the local zone.\\nFC.moment = function() {\\n\\treturn makeMoment(arguments);\\n};\\n\\n// Sames as FC.moment, but forces the resulting moment to be in the UTC timezone.\\nFC.moment.utc = function() {\\n\\tvar mom = makeMoment(arguments, true);\\n\\n\\t// Force it into UTC because makeMoment doesn't guarantee it\\n\\t// (if given a pre-existing moment for example)\\n\\tif (mom.hasTime()) { // don't give ambiguously-timed moments a UTC zone\\n\\t\\tmom.utc();\\n\\t}\\n\\n\\treturn mom;\\n};\\n\\n// Same as FC.moment, but when given an ISO8601 string, the timezone offset is preserved.\\n// ISO8601 strings with no timezone offset will become ambiguously zoned.\\nFC.moment.parseZone = function() {\\n\\treturn makeMoment(arguments, true, true);\\n};\\n\\n// Builds an enhanced moment from args. When given an existing moment, it clones. When given a\\n// native Date, or called with no arguments (the current time), the resulting moment will be local.\\n// Anything else needs to be \\\"parsed\\\" (a string or an array), and will be affected by:\\n//    parseAsUTC - if there is no zone information, should we parse the input in UTC?\\n//    parseZone - if there is zone information, should we force the zone of the moment?\\nfunction makeMoment(args, parseAsUTC, parseZone) {\\n\\tvar input = args[0];\\n\\tvar isSingleString = args.length == 1 && typeof input === 'string';\\n\\tvar isAmbigTime;\\n\\tvar isAmbigZone;\\n\\tvar ambigMatch;\\n\\tvar mom;\\n\\n\\tif (moment.isMoment(input) || isNativeDate(input) || input === undefined) {\\n\\t\\tmom = moment.apply(null, args);\\n\\t}\\n\\telse { // \\\"parsing\\\" is required\\n\\t\\tisAmbigTime = false;\\n\\t\\tisAmbigZone = false;\\n\\n\\t\\tif (isSingleString) {\\n\\t\\t\\tif (ambigDateOfMonthRegex.test(input)) {\\n\\t\\t\\t\\t// accept strings like '2014-05', but convert to the first of the month\\n\\t\\t\\t\\tinput += '-01';\\n\\t\\t\\t\\targs = [ input ]; // for when we pass it on to moment's constructor\\n\\t\\t\\t\\tisAmbigTime = true;\\n\\t\\t\\t\\tisAmbigZone = true;\\n\\t\\t\\t}\\n\\t\\t\\telse if ((ambigMatch = ambigTimeOrZoneRegex.exec(input))) {\\n\\t\\t\\t\\tisAmbigTime = !ambigMatch[5]; // no time part?\\n\\t\\t\\t\\tisAmbigZone = true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse if ($.isArray(input)) {\\n\\t\\t\\t// arrays have no timezone information, so assume ambiguous zone\\n\\t\\t\\tisAmbigZone = true;\\n\\t\\t}\\n\\t\\t// otherwise, probably a string with a format\\n\\n\\t\\tif (parseAsUTC || isAmbigTime) {\\n\\t\\t\\tmom = moment.utc.apply(moment, args);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tmom = moment.apply(null, args);\\n\\t\\t}\\n\\n\\t\\tif (isAmbigTime) {\\n\\t\\t\\tmom._ambigTime = true;\\n\\t\\t\\tmom._ambigZone = true; // ambiguous time always means ambiguous zone\\n\\t\\t}\\n\\t\\telse if (parseZone) { // let's record the inputted zone somehow\\n\\t\\t\\tif (isAmbigZone) {\\n\\t\\t\\t\\tmom._ambigZone = true;\\n\\t\\t\\t}\\n\\t\\t\\telse if (isSingleString) {\\n\\t\\t\\t\\tmom.utcOffset(input); // if not a valid zone, will assign UTC\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tmom._fullCalendar = true; // flag for extended functionality\\n\\n\\treturn mom;\\n}\\n\\n\\n// Week Number\\n// -------------------------------------------------------------------------------------------------\\n\\n\\n// Returns the week number, considering the locale's custom week number calcuation\\n// `weeks` is an alias for `week`\\nnewMomentProto.week = newMomentProto.weeks = function(input) {\\n\\tvar weekCalc = this._locale._fullCalendar_weekCalc;\\n\\n\\tif (input == null && typeof weekCalc === 'function') { // custom function only works for getter\\n\\t\\treturn weekCalc(this);\\n\\t}\\n\\telse if (weekCalc === 'ISO') {\\n\\t\\treturn oldMomentProto.isoWeek.apply(this, arguments); // ISO getter/setter\\n\\t}\\n\\n\\treturn oldMomentProto.week.apply(this, arguments); // local getter/setter\\n};\\n\\n\\n// Time-of-day\\n// -------------------------------------------------------------------------------------------------\\n\\n// GETTER\\n// Returns a Duration with the hours/minutes/seconds/ms values of the moment.\\n// If the moment has an ambiguous time, a duration of 00:00 will be returned.\\n//\\n// SETTER\\n// You can supply a Duration, a Moment, or a Duration-like argument.\\n// When setting the time, and the moment has an ambiguous time, it then becomes unambiguous.\\nnewMomentProto.time = function(time) {\\n\\n\\t// Fallback to the original method (if there is one) if this moment wasn't created via FullCalendar.\\n\\t// `time` is a generic enough method name where this precaution is necessary to avoid collisions w/ other plugins.\\n\\tif (!this._fullCalendar) {\\n\\t\\treturn oldMomentProto.time.apply(this, arguments);\\n\\t}\\n\\n\\tif (time == null) { // getter\\n\\t\\treturn moment.duration({\\n\\t\\t\\thours: this.hours(),\\n\\t\\t\\tminutes: this.minutes(),\\n\\t\\t\\tseconds: this.seconds(),\\n\\t\\t\\tmilliseconds: this.milliseconds()\\n\\t\\t});\\n\\t}\\n\\telse { // setter\\n\\n\\t\\tthis._ambigTime = false; // mark that the moment now has a time\\n\\n\\t\\tif (!moment.isDuration(time) && !moment.isMoment(time)) {\\n\\t\\t\\ttime = moment.duration(time);\\n\\t\\t}\\n\\n\\t\\t// The day value should cause overflow (so 24 hours becomes 00:00:00 of next day).\\n\\t\\t// Only for Duration times, not Moment times.\\n\\t\\tvar dayHours = 0;\\n\\t\\tif (moment.isDuration(time)) {\\n\\t\\t\\tdayHours = Math.floor(time.asDays()) * 24;\\n\\t\\t}\\n\\n\\t\\t// We need to set the individual fields.\\n\\t\\t// Can't use startOf('day') then add duration. In case of DST at start of day.\\n\\t\\treturn this.hours(dayHours + time.hours())\\n\\t\\t\\t.minutes(time.minutes())\\n\\t\\t\\t.seconds(time.seconds())\\n\\t\\t\\t.milliseconds(time.milliseconds());\\n\\t}\\n};\\n\\n// Converts the moment to UTC, stripping out its time-of-day and timezone offset,\\n// but preserving its YMD. A moment with a stripped time will display no time\\n// nor timezone offset when .format() is called.\\nnewMomentProto.stripTime = function() {\\n\\n\\tif (!this._ambigTime) {\\n\\n\\t\\tthis.utc(true); // keepLocalTime=true (for keeping *date* value)\\n\\n\\t\\t// set time to zero\\n\\t\\tthis.set({\\n\\t\\t\\thours: 0,\\n\\t\\t\\tminutes: 0,\\n\\t\\t\\tseconds: 0,\\n\\t\\t\\tms: 0\\n\\t\\t});\\n\\n\\t\\t// Mark the time as ambiguous. This needs to happen after the .utc() call, which might call .utcOffset(),\\n\\t\\t// which clears all ambig flags.\\n\\t\\tthis._ambigTime = true;\\n\\t\\tthis._ambigZone = true; // if ambiguous time, also ambiguous timezone offset\\n\\t}\\n\\n\\treturn this; // for chaining\\n};\\n\\n// Returns if the moment has a non-ambiguous time (boolean)\\nnewMomentProto.hasTime = function() {\\n\\treturn !this._ambigTime;\\n};\\n\\n\\n// Timezone\\n// -------------------------------------------------------------------------------------------------\\n\\n// Converts the moment to UTC, stripping out its timezone offset, but preserving its\\n// YMD and time-of-day. A moment with a stripped timezone offset will display no\\n// timezone offset when .format() is called.\\nnewMomentProto.stripZone = function() {\\n\\tvar wasAmbigTime;\\n\\n\\tif (!this._ambigZone) {\\n\\n\\t\\twasAmbigTime = this._ambigTime;\\n\\n\\t\\tthis.utc(true); // keepLocalTime=true (for keeping date and time values)\\n\\n\\t\\t// the above call to .utc()/.utcOffset() unfortunately might clear the ambig flags, so restore\\n\\t\\tthis._ambigTime = wasAmbigTime || false;\\n\\n\\t\\t// Mark the zone as ambiguous. This needs to happen after the .utc() call, which might call .utcOffset(),\\n\\t\\t// which clears the ambig flags.\\n\\t\\tthis._ambigZone = true;\\n\\t}\\n\\n\\treturn this; // for chaining\\n};\\n\\n// Returns of the moment has a non-ambiguous timezone offset (boolean)\\nnewMomentProto.hasZone = function() {\\n\\treturn !this._ambigZone;\\n};\\n\\n\\n// implicitly marks a zone\\nnewMomentProto.local = function(keepLocalTime) {\\n\\n\\t// for when converting from ambiguously-zoned to local,\\n\\t// keep the time values when converting from UTC -> local\\n\\toldMomentProto.local.call(this, this._ambigZone || keepLocalTime);\\n\\n\\t// ensure non-ambiguous\\n\\t// this probably already happened via local() -> utcOffset(), but don't rely on Moment's internals\\n\\tthis._ambigTime = false;\\n\\tthis._ambigZone = false;\\n\\n\\treturn this; // for chaining\\n};\\n\\n\\n// implicitly marks a zone\\nnewMomentProto.utc = function(keepLocalTime) {\\n\\n\\toldMomentProto.utc.call(this, keepLocalTime);\\n\\n\\t// ensure non-ambiguous\\n\\t// this probably already happened via utc() -> utcOffset(), but don't rely on Moment's internals\\n\\tthis._ambigTime = false;\\n\\tthis._ambigZone = false;\\n\\n\\treturn this;\\n};\\n\\n\\n// implicitly marks a zone (will probably get called upon .utc() and .local())\\nnewMomentProto.utcOffset = function(tzo) {\\n\\n\\tif (tzo != null) { // setter\\n\\t\\t// these assignments needs to happen before the original zone method is called.\\n\\t\\t// I forget why, something to do with a browser crash.\\n\\t\\tthis._ambigTime = false;\\n\\t\\tthis._ambigZone = false;\\n\\t}\\n\\n\\treturn oldMomentProto.utcOffset.apply(this, arguments);\\n};\\n\\n\\n// Formatting\\n// -------------------------------------------------------------------------------------------------\\n\\nnewMomentProto.format = function() {\\n\\tif (this._fullCalendar && arguments[0]) { // an enhanced moment? and a format string provided?\\n\\t\\treturn formatDate(this, arguments[0]); // our extended formatting\\n\\t}\\n\\tif (this._ambigTime) {\\n\\t\\treturn oldMomentFormat(this, 'YYYY-MM-DD');\\n\\t}\\n\\tif (this._ambigZone) {\\n\\t\\treturn oldMomentFormat(this, 'YYYY-MM-DD[T]HH:mm:ss');\\n\\t}\\n\\treturn oldMomentProto.format.apply(this, arguments);\\n};\\n\\nnewMomentProto.toISOString = function() {\\n\\tif (this._ambigTime) {\\n\\t\\treturn oldMomentFormat(this, 'YYYY-MM-DD');\\n\\t}\\n\\tif (this._ambigZone) {\\n\\t\\treturn oldMomentFormat(this, 'YYYY-MM-DD[T]HH:mm:ss');\\n\\t}\\n\\treturn oldMomentProto.toISOString.apply(this, arguments);\\n};\\n\\n;;\\n\\n// Single Date Formatting\\n// -------------------------------------------------------------------------------------------------\\n\\n\\n// call this if you want Moment's original format method to be used\\nfunction oldMomentFormat(mom, formatStr) {\\n\\treturn oldMomentProto.format.call(mom, formatStr); // oldMomentProto defined in moment-ext.js\\n}\\n\\n\\n// Formats `date` with a Moment formatting string, but allow our non-zero areas and\\n// additional token.\\nfunction formatDate(date, formatStr) {\\n\\treturn formatDateWithChunks(date, getFormatStringChunks(formatStr));\\n}\\n\\n\\nfunction formatDateWithChunks(date, chunks) {\\n\\tvar s = '';\\n\\tvar i;\\n\\n\\tfor (i=0; i<chunks.length; i++) {\\n\\t\\ts += formatDateWithChunk(date, chunks[i]);\\n\\t}\\n\\n\\treturn s;\\n}\\n\\n\\n// addition formatting tokens we want recognized\\nvar tokenOverrides = {\\n\\tt: function(date) { // \\\"a\\\" or \\\"p\\\"\\n\\t\\treturn oldMomentFormat(date, 'a').charAt(0);\\n\\t},\\n\\tT: function(date) { // \\\"A\\\" or \\\"P\\\"\\n\\t\\treturn oldMomentFormat(date, 'A').charAt(0);\\n\\t}\\n};\\n\\n\\nfunction formatDateWithChunk(date, chunk) {\\n\\tvar token;\\n\\tvar maybeStr;\\n\\n\\tif (typeof chunk === 'string') { // a literal string\\n\\t\\treturn chunk;\\n\\t}\\n\\telse if ((token = chunk.token)) { // a token, like \\\"YYYY\\\"\\n\\t\\tif (tokenOverrides[token]) {\\n\\t\\t\\treturn tokenOverrides[token](date); // use our custom token\\n\\t\\t}\\n\\t\\treturn oldMomentFormat(date, token);\\n\\t}\\n\\telse if (chunk.maybe) { // a grouping of other chunks that must be non-zero\\n\\t\\tmaybeStr = formatDateWithChunks(date, chunk.maybe);\\n\\t\\tif (maybeStr.match(/[1-9]/)) {\\n\\t\\t\\treturn maybeStr;\\n\\t\\t}\\n\\t}\\n\\n\\treturn '';\\n}\\n\\n\\n// Date Range Formatting\\n// -------------------------------------------------------------------------------------------------\\n// TODO: make it work with timezone offset\\n\\n// Using a formatting string meant for a single date, generate a range string, like\\n// \\\"Sep 2 - 9 2013\\\", that intelligently inserts a separator where the dates differ.\\n// If the dates are the same as far as the format string is concerned, just return a single\\n// rendering of one date, without any separator.\\nfunction formatRange(date1, date2, formatStr, separator, isRTL) {\\n\\tvar localeData;\\n\\n\\tdate1 = FC.moment.parseZone(date1);\\n\\tdate2 = FC.moment.parseZone(date2);\\n\\n\\tlocaleData = date1.localeData();\\n\\n\\t// Expand localized format strings, like \\\"LL\\\" -> \\\"MMMM D YYYY\\\"\\n\\tformatStr = localeData.longDateFormat(formatStr) || formatStr;\\n\\t// BTW, this is not important for `formatDate` because it is impossible to put custom tokens\\n\\t// or non-zero areas in Moment's localized format strings.\\n\\n\\tseparator = separator || ' - ';\\n\\n\\treturn formatRangeWithChunks(\\n\\t\\tdate1,\\n\\t\\tdate2,\\n\\t\\tgetFormatStringChunks(formatStr),\\n\\t\\tseparator,\\n\\t\\tisRTL\\n\\t);\\n}\\nFC.formatRange = formatRange; // expose\\n\\n\\nfunction formatRangeWithChunks(date1, date2, chunks, separator, isRTL) {\\n\\tvar unzonedDate1 = date1.clone().stripZone(); // for formatSimilarChunk\\n\\tvar unzonedDate2 = date2.clone().stripZone(); // \\\"\\n\\tvar chunkStr; // the rendering of the chunk\\n\\tvar leftI;\\n\\tvar leftStr = '';\\n\\tvar rightI;\\n\\tvar rightStr = '';\\n\\tvar middleI;\\n\\tvar middleStr1 = '';\\n\\tvar middleStr2 = '';\\n\\tvar middleStr = '';\\n\\n\\t// Start at the leftmost side of the formatting string and continue until you hit a token\\n\\t// that is not the same between dates.\\n\\tfor (leftI=0; leftI<chunks.length; leftI++) {\\n\\t\\tchunkStr = formatSimilarChunk(date1, date2, unzonedDate1, unzonedDate2, chunks[leftI]);\\n\\t\\tif (chunkStr === false) {\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t\\tleftStr += chunkStr;\\n\\t}\\n\\n\\t// Similarly, start at the rightmost side of the formatting string and move left\\n\\tfor (rightI=chunks.length-1; rightI>leftI; rightI--) {\\n\\t\\tchunkStr = formatSimilarChunk(date1, date2, unzonedDate1, unzonedDate2,  chunks[rightI]);\\n\\t\\tif (chunkStr === false) {\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t\\trightStr = chunkStr + rightStr;\\n\\t}\\n\\n\\t// The area in the middle is different for both of the dates.\\n\\t// Collect them distinctly so we can jam them together later.\\n\\tfor (middleI=leftI; middleI<=rightI; middleI++) {\\n\\t\\tmiddleStr1 += formatDateWithChunk(date1, chunks[middleI]);\\n\\t\\tmiddleStr2 += formatDateWithChunk(date2, chunks[middleI]);\\n\\t}\\n\\n\\tif (middleStr1 || middleStr2) {\\n\\t\\tif (isRTL) {\\n\\t\\t\\tmiddleStr = middleStr2 + separator + middleStr1;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tmiddleStr = middleStr1 + separator + middleStr2;\\n\\t\\t}\\n\\t}\\n\\n\\treturn leftStr + middleStr + rightStr;\\n}\\n\\n\\nvar similarUnitMap = {\\n\\tY: 'year',\\n\\tM: 'month',\\n\\tD: 'day', // day of month\\n\\td: 'day', // day of week\\n\\t// prevents a separator between anything time-related...\\n\\tA: 'second', // AM/PM\\n\\ta: 'second', // am/pm\\n\\tT: 'second', // A/P\\n\\tt: 'second', // a/p\\n\\tH: 'second', // hour (24)\\n\\th: 'second', // hour (12)\\n\\tm: 'second', // minute\\n\\ts: 'second' // second\\n};\\n// TODO: week maybe?\\n\\n\\n// Given a formatting chunk, and given that both dates are similar in the regard the\\n// formatting chunk is concerned, format date1 against `chunk`. Otherwise, return `false`.\\nfunction formatSimilarChunk(date1, date2, unzonedDate1, unzonedDate2, chunk) {\\n\\tvar token;\\n\\tvar unit;\\n\\n\\tif (typeof chunk === 'string') { // a literal string\\n\\t\\treturn chunk;\\n\\t}\\n\\telse if ((token = chunk.token)) {\\n\\t\\tunit = similarUnitMap[token.charAt(0)];\\n\\n\\t\\t// are the dates the same for this unit of measurement?\\n\\t\\t// use the unzoned dates for this calculation because unreliable when near DST (bug #2396)\\n\\t\\tif (unit && unzonedDate1.isSame(unzonedDate2, unit)) {\\n\\t\\t\\treturn oldMomentFormat(date1, token); // would be the same if we used `date2`\\n\\t\\t\\t// BTW, don't support custom tokens\\n\\t\\t}\\n\\t}\\n\\n\\treturn false; // the chunk is NOT the same for the two dates\\n\\t// BTW, don't support splitting on non-zero areas\\n}\\n\\n\\n// Chunking Utils\\n// -------------------------------------------------------------------------------------------------\\n\\n\\nvar formatStringChunkCache = {};\\n\\n\\nfunction getFormatStringChunks(formatStr) {\\n\\tif (formatStr in formatStringChunkCache) {\\n\\t\\treturn formatStringChunkCache[formatStr];\\n\\t}\\n\\treturn (formatStringChunkCache[formatStr] = chunkFormatString(formatStr));\\n}\\n\\n\\n// Break the formatting string into an array of chunks\\nfunction chunkFormatString(formatStr) {\\n\\tvar chunks = [];\\n\\tvar chunker = /\\\\[([^\\\\]]*)\\\\]|\\\\(([^\\\\)]*)\\\\)|(LTS|LT|(\\\\w)\\\\4*o?)|([^\\\\w\\\\[\\\\(]+)/g; // TODO: more descrimination\\n\\tvar match;\\n\\n\\twhile ((match = chunker.exec(formatStr))) {\\n\\t\\tif (match[1]) { // a literal string inside [ ... ]\\n\\t\\t\\tchunks.push(match[1]);\\n\\t\\t}\\n\\t\\telse if (match[2]) { // non-zero formatting inside ( ... )\\n\\t\\t\\tchunks.push({ maybe: chunkFormatString(match[2]) });\\n\\t\\t}\\n\\t\\telse if (match[3]) { // a formatting token\\n\\t\\t\\tchunks.push({ token: match[3] });\\n\\t\\t}\\n\\t\\telse if (match[5]) { // an unenclosed literal string\\n\\t\\t\\tchunks.push(match[5]);\\n\\t\\t}\\n\\t}\\n\\n\\treturn chunks;\\n}\\n\\n\\n// Misc Utils\\n// -------------------------------------------------------------------------------------------------\\n\\n\\n// granularity only goes up until day\\n// TODO: unify with similarUnitMap\\nvar tokenGranularities = {\\n\\tY: { value: 1, unit: 'year' },\\n\\tM: { value: 2, unit: 'month' },\\n\\tW: { value: 3, unit: 'week' },\\n\\tw: { value: 3, unit: 'week' },\\n\\tD: { value: 4, unit: 'day' }, // day of month\\n\\td: { value: 4, unit: 'day' } // day of week\\n};\\n\\n// returns a unit string, either 'year', 'month', 'day', or null\\n// for the most granular formatting token in the string.\\nFC.queryMostGranularFormatUnit = function(formatStr) {\\n\\tvar chunks = getFormatStringChunks(formatStr);\\n\\tvar i, chunk;\\n\\tvar candidate;\\n\\tvar best;\\n\\n\\tfor (i = 0; i < chunks.length; i++) {\\n\\t\\tchunk = chunks[i];\\n\\t\\tif (chunk.token) {\\n\\t\\t\\tcandidate = tokenGranularities[chunk.token.charAt(0)];\\n\\t\\t\\tif (candidate) {\\n\\t\\t\\t\\tif (!best || candidate.value > best.value) {\\n\\t\\t\\t\\t\\tbest = candidate;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tif (best) {\\n\\t\\treturn best.unit;\\n\\t}\\n\\n\\treturn null;\\n};\\n\\n;;\\n\\nFC.Class = Class; // export\\n\\n// Class that all other classes will inherit from\\nfunction Class() { }\\n\\n\\n// Called on a class to create a subclass.\\n// Last argument contains instance methods. Any argument before the last are considered mixins.\\nClass.extend = function() {\\n\\tvar len = arguments.length;\\n\\tvar i;\\n\\tvar members;\\n\\n\\tfor (i = 0; i < len; i++) {\\n\\t\\tmembers = arguments[i];\\n\\t\\tif (i < len - 1) { // not the last argument?\\n\\t\\t\\tmixIntoClass(this, members);\\n\\t\\t}\\n\\t}\\n\\n\\treturn extendClass(this, members || {}); // members will be undefined if no arguments\\n};\\n\\n\\n// Adds new member variables/methods to the class's prototype.\\n// Can be called with another class, or a plain object hash containing new members.\\nClass.mixin = function(members) {\\n\\tmixIntoClass(this, members);\\n};\\n\\n\\nfunction extendClass(superClass, members) {\\n\\tvar subClass;\\n\\n\\t// ensure a constructor for the subclass, forwarding all arguments to the super-constructor if it doesn't exist\\n\\tif (hasOwnProp(members, 'constructor')) {\\n\\t\\tsubClass = members.constructor;\\n\\t}\\n\\tif (typeof subClass !== 'function') {\\n\\t\\tsubClass = members.constructor = function() {\\n\\t\\t\\tsuperClass.apply(this, arguments);\\n\\t\\t};\\n\\t}\\n\\n\\t// build the base prototype for the subclass, which is an new object chained to the superclass's prototype\\n\\tsubClass.prototype = createObject(superClass.prototype);\\n\\n\\t// copy each member variable/method onto the the subclass's prototype\\n\\tcopyOwnProps(members, subClass.prototype);\\n\\n\\t// copy over all class variables/methods to the subclass, such as `extend` and `mixin`\\n\\tcopyOwnProps(superClass, subClass);\\n\\n\\treturn subClass;\\n}\\n\\n\\nfunction mixIntoClass(theClass, members) {\\n\\tcopyOwnProps(members, theClass.prototype);\\n}\\n;;\\n\\n/*\\nWrap jQuery's Deferred Promise object to be slightly more Promise/A+ compliant.\\nWith the added non-standard feature of synchronously executing handlers on resolved promises,\\nwhich doesn't always happen otherwise (esp with nested .then handlers!?),\\nso, this makes things a lot easier, esp because jQuery 3 changed the synchronicity for Deferred objects.\\n\\nTODO: write tests and more comments\\n*/\\n\\nfunction Promise(executor) {\\n\\tvar deferred = $.Deferred();\\n\\tvar promise = deferred.promise();\\n\\n\\tif (typeof executor === 'function') {\\n\\t\\texecutor(\\n\\t\\t\\tfunction(value) { // resolve\\n\\t\\t\\t\\tif (Promise.immediate) {\\n\\t\\t\\t\\t\\tpromise._value = value;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tdeferred.resolve(value);\\n\\t\\t\\t},\\n\\t\\t\\tfunction() { // reject\\n\\t\\t\\t\\tdeferred.reject();\\n\\t\\t\\t}\\n\\t\\t);\\n\\t}\\n\\t\\n\\tif (Promise.immediate) {\\n\\t\\tvar origThen = promise.then;\\n\\n\\t\\tpromise.then = function(onFulfilled, onRejected) {\\n\\t\\t\\tvar state = promise.state();\\n\\t\\t\\t\\n\\t\\t\\tif (state === 'resolved') {\\n\\t\\t\\t\\tif (typeof onFulfilled === 'function') {\\n\\t\\t\\t\\t\\treturn Promise.resolve(onFulfilled(promise._value));\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\telse if (state === 'rejected') {\\n\\t\\t\\t\\tif (typeof onRejected === 'function') {\\n\\t\\t\\t\\t\\tonRejected();\\n\\t\\t\\t\\t\\treturn promise; // already rejected\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn origThen.call(promise, onFulfilled, onRejected);\\n\\t\\t};\\n\\t}\\n\\n\\treturn promise; // instanceof Promise will break :( TODO: make Promise a real class\\n}\\n\\nFC.Promise = Promise;\\n\\nPromise.immediate = true;\\n\\n\\nPromise.resolve = function(value) {\\n\\tif (value && typeof value.resolve === 'function') {\\n\\t\\treturn value.promise();\\n\\t}\\n\\tif (value && typeof value.then === 'function') {\\n\\t\\treturn value;\\n\\t}\\n\\telse {\\n\\t\\tvar deferred = $.Deferred().resolve(value);\\n\\t\\tvar promise = deferred.promise();\\n\\n\\t\\tif (Promise.immediate) {\\n\\t\\t\\tvar origThen = promise.then;\\n\\n\\t\\t\\tpromise._value = value;\\n\\n\\t\\t\\tpromise.then = function(onFulfilled, onRejected) {\\n\\t\\t\\t\\tif (typeof onFulfilled === 'function') {\\n\\t\\t\\t\\t\\treturn Promise.resolve(onFulfilled(value));\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn origThen.call(promise, onFulfilled, onRejected);\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\treturn promise;\\n\\t}\\n};\\n\\n\\nPromise.reject = function() {\\n\\treturn $.Deferred().reject().promise();\\n};\\n\\n\\nPromise.all = function(inputs) {\\n\\tvar hasAllValues = false;\\n\\tvar values;\\n\\tvar i, input;\\n\\n\\tif (Promise.immediate) {\\n\\t\\thasAllValues = true;\\n\\t\\tvalues = [];\\n\\n\\t\\tfor (i = 0; i < inputs.length; i++) {\\n\\t\\t\\tinput = inputs[i];\\n\\n\\t\\t\\tif (input && typeof input.state === 'function' && input.state() === 'resolved' && ('_value' in input)) {\\n\\t\\t\\t\\tvalues.push(input._value);\\n\\t\\t\\t}\\n\\t\\t\\telse if (input && typeof input.then === 'function') {\\n\\t\\t\\t\\thasAllValues = false;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tvalues.push(input);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tif (hasAllValues) {\\n\\t\\treturn Promise.resolve(values);\\n\\t}\\n\\telse {\\n\\t\\treturn $.when.apply($.when, inputs).then(function() {\\n\\t\\t\\treturn $.when($.makeArray(arguments));\\n\\t\\t});\\n\\t}\\n};\\n\\n;;\\n\\n// TODO: write tests and clean up code\\n\\nfunction TaskQueue(debounceWait) {\\n\\tvar q = []; // array of runFuncs\\n\\n\\tfunction addTask(taskFunc) {\\n\\t\\treturn new Promise(function(resolve) {\\n\\n\\t\\t\\t// should run this function when it's taskFunc's turn to run.\\n\\t\\t\\t// responsible for popping itself off the queue.\\n\\t\\t\\tvar runFunc = function() {\\n\\t\\t\\t\\tPromise.resolve(taskFunc()) // result might be async, coerce to promise\\n\\t\\t\\t\\t\\t.then(resolve) // resolve TaskQueue::push's promise, for the caller. will receive result of taskFunc.\\n\\t\\t\\t\\t\\t.then(function() {\\n\\t\\t\\t\\t\\t\\tq.shift(); // pop itself off\\n\\n\\t\\t\\t\\t\\t\\t// run the next task, if any\\n\\t\\t\\t\\t\\t\\tif (q.length) {\\n\\t\\t\\t\\t\\t\\t\\tq[0]();\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t};\\n\\n\\t\\t\\t// always put the task at the end of the queue, BEFORE running the task\\n\\t\\t\\tq.push(runFunc);\\n\\n\\t\\t\\t// if it's the only task in the queue, run immediately\\n\\t\\t\\tif (q.length === 1) {\\n\\t\\t\\t\\trunFunc();\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\n\\tthis.add = // potentially debounce, for the public method\\n\\t\\ttypeof debounceWait === 'number' ?\\n\\t\\t\\tdebounce(addTask, debounceWait) :\\n\\t\\t\\taddTask; // if not a number (null/undefined/false), no debounce at all\\n\\n\\tthis.addQuickly = addTask; // guaranteed no debounce\\n}\\n\\nFC.TaskQueue = TaskQueue;\\n\\n/*\\nq = new TaskQueue();\\n\\nfunction work(i) {\\n\\treturn q.push(function() {\\n\\t\\ttrigger();\\n\\t\\tconsole.log('work' + i);\\n\\t});\\n}\\n\\nvar cnt = 0;\\n\\nfunction trigger() {\\n\\tif (cnt < 5) {\\n\\t\\tcnt++;\\n\\t\\twork(cnt);\\n\\t}\\n}\\n\\nwork(9);\\n*/\\n\\n;;\\n\\nvar EmitterMixin = FC.EmitterMixin = {\\n\\n\\t// jQuery-ification via $(this) allows a non-DOM object to have\\n\\t// the same event handling capabilities (including namespaces).\\n\\n\\n\\ton: function(types, handler) {\\n\\t\\t$(this).on(types, this._prepareIntercept(handler));\\n\\t\\treturn this; // for chaining\\n\\t},\\n\\n\\n\\tone: function(types, handler) {\\n\\t\\t$(this).one(types, this._prepareIntercept(handler));\\n\\t\\treturn this; // for chaining\\n\\t},\\n\\n\\n\\t_prepareIntercept: function(handler) {\\n\\t\\t// handlers are always called with an \\\"event\\\" object as their first param.\\n\\t\\t// sneak the `this` context and arguments into the extra parameter object\\n\\t\\t// and forward them on to the original handler.\\n\\t\\tvar intercept = function(ev, extra) {\\n\\t\\t\\treturn handler.apply(\\n\\t\\t\\t\\textra.context || this,\\n\\t\\t\\t\\textra.args || []\\n\\t\\t\\t);\\n\\t\\t};\\n\\n\\t\\t// mimick jQuery's internal \\\"proxy\\\" system (risky, I know)\\n\\t\\t// causing all functions with the same .guid to appear to be the same.\\n\\t\\t// https://github.com/jquery/jquery/blob/2.2.4/src/core.js#L448\\n\\t\\t// this is needed for calling .off with the original non-intercept handler.\\n\\t\\tif (!handler.guid) {\\n\\t\\t\\thandler.guid = $.guid++;\\n\\t\\t}\\n\\t\\tintercept.guid = handler.guid;\\n\\n\\t\\treturn intercept;\\n\\t},\\n\\n\\n\\toff: function(types, handler) {\\n\\t\\t$(this).off(types, handler);\\n\\n\\t\\treturn this; // for chaining\\n\\t},\\n\\n\\n\\ttrigger: function(types) {\\n\\t\\tvar args = Array.prototype.slice.call(arguments, 1); // arguments after the first\\n\\n\\t\\t// pass in \\\"extra\\\" info to the intercept\\n\\t\\t$(this).triggerHandler(types, { args: args });\\n\\n\\t\\treturn this; // for chaining\\n\\t},\\n\\n\\n\\ttriggerWith: function(types, context, args) {\\n\\n\\t\\t// `triggerHandler` is less reliant on the DOM compared to `trigger`.\\n\\t\\t// pass in \\\"extra\\\" info to the intercept.\\n\\t\\t$(this).triggerHandler(types, { context: context, args: args });\\n\\n\\t\\treturn this; // for chaining\\n\\t}\\n\\n};\\n\\n;;\\n\\n/*\\nUtility methods for easily listening to events on another object,\\nand more importantly, easily unlistening from them.\\n*/\\nvar ListenerMixin = FC.ListenerMixin = (function() {\\n\\tvar guid = 0;\\n\\tvar ListenerMixin = {\\n\\n\\t\\tlistenerId: null,\\n\\n\\t\\t/*\\n\\t\\tGiven an `other` object that has on/off methods, bind the given `callback` to an event by the given name.\\n\\t\\tThe `callback` will be called with the `this` context of the object that .listenTo is being called on.\\n\\t\\tCan be called:\\n\\t\\t\\t.listenTo(other, eventName, callback)\\n\\t\\tOR\\n\\t\\t\\t.listenTo(other, {\\n\\t\\t\\t\\teventName1: callback1,\\n\\t\\t\\t\\teventName2: callback2\\n\\t\\t\\t})\\n\\t\\t*/\\n\\t\\tlistenTo: function(other, arg, callback) {\\n\\t\\t\\tif (typeof arg === 'object') { // given dictionary of callbacks\\n\\t\\t\\t\\tfor (var eventName in arg) {\\n\\t\\t\\t\\t\\tif (arg.hasOwnProperty(eventName)) {\\n\\t\\t\\t\\t\\t\\tthis.listenTo(other, eventName, arg[eventName]);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\telse if (typeof arg === 'string') {\\n\\t\\t\\t\\tother.on(\\n\\t\\t\\t\\t\\targ + '.' + this.getListenerNamespace(), // use event namespacing to identify this object\\n\\t\\t\\t\\t\\t$.proxy(callback, this) // always use `this` context\\n\\t\\t\\t\\t\\t\\t// the usually-undesired jQuery guid behavior doesn't matter,\\n\\t\\t\\t\\t\\t\\t// because we always unbind via namespace\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t/*\\n\\t\\tCauses the current object to stop listening to events on the `other` object.\\n\\t\\t`eventName` is optional. If omitted, will stop listening to ALL events on `other`.\\n\\t\\t*/\\n\\t\\tstopListeningTo: function(other, eventName) {\\n\\t\\t\\tother.off((eventName || '') + '.' + this.getListenerNamespace());\\n\\t\\t},\\n\\n\\t\\t/*\\n\\t\\tReturns a string, unique to this object, to be used for event namespacing\\n\\t\\t*/\\n\\t\\tgetListenerNamespace: function() {\\n\\t\\t\\tif (this.listenerId == null) {\\n\\t\\t\\t\\tthis.listenerId = guid++;\\n\\t\\t\\t}\\n\\t\\t\\treturn '_listener' + this.listenerId;\\n\\t\\t}\\n\\n\\t};\\n\\treturn ListenerMixin;\\n})();\\n;;\\n\\n// simple class for toggle a `isIgnoringMouse` flag on delay\\n// initMouseIgnoring must first be called, with a millisecond delay setting.\\nvar MouseIgnorerMixin = {\\n\\n\\tisIgnoringMouse: false, // bool\\n\\tdelayUnignoreMouse: null, // method\\n\\n\\n\\tinitMouseIgnoring: function(delay) {\\n\\t\\tthis.delayUnignoreMouse = debounce(proxy(this, 'unignoreMouse'), delay || 1000);\\n\\t},\\n\\n\\n\\t// temporarily ignore mouse actions on segments\\n\\ttempIgnoreMouse: function() {\\n\\t\\tthis.isIgnoringMouse = true;\\n\\t\\tthis.delayUnignoreMouse();\\n\\t},\\n\\n\\n\\t// delayUnignoreMouse eventually calls this\\n\\tunignoreMouse: function() {\\n\\t\\tthis.isIgnoringMouse = false;\\n\\t}\\n\\n};\\n\\n;;\\n\\n/* A rectangular panel that is absolutely positioned over other content\\n------------------------------------------------------------------------------------------------------------------------\\nOptions:\\n\\t- className (string)\\n\\t- content (HTML string or jQuery element set)\\n\\t- parentEl\\n\\t- top\\n\\t- left\\n\\t- right (the x coord of where the right edge should be. not a \\\"CSS\\\" right)\\n\\t- autoHide (boolean)\\n\\t- show (callback)\\n\\t- hide (callback)\\n*/\\n\\nvar Popover = Class.extend(ListenerMixin, {\\n\\n\\tisHidden: true,\\n\\toptions: null,\\n\\tel: null, // the container element for the popover. generated by this object\\n\\tmargin: 10, // the space required between the popover and the edges of the scroll container\\n\\n\\n\\tconstructor: function(options) {\\n\\t\\tthis.options = options || {};\\n\\t},\\n\\n\\n\\t// Shows the popover on the specified position. Renders it if not already\\n\\tshow: function() {\\n\\t\\tif (this.isHidden) {\\n\\t\\t\\tif (!this.el) {\\n\\t\\t\\t\\tthis.render();\\n\\t\\t\\t}\\n\\t\\t\\tthis.el.show();\\n\\t\\t\\tthis.position();\\n\\t\\t\\tthis.isHidden = false;\\n\\t\\t\\tthis.trigger('show');\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Hides the popover, through CSS, but does not remove it from the DOM\\n\\thide: function() {\\n\\t\\tif (!this.isHidden) {\\n\\t\\t\\tthis.el.hide();\\n\\t\\t\\tthis.isHidden = true;\\n\\t\\t\\tthis.trigger('hide');\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Creates `this.el` and renders content inside of it\\n\\trender: function() {\\n\\t\\tvar _this = this;\\n\\t\\tvar options = this.options;\\n\\n\\t\\tthis.el = $('<div class=\\\"fc-popover\\\"/>')\\n\\t\\t\\t.addClass(options.className || '')\\n\\t\\t\\t.css({\\n\\t\\t\\t\\t// position initially to the top left to avoid creating scrollbars\\n\\t\\t\\t\\ttop: 0,\\n\\t\\t\\t\\tleft: 0\\n\\t\\t\\t})\\n\\t\\t\\t.append(options.content)\\n\\t\\t\\t.appendTo(options.parentEl);\\n\\n\\t\\t// when a click happens on anything inside with a 'fc-close' className, hide the popover\\n\\t\\tthis.el.on('click', '.fc-close', function() {\\n\\t\\t\\t_this.hide();\\n\\t\\t});\\n\\n\\t\\tif (options.autoHide) {\\n\\t\\t\\tthis.listenTo($(document), 'mousedown', this.documentMousedown);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Triggered when the user clicks *anywhere* in the document, for the autoHide feature\\n\\tdocumentMousedown: function(ev) {\\n\\t\\t// only hide the popover if the click happened outside the popover\\n\\t\\tif (this.el && !$(ev.target).closest(this.el).length) {\\n\\t\\t\\tthis.hide();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Hides and unregisters any handlers\\n\\tremoveElement: function() {\\n\\t\\tthis.hide();\\n\\n\\t\\tif (this.el) {\\n\\t\\t\\tthis.el.remove();\\n\\t\\t\\tthis.el = null;\\n\\t\\t}\\n\\n\\t\\tthis.stopListeningTo($(document), 'mousedown');\\n\\t},\\n\\n\\n\\t// Positions the popover optimally, using the top/left/right options\\n\\tposition: function() {\\n\\t\\tvar options = this.options;\\n\\t\\tvar origin = this.el.offsetParent().offset();\\n\\t\\tvar width = this.el.outerWidth();\\n\\t\\tvar height = this.el.outerHeight();\\n\\t\\tvar windowEl = $(window);\\n\\t\\tvar viewportEl = getScrollParent(this.el);\\n\\t\\tvar viewportTop;\\n\\t\\tvar viewportLeft;\\n\\t\\tvar viewportOffset;\\n\\t\\tvar top; // the \\\"position\\\" (not \\\"offset\\\") values for the popover\\n\\t\\tvar left; //\\n\\n\\t\\t// compute top and left\\n\\t\\ttop = options.top || 0;\\n\\t\\tif (options.left !== undefined) {\\n\\t\\t\\tleft = options.left;\\n\\t\\t}\\n\\t\\telse if (options.right !== undefined) {\\n\\t\\t\\tleft = options.right - width; // derive the left value from the right value\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tleft = 0;\\n\\t\\t}\\n\\n\\t\\tif (viewportEl.is(window) || viewportEl.is(document)) { // normalize getScrollParent's result\\n\\t\\t\\tviewportEl = windowEl;\\n\\t\\t\\tviewportTop = 0; // the window is always at the top left\\n\\t\\t\\tviewportLeft = 0; // (and .offset() won't work if called here)\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tviewportOffset = viewportEl.offset();\\n\\t\\t\\tviewportTop = viewportOffset.top;\\n\\t\\t\\tviewportLeft = viewportOffset.left;\\n\\t\\t}\\n\\n\\t\\t// if the window is scrolled, it causes the visible area to be further down\\n\\t\\tviewportTop += windowEl.scrollTop();\\n\\t\\tviewportLeft += windowEl.scrollLeft();\\n\\n\\t\\t// constrain to the view port. if constrained by two edges, give precedence to top/left\\n\\t\\tif (options.viewportConstrain !== false) {\\n\\t\\t\\ttop = Math.min(top, viewportTop + viewportEl.outerHeight() - height - this.margin);\\n\\t\\t\\ttop = Math.max(top, viewportTop + this.margin);\\n\\t\\t\\tleft = Math.min(left, viewportLeft + viewportEl.outerWidth() - width - this.margin);\\n\\t\\t\\tleft = Math.max(left, viewportLeft + this.margin);\\n\\t\\t}\\n\\n\\t\\tthis.el.css({\\n\\t\\t\\ttop: top - origin.top,\\n\\t\\t\\tleft: left - origin.left\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Triggers a callback. Calls a function in the option hash of the same name.\\n\\t// Arguments beyond the first `name` are forwarded on.\\n\\t// TODO: better code reuse for this. Repeat code\\n\\ttrigger: function(name) {\\n\\t\\tif (this.options[name]) {\\n\\t\\t\\tthis.options[name].apply(this, Array.prototype.slice.call(arguments, 1));\\n\\t\\t}\\n\\t}\\n\\n});\\n\\n;;\\n\\n/*\\nA cache for the left/right/top/bottom/width/height values for one or more elements.\\nWorks with both offset (from topleft document) and position (from offsetParent).\\n\\noptions:\\n- els\\n- isHorizontal\\n- isVertical\\n*/\\nvar CoordCache = FC.CoordCache = Class.extend({\\n\\n\\tels: null, // jQuery set (assumed to be siblings)\\n\\tforcedOffsetParentEl: null, // options can override the natural offsetParent\\n\\torigin: null, // {left,top} position of offsetParent of els\\n\\tboundingRect: null, // constrain cordinates to this rectangle. {left,right,top,bottom} or null\\n\\tisHorizontal: false, // whether to query for left/right/width\\n\\tisVertical: false, // whether to query for top/bottom/height\\n\\n\\t// arrays of coordinates (offsets from topleft of document)\\n\\tlefts: null,\\n\\trights: null,\\n\\ttops: null,\\n\\tbottoms: null,\\n\\n\\n\\tconstructor: function(options) {\\n\\t\\tthis.els = $(options.els);\\n\\t\\tthis.isHorizontal = options.isHorizontal;\\n\\t\\tthis.isVertical = options.isVertical;\\n\\t\\tthis.forcedOffsetParentEl = options.offsetParent ? $(options.offsetParent) : null;\\n\\t},\\n\\n\\n\\t// Queries the els for coordinates and stores them.\\n\\t// Call this method before using and of the get* methods below.\\n\\tbuild: function() {\\n\\t\\tvar offsetParentEl = this.forcedOffsetParentEl;\\n\\t\\tif (!offsetParentEl && this.els.length > 0) {\\n\\t\\t\\toffsetParentEl = this.els.eq(0).offsetParent();\\n\\t\\t}\\n\\n\\t\\tthis.origin = offsetParentEl ?\\n\\t\\t\\toffsetParentEl.offset() :\\n\\t\\t\\tnull;\\n\\n\\t\\tthis.boundingRect = this.queryBoundingRect();\\n\\n\\t\\tif (this.isHorizontal) {\\n\\t\\t\\tthis.buildElHorizontals();\\n\\t\\t}\\n\\t\\tif (this.isVertical) {\\n\\t\\t\\tthis.buildElVerticals();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Destroys all internal data about coordinates, freeing memory\\n\\tclear: function() {\\n\\t\\tthis.origin = null;\\n\\t\\tthis.boundingRect = null;\\n\\t\\tthis.lefts = null;\\n\\t\\tthis.rights = null;\\n\\t\\tthis.tops = null;\\n\\t\\tthis.bottoms = null;\\n\\t},\\n\\n\\n\\t// When called, if coord caches aren't built, builds them\\n\\tensureBuilt: function() {\\n\\t\\tif (!this.origin) {\\n\\t\\t\\tthis.build();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Populates the left/right internal coordinate arrays\\n\\tbuildElHorizontals: function() {\\n\\t\\tvar lefts = [];\\n\\t\\tvar rights = [];\\n\\n\\t\\tthis.els.each(function(i, node) {\\n\\t\\t\\tvar el = $(node);\\n\\t\\t\\tvar left = el.offset().left;\\n\\t\\t\\tvar width = el.outerWidth();\\n\\n\\t\\t\\tlefts.push(left);\\n\\t\\t\\trights.push(left + width);\\n\\t\\t});\\n\\n\\t\\tthis.lefts = lefts;\\n\\t\\tthis.rights = rights;\\n\\t},\\n\\n\\n\\t// Populates the top/bottom internal coordinate arrays\\n\\tbuildElVerticals: function() {\\n\\t\\tvar tops = [];\\n\\t\\tvar bottoms = [];\\n\\n\\t\\tthis.els.each(function(i, node) {\\n\\t\\t\\tvar el = $(node);\\n\\t\\t\\tvar top = el.offset().top;\\n\\t\\t\\tvar height = el.outerHeight();\\n\\n\\t\\t\\ttops.push(top);\\n\\t\\t\\tbottoms.push(top + height);\\n\\t\\t});\\n\\n\\t\\tthis.tops = tops;\\n\\t\\tthis.bottoms = bottoms;\\n\\t},\\n\\n\\n\\t// Given a left offset (from document left), returns the index of the el that it horizontally intersects.\\n\\t// If no intersection is made, returns undefined.\\n\\tgetHorizontalIndex: function(leftOffset) {\\n\\t\\tthis.ensureBuilt();\\n\\n\\t\\tvar lefts = this.lefts;\\n\\t\\tvar rights = this.rights;\\n\\t\\tvar len = lefts.length;\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < len; i++) {\\n\\t\\t\\tif (leftOffset >= lefts[i] && leftOffset < rights[i]) {\\n\\t\\t\\t\\treturn i;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Given a top offset (from document top), returns the index of the el that it vertically intersects.\\n\\t// If no intersection is made, returns undefined.\\n\\tgetVerticalIndex: function(topOffset) {\\n\\t\\tthis.ensureBuilt();\\n\\n\\t\\tvar tops = this.tops;\\n\\t\\tvar bottoms = this.bottoms;\\n\\t\\tvar len = tops.length;\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < len; i++) {\\n\\t\\t\\tif (topOffset >= tops[i] && topOffset < bottoms[i]) {\\n\\t\\t\\t\\treturn i;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Gets the left offset (from document left) of the element at the given index\\n\\tgetLeftOffset: function(leftIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.lefts[leftIndex];\\n\\t},\\n\\n\\n\\t// Gets the left position (from offsetParent left) of the element at the given index\\n\\tgetLeftPosition: function(leftIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.lefts[leftIndex] - this.origin.left;\\n\\t},\\n\\n\\n\\t// Gets the right offset (from document left) of the element at the given index.\\n\\t// This value is NOT relative to the document's right edge, like the CSS concept of \\\"right\\\" would be.\\n\\tgetRightOffset: function(leftIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.rights[leftIndex];\\n\\t},\\n\\n\\n\\t// Gets the right position (from offsetParent left) of the element at the given index.\\n\\t// This value is NOT relative to the offsetParent's right edge, like the CSS concept of \\\"right\\\" would be.\\n\\tgetRightPosition: function(leftIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.rights[leftIndex] - this.origin.left;\\n\\t},\\n\\n\\n\\t// Gets the width of the element at the given index\\n\\tgetWidth: function(leftIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.rights[leftIndex] - this.lefts[leftIndex];\\n\\t},\\n\\n\\n\\t// Gets the top offset (from document top) of the element at the given index\\n\\tgetTopOffset: function(topIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.tops[topIndex];\\n\\t},\\n\\n\\n\\t// Gets the top position (from offsetParent top) of the element at the given position\\n\\tgetTopPosition: function(topIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.tops[topIndex] - this.origin.top;\\n\\t},\\n\\n\\t// Gets the bottom offset (from the document top) of the element at the given index.\\n\\t// This value is NOT relative to the offsetParent's bottom edge, like the CSS concept of \\\"bottom\\\" would be.\\n\\tgetBottomOffset: function(topIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.bottoms[topIndex];\\n\\t},\\n\\n\\n\\t// Gets the bottom position (from the offsetParent top) of the element at the given index.\\n\\t// This value is NOT relative to the offsetParent's bottom edge, like the CSS concept of \\\"bottom\\\" would be.\\n\\tgetBottomPosition: function(topIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.bottoms[topIndex] - this.origin.top;\\n\\t},\\n\\n\\n\\t// Gets the height of the element at the given index\\n\\tgetHeight: function(topIndex) {\\n\\t\\tthis.ensureBuilt();\\n\\t\\treturn this.bottoms[topIndex] - this.tops[topIndex];\\n\\t},\\n\\n\\n\\t// Bounding Rect\\n\\t// TODO: decouple this from CoordCache\\n\\n\\t// Compute and return what the elements' bounding rectangle is, from the user's perspective.\\n\\t// Right now, only returns a rectangle if constrained by an overflow:scroll element.\\n\\t// Returns null if there are no elements\\n\\tqueryBoundingRect: function() {\\n\\t\\tvar scrollParentEl;\\n\\n\\t\\tif (this.els.length > 0) {\\n\\t\\t\\tscrollParentEl = getScrollParent(this.els.eq(0));\\n\\n\\t\\t\\tif (!scrollParentEl.is(document)) {\\n\\t\\t\\t\\treturn getClientRect(scrollParentEl);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn null;\\n\\t},\\n\\n\\tisPointInBounds: function(leftOffset, topOffset) {\\n\\t\\treturn this.isLeftInBounds(leftOffset) && this.isTopInBounds(topOffset);\\n\\t},\\n\\n\\tisLeftInBounds: function(leftOffset) {\\n\\t\\treturn !this.boundingRect || (leftOffset >= this.boundingRect.left && leftOffset < this.boundingRect.right);\\n\\t},\\n\\n\\tisTopInBounds: function(topOffset) {\\n\\t\\treturn !this.boundingRect || (topOffset >= this.boundingRect.top && topOffset < this.boundingRect.bottom);\\n\\t}\\n\\n});\\n\\n;;\\n\\n/* Tracks a drag's mouse movement, firing various handlers\\n----------------------------------------------------------------------------------------------------------------------*/\\n// TODO: use Emitter\\n\\nvar DragListener = FC.DragListener = Class.extend(ListenerMixin, MouseIgnorerMixin, {\\n\\n\\toptions: null,\\n\\tsubjectEl: null,\\n\\n\\t// coordinates of the initial mousedown\\n\\toriginX: null,\\n\\toriginY: null,\\n\\n\\t// the wrapping element that scrolls, or MIGHT scroll if there's overflow.\\n\\t// TODO: do this for wrappers that have overflow:hidden as well.\\n\\tscrollEl: null,\\n\\n\\tisInteracting: false,\\n\\tisDistanceSurpassed: false,\\n\\tisDelayEnded: false,\\n\\tisDragging: false,\\n\\tisTouch: false,\\n\\n\\tdelay: null,\\n\\tdelayTimeoutId: null,\\n\\tminDistance: null,\\n\\n\\thandleTouchScrollProxy: null, // calls handleTouchScroll, always bound to `this`\\n\\n\\n\\tconstructor: function(options) {\\n\\t\\tthis.options = options || {};\\n\\t\\tthis.handleTouchScrollProxy = proxy(this, 'handleTouchScroll');\\n\\t\\tthis.initMouseIgnoring(500);\\n\\t},\\n\\n\\n\\t// Interaction (high-level)\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tstartInteraction: function(ev, extraOptions) {\\n\\t\\tvar isTouch = getEvIsTouch(ev);\\n\\n\\t\\tif (ev.type === 'mousedown') {\\n\\t\\t\\tif (this.isIgnoringMouse) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\telse if (!isPrimaryMouseButton(ev)) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tev.preventDefault(); // prevents native selection in most browsers\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (!this.isInteracting) {\\n\\n\\t\\t\\t// process options\\n\\t\\t\\textraOptions = extraOptions || {};\\n\\t\\t\\tthis.delay = firstDefined(extraOptions.delay, this.options.delay, 0);\\n\\t\\t\\tthis.minDistance = firstDefined(extraOptions.distance, this.options.distance, 0);\\n\\t\\t\\tthis.subjectEl = this.options.subjectEl;\\n\\n\\t\\t\\tthis.isInteracting = true;\\n\\t\\t\\tthis.isTouch = isTouch;\\n\\t\\t\\tthis.isDelayEnded = false;\\n\\t\\t\\tthis.isDistanceSurpassed = false;\\n\\n\\t\\t\\tthis.originX = getEvX(ev);\\n\\t\\t\\tthis.originY = getEvY(ev);\\n\\t\\t\\tthis.scrollEl = getScrollParent($(ev.target));\\n\\n\\t\\t\\tthis.bindHandlers();\\n\\t\\t\\tthis.initAutoScroll();\\n\\t\\t\\tthis.handleInteractionStart(ev);\\n\\t\\t\\tthis.startDelay(ev);\\n\\n\\t\\t\\tif (!this.minDistance) {\\n\\t\\t\\t\\tthis.handleDistanceSurpassed(ev);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\thandleInteractionStart: function(ev) {\\n\\t\\tthis.trigger('interactionStart', ev);\\n\\t},\\n\\n\\n\\tendInteraction: function(ev, isCancelled) {\\n\\t\\tif (this.isInteracting) {\\n\\t\\t\\tthis.endDrag(ev);\\n\\n\\t\\t\\tif (this.delayTimeoutId) {\\n\\t\\t\\t\\tclearTimeout(this.delayTimeoutId);\\n\\t\\t\\t\\tthis.delayTimeoutId = null;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.destroyAutoScroll();\\n\\t\\t\\tthis.unbindHandlers();\\n\\n\\t\\t\\tthis.isInteracting = false;\\n\\t\\t\\tthis.handleInteractionEnd(ev, isCancelled);\\n\\n\\t\\t\\t// a touchstart+touchend on the same element will result in the following addition simulated events:\\n\\t\\t\\t// mouseover + mouseout + click\\n\\t\\t\\t// let's ignore these bogus events\\n\\t\\t\\tif (this.isTouch) {\\n\\t\\t\\t\\tthis.tempIgnoreMouse();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\thandleInteractionEnd: function(ev, isCancelled) {\\n\\t\\tthis.trigger('interactionEnd', ev, isCancelled || false);\\n\\t},\\n\\n\\n\\t// Binding To DOM\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tbindHandlers: function() {\\n\\t\\tvar _this = this;\\n\\t\\tvar touchStartIgnores = 1;\\n\\n\\t\\tif (this.isTouch) {\\n\\t\\t\\tthis.listenTo($(document), {\\n\\t\\t\\t\\ttouchmove: this.handleTouchMove,\\n\\t\\t\\t\\ttouchend: this.endInteraction,\\n\\t\\t\\t\\ttouchcancel: this.endInteraction,\\n\\n\\t\\t\\t\\t// Sometimes touchend doesn't fire\\n\\t\\t\\t\\t// (can't figure out why. touchcancel doesn't fire either. has to do with scrolling?)\\n\\t\\t\\t\\t// If another touchstart happens, we know it's bogus, so cancel the drag.\\n\\t\\t\\t\\t// touchend will continue to be broken until user does a shorttap/scroll, but this is best we can do.\\n\\t\\t\\t\\ttouchstart: function(ev) {\\n\\t\\t\\t\\t\\tif (touchStartIgnores) { // bindHandlers is called from within a touchstart,\\n\\t\\t\\t\\t\\t\\ttouchStartIgnores--; // and we don't want this to fire immediately, so ignore.\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\t_this.endInteraction(ev, true); // isCancelled=true\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\t// listen to ALL scroll actions on the page\\n\\t\\t\\tif (\\n\\t\\t\\t\\t!bindAnyScroll(this.handleTouchScrollProxy) && // hopefully this works and short-circuits the rest\\n\\t\\t\\t\\tthis.scrollEl // otherwise, attach a single handler to this\\n\\t\\t\\t) {\\n\\t\\t\\t\\tthis.listenTo(this.scrollEl, 'scroll', this.handleTouchScroll);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tthis.listenTo($(document), {\\n\\t\\t\\t\\tmousemove: this.handleMouseMove,\\n\\t\\t\\t\\tmouseup: this.endInteraction\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tthis.listenTo($(document), {\\n\\t\\t\\tselectstart: preventDefault, // don't allow selection while dragging\\n\\t\\t\\tcontextmenu: preventDefault // long taps would open menu on Chrome dev tools\\n\\t\\t});\\n\\t},\\n\\n\\n\\tunbindHandlers: function() {\\n\\t\\tthis.stopListeningTo($(document));\\n\\n\\t\\t// unbind scroll listening\\n\\t\\tunbindAnyScroll(this.handleTouchScrollProxy);\\n\\t\\tif (this.scrollEl) {\\n\\t\\t\\tthis.stopListeningTo(this.scrollEl, 'scroll');\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Drag (high-level)\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// extraOptions ignored if drag already started\\n\\tstartDrag: function(ev, extraOptions) {\\n\\t\\tthis.startInteraction(ev, extraOptions); // ensure interaction began\\n\\n\\t\\tif (!this.isDragging) {\\n\\t\\t\\tthis.isDragging = true;\\n\\t\\t\\tthis.handleDragStart(ev);\\n\\t\\t}\\n\\t},\\n\\n\\n\\thandleDragStart: function(ev) {\\n\\t\\tthis.trigger('dragStart', ev);\\n\\t},\\n\\n\\n\\thandleMove: function(ev) {\\n\\t\\tvar dx = getEvX(ev) - this.originX;\\n\\t\\tvar dy = getEvY(ev) - this.originY;\\n\\t\\tvar minDistance = this.minDistance;\\n\\t\\tvar distanceSq; // current distance from the origin, squared\\n\\n\\t\\tif (!this.isDistanceSurpassed) {\\n\\t\\t\\tdistanceSq = dx * dx + dy * dy;\\n\\t\\t\\tif (distanceSq >= minDistance * minDistance) { // use pythagorean theorem\\n\\t\\t\\t\\tthis.handleDistanceSurpassed(ev);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (this.isDragging) {\\n\\t\\t\\tthis.handleDrag(dx, dy, ev);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Called while the mouse is being moved and when we know a legitimate drag is taking place\\n\\thandleDrag: function(dx, dy, ev) {\\n\\t\\tthis.trigger('drag', dx, dy, ev);\\n\\t\\tthis.updateAutoScroll(ev); // will possibly cause scrolling\\n\\t},\\n\\n\\n\\tendDrag: function(ev) {\\n\\t\\tif (this.isDragging) {\\n\\t\\t\\tthis.isDragging = false;\\n\\t\\t\\tthis.handleDragEnd(ev);\\n\\t\\t}\\n\\t},\\n\\n\\n\\thandleDragEnd: function(ev) {\\n\\t\\tthis.trigger('dragEnd', ev);\\n\\t},\\n\\n\\n\\t// Delay\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tstartDelay: function(initialEv) {\\n\\t\\tvar _this = this;\\n\\n\\t\\tif (this.delay) {\\n\\t\\t\\tthis.delayTimeoutId = setTimeout(function() {\\n\\t\\t\\t\\t_this.handleDelayEnd(initialEv);\\n\\t\\t\\t}, this.delay);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tthis.handleDelayEnd(initialEv);\\n\\t\\t}\\n\\t},\\n\\n\\n\\thandleDelayEnd: function(initialEv) {\\n\\t\\tthis.isDelayEnded = true;\\n\\n\\t\\tif (this.isDistanceSurpassed) {\\n\\t\\t\\tthis.startDrag(initialEv);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Distance\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\thandleDistanceSurpassed: function(ev) {\\n\\t\\tthis.isDistanceSurpassed = true;\\n\\n\\t\\tif (this.isDelayEnded) {\\n\\t\\t\\tthis.startDrag(ev);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Mouse / Touch\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\thandleTouchMove: function(ev) {\\n\\t\\t// prevent inertia and touchmove-scrolling while dragging\\n\\t\\tif (this.isDragging) {\\n\\t\\t\\tev.preventDefault();\\n\\t\\t}\\n\\n\\t\\tthis.handleMove(ev);\\n\\t},\\n\\n\\n\\thandleMouseMove: function(ev) {\\n\\t\\tthis.handleMove(ev);\\n\\t},\\n\\n\\n\\t// Scrolling (unrelated to auto-scroll)\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\thandleTouchScroll: function(ev) {\\n\\t\\t// if the drag is being initiated by touch, but a scroll happens before\\n\\t\\t// the drag-initiating delay is over, cancel the drag\\n\\t\\tif (!this.isDragging) {\\n\\t\\t\\tthis.endInteraction(ev, true); // isCancelled=true\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Utils\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// Triggers a callback. Calls a function in the option hash of the same name.\\n\\t// Arguments beyond the first `name` are forwarded on.\\n\\ttrigger: function(name) {\\n\\t\\tif (this.options[name]) {\\n\\t\\t\\tthis.options[name].apply(this, Array.prototype.slice.call(arguments, 1));\\n\\t\\t}\\n\\t\\t// makes _methods callable by event name. TODO: kill this\\n\\t\\tif (this['_' + name]) {\\n\\t\\t\\tthis['_' + name].apply(this, Array.prototype.slice.call(arguments, 1));\\n\\t\\t}\\n\\t}\\n\\n\\n});\\n\\n;;\\n/*\\nthis.scrollEl is set in DragListener\\n*/\\nDragListener.mixin({\\n\\n\\tisAutoScroll: false,\\n\\n\\tscrollBounds: null, // { top, bottom, left, right }\\n\\tscrollTopVel: null, // pixels per second\\n\\tscrollLeftVel: null, // pixels per second\\n\\tscrollIntervalId: null, // ID of setTimeout for scrolling animation loop\\n\\n\\t// defaults\\n\\tscrollSensitivity: 30, // pixels from edge for scrolling to start\\n\\tscrollSpeed: 200, // pixels per second, at maximum speed\\n\\tscrollIntervalMs: 50, // millisecond wait between scroll increment\\n\\n\\n\\tinitAutoScroll: function() {\\n\\t\\tvar scrollEl = this.scrollEl;\\n\\n\\t\\tthis.isAutoScroll =\\n\\t\\t\\tthis.options.scroll &&\\n\\t\\t\\tscrollEl &&\\n\\t\\t\\t!scrollEl.is(window) &&\\n\\t\\t\\t!scrollEl.is(document);\\n\\n\\t\\tif (this.isAutoScroll) {\\n\\t\\t\\t// debounce makes sure rapid calls don't happen\\n\\t\\t\\tthis.listenTo(scrollEl, 'scroll', debounce(this.handleDebouncedScroll, 100));\\n\\t\\t}\\n\\t},\\n\\n\\n\\tdestroyAutoScroll: function() {\\n\\t\\tthis.endAutoScroll(); // kill any animation loop\\n\\n\\t\\t// remove the scroll handler if there is a scrollEl\\n\\t\\tif (this.isAutoScroll) {\\n\\t\\t\\tthis.stopListeningTo(this.scrollEl, 'scroll'); // will probably get removed by unbindHandlers too :(\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Computes and stores the bounding rectangle of scrollEl\\n\\tcomputeScrollBounds: function() {\\n\\t\\tif (this.isAutoScroll) {\\n\\t\\t\\tthis.scrollBounds = getOuterRect(this.scrollEl);\\n\\t\\t\\t// TODO: use getClientRect in future. but prevents auto scrolling when on top of scrollbars\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Called when the dragging is in progress and scrolling should be updated\\n\\tupdateAutoScroll: function(ev) {\\n\\t\\tvar sensitivity = this.scrollSensitivity;\\n\\t\\tvar bounds = this.scrollBounds;\\n\\t\\tvar topCloseness, bottomCloseness;\\n\\t\\tvar leftCloseness, rightCloseness;\\n\\t\\tvar topVel = 0;\\n\\t\\tvar leftVel = 0;\\n\\n\\t\\tif (bounds) { // only scroll if scrollEl exists\\n\\n\\t\\t\\t// compute closeness to edges. valid range is from 0.0 - 1.0\\n\\t\\t\\ttopCloseness = (sensitivity - (getEvY(ev) - bounds.top)) / sensitivity;\\n\\t\\t\\tbottomCloseness = (sensitivity - (bounds.bottom - getEvY(ev))) / sensitivity;\\n\\t\\t\\tleftCloseness = (sensitivity - (getEvX(ev) - bounds.left)) / sensitivity;\\n\\t\\t\\trightCloseness = (sensitivity - (bounds.right - getEvX(ev))) / sensitivity;\\n\\n\\t\\t\\t// translate vertical closeness into velocity.\\n\\t\\t\\t// mouse must be completely in bounds for velocity to happen.\\n\\t\\t\\tif (topCloseness >= 0 && topCloseness <= 1) {\\n\\t\\t\\t\\ttopVel = topCloseness * this.scrollSpeed * -1; // negative. for scrolling up\\n\\t\\t\\t}\\n\\t\\t\\telse if (bottomCloseness >= 0 && bottomCloseness <= 1) {\\n\\t\\t\\t\\ttopVel = bottomCloseness * this.scrollSpeed;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// translate horizontal closeness into velocity\\n\\t\\t\\tif (leftCloseness >= 0 && leftCloseness <= 1) {\\n\\t\\t\\t\\tleftVel = leftCloseness * this.scrollSpeed * -1; // negative. for scrolling left\\n\\t\\t\\t}\\n\\t\\t\\telse if (rightCloseness >= 0 && rightCloseness <= 1) {\\n\\t\\t\\t\\tleftVel = rightCloseness * this.scrollSpeed;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tthis.setScrollVel(topVel, leftVel);\\n\\t},\\n\\n\\n\\t// Sets the speed-of-scrolling for the scrollEl\\n\\tsetScrollVel: function(topVel, leftVel) {\\n\\n\\t\\tthis.scrollTopVel = topVel;\\n\\t\\tthis.scrollLeftVel = leftVel;\\n\\n\\t\\tthis.constrainScrollVel(); // massages into realistic values\\n\\n\\t\\t// if there is non-zero velocity, and an animation loop hasn't already started, then START\\n\\t\\tif ((this.scrollTopVel || this.scrollLeftVel) && !this.scrollIntervalId) {\\n\\t\\t\\tthis.scrollIntervalId = setInterval(\\n\\t\\t\\t\\tproxy(this, 'scrollIntervalFunc'), // scope to `this`\\n\\t\\t\\t\\tthis.scrollIntervalMs\\n\\t\\t\\t);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Forces scrollTopVel and scrollLeftVel to be zero if scrolling has already gone all the way\\n\\tconstrainScrollVel: function() {\\n\\t\\tvar el = this.scrollEl;\\n\\n\\t\\tif (this.scrollTopVel < 0) { // scrolling up?\\n\\t\\t\\tif (el.scrollTop() <= 0) { // already scrolled all the way up?\\n\\t\\t\\t\\tthis.scrollTopVel = 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse if (this.scrollTopVel > 0) { // scrolling down?\\n\\t\\t\\tif (el.scrollTop() + el[0].clientHeight >= el[0].scrollHeight) { // already scrolled all the way down?\\n\\t\\t\\t\\tthis.scrollTopVel = 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (this.scrollLeftVel < 0) { // scrolling left?\\n\\t\\t\\tif (el.scrollLeft() <= 0) { // already scrolled all the left?\\n\\t\\t\\t\\tthis.scrollLeftVel = 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse if (this.scrollLeftVel > 0) { // scrolling right?\\n\\t\\t\\tif (el.scrollLeft() + el[0].clientWidth >= el[0].scrollWidth) { // already scrolled all the way right?\\n\\t\\t\\t\\tthis.scrollLeftVel = 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// This function gets called during every iteration of the scrolling animation loop\\n\\tscrollIntervalFunc: function() {\\n\\t\\tvar el = this.scrollEl;\\n\\t\\tvar frac = this.scrollIntervalMs / 1000; // considering animation frequency, what the vel should be mult'd by\\n\\n\\t\\t// change the value of scrollEl's scroll\\n\\t\\tif (this.scrollTopVel) {\\n\\t\\t\\tel.scrollTop(el.scrollTop() + this.scrollTopVel * frac);\\n\\t\\t}\\n\\t\\tif (this.scrollLeftVel) {\\n\\t\\t\\tel.scrollLeft(el.scrollLeft() + this.scrollLeftVel * frac);\\n\\t\\t}\\n\\n\\t\\tthis.constrainScrollVel(); // since the scroll values changed, recompute the velocities\\n\\n\\t\\t// if scrolled all the way, which causes the vels to be zero, stop the animation loop\\n\\t\\tif (!this.scrollTopVel && !this.scrollLeftVel) {\\n\\t\\t\\tthis.endAutoScroll();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Kills any existing scrolling animation loop\\n\\tendAutoScroll: function() {\\n\\t\\tif (this.scrollIntervalId) {\\n\\t\\t\\tclearInterval(this.scrollIntervalId);\\n\\t\\t\\tthis.scrollIntervalId = null;\\n\\n\\t\\t\\tthis.handleScrollEnd();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Get called when the scrollEl is scrolled (NOTE: this is delayed via debounce)\\n\\thandleDebouncedScroll: function() {\\n\\t\\t// recompute all coordinates, but *only* if this is *not* part of our scrolling animation\\n\\t\\tif (!this.scrollIntervalId) {\\n\\t\\t\\tthis.handleScrollEnd();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Called when scrolling has stopped, whether through auto scroll, or the user scrolling\\n\\thandleScrollEnd: function() {\\n\\t}\\n\\n});\\n;;\\n\\n/* Tracks mouse movements over a component and raises events about which hit the mouse is over.\\n------------------------------------------------------------------------------------------------------------------------\\noptions:\\n- subjectEl\\n- subjectCenter\\n*/\\n\\nvar HitDragListener = DragListener.extend({\\n\\n\\tcomponent: null, // converts coordinates to hits\\n\\t\\t// methods: prepareHits, releaseHits, queryHit\\n\\n\\torigHit: null, // the hit the mouse was over when listening started\\n\\thit: null, // the hit the mouse is over\\n\\tcoordAdjust: null, // delta that will be added to the mouse coordinates when computing collisions\\n\\n\\n\\tconstructor: function(component, options) {\\n\\t\\tDragListener.call(this, options); // call the super-constructor\\n\\n\\t\\tthis.component = component;\\n\\t},\\n\\n\\n\\t// Called when drag listening starts (but a real drag has not necessarily began).\\n\\t// ev might be undefined if dragging was started manually.\\n\\thandleInteractionStart: function(ev) {\\n\\t\\tvar subjectEl = this.subjectEl;\\n\\t\\tvar subjectRect;\\n\\t\\tvar origPoint;\\n\\t\\tvar point;\\n\\n\\t\\tthis.computeCoords();\\n\\n\\t\\tif (ev) {\\n\\t\\t\\torigPoint = { left: getEvX(ev), top: getEvY(ev) };\\n\\t\\t\\tpoint = origPoint;\\n\\n\\t\\t\\t// constrain the point to bounds of the element being dragged\\n\\t\\t\\tif (subjectEl) {\\n\\t\\t\\t\\tsubjectRect = getOuterRect(subjectEl); // used for centering as well\\n\\t\\t\\t\\tpoint = constrainPoint(point, subjectRect);\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.origHit = this.queryHit(point.left, point.top);\\n\\n\\t\\t\\t// treat the center of the subject as the collision point?\\n\\t\\t\\tif (subjectEl && this.options.subjectCenter) {\\n\\n\\t\\t\\t\\t// only consider the area the subject overlaps the hit. best for large subjects.\\n\\t\\t\\t\\t// TODO: skip this if hit didn't supply left/right/top/bottom\\n\\t\\t\\t\\tif (this.origHit) {\\n\\t\\t\\t\\t\\tsubjectRect = intersectRects(this.origHit, subjectRect) ||\\n\\t\\t\\t\\t\\t\\tsubjectRect; // in case there is no intersection\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tpoint = getRectCenter(subjectRect);\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.coordAdjust = diffPoints(point, origPoint); // point - origPoint\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tthis.origHit = null;\\n\\t\\t\\tthis.coordAdjust = null;\\n\\t\\t}\\n\\n\\t\\t// call the super-method. do it after origHit has been computed\\n\\t\\tDragListener.prototype.handleInteractionStart.apply(this, arguments);\\n\\t},\\n\\n\\n\\t// Recomputes the drag-critical positions of elements\\n\\tcomputeCoords: function() {\\n\\t\\tthis.component.prepareHits();\\n\\t\\tthis.computeScrollBounds(); // why is this here??????\\n\\t},\\n\\n\\n\\t// Called when the actual drag has started\\n\\thandleDragStart: function(ev) {\\n\\t\\tvar hit;\\n\\n\\t\\tDragListener.prototype.handleDragStart.apply(this, arguments); // call the super-method\\n\\n\\t\\t// might be different from this.origHit if the min-distance is large\\n\\t\\thit = this.queryHit(getEvX(ev), getEvY(ev));\\n\\n\\t\\t// report the initial hit the mouse is over\\n\\t\\t// especially important if no min-distance and drag starts immediately\\n\\t\\tif (hit) {\\n\\t\\t\\tthis.handleHitOver(hit);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Called when the drag moves\\n\\thandleDrag: function(dx, dy, ev) {\\n\\t\\tvar hit;\\n\\n\\t\\tDragListener.prototype.handleDrag.apply(this, arguments); // call the super-method\\n\\n\\t\\thit = this.queryHit(getEvX(ev), getEvY(ev));\\n\\n\\t\\tif (!isHitsEqual(hit, this.hit)) { // a different hit than before?\\n\\t\\t\\tif (this.hit) {\\n\\t\\t\\t\\tthis.handleHitOut();\\n\\t\\t\\t}\\n\\t\\t\\tif (hit) {\\n\\t\\t\\t\\tthis.handleHitOver(hit);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Called when dragging has been stopped\\n\\thandleDragEnd: function() {\\n\\t\\tthis.handleHitDone();\\n\\t\\tDragListener.prototype.handleDragEnd.apply(this, arguments); // call the super-method\\n\\t},\\n\\n\\n\\t// Called when a the mouse has just moved over a new hit\\n\\thandleHitOver: function(hit) {\\n\\t\\tvar isOrig = isHitsEqual(hit, this.origHit);\\n\\n\\t\\tthis.hit = hit;\\n\\n\\t\\tthis.trigger('hitOver', this.hit, isOrig, this.origHit);\\n\\t},\\n\\n\\n\\t// Called when the mouse has just moved out of a hit\\n\\thandleHitOut: function() {\\n\\t\\tif (this.hit) {\\n\\t\\t\\tthis.trigger('hitOut', this.hit);\\n\\t\\t\\tthis.handleHitDone();\\n\\t\\t\\tthis.hit = null;\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Called after a hitOut. Also called before a dragStop\\n\\thandleHitDone: function() {\\n\\t\\tif (this.hit) {\\n\\t\\t\\tthis.trigger('hitDone', this.hit);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Called when the interaction ends, whether there was a real drag or not\\n\\thandleInteractionEnd: function() {\\n\\t\\tDragListener.prototype.handleInteractionEnd.apply(this, arguments); // call the super-method\\n\\n\\t\\tthis.origHit = null;\\n\\t\\tthis.hit = null;\\n\\n\\t\\tthis.component.releaseHits();\\n\\t},\\n\\n\\n\\t// Called when scrolling has stopped, whether through auto scroll, or the user scrolling\\n\\thandleScrollEnd: function() {\\n\\t\\tDragListener.prototype.handleScrollEnd.apply(this, arguments); // call the super-method\\n\\n\\t\\tthis.computeCoords(); // hits' absolute positions will be in new places. recompute\\n\\t},\\n\\n\\n\\t// Gets the hit underneath the coordinates for the given mouse event\\n\\tqueryHit: function(left, top) {\\n\\n\\t\\tif (this.coordAdjust) {\\n\\t\\t\\tleft += this.coordAdjust.left;\\n\\t\\t\\ttop += this.coordAdjust.top;\\n\\t\\t}\\n\\n\\t\\treturn this.component.queryHit(left, top);\\n\\t}\\n\\n});\\n\\n\\n// Returns `true` if the hits are identically equal. `false` otherwise. Must be from the same component.\\n// Two null values will be considered equal, as two \\\"out of the component\\\" states are the same.\\nfunction isHitsEqual(hit0, hit1) {\\n\\n\\tif (!hit0 && !hit1) {\\n\\t\\treturn true;\\n\\t}\\n\\n\\tif (hit0 && hit1) {\\n\\t\\treturn hit0.component === hit1.component &&\\n\\t\\t\\tisHitPropsWithin(hit0, hit1) &&\\n\\t\\t\\tisHitPropsWithin(hit1, hit0); // ensures all props are identical\\n\\t}\\n\\n\\treturn false;\\n}\\n\\n\\n// Returns true if all of subHit's non-standard properties are within superHit\\nfunction isHitPropsWithin(subHit, superHit) {\\n\\tfor (var propName in subHit) {\\n\\t\\tif (!/^(component|left|right|top|bottom)$/.test(propName)) {\\n\\t\\t\\tif (subHit[propName] !== superHit[propName]) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn true;\\n}\\n\\n;;\\n\\n/* Creates a clone of an element and lets it track the mouse as it moves\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nvar MouseFollower = Class.extend(ListenerMixin, {\\n\\n\\toptions: null,\\n\\n\\tsourceEl: null, // the element that will be cloned and made to look like it is dragging\\n\\tel: null, // the clone of `sourceEl` that will track the mouse\\n\\tparentEl: null, // the element that `el` (the clone) will be attached to\\n\\n\\t// the initial position of el, relative to the offset parent. made to match the initial offset of sourceEl\\n\\ttop0: null,\\n\\tleft0: null,\\n\\n\\t// the absolute coordinates of the initiating touch/mouse action\\n\\ty0: null,\\n\\tx0: null,\\n\\n\\t// the number of pixels the mouse has moved from its initial position\\n\\ttopDelta: null,\\n\\tleftDelta: null,\\n\\n\\tisFollowing: false,\\n\\tisHidden: false,\\n\\tisAnimating: false, // doing the revert animation?\\n\\n\\tconstructor: function(sourceEl, options) {\\n\\t\\tthis.options = options = options || {};\\n\\t\\tthis.sourceEl = sourceEl;\\n\\t\\tthis.parentEl = options.parentEl ? $(options.parentEl) : sourceEl.parent(); // default to sourceEl's parent\\n\\t},\\n\\n\\n\\t// Causes the element to start following the mouse\\n\\tstart: function(ev) {\\n\\t\\tif (!this.isFollowing) {\\n\\t\\t\\tthis.isFollowing = true;\\n\\n\\t\\t\\tthis.y0 = getEvY(ev);\\n\\t\\t\\tthis.x0 = getEvX(ev);\\n\\t\\t\\tthis.topDelta = 0;\\n\\t\\t\\tthis.leftDelta = 0;\\n\\n\\t\\t\\tif (!this.isHidden) {\\n\\t\\t\\t\\tthis.updatePosition();\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (getEvIsTouch(ev)) {\\n\\t\\t\\t\\tthis.listenTo($(document), 'touchmove', this.handleMove);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tthis.listenTo($(document), 'mousemove', this.handleMove);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Causes the element to stop following the mouse. If shouldRevert is true, will animate back to original position.\\n\\t// `callback` gets invoked when the animation is complete. If no animation, it is invoked immediately.\\n\\tstop: function(shouldRevert, callback) {\\n\\t\\tvar _this = this;\\n\\t\\tvar revertDuration = this.options.revertDuration;\\n\\n\\t\\tfunction complete() { // might be called by .animate(), which might change `this` context\\n\\t\\t\\t_this.isAnimating = false;\\n\\t\\t\\t_this.removeElement();\\n\\n\\t\\t\\t_this.top0 = _this.left0 = null; // reset state for future updatePosition calls\\n\\n\\t\\t\\tif (callback) {\\n\\t\\t\\t\\tcallback();\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (this.isFollowing && !this.isAnimating) { // disallow more than one stop animation at a time\\n\\t\\t\\tthis.isFollowing = false;\\n\\n\\t\\t\\tthis.stopListeningTo($(document));\\n\\n\\t\\t\\tif (shouldRevert && revertDuration && !this.isHidden) { // do a revert animation?\\n\\t\\t\\t\\tthis.isAnimating = true;\\n\\t\\t\\t\\tthis.el.animate({\\n\\t\\t\\t\\t\\ttop: this.top0,\\n\\t\\t\\t\\t\\tleft: this.left0\\n\\t\\t\\t\\t}, {\\n\\t\\t\\t\\t\\tduration: revertDuration,\\n\\t\\t\\t\\t\\tcomplete: complete\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tcomplete();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Gets the tracking element. Create it if necessary\\n\\tgetEl: function() {\\n\\t\\tvar el = this.el;\\n\\n\\t\\tif (!el) {\\n\\t\\t\\tel = this.el = this.sourceEl.clone()\\n\\t\\t\\t\\t.addClass(this.options.additionalClass || '')\\n\\t\\t\\t\\t.css({\\n\\t\\t\\t\\t\\tposition: 'absolute',\\n\\t\\t\\t\\t\\tvisibility: '', // in case original element was hidden (commonly through hideEvents())\\n\\t\\t\\t\\t\\tdisplay: this.isHidden ? 'none' : '', // for when initially hidden\\n\\t\\t\\t\\t\\tmargin: 0,\\n\\t\\t\\t\\t\\tright: 'auto', // erase and set width instead\\n\\t\\t\\t\\t\\tbottom: 'auto', // erase and set height instead\\n\\t\\t\\t\\t\\twidth: this.sourceEl.width(), // explicit height in case there was a 'right' value\\n\\t\\t\\t\\t\\theight: this.sourceEl.height(), // explicit width in case there was a 'bottom' value\\n\\t\\t\\t\\t\\topacity: this.options.opacity || '',\\n\\t\\t\\t\\t\\tzIndex: this.options.zIndex\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t// we don't want long taps or any mouse interaction causing selection/menus.\\n\\t\\t\\t// would use preventSelection(), but that prevents selectstart, causing problems.\\n\\t\\t\\tel.addClass('fc-unselectable');\\n\\n\\t\\t\\tel.appendTo(this.parentEl);\\n\\t\\t}\\n\\n\\t\\treturn el;\\n\\t},\\n\\n\\n\\t// Removes the tracking element if it has already been created\\n\\tremoveElement: function() {\\n\\t\\tif (this.el) {\\n\\t\\t\\tthis.el.remove();\\n\\t\\t\\tthis.el = null;\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Update the CSS position of the tracking element\\n\\tupdatePosition: function() {\\n\\t\\tvar sourceOffset;\\n\\t\\tvar origin;\\n\\n\\t\\tthis.getEl(); // ensure this.el\\n\\n\\t\\t// make sure origin info was computed\\n\\t\\tif (this.top0 === null) {\\n\\t\\t\\tsourceOffset = this.sourceEl.offset();\\n\\t\\t\\torigin = this.el.offsetParent().offset();\\n\\t\\t\\tthis.top0 = sourceOffset.top - origin.top;\\n\\t\\t\\tthis.left0 = sourceOffset.left - origin.left;\\n\\t\\t}\\n\\n\\t\\tthis.el.css({\\n\\t\\t\\ttop: this.top0 + this.topDelta,\\n\\t\\t\\tleft: this.left0 + this.leftDelta\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Gets called when the user moves the mouse\\n\\thandleMove: function(ev) {\\n\\t\\tthis.topDelta = getEvY(ev) - this.y0;\\n\\t\\tthis.leftDelta = getEvX(ev) - this.x0;\\n\\n\\t\\tif (!this.isHidden) {\\n\\t\\t\\tthis.updatePosition();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Temporarily makes the tracking element invisible. Can be called before following starts\\n\\thide: function() {\\n\\t\\tif (!this.isHidden) {\\n\\t\\t\\tthis.isHidden = true;\\n\\t\\t\\tif (this.el) {\\n\\t\\t\\t\\tthis.el.hide();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Show the tracking element after it has been temporarily hidden\\n\\tshow: function() {\\n\\t\\tif (this.isHidden) {\\n\\t\\t\\tthis.isHidden = false;\\n\\t\\t\\tthis.updatePosition();\\n\\t\\t\\tthis.getEl().show();\\n\\t\\t}\\n\\t}\\n\\n});\\n\\n;;\\n\\n/* An abstract class comprised of a \\\"grid\\\" of areas that each represent a specific datetime\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nvar Grid = FC.Grid = Class.extend(ListenerMixin, MouseIgnorerMixin, {\\n\\n\\t// self-config, overridable by subclasses\\n\\thasDayInteractions: true, // can user click/select ranges of time?\\n\\n\\tview: null, // a View object\\n\\tisRTL: null, // shortcut to the view's isRTL option\\n\\n\\tstart: null,\\n\\tend: null,\\n\\n\\tel: null, // the containing element\\n\\telsByFill: null, // a hash of jQuery element sets used for rendering each fill. Keyed by fill name.\\n\\n\\t// derived from options\\n\\teventTimeFormat: null,\\n\\tdisplayEventTime: null,\\n\\tdisplayEventEnd: null,\\n\\n\\tminResizeDuration: null, // TODO: hack. set by subclasses. minumum event resize duration\\n\\n\\t// if defined, holds the unit identified (ex: \\\"year\\\" or \\\"month\\\") that determines the level of granularity\\n\\t// of the date areas. if not defined, assumes to be day and time granularity.\\n\\t// TODO: port isTimeScale into same system?\\n\\tlargeUnit: null,\\n\\n\\tdayDragListener: null,\\n\\tsegDragListener: null,\\n\\tsegResizeListener: null,\\n\\texternalDragListener: null,\\n\\n\\n\\tconstructor: function(view) {\\n\\t\\tthis.view = view;\\n\\t\\tthis.isRTL = view.opt('isRTL');\\n\\t\\tthis.elsByFill = {};\\n\\n\\t\\tthis.dayDragListener = this.buildDayDragListener();\\n\\t\\tthis.initMouseIgnoring();\\n\\t},\\n\\n\\n\\t/* Options\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Generates the format string used for event time text, if not explicitly defined by 'timeFormat'\\n\\tcomputeEventTimeFormat: function() {\\n\\t\\treturn this.view.opt('smallTimeFormat');\\n\\t},\\n\\n\\n\\t// Determines whether events should have their end times displayed, if not explicitly defined by 'displayEventTime'.\\n\\t// Only applies to non-all-day events.\\n\\tcomputeDisplayEventTime: function() {\\n\\t\\treturn true;\\n\\t},\\n\\n\\n\\t// Determines whether events should have their end times displayed, if not explicitly defined by 'displayEventEnd'\\n\\tcomputeDisplayEventEnd: function() {\\n\\t\\treturn true;\\n\\t},\\n\\n\\n\\t/* Dates\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Tells the grid about what period of time to display.\\n\\t// Any date-related internal data should be generated.\\n\\tsetRange: function(range) {\\n\\t\\tthis.start = range.start.clone();\\n\\t\\tthis.end = range.end.clone();\\n\\n\\t\\tthis.rangeUpdated();\\n\\t\\tthis.processRangeOptions();\\n\\t},\\n\\n\\n\\t// Called when internal variables that rely on the range should be updated\\n\\trangeUpdated: function() {\\n\\t},\\n\\n\\n\\t// Updates values that rely on options and also relate to range\\n\\tprocessRangeOptions: function() {\\n\\t\\tvar view = this.view;\\n\\t\\tvar displayEventTime;\\n\\t\\tvar displayEventEnd;\\n\\n\\t\\tthis.eventTimeFormat =\\n\\t\\t\\tview.opt('eventTimeFormat') ||\\n\\t\\t\\tview.opt('timeFormat') || // deprecated\\n\\t\\t\\tthis.computeEventTimeFormat();\\n\\n\\t\\tdisplayEventTime = view.opt('displayEventTime');\\n\\t\\tif (displayEventTime == null) {\\n\\t\\t\\tdisplayEventTime = this.computeDisplayEventTime(); // might be based off of range\\n\\t\\t}\\n\\n\\t\\tdisplayEventEnd = view.opt('displayEventEnd');\\n\\t\\tif (displayEventEnd == null) {\\n\\t\\t\\tdisplayEventEnd = this.computeDisplayEventEnd(); // might be based off of range\\n\\t\\t}\\n\\n\\t\\tthis.displayEventTime = displayEventTime;\\n\\t\\tthis.displayEventEnd = displayEventEnd;\\n\\t},\\n\\n\\n\\t// Converts a span (has unzoned start/end and any other grid-specific location information)\\n\\t// into an array of segments (pieces of events whose format is decided by the grid).\\n\\tspanToSegs: function(span) {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t// Diffs the two dates, returning a duration, based on granularity of the grid\\n\\t// TODO: port isTimeScale into this system?\\n\\tdiffDates: function(a, b) {\\n\\t\\tif (this.largeUnit) {\\n\\t\\t\\treturn diffByUnit(a, b, this.largeUnit);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn diffDayTime(a, b);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Hit Area\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Called before one or more queryHit calls might happen. Should prepare any cached coordinates for queryHit\\n\\tprepareHits: function() {\\n\\t},\\n\\n\\n\\t// Called when queryHit calls have subsided. Good place to clear any coordinate caches.\\n\\treleaseHits: function() {\\n\\t},\\n\\n\\n\\t// Given coordinates from the topleft of the document, return data about the date-related area underneath.\\n\\t// Can return an object with arbitrary properties (although top/right/left/bottom are encouraged).\\n\\t// Must have a `grid` property, a reference to this current grid. TODO: avoid this\\n\\t// The returned object will be processed by getHitSpan and getHitEl.\\n\\tqueryHit: function(leftOffset, topOffset) {\\n\\t},\\n\\n\\n\\t// Given position-level information about a date-related area within the grid,\\n\\t// should return an object with at least a start/end date. Can provide other information as well.\\n\\tgetHitSpan: function(hit) {\\n\\t},\\n\\n\\n\\t// Given position-level information about a date-related area within the grid,\\n\\t// should return a jQuery element that best represents it. passed to dayClick callback.\\n\\tgetHitEl: function(hit) {\\n\\t},\\n\\n\\n\\t/* Rendering\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Sets the container element that the grid should render inside of.\\n\\t// Does other DOM-related initializations.\\n\\tsetElement: function(el) {\\n\\t\\tthis.el = el;\\n\\n\\t\\tif (this.hasDayInteractions) {\\n\\t\\t\\tpreventSelection(el);\\n\\n\\t\\t\\tthis.bindDayHandler('touchstart', this.dayTouchStart);\\n\\t\\t\\tthis.bindDayHandler('mousedown', this.dayMousedown);\\n\\t\\t}\\n\\n\\t\\t// attach event-element-related handlers. in Grid.events\\n\\t\\t// same garbage collection note as above.\\n\\t\\tthis.bindSegHandlers();\\n\\n\\t\\tthis.bindGlobalHandlers();\\n\\t},\\n\\n\\n\\tbindDayHandler: function(name, handler) {\\n\\t\\tvar _this = this;\\n\\n\\t\\t// attach a handler to the grid's root element.\\n\\t\\t// jQuery will take care of unregistering them when removeElement gets called.\\n\\t\\tthis.el.on(name, function(ev) {\\n\\t\\t\\tif (\\n\\t\\t\\t\\t!$(ev.target).is(\\n\\t\\t\\t\\t\\t_this.segSelector + ',' + // directly on an event element\\n\\t\\t\\t\\t\\t_this.segSelector + ' *,' + // within an event element\\n\\t\\t\\t\\t\\t'.fc-more,' + // a \\\"more..\\\" link\\n\\t\\t\\t\\t\\t'a[data-goto]' // a clickable nav link\\n\\t\\t\\t\\t)\\n\\t\\t\\t) {\\n\\t\\t\\t\\treturn handler.call(_this, ev);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Removes the grid's container element from the DOM. Undoes any other DOM-related attachments.\\n\\t// DOES NOT remove any content beforehand (doesn't clear events or call unrenderDates), unlike View\\n\\tremoveElement: function() {\\n\\t\\tthis.unbindGlobalHandlers();\\n\\t\\tthis.clearDragListeners();\\n\\n\\t\\tthis.el.remove();\\n\\n\\t\\t// NOTE: we don't null-out this.el for the same reasons we don't do it within View::removeElement\\n\\t},\\n\\n\\n\\t// Renders the basic structure of grid view before any content is rendered\\n\\trenderSkeleton: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Renders the grid's date-related content (like areas that represent days/times).\\n\\t// Assumes setRange has already been called and the skeleton has already been rendered.\\n\\trenderDates: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Unrenders the grid's date-related content\\n\\tunrenderDates: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t/* Handlers\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Binds DOM handlers to elements that reside outside the grid, such as the document\\n\\tbindGlobalHandlers: function() {\\n\\t\\tthis.listenTo($(document), {\\n\\t\\t\\tdragstart: this.externalDragStart, // jqui\\n\\t\\t\\tsortstart: this.externalDragStart // jqui\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Unbinds DOM handlers from elements that reside outside the grid\\n\\tunbindGlobalHandlers: function() {\\n\\t\\tthis.stopListeningTo($(document));\\n\\t},\\n\\n\\n\\t// Process a mousedown on an element that represents a day. For day clicking and selecting.\\n\\tdayMousedown: function(ev) {\\n\\t\\tif (!this.isIgnoringMouse) {\\n\\t\\t\\tthis.dayDragListener.startInteraction(ev, {\\n\\t\\t\\t\\t//distance: 5, // needs more work if we want dayClick to fire correctly\\n\\t\\t\\t});\\n\\t\\t}\\n\\t},\\n\\n\\n\\tdayTouchStart: function(ev) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar selectLongPressDelay = view.opt('selectLongPressDelay');\\n\\n\\t\\t// HACK to prevent a user's clickaway for unselecting a range or an event\\n\\t\\t// from causing a dayClick.\\n\\t\\tif (view.isSelected || view.selectedEvent) {\\n\\t\\t\\tthis.tempIgnoreMouse();\\n\\t\\t}\\n\\n\\t\\tif (selectLongPressDelay == null) {\\n\\t\\t\\tselectLongPressDelay = view.opt('longPressDelay'); // fallback\\n\\t\\t}\\n\\n\\t\\tthis.dayDragListener.startInteraction(ev, {\\n\\t\\t\\tdelay: selectLongPressDelay\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Creates a listener that tracks the user's drag across day elements.\\n\\t// For day clicking and selecting.\\n\\tbuildDayDragListener: function() {\\n\\t\\tvar _this = this;\\n\\t\\tvar view = this.view;\\n\\t\\tvar isSelectable = view.opt('selectable');\\n\\t\\tvar dayClickHit; // null if invalid dayClick\\n\\t\\tvar selectionSpan; // null if invalid selection\\n\\n\\t\\t// this listener tracks a mousedown on a day element, and a subsequent drag.\\n\\t\\t// if the drag ends on the same day, it is a 'dayClick'.\\n\\t\\t// if 'selectable' is enabled, this listener also detects selections.\\n\\t\\tvar dragListener = new HitDragListener(this, {\\n\\t\\t\\tscroll: view.opt('dragScroll'),\\n\\t\\t\\tinteractionStart: function() {\\n\\t\\t\\t\\tdayClickHit = dragListener.origHit; // for dayClick, where no dragging happens\\n\\t\\t\\t\\tselectionSpan = null;\\n\\t\\t\\t},\\n\\t\\t\\tdragStart: function() {\\n\\t\\t\\t\\tview.unselect(); // since we could be rendering a new selection, we want to clear any old one\\n\\t\\t\\t},\\n\\t\\t\\thitOver: function(hit, isOrig, origHit) {\\n\\t\\t\\t\\tif (origHit) { // click needs to have started on a hit\\n\\n\\t\\t\\t\\t\\t// if user dragged to another cell at any point, it can no longer be a dayClick\\n\\t\\t\\t\\t\\tif (!isOrig) {\\n\\t\\t\\t\\t\\t\\tdayClickHit = null;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (isSelectable) {\\n\\t\\t\\t\\t\\t\\tselectionSpan = _this.computeSelection(\\n\\t\\t\\t\\t\\t\\t\\t_this.getHitSpan(origHit),\\n\\t\\t\\t\\t\\t\\t\\t_this.getHitSpan(hit)\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tif (selectionSpan) {\\n\\t\\t\\t\\t\\t\\t\\t_this.renderSelection(selectionSpan);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse if (selectionSpan === false) {\\n\\t\\t\\t\\t\\t\\t\\tdisableCursor();\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\thitOut: function() { // called before mouse moves to a different hit OR moved out of all hits\\n\\t\\t\\t\\tdayClickHit = null;\\n\\t\\t\\t\\tselectionSpan = null;\\n\\t\\t\\t\\t_this.unrenderSelection();\\n\\t\\t\\t},\\n\\t\\t\\thitDone: function() { // called after a hitOut OR before a dragEnd\\n\\t\\t\\t\\tenableCursor();\\n\\t\\t\\t},\\n\\t\\t\\tinteractionEnd: function(ev, isCancelled) {\\n\\t\\t\\t\\tif (!isCancelled) {\\n\\t\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\t\\tdayClickHit &&\\n\\t\\t\\t\\t\\t\\t!_this.isIgnoringMouse // see hack in dayTouchStart\\n\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\tview.triggerDayClick(\\n\\t\\t\\t\\t\\t\\t\\t_this.getHitSpan(dayClickHit),\\n\\t\\t\\t\\t\\t\\t\\t_this.getHitEl(dayClickHit),\\n\\t\\t\\t\\t\\t\\t\\tev\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif (selectionSpan) {\\n\\t\\t\\t\\t\\t\\t// the selection will already have been rendered. just report it\\n\\t\\t\\t\\t\\t\\tview.reportSelection(selectionSpan, ev);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn dragListener;\\n\\t},\\n\\n\\n\\t// Kills all in-progress dragging.\\n\\t// Useful for when public API methods that result in re-rendering are invoked during a drag.\\n\\t// Also useful for when touch devices misbehave and don't fire their touchend.\\n\\tclearDragListeners: function() {\\n\\t\\tthis.dayDragListener.endInteraction();\\n\\n\\t\\tif (this.segDragListener) {\\n\\t\\t\\tthis.segDragListener.endInteraction(); // will clear this.segDragListener\\n\\t\\t}\\n\\t\\tif (this.segResizeListener) {\\n\\t\\t\\tthis.segResizeListener.endInteraction(); // will clear this.segResizeListener\\n\\t\\t}\\n\\t\\tif (this.externalDragListener) {\\n\\t\\t\\tthis.externalDragListener.endInteraction(); // will clear this.externalDragListener\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Event Helper\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\t// TODO: should probably move this to Grid.events, like we did event dragging / resizing\\n\\n\\n\\t// Renders a mock event at the given event location, which contains zoned start/end properties.\\n\\t// Returns all mock event elements.\\n\\trenderEventLocationHelper: function(eventLocation, sourceSeg) {\\n\\t\\tvar fakeEvent = this.fabricateHelperEvent(eventLocation, sourceSeg);\\n\\n\\t\\treturn this.renderHelper(fakeEvent, sourceSeg); // do the actual rendering\\n\\t},\\n\\n\\n\\t// Builds a fake event given zoned event date properties and a segment is should be inspired from.\\n\\t// The range's end can be null, in which case the mock event that is rendered will have a null end time.\\n\\t// `sourceSeg` is the internal segment object involved in the drag. If null, something external is dragging.\\n\\tfabricateHelperEvent: function(eventLocation, sourceSeg) {\\n\\t\\tvar fakeEvent = sourceSeg ? createObject(sourceSeg.event) : {}; // mask the original event object if possible\\n\\n\\t\\tfakeEvent.start = eventLocation.start.clone();\\n\\t\\tfakeEvent.end = eventLocation.end ? eventLocation.end.clone() : null;\\n\\t\\tfakeEvent.allDay = null; // force it to be freshly computed by normalizeEventDates\\n\\t\\tthis.view.calendar.normalizeEventDates(fakeEvent);\\n\\n\\t\\t// this extra className will be useful for differentiating real events from mock events in CSS\\n\\t\\tfakeEvent.className = (fakeEvent.className || []).concat('fc-helper');\\n\\n\\t\\t// if something external is being dragged in, don't render a resizer\\n\\t\\tif (!sourceSeg) {\\n\\t\\t\\tfakeEvent.editable = false;\\n\\t\\t}\\n\\n\\t\\treturn fakeEvent;\\n\\t},\\n\\n\\n\\t// Renders a mock event. Given zoned event date properties.\\n\\t// Must return all mock event elements.\\n\\trenderHelper: function(eventLocation, sourceSeg) {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t// Unrenders a mock event\\n\\tunrenderHelper: function() {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t/* Selection\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of a selection. Will highlight by default but can be overridden by subclasses.\\n\\t// Given a span (unzoned start/end and other misc data)\\n\\trenderSelection: function(span) {\\n\\t\\tthis.renderHighlight(span);\\n\\t},\\n\\n\\n\\t// Unrenders any visual indications of a selection. Will unrender a highlight by default.\\n\\tunrenderSelection: function() {\\n\\t\\tthis.unrenderHighlight();\\n\\t},\\n\\n\\n\\t// Given the first and last date-spans of a selection, returns another date-span object.\\n\\t// Subclasses can override and provide additional data in the span object. Will be passed to renderSelection().\\n\\t// Will return false if the selection is invalid and this should be indicated to the user.\\n\\t// Will return null/undefined if a selection invalid but no error should be reported.\\n\\tcomputeSelection: function(span0, span1) {\\n\\t\\tvar span = this.computeSelectionSpan(span0, span1);\\n\\n\\t\\tif (span && !this.view.calendar.isSelectionSpanAllowed(span)) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\treturn span;\\n\\t},\\n\\n\\n\\t// Given two spans, must return the combination of the two.\\n\\t// TODO: do this separation of concerns (combining VS validation) for event dnd/resize too.\\n\\tcomputeSelectionSpan: function(span0, span1) {\\n\\t\\tvar dates = [ span0.start, span0.end, span1.start, span1.end ];\\n\\n\\t\\tdates.sort(compareNumbers); // sorts chronologically. works with Moments\\n\\n\\t\\treturn { start: dates[0].clone(), end: dates[3].clone() };\\n\\t},\\n\\n\\n\\t/* Highlight\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders an emphasis on the given date range. Given a span (unzoned start/end and other misc data)\\n\\trenderHighlight: function(span) {\\n\\t\\tthis.renderFill('highlight', this.spanToSegs(span));\\n\\t},\\n\\n\\n\\t// Unrenders the emphasis on a date range\\n\\tunrenderHighlight: function() {\\n\\t\\tthis.unrenderFill('highlight');\\n\\t},\\n\\n\\n\\t// Generates an array of classNames for rendering the highlight. Used by the fill system.\\n\\thighlightSegClasses: function() {\\n\\t\\treturn [ 'fc-highlight' ];\\n\\t},\\n\\n\\n\\t/* Business Hours\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderBusinessHours: function() {\\n\\t},\\n\\n\\n\\tunrenderBusinessHours: function() {\\n\\t},\\n\\n\\n\\t/* Now Indicator\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tgetNowIndicatorUnit: function() {\\n\\t},\\n\\n\\n\\trenderNowIndicator: function(date) {\\n\\t},\\n\\n\\n\\tunrenderNowIndicator: function() {\\n\\t},\\n\\n\\n\\t/* Fill System (highlight, background events, business hours)\\n\\t--------------------------------------------------------------------------------------------------------------------\\n\\tTODO: remove this system. like we did in TimeGrid\\n\\t*/\\n\\n\\n\\t// Renders a set of rectangles over the given segments of time.\\n\\t// MUST RETURN a subset of segs, the segs that were actually rendered.\\n\\t// Responsible for populating this.elsByFill. TODO: better API for expressing this requirement\\n\\trenderFill: function(type, segs) {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t// Unrenders a specific type of fill that is currently rendered on the grid\\n\\tunrenderFill: function(type) {\\n\\t\\tvar el = this.elsByFill[type];\\n\\n\\t\\tif (el) {\\n\\t\\t\\tel.remove();\\n\\t\\t\\tdelete this.elsByFill[type];\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Renders and assigns an `el` property for each fill segment. Generic enough to work with different types.\\n\\t// Only returns segments that successfully rendered.\\n\\t// To be harnessed by renderFill (implemented by subclasses).\\n\\t// Analagous to renderFgSegEls.\\n\\trenderFillSegEls: function(type, segs) {\\n\\t\\tvar _this = this;\\n\\t\\tvar segElMethod = this[type + 'SegEl'];\\n\\t\\tvar html = '';\\n\\t\\tvar renderedSegs = [];\\n\\t\\tvar i;\\n\\n\\t\\tif (segs.length) {\\n\\n\\t\\t\\t// build a large concatenation of segment HTML\\n\\t\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\t\\thtml += this.fillSegHtml(type, segs[i]);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Grab individual elements from the combined HTML string. Use each as the default rendering.\\n\\t\\t\\t// Then, compute the 'el' for each segment.\\n\\t\\t\\t$(html).each(function(i, node) {\\n\\t\\t\\t\\tvar seg = segs[i];\\n\\t\\t\\t\\tvar el = $(node);\\n\\n\\t\\t\\t\\t// allow custom filter methods per-type\\n\\t\\t\\t\\tif (segElMethod) {\\n\\t\\t\\t\\t\\tel = segElMethod.call(_this, seg, el);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (el) { // custom filters did not cancel the render\\n\\t\\t\\t\\t\\tel = $(el); // allow custom filter to return raw DOM node\\n\\n\\t\\t\\t\\t\\t// correct element type? (would be bad if a non-TD were inserted into a table for example)\\n\\t\\t\\t\\t\\tif (el.is(_this.fillSegTag)) {\\n\\t\\t\\t\\t\\t\\tseg.el = el;\\n\\t\\t\\t\\t\\t\\trenderedSegs.push(seg);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\treturn renderedSegs;\\n\\t},\\n\\n\\n\\tfillSegTag: 'div', // subclasses can override\\n\\n\\n\\t// Builds the HTML needed for one fill segment. Generic enough to work with different types.\\n\\tfillSegHtml: function(type, seg) {\\n\\n\\t\\t// custom hooks per-type\\n\\t\\tvar classesMethod = this[type + 'SegClasses'];\\n\\t\\tvar cssMethod = this[type + 'SegCss'];\\n\\n\\t\\tvar classes = classesMethod ? classesMethod.call(this, seg) : [];\\n\\t\\tvar css = cssToStr(cssMethod ? cssMethod.call(this, seg) : {});\\n\\n\\t\\treturn '<' + this.fillSegTag +\\n\\t\\t\\t(classes.length ? ' class=\\\"' + classes.join(' ') + '\\\"' : '') +\\n\\t\\t\\t(css ? ' style=\\\"' + css + '\\\"' : '') +\\n\\t\\t\\t' />';\\n\\t},\\n\\n\\n\\n\\t/* Generic rendering utilities for subclasses\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Computes HTML classNames for a single-day element\\n\\tgetDayClasses: function(date, noThemeHighlight) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar today = view.calendar.getNow();\\n\\t\\tvar classes = [ 'fc-' + dayIDs[date.day()] ];\\n\\n\\t\\tif (\\n\\t\\t\\tview.intervalDuration.as('months') == 1 &&\\n\\t\\t\\tdate.month() != view.intervalStart.month()\\n\\t\\t) {\\n\\t\\t\\tclasses.push('fc-other-month');\\n\\t\\t}\\n\\n\\t\\tif (date.isSame(today, 'day')) {\\n\\t\\t\\tclasses.push('fc-today');\\n\\n\\t\\t\\tif (noThemeHighlight !== true) {\\n\\t\\t\\t\\tclasses.push(view.highlightStateClass);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse if (date < today) {\\n\\t\\t\\tclasses.push('fc-past');\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tclasses.push('fc-future');\\n\\t\\t}\\n\\n\\t\\treturn classes;\\n\\t}\\n\\n});\\n\\n;;\\n\\n/* Event-rendering and event-interaction methods for the abstract Grid class\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nGrid.mixin({\\n\\n\\t// self-config, overridable by subclasses\\n\\tsegSelector: '.fc-event-container > *', // what constitutes an event element?\\n\\n\\tmousedOverSeg: null, // the segment object the user's mouse is over. null if over nothing\\n\\tisDraggingSeg: false, // is a segment being dragged? boolean\\n\\tisResizingSeg: false, // is a segment being resized? boolean\\n\\tisDraggingExternal: false, // jqui-dragging an external element? boolean\\n\\tsegs: null, // the *event* segments currently rendered in the grid. TODO: rename to `eventSegs`\\n\\n\\n\\t// Renders the given events onto the grid\\n\\trenderEvents: function(events) {\\n\\t\\tvar bgEvents = [];\\n\\t\\tvar fgEvents = [];\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < events.length; i++) {\\n\\t\\t\\t(isBgEvent(events[i]) ? bgEvents : fgEvents).push(events[i]);\\n\\t\\t}\\n\\n\\t\\tthis.segs = [].concat( // record all segs\\n\\t\\t\\tthis.renderBgEvents(bgEvents),\\n\\t\\t\\tthis.renderFgEvents(fgEvents)\\n\\t\\t);\\n\\t},\\n\\n\\n\\trenderBgEvents: function(events) {\\n\\t\\tvar segs = this.eventsToSegs(events);\\n\\n\\t\\t// renderBgSegs might return a subset of segs, segs that were actually rendered\\n\\t\\treturn this.renderBgSegs(segs) || segs;\\n\\t},\\n\\n\\n\\trenderFgEvents: function(events) {\\n\\t\\tvar segs = this.eventsToSegs(events);\\n\\n\\t\\t// renderFgSegs might return a subset of segs, segs that were actually rendered\\n\\t\\treturn this.renderFgSegs(segs) || segs;\\n\\t},\\n\\n\\n\\t// Unrenders all events currently rendered on the grid\\n\\tunrenderEvents: function() {\\n\\t\\tthis.handleSegMouseout(); // trigger an eventMouseout if user's mouse is over an event\\n\\t\\tthis.clearDragListeners();\\n\\n\\t\\tthis.unrenderFgSegs();\\n\\t\\tthis.unrenderBgSegs();\\n\\n\\t\\tthis.segs = null;\\n\\t},\\n\\n\\n\\t// Retrieves all rendered segment objects currently rendered on the grid\\n\\tgetEventSegs: function() {\\n\\t\\treturn this.segs || [];\\n\\t},\\n\\n\\n\\t/* Foreground Segment Rendering\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders foreground event segments onto the grid. May return a subset of segs that were rendered.\\n\\trenderFgSegs: function(segs) {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t// Unrenders all currently rendered foreground segments\\n\\tunrenderFgSegs: function() {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t// Renders and assigns an `el` property for each foreground event segment.\\n\\t// Only returns segments that successfully rendered.\\n\\t// A utility that subclasses may use.\\n\\trenderFgSegEls: function(segs, disableResizing) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar html = '';\\n\\t\\tvar renderedSegs = [];\\n\\t\\tvar i;\\n\\n\\t\\tif (segs.length) { // don't build an empty html string\\n\\n\\t\\t\\t// build a large concatenation of event segment HTML\\n\\t\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\t\\thtml += this.fgSegHtml(segs[i], disableResizing);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Grab individual elements from the combined HTML string. Use each as the default rendering.\\n\\t\\t\\t// Then, compute the 'el' for each segment. An el might be null if the eventRender callback returned false.\\n\\t\\t\\t$(html).each(function(i, node) {\\n\\t\\t\\t\\tvar seg = segs[i];\\n\\t\\t\\t\\tvar el = view.resolveEventEl(seg.event, $(node));\\n\\n\\t\\t\\t\\tif (el) {\\n\\t\\t\\t\\t\\tel.data('fc-seg', seg); // used by handlers\\n\\t\\t\\t\\t\\tseg.el = el;\\n\\t\\t\\t\\t\\trenderedSegs.push(seg);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\treturn renderedSegs;\\n\\t},\\n\\n\\n\\t// Generates the HTML for the default rendering of a foreground event segment. Used by renderFgSegEls()\\n\\tfgSegHtml: function(seg, disableResizing) {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t/* Background Segment Rendering\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders the given background event segments onto the grid.\\n\\t// Returns a subset of the segs that were actually rendered.\\n\\trenderBgSegs: function(segs) {\\n\\t\\treturn this.renderFill('bgEvent', segs);\\n\\t},\\n\\n\\n\\t// Unrenders all the currently rendered background event segments\\n\\tunrenderBgSegs: function() {\\n\\t\\tthis.unrenderFill('bgEvent');\\n\\t},\\n\\n\\n\\t// Renders a background event element, given the default rendering. Called by the fill system.\\n\\tbgEventSegEl: function(seg, el) {\\n\\t\\treturn this.view.resolveEventEl(seg.event, el); // will filter through eventRender\\n\\t},\\n\\n\\n\\t// Generates an array of classNames to be used for the default rendering of a background event.\\n\\t// Called by fillSegHtml.\\n\\tbgEventSegClasses: function(seg) {\\n\\t\\tvar event = seg.event;\\n\\t\\tvar source = event.source || {};\\n\\n\\t\\treturn [ 'fc-bgevent' ].concat(\\n\\t\\t\\tevent.className,\\n\\t\\t\\tsource.className || []\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Generates a semicolon-separated CSS string to be used for the default rendering of a background event.\\n\\t// Called by fillSegHtml.\\n\\tbgEventSegCss: function(seg) {\\n\\t\\treturn {\\n\\t\\t\\t'background-color': this.getSegSkinCss(seg)['background-color']\\n\\t\\t};\\n\\t},\\n\\n\\n\\t// Generates an array of classNames to be used for the rendering business hours overlay. Called by the fill system.\\n\\t// Called by fillSegHtml.\\n\\tbusinessHoursSegClasses: function(seg) {\\n\\t\\treturn [ 'fc-nonbusiness', 'fc-bgevent' ];\\n\\t},\\n\\n\\n\\t/* Business Hours\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Compute business hour segs for the grid's current date range.\\n\\t// Caller must ask if whole-day business hours are needed.\\n\\t// If no `businessHours` configuration value is specified, assumes the calendar default.\\n\\tbuildBusinessHourSegs: function(wholeDay, businessHours) {\\n\\t\\treturn this.eventsToSegs(\\n\\t\\t\\tthis.buildBusinessHourEvents(wholeDay, businessHours)\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Compute business hour *events* for the grid's current date range.\\n\\t// Caller must ask if whole-day business hours are needed.\\n\\t// If no `businessHours` configuration value is specified, assumes the calendar default.\\n\\tbuildBusinessHourEvents: function(wholeDay, businessHours) {\\n\\t\\tvar calendar = this.view.calendar;\\n\\t\\tvar events;\\n\\n\\t\\tif (businessHours == null) {\\n\\t\\t\\t// fallback\\n\\t\\t\\t// access from calendawr. don't access from view. doesn't update with dynamic options.\\n\\t\\t\\tbusinessHours = calendar.options.businessHours;\\n\\t\\t}\\n\\n\\t\\tevents = calendar.computeBusinessHourEvents(wholeDay, businessHours);\\n\\n\\t\\t// HACK. Eventually refactor business hours \\\"events\\\" system.\\n\\t\\t// If no events are given, but businessHours is activated, this means the entire visible range should be\\n\\t\\t// marked as *not* business-hours, via inverse-background rendering.\\n\\t\\tif (!events.length && businessHours) {\\n\\t\\t\\tevents = [\\n\\t\\t\\t\\t$.extend({}, BUSINESS_HOUR_EVENT_DEFAULTS, {\\n\\t\\t\\t\\t\\tstart: this.view.end, // guaranteed out-of-range\\n\\t\\t\\t\\t\\tend: this.view.end,   // \\\"\\n\\t\\t\\t\\t\\tdow: null\\n\\t\\t\\t\\t})\\n\\t\\t\\t];\\n\\t\\t}\\n\\n\\t\\treturn events;\\n\\t},\\n\\n\\n\\t/* Handlers\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Attaches event-element-related handlers for *all* rendered event segments of the view.\\n\\tbindSegHandlers: function() {\\n\\t\\tthis.bindSegHandlersToEl(this.el);\\n\\t},\\n\\n\\n\\t// Attaches event-element-related handlers to an arbitrary container element. leverages bubbling.\\n\\tbindSegHandlersToEl: function(el) {\\n\\t\\tthis.bindSegHandlerToEl(el, 'touchstart', this.handleSegTouchStart);\\n\\t\\tthis.bindSegHandlerToEl(el, 'touchend', this.handleSegTouchEnd);\\n\\t\\tthis.bindSegHandlerToEl(el, 'mouseenter', this.handleSegMouseover);\\n\\t\\tthis.bindSegHandlerToEl(el, 'mouseleave', this.handleSegMouseout);\\n\\t\\tthis.bindSegHandlerToEl(el, 'mousedown', this.handleSegMousedown);\\n\\t\\tthis.bindSegHandlerToEl(el, 'click', this.handleSegClick);\\n\\t},\\n\\n\\n\\t// Executes a handler for any a user-interaction on a segment.\\n\\t// Handler gets called with (seg, ev), and with the `this` context of the Grid\\n\\tbindSegHandlerToEl: function(el, name, handler) {\\n\\t\\tvar _this = this;\\n\\n\\t\\tel.on(name, this.segSelector, function(ev) {\\n\\t\\t\\tvar seg = $(this).data('fc-seg'); // grab segment data. put there by View::renderEvents\\n\\n\\t\\t\\t// only call the handlers if there is not a drag/resize in progress\\n\\t\\t\\tif (seg && !_this.isDraggingSeg && !_this.isResizingSeg) {\\n\\t\\t\\t\\treturn handler.call(_this, seg, ev); // context will be the Grid\\n\\t\\t\\t}\\n\\t\\t});\\n\\t},\\n\\n\\n\\thandleSegClick: function(seg, ev) {\\n\\t\\tvar res = this.view.publiclyTrigger('eventClick', seg.el[0], seg.event, ev); // can return `false` to cancel\\n\\t\\tif (res === false) {\\n\\t\\t\\tev.preventDefault();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Updates internal state and triggers handlers for when an event element is moused over\\n\\thandleSegMouseover: function(seg, ev) {\\n\\t\\tif (\\n\\t\\t\\t!this.isIgnoringMouse &&\\n\\t\\t\\t!this.mousedOverSeg\\n\\t\\t) {\\n\\t\\t\\tthis.mousedOverSeg = seg;\\n\\t\\t\\tif (this.view.isEventResizable(seg.event)) {\\n\\t\\t\\t\\tseg.el.addClass('fc-allow-mouse-resize');\\n\\t\\t\\t}\\n\\t\\t\\tthis.view.publiclyTrigger('eventMouseover', seg.el[0], seg.event, ev);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Updates internal state and triggers handlers for when an event element is moused out.\\n\\t// Can be given no arguments, in which case it will mouseout the segment that was previously moused over.\\n\\thandleSegMouseout: function(seg, ev) {\\n\\t\\tev = ev || {}; // if given no args, make a mock mouse event\\n\\n\\t\\tif (this.mousedOverSeg) {\\n\\t\\t\\tseg = seg || this.mousedOverSeg; // if given no args, use the currently moused-over segment\\n\\t\\t\\tthis.mousedOverSeg = null;\\n\\t\\t\\tif (this.view.isEventResizable(seg.event)) {\\n\\t\\t\\t\\tseg.el.removeClass('fc-allow-mouse-resize');\\n\\t\\t\\t}\\n\\t\\t\\tthis.view.publiclyTrigger('eventMouseout', seg.el[0], seg.event, ev);\\n\\t\\t}\\n\\t},\\n\\n\\n\\thandleSegMousedown: function(seg, ev) {\\n\\t\\tvar isResizing = this.startSegResize(seg, ev, { distance: 5 });\\n\\n\\t\\tif (!isResizing && this.view.isEventDraggable(seg.event)) {\\n\\t\\t\\tthis.buildSegDragListener(seg)\\n\\t\\t\\t\\t.startInteraction(ev, {\\n\\t\\t\\t\\t\\tdistance: 5\\n\\t\\t\\t\\t});\\n\\t\\t}\\n\\t},\\n\\n\\n\\thandleSegTouchStart: function(seg, ev) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar event = seg.event;\\n\\t\\tvar isSelected = view.isEventSelected(event);\\n\\t\\tvar isDraggable = view.isEventDraggable(event);\\n\\t\\tvar isResizable = view.isEventResizable(event);\\n\\t\\tvar isResizing = false;\\n\\t\\tvar dragListener;\\n\\t\\tvar eventLongPressDelay;\\n\\n\\t\\tif (isSelected && isResizable) {\\n\\t\\t\\t// only allow resizing of the event is selected\\n\\t\\t\\tisResizing = this.startSegResize(seg, ev);\\n\\t\\t}\\n\\n\\t\\tif (!isResizing && (isDraggable || isResizable)) { // allowed to be selected?\\n\\n\\t\\t\\teventLongPressDelay = view.opt('eventLongPressDelay');\\n\\t\\t\\tif (eventLongPressDelay == null) {\\n\\t\\t\\t\\teventLongPressDelay = view.opt('longPressDelay'); // fallback\\n\\t\\t\\t}\\n\\n\\t\\t\\tdragListener = isDraggable ?\\n\\t\\t\\t\\tthis.buildSegDragListener(seg) :\\n\\t\\t\\t\\tthis.buildSegSelectListener(seg); // seg isn't draggable, but still needs to be selected\\n\\n\\t\\t\\tdragListener.startInteraction(ev, { // won't start if already started\\n\\t\\t\\t\\tdelay: isSelected ? 0 : eventLongPressDelay // do delay if not already selected\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\t// a long tap simulates a mouseover. ignore this bogus mouseover.\\n\\t\\tthis.tempIgnoreMouse();\\n\\t},\\n\\n\\n\\thandleSegTouchEnd: function(seg, ev) {\\n\\t\\t// touchstart+touchend = click, which simulates a mouseover.\\n\\t\\t// ignore this bogus mouseover.\\n\\t\\tthis.tempIgnoreMouse();\\n\\t},\\n\\n\\n\\t// returns boolean whether resizing actually started or not.\\n\\t// assumes the seg allows resizing.\\n\\t// `dragOptions` are optional.\\n\\tstartSegResize: function(seg, ev, dragOptions) {\\n\\t\\tif ($(ev.target).is('.fc-resizer')) {\\n\\t\\t\\tthis.buildSegResizeListener(seg, $(ev.target).is('.fc-start-resizer'))\\n\\t\\t\\t\\t.startInteraction(ev, dragOptions);\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\treturn false;\\n\\t},\\n\\n\\n\\n\\t/* Event Dragging\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Builds a listener that will track user-dragging on an event segment.\\n\\t// Generic enough to work with any type of Grid.\\n\\t// Has side effect of setting/unsetting `segDragListener`\\n\\tbuildSegDragListener: function(seg) {\\n\\t\\tvar _this = this;\\n\\t\\tvar view = this.view;\\n\\t\\tvar calendar = view.calendar;\\n\\t\\tvar el = seg.el;\\n\\t\\tvar event = seg.event;\\n\\t\\tvar isDragging;\\n\\t\\tvar mouseFollower; // A clone of the original element that will move with the mouse\\n\\t\\tvar dropLocation; // zoned event date properties\\n\\n\\t\\tif (this.segDragListener) {\\n\\t\\t\\treturn this.segDragListener;\\n\\t\\t}\\n\\n\\t\\t// Tracks mouse movement over the *view's* coordinate map. Allows dragging and dropping between subcomponents\\n\\t\\t// of the view.\\n\\t\\tvar dragListener = this.segDragListener = new HitDragListener(view, {\\n\\t\\t\\tscroll: view.opt('dragScroll'),\\n\\t\\t\\tsubjectEl: el,\\n\\t\\t\\tsubjectCenter: true,\\n\\t\\t\\tinteractionStart: function(ev) {\\n\\t\\t\\t\\tseg.component = _this; // for renderDrag\\n\\t\\t\\t\\tisDragging = false;\\n\\t\\t\\t\\tmouseFollower = new MouseFollower(seg.el, {\\n\\t\\t\\t\\t\\tadditionalClass: 'fc-dragging',\\n\\t\\t\\t\\t\\tparentEl: view.el,\\n\\t\\t\\t\\t\\topacity: dragListener.isTouch ? null : view.opt('dragOpacity'),\\n\\t\\t\\t\\t\\trevertDuration: view.opt('dragRevertDuration'),\\n\\t\\t\\t\\t\\tzIndex: 2 // one above the .fc-view\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tmouseFollower.hide(); // don't show until we know this is a real drag\\n\\t\\t\\t\\tmouseFollower.start(ev);\\n\\t\\t\\t},\\n\\t\\t\\tdragStart: function(ev) {\\n\\t\\t\\t\\tif (dragListener.isTouch && !view.isEventSelected(event)) {\\n\\t\\t\\t\\t\\t// if not previously selected, will fire after a delay. then, select the event\\n\\t\\t\\t\\t\\tview.selectEvent(event);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tisDragging = true;\\n\\t\\t\\t\\t_this.handleSegMouseout(seg, ev); // ensure a mouseout on the manipulated event has been reported\\n\\t\\t\\t\\t_this.segDragStart(seg, ev);\\n\\t\\t\\t\\tview.hideEvent(event); // hide all event segments. our mouseFollower will take over\\n\\t\\t\\t},\\n\\t\\t\\thitOver: function(hit, isOrig, origHit) {\\n\\t\\t\\t\\tvar dragHelperEls;\\n\\n\\t\\t\\t\\t// starting hit could be forced (DayGrid.limit)\\n\\t\\t\\t\\tif (seg.hit) {\\n\\t\\t\\t\\t\\torigHit = seg.hit;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// since we are querying the parent view, might not belong to this grid\\n\\t\\t\\t\\tdropLocation = _this.computeEventDrop(\\n\\t\\t\\t\\t\\torigHit.component.getHitSpan(origHit),\\n\\t\\t\\t\\t\\thit.component.getHitSpan(hit),\\n\\t\\t\\t\\t\\tevent\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\tif (dropLocation && !calendar.isEventSpanAllowed(_this.eventToSpan(dropLocation), event)) {\\n\\t\\t\\t\\t\\tdisableCursor();\\n\\t\\t\\t\\t\\tdropLocation = null;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// if a valid drop location, have the subclass render a visual indication\\n\\t\\t\\t\\tif (dropLocation && (dragHelperEls = view.renderDrag(dropLocation, seg))) {\\n\\n\\t\\t\\t\\t\\tdragHelperEls.addClass('fc-dragging');\\n\\t\\t\\t\\t\\tif (!dragListener.isTouch) {\\n\\t\\t\\t\\t\\t\\t_this.applyDragOpacity(dragHelperEls);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tmouseFollower.hide(); // if the subclass is already using a mock event \\\"helper\\\", hide our own\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\tmouseFollower.show(); // otherwise, have the helper follow the mouse (no snapping)\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (isOrig) {\\n\\t\\t\\t\\t\\tdropLocation = null; // needs to have moved hits to be a valid drop\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\thitOut: function() { // called before mouse moves to a different hit OR moved out of all hits\\n\\t\\t\\t\\tview.unrenderDrag(); // unrender whatever was done in renderDrag\\n\\t\\t\\t\\tmouseFollower.show(); // show in case we are moving out of all hits\\n\\t\\t\\t\\tdropLocation = null;\\n\\t\\t\\t},\\n\\t\\t\\thitDone: function() { // Called after a hitOut OR before a dragEnd\\n\\t\\t\\t\\tenableCursor();\\n\\t\\t\\t},\\n\\t\\t\\tinteractionEnd: function(ev) {\\n\\t\\t\\t\\tdelete seg.component; // prevent side effects\\n\\n\\t\\t\\t\\t// do revert animation if hasn't changed. calls a callback when finished (whether animation or not)\\n\\t\\t\\t\\tmouseFollower.stop(!dropLocation, function() {\\n\\t\\t\\t\\t\\tif (isDragging) {\\n\\t\\t\\t\\t\\t\\tview.unrenderDrag();\\n\\t\\t\\t\\t\\t\\t_this.segDragStop(seg, ev);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (dropLocation) {\\n\\t\\t\\t\\t\\t\\t// no need to re-show original, will rerender all anyways. esp important if eventRenderWait\\n\\t\\t\\t\\t\\t\\tview.reportEventDrop(event, dropLocation, _this.largeUnit, el, ev);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\tview.showEvent(event);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\t_this.segDragListener = null;\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn dragListener;\\n\\t},\\n\\n\\n\\t// seg isn't draggable, but let's use a generic DragListener\\n\\t// simply for the delay, so it can be selected.\\n\\t// Has side effect of setting/unsetting `segDragListener`\\n\\tbuildSegSelectListener: function(seg) {\\n\\t\\tvar _this = this;\\n\\t\\tvar view = this.view;\\n\\t\\tvar event = seg.event;\\n\\n\\t\\tif (this.segDragListener) {\\n\\t\\t\\treturn this.segDragListener;\\n\\t\\t}\\n\\n\\t\\tvar dragListener = this.segDragListener = new DragListener({\\n\\t\\t\\tdragStart: function(ev) {\\n\\t\\t\\t\\tif (dragListener.isTouch && !view.isEventSelected(event)) {\\n\\t\\t\\t\\t\\t// if not previously selected, will fire after a delay. then, select the event\\n\\t\\t\\t\\t\\tview.selectEvent(event);\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\tinteractionEnd: function(ev) {\\n\\t\\t\\t\\t_this.segDragListener = null;\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn dragListener;\\n\\t},\\n\\n\\n\\t// Called before event segment dragging starts\\n\\tsegDragStart: function(seg, ev) {\\n\\t\\tthis.isDraggingSeg = true;\\n\\t\\tthis.view.publiclyTrigger('eventDragStart', seg.el[0], seg.event, ev, {}); // last argument is jqui dummy\\n\\t},\\n\\n\\n\\t// Called after event segment dragging stops\\n\\tsegDragStop: function(seg, ev) {\\n\\t\\tthis.isDraggingSeg = false;\\n\\t\\tthis.view.publiclyTrigger('eventDragStop', seg.el[0], seg.event, ev, {}); // last argument is jqui dummy\\n\\t},\\n\\n\\n\\t// Given the spans an event drag began, and the span event was dropped, calculates the new zoned start/end/allDay\\n\\t// values for the event. Subclasses may override and set additional properties to be used by renderDrag.\\n\\t// A falsy returned value indicates an invalid drop.\\n\\t// DOES NOT consider overlap/constraint.\\n\\tcomputeEventDrop: function(startSpan, endSpan, event) {\\n\\t\\tvar calendar = this.view.calendar;\\n\\t\\tvar dragStart = startSpan.start;\\n\\t\\tvar dragEnd = endSpan.start;\\n\\t\\tvar delta;\\n\\t\\tvar dropLocation; // zoned event date properties\\n\\n\\t\\tif (dragStart.hasTime() === dragEnd.hasTime()) {\\n\\t\\t\\tdelta = this.diffDates(dragEnd, dragStart);\\n\\n\\t\\t\\t// if an all-day event was in a timed area and it was dragged to a different time,\\n\\t\\t\\t// guarantee an end and adjust start/end to have times\\n\\t\\t\\tif (event.allDay && durationHasTime(delta)) {\\n\\t\\t\\t\\tdropLocation = {\\n\\t\\t\\t\\t\\tstart: event.start.clone(),\\n\\t\\t\\t\\t\\tend: calendar.getEventEnd(event), // will be an ambig day\\n\\t\\t\\t\\t\\tallDay: false // for normalizeEventTimes\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tcalendar.normalizeEventTimes(dropLocation);\\n\\t\\t\\t}\\n\\t\\t\\t// othewise, work off existing values\\n\\t\\t\\telse {\\n\\t\\t\\t\\tdropLocation = pluckEventDateProps(event);\\n\\t\\t\\t}\\n\\n\\t\\t\\tdropLocation.start.add(delta);\\n\\t\\t\\tif (dropLocation.end) {\\n\\t\\t\\t\\tdropLocation.end.add(delta);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\t// if switching from day <-> timed, start should be reset to the dropped date, and the end cleared\\n\\t\\t\\tdropLocation = {\\n\\t\\t\\t\\tstart: dragEnd.clone(),\\n\\t\\t\\t\\tend: null, // end should be cleared\\n\\t\\t\\t\\tallDay: !dragEnd.hasTime()\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\treturn dropLocation;\\n\\t},\\n\\n\\n\\t// Utility for apply dragOpacity to a jQuery set\\n\\tapplyDragOpacity: function(els) {\\n\\t\\tvar opacity = this.view.opt('dragOpacity');\\n\\n\\t\\tif (opacity != null) {\\n\\t\\t\\tels.css('opacity', opacity);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* External Element Dragging\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Called when a jQuery UI drag is initiated anywhere in the DOM\\n\\texternalDragStart: function(ev, ui) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar el;\\n\\t\\tvar accept;\\n\\n\\t\\tif (view.opt('droppable')) { // only listen if this setting is on\\n\\t\\t\\tel = $((ui ? ui.item : null) || ev.target);\\n\\n\\t\\t\\t// Test that the dragged element passes the dropAccept selector or filter function.\\n\\t\\t\\t// FYI, the default is \\\"*\\\" (matches all)\\n\\t\\t\\taccept = view.opt('dropAccept');\\n\\t\\t\\tif ($.isFunction(accept) ? accept.call(el[0], el) : el.is(accept)) {\\n\\t\\t\\t\\tif (!this.isDraggingExternal) { // prevent double-listening if fired twice\\n\\t\\t\\t\\t\\tthis.listenToExternalDrag(el, ev, ui);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Called when a jQuery UI drag starts and it needs to be monitored for dropping\\n\\tlistenToExternalDrag: function(el, ev, ui) {\\n\\t\\tvar _this = this;\\n\\t\\tvar calendar = this.view.calendar;\\n\\t\\tvar meta = getDraggedElMeta(el); // extra data about event drop, including possible event to create\\n\\t\\tvar dropLocation; // a null value signals an unsuccessful drag\\n\\n\\t\\t// listener that tracks mouse movement over date-associated pixel regions\\n\\t\\tvar dragListener = _this.externalDragListener = new HitDragListener(this, {\\n\\t\\t\\tinteractionStart: function() {\\n\\t\\t\\t\\t_this.isDraggingExternal = true;\\n\\t\\t\\t},\\n\\t\\t\\thitOver: function(hit) {\\n\\t\\t\\t\\tdropLocation = _this.computeExternalDrop(\\n\\t\\t\\t\\t\\thit.component.getHitSpan(hit), // since we are querying the parent view, might not belong to this grid\\n\\t\\t\\t\\t\\tmeta\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\tif ( // invalid hit?\\n\\t\\t\\t\\t\\tdropLocation &&\\n\\t\\t\\t\\t\\t!calendar.isExternalSpanAllowed(_this.eventToSpan(dropLocation), dropLocation, meta.eventProps)\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\tdisableCursor();\\n\\t\\t\\t\\t\\tdropLocation = null;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (dropLocation) {\\n\\t\\t\\t\\t\\t_this.renderDrag(dropLocation); // called without a seg parameter\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\thitOut: function() {\\n\\t\\t\\t\\tdropLocation = null; // signal unsuccessful\\n\\t\\t\\t},\\n\\t\\t\\thitDone: function() { // Called after a hitOut OR before a dragEnd\\n\\t\\t\\t\\tenableCursor();\\n\\t\\t\\t\\t_this.unrenderDrag();\\n\\t\\t\\t},\\n\\t\\t\\tinteractionEnd: function(ev) {\\n\\t\\t\\t\\tif (dropLocation) { // element was dropped on a valid hit\\n\\t\\t\\t\\t\\t_this.view.reportExternalDrop(meta, dropLocation, el, ev, ui);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t_this.isDraggingExternal = false;\\n\\t\\t\\t\\t_this.externalDragListener = null;\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tdragListener.startDrag(ev); // start listening immediately\\n\\t},\\n\\n\\n\\t// Given a hit to be dropped upon, and misc data associated with the jqui drag (guaranteed to be a plain object),\\n\\t// returns the zoned start/end dates for the event that would result from the hypothetical drop. end might be null.\\n\\t// Returning a null value signals an invalid drop hit.\\n\\t// DOES NOT consider overlap/constraint.\\n\\tcomputeExternalDrop: function(span, meta) {\\n\\t\\tvar calendar = this.view.calendar;\\n\\t\\tvar dropLocation = {\\n\\t\\t\\tstart: calendar.applyTimezone(span.start), // simulate a zoned event start date\\n\\t\\t\\tend: null\\n\\t\\t};\\n\\n\\t\\t// if dropped on an all-day span, and element's metadata specified a time, set it\\n\\t\\tif (meta.startTime && !dropLocation.start.hasTime()) {\\n\\t\\t\\tdropLocation.start.time(meta.startTime);\\n\\t\\t}\\n\\n\\t\\tif (meta.duration) {\\n\\t\\t\\tdropLocation.end = dropLocation.start.clone().add(meta.duration);\\n\\t\\t}\\n\\n\\t\\treturn dropLocation;\\n\\t},\\n\\n\\n\\n\\t/* Drag Rendering (for both events and an external elements)\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of an event or external element being dragged.\\n\\t// `dropLocation` contains hypothetical start/end/allDay values the event would have if dropped. end can be null.\\n\\t// `seg` is the internal segment object that is being dragged. If dragging an external element, `seg` is null.\\n\\t// A truthy returned value indicates this method has rendered a helper element.\\n\\t// Must return elements used for any mock events.\\n\\trenderDrag: function(dropLocation, seg) {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t// Unrenders a visual indication of an event or external element being dragged\\n\\tunrenderDrag: function() {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t/* Resizing\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Creates a listener that tracks the user as they resize an event segment.\\n\\t// Generic enough to work with any type of Grid.\\n\\tbuildSegResizeListener: function(seg, isStart) {\\n\\t\\tvar _this = this;\\n\\t\\tvar view = this.view;\\n\\t\\tvar calendar = view.calendar;\\n\\t\\tvar el = seg.el;\\n\\t\\tvar event = seg.event;\\n\\t\\tvar eventEnd = calendar.getEventEnd(event);\\n\\t\\tvar isDragging;\\n\\t\\tvar resizeLocation; // zoned event date properties. falsy if invalid resize\\n\\n\\t\\t// Tracks mouse movement over the *grid's* coordinate map\\n\\t\\tvar dragListener = this.segResizeListener = new HitDragListener(this, {\\n\\t\\t\\tscroll: view.opt('dragScroll'),\\n\\t\\t\\tsubjectEl: el,\\n\\t\\t\\tinteractionStart: function() {\\n\\t\\t\\t\\tisDragging = false;\\n\\t\\t\\t},\\n\\t\\t\\tdragStart: function(ev) {\\n\\t\\t\\t\\tisDragging = true;\\n\\t\\t\\t\\t_this.handleSegMouseout(seg, ev); // ensure a mouseout on the manipulated event has been reported\\n\\t\\t\\t\\t_this.segResizeStart(seg, ev);\\n\\t\\t\\t},\\n\\t\\t\\thitOver: function(hit, isOrig, origHit) {\\n\\t\\t\\t\\tvar origHitSpan = _this.getHitSpan(origHit);\\n\\t\\t\\t\\tvar hitSpan = _this.getHitSpan(hit);\\n\\n\\t\\t\\t\\tresizeLocation = isStart ?\\n\\t\\t\\t\\t\\t_this.computeEventStartResize(origHitSpan, hitSpan, event) :\\n\\t\\t\\t\\t\\t_this.computeEventEndResize(origHitSpan, hitSpan, event);\\n\\n\\t\\t\\t\\tif (resizeLocation) {\\n\\t\\t\\t\\t\\tif (!calendar.isEventSpanAllowed(_this.eventToSpan(resizeLocation), event)) {\\n\\t\\t\\t\\t\\t\\tdisableCursor();\\n\\t\\t\\t\\t\\t\\tresizeLocation = null;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t// no change? (FYI, event dates might have zones)\\n\\t\\t\\t\\t\\telse if (\\n\\t\\t\\t\\t\\t\\tresizeLocation.start.isSame(event.start.clone().stripZone()) &&\\n\\t\\t\\t\\t\\t\\tresizeLocation.end.isSame(eventEnd.clone().stripZone())\\n\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\tresizeLocation = null;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (resizeLocation) {\\n\\t\\t\\t\\t\\tview.hideEvent(event);\\n\\t\\t\\t\\t\\t_this.renderEventResize(resizeLocation, seg);\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\thitOut: function() { // called before mouse moves to a different hit OR moved out of all hits\\n\\t\\t\\t\\tresizeLocation = null;\\n\\t\\t\\t\\tview.showEvent(event); // for when out-of-bounds. show original\\n\\t\\t\\t},\\n\\t\\t\\thitDone: function() { // resets the rendering to show the original event\\n\\t\\t\\t\\t_this.unrenderEventResize();\\n\\t\\t\\t\\tenableCursor();\\n\\t\\t\\t},\\n\\t\\t\\tinteractionEnd: function(ev) {\\n\\t\\t\\t\\tif (isDragging) {\\n\\t\\t\\t\\t\\t_this.segResizeStop(seg, ev);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (resizeLocation) { // valid date to resize to?\\n\\t\\t\\t\\t\\t// no need to re-show original, will rerender all anyways. esp important if eventRenderWait\\n\\t\\t\\t\\t\\tview.reportEventResize(event, resizeLocation, _this.largeUnit, el, ev);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\tview.showEvent(event);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t_this.segResizeListener = null;\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn dragListener;\\n\\t},\\n\\n\\n\\t// Called before event segment resizing starts\\n\\tsegResizeStart: function(seg, ev) {\\n\\t\\tthis.isResizingSeg = true;\\n\\t\\tthis.view.publiclyTrigger('eventResizeStart', seg.el[0], seg.event, ev, {}); // last argument is jqui dummy\\n\\t},\\n\\n\\n\\t// Called after event segment resizing stops\\n\\tsegResizeStop: function(seg, ev) {\\n\\t\\tthis.isResizingSeg = false;\\n\\t\\tthis.view.publiclyTrigger('eventResizeStop', seg.el[0], seg.event, ev, {}); // last argument is jqui dummy\\n\\t},\\n\\n\\n\\t// Returns new date-information for an event segment being resized from its start\\n\\tcomputeEventStartResize: function(startSpan, endSpan, event) {\\n\\t\\treturn this.computeEventResize('start', startSpan, endSpan, event);\\n\\t},\\n\\n\\n\\t// Returns new date-information for an event segment being resized from its end\\n\\tcomputeEventEndResize: function(startSpan, endSpan, event) {\\n\\t\\treturn this.computeEventResize('end', startSpan, endSpan, event);\\n\\t},\\n\\n\\n\\t// Returns new zoned date information for an event segment being resized from its start OR end\\n\\t// `type` is either 'start' or 'end'.\\n\\t// DOES NOT consider overlap/constraint.\\n\\tcomputeEventResize: function(type, startSpan, endSpan, event) {\\n\\t\\tvar calendar = this.view.calendar;\\n\\t\\tvar delta = this.diffDates(endSpan[type], startSpan[type]);\\n\\t\\tvar resizeLocation; // zoned event date properties\\n\\t\\tvar defaultDuration;\\n\\n\\t\\t// build original values to work from, guaranteeing a start and end\\n\\t\\tresizeLocation = {\\n\\t\\t\\tstart: event.start.clone(),\\n\\t\\t\\tend: calendar.getEventEnd(event),\\n\\t\\t\\tallDay: event.allDay\\n\\t\\t};\\n\\n\\t\\t// if an all-day event was in a timed area and was resized to a time, adjust start/end to have times\\n\\t\\tif (resizeLocation.allDay && durationHasTime(delta)) {\\n\\t\\t\\tresizeLocation.allDay = false;\\n\\t\\t\\tcalendar.normalizeEventTimes(resizeLocation);\\n\\t\\t}\\n\\n\\t\\tresizeLocation[type].add(delta); // apply delta to start or end\\n\\n\\t\\t// if the event was compressed too small, find a new reasonable duration for it\\n\\t\\tif (!resizeLocation.start.isBefore(resizeLocation.end)) {\\n\\n\\t\\t\\tdefaultDuration =\\n\\t\\t\\t\\tthis.minResizeDuration || // TODO: hack\\n\\t\\t\\t\\t(event.allDay ?\\n\\t\\t\\t\\t\\tcalendar.defaultAllDayEventDuration :\\n\\t\\t\\t\\t\\tcalendar.defaultTimedEventDuration);\\n\\n\\t\\t\\tif (type == 'start') { // resizing the start?\\n\\t\\t\\t\\tresizeLocation.start = resizeLocation.end.clone().subtract(defaultDuration);\\n\\t\\t\\t}\\n\\t\\t\\telse { // resizing the end?\\n\\t\\t\\t\\tresizeLocation.end = resizeLocation.start.clone().add(defaultDuration);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn resizeLocation;\\n\\t},\\n\\n\\n\\t// Renders a visual indication of an event being resized.\\n\\t// `range` has the updated dates of the event. `seg` is the original segment object involved in the drag.\\n\\t// Must return elements used for any mock events.\\n\\trenderEventResize: function(range, seg) {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t// Unrenders a visual indication of an event being resized.\\n\\tunrenderEventResize: function() {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t/* Rendering Utils\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Compute the text that should be displayed on an event's element.\\n\\t// `range` can be the Event object itself, or something range-like, with at least a `start`.\\n\\t// If event times are disabled, or the event has no time, will return a blank string.\\n\\t// If not specified, formatStr will default to the eventTimeFormat setting,\\n\\t// and displayEnd will default to the displayEventEnd setting.\\n\\tgetEventTimeText: function(range, formatStr, displayEnd) {\\n\\n\\t\\tif (formatStr == null) {\\n\\t\\t\\tformatStr = this.eventTimeFormat;\\n\\t\\t}\\n\\n\\t\\tif (displayEnd == null) {\\n\\t\\t\\tdisplayEnd = this.displayEventEnd;\\n\\t\\t}\\n\\n\\t\\tif (this.displayEventTime && range.start.hasTime()) {\\n\\t\\t\\tif (displayEnd && range.end) {\\n\\t\\t\\t\\treturn this.view.formatRange(range, formatStr);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\treturn range.start.format(formatStr);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn '';\\n\\t},\\n\\n\\n\\t// Generic utility for generating the HTML classNames for an event segment's element\\n\\tgetSegClasses: function(seg, isDraggable, isResizable) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar classes = [\\n\\t\\t\\t'fc-event',\\n\\t\\t\\tseg.isStart ? 'fc-start' : 'fc-not-start',\\n\\t\\t\\tseg.isEnd ? 'fc-end' : 'fc-not-end'\\n\\t\\t].concat(this.getSegCustomClasses(seg));\\n\\n\\t\\tif (isDraggable) {\\n\\t\\t\\tclasses.push('fc-draggable');\\n\\t\\t}\\n\\t\\tif (isResizable) {\\n\\t\\t\\tclasses.push('fc-resizable');\\n\\t\\t}\\n\\n\\t\\t// event is currently selected? attach a className.\\n\\t\\tif (view.isEventSelected(seg.event)) {\\n\\t\\t\\tclasses.push('fc-selected');\\n\\t\\t}\\n\\n\\t\\treturn classes;\\n\\t},\\n\\n\\n\\t// List of classes that were defined by the caller of the API in some way\\n\\tgetSegCustomClasses: function(seg) {\\n\\t\\tvar event = seg.event;\\n\\n\\t\\treturn [].concat(\\n\\t\\t\\tevent.className, // guaranteed to be an array\\n\\t\\t\\tevent.source ? event.source.className : []\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Utility for generating event skin-related CSS properties\\n\\tgetSegSkinCss: function(seg) {\\n\\t\\treturn {\\n\\t\\t\\t'background-color': this.getSegBackgroundColor(seg),\\n\\t\\t\\t'border-color': this.getSegBorderColor(seg),\\n\\t\\t\\tcolor: this.getSegTextColor(seg)\\n\\t\\t};\\n\\t},\\n\\n\\n\\t// Queries for caller-specified color, then falls back to default\\n\\tgetSegBackgroundColor: function(seg) {\\n\\t\\treturn seg.event.backgroundColor ||\\n\\t\\t\\tseg.event.color ||\\n\\t\\t\\tthis.getSegDefaultBackgroundColor(seg);\\n\\t},\\n\\n\\n\\tgetSegDefaultBackgroundColor: function(seg) {\\n\\t\\tvar source = seg.event.source || {};\\n\\n\\t\\treturn source.backgroundColor ||\\n\\t\\t\\tsource.color ||\\n\\t\\t\\tthis.view.opt('eventBackgroundColor') ||\\n\\t\\t\\tthis.view.opt('eventColor');\\n\\t},\\n\\n\\n\\t// Queries for caller-specified color, then falls back to default\\n\\tgetSegBorderColor: function(seg) {\\n\\t\\treturn seg.event.borderColor ||\\n\\t\\t\\tseg.event.color ||\\n\\t\\t\\tthis.getSegDefaultBorderColor(seg);\\n\\t},\\n\\n\\n\\tgetSegDefaultBorderColor: function(seg) {\\n\\t\\tvar source = seg.event.source || {};\\n\\n\\t\\treturn source.borderColor ||\\n\\t\\t\\tsource.color ||\\n\\t\\t\\tthis.view.opt('eventBorderColor') ||\\n\\t\\t\\tthis.view.opt('eventColor');\\n\\t},\\n\\n\\n\\t// Queries for caller-specified color, then falls back to default\\n\\tgetSegTextColor: function(seg) {\\n\\t\\treturn seg.event.textColor ||\\n\\t\\t\\tthis.getSegDefaultTextColor(seg);\\n\\t},\\n\\n\\n\\tgetSegDefaultTextColor: function(seg) {\\n\\t\\tvar source = seg.event.source || {};\\n\\n\\t\\treturn source.textColor ||\\n\\t\\t\\tthis.view.opt('eventTextColor');\\n\\t},\\n\\n\\n\\t/* Converting events -> eventRange -> eventSpan -> eventSegs\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Generates an array of segments for the given single event\\n\\t// Can accept an event \\\"location\\\" as well (which only has start/end and no allDay)\\n\\teventToSegs: function(event) {\\n\\t\\treturn this.eventsToSegs([ event ]);\\n\\t},\\n\\n\\n\\teventToSpan: function(event) {\\n\\t\\treturn this.eventToSpans(event)[0];\\n\\t},\\n\\n\\n\\t// Generates spans (always unzoned) for the given event.\\n\\t// Does not do any inverting for inverse-background events.\\n\\t// Can accept an event \\\"location\\\" as well (which only has start/end and no allDay)\\n\\teventToSpans: function(event) {\\n\\t\\tvar range = this.eventToRange(event);\\n\\t\\treturn this.eventRangeToSpans(range, event);\\n\\t},\\n\\n\\n\\n\\t// Converts an array of event objects into an array of event segment objects.\\n\\t// A custom `segSliceFunc` may be given for arbitrarily slicing up events.\\n\\t// Doesn't guarantee an order for the resulting array.\\n\\teventsToSegs: function(allEvents, segSliceFunc) {\\n\\t\\tvar _this = this;\\n\\t\\tvar eventsById = groupEventsById(allEvents);\\n\\t\\tvar segs = [];\\n\\n\\t\\t$.each(eventsById, function(id, events) {\\n\\t\\t\\tvar ranges = [];\\n\\t\\t\\tvar i;\\n\\n\\t\\t\\tfor (i = 0; i < events.length; i++) {\\n\\t\\t\\t\\tranges.push(_this.eventToRange(events[i]));\\n\\t\\t\\t}\\n\\n\\t\\t\\t// inverse-background events (utilize only the first event in calculations)\\n\\t\\t\\tif (isInverseBgEvent(events[0])) {\\n\\t\\t\\t\\tranges = _this.invertRanges(ranges);\\n\\n\\t\\t\\t\\tfor (i = 0; i < ranges.length; i++) {\\n\\t\\t\\t\\t\\tsegs.push.apply(segs, // append to\\n\\t\\t\\t\\t\\t\\t_this.eventRangeToSegs(ranges[i], events[0], segSliceFunc));\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t// normal event ranges\\n\\t\\t\\telse {\\n\\t\\t\\t\\tfor (i = 0; i < ranges.length; i++) {\\n\\t\\t\\t\\t\\tsegs.push.apply(segs, // append to\\n\\t\\t\\t\\t\\t\\t_this.eventRangeToSegs(ranges[i], events[i], segSliceFunc));\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t// Generates the unzoned start/end dates an event appears to occupy\\n\\t// Can accept an event \\\"location\\\" as well (which only has start/end and no allDay)\\n\\teventToRange: function(event) {\\n\\t\\tvar calendar = this.view.calendar;\\n\\t\\tvar start = event.start.clone().stripZone();\\n\\t\\tvar end = (\\n\\t\\t\\t\\tevent.end ?\\n\\t\\t\\t\\t\\tevent.end.clone() :\\n\\t\\t\\t\\t\\t// derive the end from the start and allDay. compute allDay if necessary\\n\\t\\t\\t\\t\\tcalendar.getDefaultEventEnd(\\n\\t\\t\\t\\t\\t\\tevent.allDay != null ?\\n\\t\\t\\t\\t\\t\\t\\tevent.allDay :\\n\\t\\t\\t\\t\\t\\t\\t!event.start.hasTime(),\\n\\t\\t\\t\\t\\t\\tevent.start\\n\\t\\t\\t\\t\\t)\\n\\t\\t\\t).stripZone();\\n\\n\\t\\t// hack: dynamic locale change forgets to upate stored event localed\\n\\t\\tcalendar.localizeMoment(start);\\n\\t\\tcalendar.localizeMoment(end);\\n\\n\\t\\treturn { start: start, end: end };\\n\\t},\\n\\n\\n\\t// Given an event's range (unzoned start/end), and the event itself,\\n\\t// slice into segments (using the segSliceFunc function if specified)\\n\\teventRangeToSegs: function(range, event, segSliceFunc) {\\n\\t\\tvar spans = this.eventRangeToSpans(range, event);\\n\\t\\tvar segs = [];\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < spans.length; i++) {\\n\\t\\t\\tsegs.push.apply(segs, // append to\\n\\t\\t\\t\\tthis.eventSpanToSegs(spans[i], event, segSliceFunc));\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t// Given an event's unzoned date range, return an array of \\\"span\\\" objects.\\n\\t// Subclasses can override.\\n\\teventRangeToSpans: function(range, event) {\\n\\t\\treturn [ $.extend({}, range) ]; // copy into a single-item array\\n\\t},\\n\\n\\n\\t// Given an event's span (unzoned start/end and other misc data), and the event itself,\\n\\t// slices into segments and attaches event-derived properties to them.\\n\\teventSpanToSegs: function(span, event, segSliceFunc) {\\n\\t\\tvar segs = segSliceFunc ? segSliceFunc(span) : this.spanToSegs(span);\\n\\t\\tvar i, seg;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\t\\t\\tseg.event = event;\\n\\t\\t\\tseg.eventStartMS = +span.start; // TODO: not the best name after making spans unzoned\\n\\t\\t\\tseg.eventDurationMS = span.end - span.start;\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t// Produces a new array of range objects that will cover all the time NOT covered by the given ranges.\\n\\t// SIDE EFFECT: will mutate the given array and will use its date references.\\n\\tinvertRanges: function(ranges) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar viewStart = view.start.clone(); // need a copy\\n\\t\\tvar viewEnd = view.end.clone(); // need a copy\\n\\t\\tvar inverseRanges = [];\\n\\t\\tvar start = viewStart; // the end of the previous range. the start of the new range\\n\\t\\tvar i, range;\\n\\n\\t\\t// ranges need to be in order. required for our date-walking algorithm\\n\\t\\tranges.sort(compareRanges);\\n\\n\\t\\tfor (i = 0; i < ranges.length; i++) {\\n\\t\\t\\trange = ranges[i];\\n\\n\\t\\t\\t// add the span of time before the event (if there is any)\\n\\t\\t\\tif (range.start > start) { // compare millisecond time (skip any ambig logic)\\n\\t\\t\\t\\tinverseRanges.push({\\n\\t\\t\\t\\t\\tstart: start,\\n\\t\\t\\t\\t\\tend: range.start\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\n\\t\\t\\tstart = range.end;\\n\\t\\t}\\n\\n\\t\\t// add the span of time after the last event (if there is any)\\n\\t\\tif (start < viewEnd) { // compare millisecond time (skip any ambig logic)\\n\\t\\t\\tinverseRanges.push({\\n\\t\\t\\t\\tstart: start,\\n\\t\\t\\t\\tend: viewEnd\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\treturn inverseRanges;\\n\\t},\\n\\n\\n\\tsortEventSegs: function(segs) {\\n\\t\\tsegs.sort(proxy(this, 'compareEventSegs'));\\n\\t},\\n\\n\\n\\t// A cmp function for determining which segments should take visual priority\\n\\tcompareEventSegs: function(seg1, seg2) {\\n\\t\\treturn seg1.eventStartMS - seg2.eventStartMS || // earlier events go first\\n\\t\\t\\tseg2.eventDurationMS - seg1.eventDurationMS || // tie? longer events go first\\n\\t\\t\\tseg2.event.allDay - seg1.event.allDay || // tie? put all-day events first (booleans cast to 0/1)\\n\\t\\t\\tcompareByFieldSpecs(seg1.event, seg2.event, this.view.eventOrderSpecs);\\n\\t}\\n\\n});\\n\\n\\n/* Utilities\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\n\\nfunction pluckEventDateProps(event) {\\n\\treturn {\\n\\t\\tstart: event.start.clone(),\\n\\t\\tend: event.end ? event.end.clone() : null,\\n\\t\\tallDay: event.allDay // keep it the same\\n\\t};\\n}\\nFC.pluckEventDateProps = pluckEventDateProps;\\n\\n\\nfunction isBgEvent(event) { // returns true if background OR inverse-background\\n\\tvar rendering = getEventRendering(event);\\n\\treturn rendering === 'background' || rendering === 'inverse-background';\\n}\\nFC.isBgEvent = isBgEvent; // export\\n\\n\\nfunction isInverseBgEvent(event) {\\n\\treturn getEventRendering(event) === 'inverse-background';\\n}\\n\\n\\nfunction getEventRendering(event) {\\n\\treturn firstDefined((event.source || {}).rendering, event.rendering);\\n}\\n\\n\\nfunction groupEventsById(events) {\\n\\tvar eventsById = {};\\n\\tvar i, event;\\n\\n\\tfor (i = 0; i < events.length; i++) {\\n\\t\\tevent = events[i];\\n\\t\\t(eventsById[event._id] || (eventsById[event._id] = [])).push(event);\\n\\t}\\n\\n\\treturn eventsById;\\n}\\n\\n\\n// A cmp function for determining which non-inverted \\\"ranges\\\" (see above) happen earlier\\nfunction compareRanges(range1, range2) {\\n\\treturn range1.start - range2.start; // earlier ranges go first\\n}\\n\\n\\n/* External-Dragging-Element Data\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\n// Require all HTML5 data-* attributes used by FullCalendar to have this prefix.\\n// A value of '' will query attributes like data-event. A value of 'fc' will query attributes like data-fc-event.\\nFC.dataAttrPrefix = '';\\n\\n// Given a jQuery element that might represent a dragged FullCalendar event, returns an intermediate data structure\\n// to be used for Event Object creation.\\n// A defined `.eventProps`, even when empty, indicates that an event should be created.\\nfunction getDraggedElMeta(el) {\\n\\tvar prefix = FC.dataAttrPrefix;\\n\\tvar eventProps; // properties for creating the event, not related to date/time\\n\\tvar startTime; // a Duration\\n\\tvar duration;\\n\\tvar stick;\\n\\n\\tif (prefix) { prefix += '-'; }\\n\\teventProps = el.data(prefix + 'event') || null;\\n\\n\\tif (eventProps) {\\n\\t\\tif (typeof eventProps === 'object') {\\n\\t\\t\\teventProps = $.extend({}, eventProps); // make a copy\\n\\t\\t}\\n\\t\\telse { // something like 1 or true. still signal event creation\\n\\t\\t\\teventProps = {};\\n\\t\\t}\\n\\n\\t\\t// pluck special-cased date/time properties\\n\\t\\tstartTime = eventProps.start;\\n\\t\\tif (startTime == null) { startTime = eventProps.time; } // accept 'time' as well\\n\\t\\tduration = eventProps.duration;\\n\\t\\tstick = eventProps.stick;\\n\\t\\tdelete eventProps.start;\\n\\t\\tdelete eventProps.time;\\n\\t\\tdelete eventProps.duration;\\n\\t\\tdelete eventProps.stick;\\n\\t}\\n\\n\\t// fallback to standalone attribute values for each of the date/time properties\\n\\tif (startTime == null) { startTime = el.data(prefix + 'start'); }\\n\\tif (startTime == null) { startTime = el.data(prefix + 'time'); } // accept 'time' as well\\n\\tif (duration == null) { duration = el.data(prefix + 'duration'); }\\n\\tif (stick == null) { stick = el.data(prefix + 'stick'); }\\n\\n\\t// massage into correct data types\\n\\tstartTime = startTime != null ? moment.duration(startTime) : null;\\n\\tduration = duration != null ? moment.duration(duration) : null;\\n\\tstick = Boolean(stick);\\n\\n\\treturn { eventProps: eventProps, startTime: startTime, duration: duration, stick: stick };\\n}\\n\\n\\n;;\\n\\n/*\\nA set of rendering and date-related methods for a visual component comprised of one or more rows of day columns.\\nPrerequisite: the object being mixed into needs to be a *Grid*\\n*/\\nvar DayTableMixin = FC.DayTableMixin = {\\n\\n\\tbreakOnWeeks: false, // should create a new row for each week?\\n\\tdayDates: null, // whole-day dates for each column. left to right\\n\\tdayIndices: null, // for each day from start, the offset\\n\\tdaysPerRow: null,\\n\\trowCnt: null,\\n\\tcolCnt: null,\\n\\tcolHeadFormat: null,\\n\\n\\n\\t// Populates internal variables used for date calculation and rendering\\n\\tupdateDayTable: function() {\\n\\t\\tvar view = this.view;\\n\\t\\tvar date = this.start.clone();\\n\\t\\tvar dayIndex = -1;\\n\\t\\tvar dayIndices = [];\\n\\t\\tvar dayDates = [];\\n\\t\\tvar daysPerRow;\\n\\t\\tvar firstDay;\\n\\t\\tvar rowCnt;\\n\\n\\t\\twhile (date.isBefore(this.end)) { // loop each day from start to end\\n\\t\\t\\tif (view.isHiddenDay(date)) {\\n\\t\\t\\t\\tdayIndices.push(dayIndex + 0.5); // mark that it's between indices\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tdayIndex++;\\n\\t\\t\\t\\tdayIndices.push(dayIndex);\\n\\t\\t\\t\\tdayDates.push(date.clone());\\n\\t\\t\\t}\\n\\t\\t\\tdate.add(1, 'days');\\n\\t\\t}\\n\\n\\t\\tif (this.breakOnWeeks) {\\n\\t\\t\\t// count columns until the day-of-week repeats\\n\\t\\t\\tfirstDay = dayDates[0].day();\\n\\t\\t\\tfor (daysPerRow = 1; daysPerRow < dayDates.length; daysPerRow++) {\\n\\t\\t\\t\\tif (dayDates[daysPerRow].day() == firstDay) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\trowCnt = Math.ceil(dayDates.length / daysPerRow);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\trowCnt = 1;\\n\\t\\t\\tdaysPerRow = dayDates.length;\\n\\t\\t}\\n\\n\\t\\tthis.dayDates = dayDates;\\n\\t\\tthis.dayIndices = dayIndices;\\n\\t\\tthis.daysPerRow = daysPerRow;\\n\\t\\tthis.rowCnt = rowCnt;\\n\\n\\t\\tthis.updateDayTableCols();\\n\\t},\\n\\n\\n\\t// Computes and assigned the colCnt property and updates any options that may be computed from it\\n\\tupdateDayTableCols: function() {\\n\\t\\tthis.colCnt = this.computeColCnt();\\n\\t\\tthis.colHeadFormat = this.view.opt('columnFormat') || this.computeColHeadFormat();\\n\\t},\\n\\n\\n\\t// Determines how many columns there should be in the table\\n\\tcomputeColCnt: function() {\\n\\t\\treturn this.daysPerRow;\\n\\t},\\n\\n\\n\\t// Computes the ambiguously-timed moment for the given cell\\n\\tgetCellDate: function(row, col) {\\n\\t\\treturn this.dayDates[\\n\\t\\t\\t\\tthis.getCellDayIndex(row, col)\\n\\t\\t\\t].clone();\\n\\t},\\n\\n\\n\\t// Computes the ambiguously-timed date range for the given cell\\n\\tgetCellRange: function(row, col) {\\n\\t\\tvar start = this.getCellDate(row, col);\\n\\t\\tvar end = start.clone().add(1, 'days');\\n\\n\\t\\treturn { start: start, end: end };\\n\\t},\\n\\n\\n\\t// Returns the number of day cells, chronologically, from the first of the grid (0-based)\\n\\tgetCellDayIndex: function(row, col) {\\n\\t\\treturn row * this.daysPerRow + this.getColDayIndex(col);\\n\\t},\\n\\n\\n\\t// Returns the numner of day cells, chronologically, from the first cell in *any given row*\\n\\tgetColDayIndex: function(col) {\\n\\t\\tif (this.isRTL) {\\n\\t\\t\\treturn this.colCnt - 1 - col;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn col;\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Given a date, returns its chronolocial cell-index from the first cell of the grid.\\n\\t// If the date lies between cells (because of hiddenDays), returns a floating-point value between offsets.\\n\\t// If before the first offset, returns a negative number.\\n\\t// If after the last offset, returns an offset past the last cell offset.\\n\\t// Only works for *start* dates of cells. Will not work for exclusive end dates for cells.\\n\\tgetDateDayIndex: function(date) {\\n\\t\\tvar dayIndices = this.dayIndices;\\n\\t\\tvar dayOffset = date.diff(this.start, 'days');\\n\\n\\t\\tif (dayOffset < 0) {\\n\\t\\t\\treturn dayIndices[0] - 1;\\n\\t\\t}\\n\\t\\telse if (dayOffset >= dayIndices.length) {\\n\\t\\t\\treturn dayIndices[dayIndices.length - 1] + 1;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn dayIndices[dayOffset];\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Options\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Computes a default column header formatting string if `colFormat` is not explicitly defined\\n\\tcomputeColHeadFormat: function() {\\n\\t\\t// if more than one week row, or if there are a lot of columns with not much space,\\n\\t\\t// put just the day numbers will be in each cell\\n\\t\\tif (this.rowCnt > 1 || this.colCnt > 10) {\\n\\t\\t\\treturn 'ddd'; // \\\"Sat\\\"\\n\\t\\t}\\n\\t\\t// multiple days, so full single date string WON'T be in title text\\n\\t\\telse if (this.colCnt > 1) {\\n\\t\\t\\treturn this.view.opt('dayOfMonthFormat'); // \\\"Sat 12/10\\\"\\n\\t\\t}\\n\\t\\t// single day, so full single date string will probably be in title text\\n\\t\\telse {\\n\\t\\t\\treturn 'dddd'; // \\\"Saturday\\\"\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Slicing\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Slices up a date range into a segment for every week-row it intersects with\\n\\tsliceRangeByRow: function(range) {\\n\\t\\tvar daysPerRow = this.daysPerRow;\\n\\t\\tvar normalRange = this.view.computeDayRange(range); // make whole-day range, considering nextDayThreshold\\n\\t\\tvar rangeFirst = this.getDateDayIndex(normalRange.start); // inclusive first index\\n\\t\\tvar rangeLast = this.getDateDayIndex(normalRange.end.clone().subtract(1, 'days')); // inclusive last index\\n\\t\\tvar segs = [];\\n\\t\\tvar row;\\n\\t\\tvar rowFirst, rowLast; // inclusive day-index range for current row\\n\\t\\tvar segFirst, segLast; // inclusive day-index range for segment\\n\\n\\t\\tfor (row = 0; row < this.rowCnt; row++) {\\n\\t\\t\\trowFirst = row * daysPerRow;\\n\\t\\t\\trowLast = rowFirst + daysPerRow - 1;\\n\\n\\t\\t\\t// intersect segment's offset range with the row's\\n\\t\\t\\tsegFirst = Math.max(rangeFirst, rowFirst);\\n\\t\\t\\tsegLast = Math.min(rangeLast, rowLast);\\n\\n\\t\\t\\t// deal with in-between indices\\n\\t\\t\\tsegFirst = Math.ceil(segFirst); // in-between starts round to next cell\\n\\t\\t\\tsegLast = Math.floor(segLast); // in-between ends round to prev cell\\n\\n\\t\\t\\tif (segFirst <= segLast) { // was there any intersection with the current row?\\n\\t\\t\\t\\tsegs.push({\\n\\t\\t\\t\\t\\trow: row,\\n\\n\\t\\t\\t\\t\\t// normalize to start of row\\n\\t\\t\\t\\t\\tfirstRowDayIndex: segFirst - rowFirst,\\n\\t\\t\\t\\t\\tlastRowDayIndex: segLast - rowFirst,\\n\\n\\t\\t\\t\\t\\t// must be matching integers to be the segment's start/end\\n\\t\\t\\t\\t\\tisStart: segFirst === rangeFirst,\\n\\t\\t\\t\\t\\tisEnd: segLast === rangeLast\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t// Slices up a date range into a segment for every day-cell it intersects with.\\n\\t// TODO: make more DRY with sliceRangeByRow somehow.\\n\\tsliceRangeByDay: function(range) {\\n\\t\\tvar daysPerRow = this.daysPerRow;\\n\\t\\tvar normalRange = this.view.computeDayRange(range); // make whole-day range, considering nextDayThreshold\\n\\t\\tvar rangeFirst = this.getDateDayIndex(normalRange.start); // inclusive first index\\n\\t\\tvar rangeLast = this.getDateDayIndex(normalRange.end.clone().subtract(1, 'days')); // inclusive last index\\n\\t\\tvar segs = [];\\n\\t\\tvar row;\\n\\t\\tvar rowFirst, rowLast; // inclusive day-index range for current row\\n\\t\\tvar i;\\n\\t\\tvar segFirst, segLast; // inclusive day-index range for segment\\n\\n\\t\\tfor (row = 0; row < this.rowCnt; row++) {\\n\\t\\t\\trowFirst = row * daysPerRow;\\n\\t\\t\\trowLast = rowFirst + daysPerRow - 1;\\n\\n\\t\\t\\tfor (i = rowFirst; i <= rowLast; i++) {\\n\\n\\t\\t\\t\\t// intersect segment's offset range with the row's\\n\\t\\t\\t\\tsegFirst = Math.max(rangeFirst, i);\\n\\t\\t\\t\\tsegLast = Math.min(rangeLast, i);\\n\\n\\t\\t\\t\\t// deal with in-between indices\\n\\t\\t\\t\\tsegFirst = Math.ceil(segFirst); // in-between starts round to next cell\\n\\t\\t\\t\\tsegLast = Math.floor(segLast); // in-between ends round to prev cell\\n\\n\\t\\t\\t\\tif (segFirst <= segLast) { // was there any intersection with the current row?\\n\\t\\t\\t\\t\\tsegs.push({\\n\\t\\t\\t\\t\\t\\trow: row,\\n\\n\\t\\t\\t\\t\\t\\t// normalize to start of row\\n\\t\\t\\t\\t\\t\\tfirstRowDayIndex: segFirst - rowFirst,\\n\\t\\t\\t\\t\\t\\tlastRowDayIndex: segLast - rowFirst,\\n\\n\\t\\t\\t\\t\\t\\t// must be matching integers to be the segment's start/end\\n\\t\\t\\t\\t\\t\\tisStart: segFirst === rangeFirst,\\n\\t\\t\\t\\t\\t\\tisEnd: segLast === rangeLast\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t/* Header Rendering\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderHeadHtml: function() {\\n\\t\\tvar view = this.view;\\n\\n\\t\\treturn '' +\\n\\t\\t\\t'<div class=\\\"fc-row ' + view.widgetHeaderClass + '\\\">' +\\n\\t\\t\\t\\t'<table>' +\\n\\t\\t\\t\\t\\t'<thead>' +\\n\\t\\t\\t\\t\\t\\tthis.renderHeadTrHtml() +\\n\\t\\t\\t\\t\\t'</thead>' +\\n\\t\\t\\t\\t'</table>' +\\n\\t\\t\\t'</div>';\\n\\t},\\n\\n\\n\\trenderHeadIntroHtml: function() {\\n\\t\\treturn this.renderIntroHtml(); // fall back to generic\\n\\t},\\n\\n\\n\\trenderHeadTrHtml: function() {\\n\\t\\treturn '' +\\n\\t\\t\\t'<tr>' +\\n\\t\\t\\t\\t(this.isRTL ? '' : this.renderHeadIntroHtml()) +\\n\\t\\t\\t\\tthis.renderHeadDateCellsHtml() +\\n\\t\\t\\t\\t(this.isRTL ? this.renderHeadIntroHtml() : '') +\\n\\t\\t\\t'</tr>';\\n\\t},\\n\\n\\n\\trenderHeadDateCellsHtml: function() {\\n\\t\\tvar htmls = [];\\n\\t\\tvar col, date;\\n\\n\\t\\tfor (col = 0; col < this.colCnt; col++) {\\n\\t\\t\\tdate = this.getCellDate(0, col);\\n\\t\\t\\thtmls.push(this.renderHeadDateCellHtml(date));\\n\\t\\t}\\n\\n\\t\\treturn htmls.join('');\\n\\t},\\n\\n\\n\\t// TODO: when internalApiVersion, accept an object for HTML attributes\\n\\t// (colspan should be no different)\\n\\trenderHeadDateCellHtml: function(date, colspan, otherAttrs) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar classNames = [\\n\\t\\t\\t'fc-day-header',\\n\\t\\t\\tview.widgetHeaderClass\\n\\t\\t];\\n\\n\\t\\t// if only one row of days, the classNames on the header can represent the specific days beneath\\n\\t\\tif (this.rowCnt === 1) {\\n\\t\\t\\tclassNames = classNames.concat(\\n\\t\\t\\t\\t// includes the day-of-week class\\n\\t\\t\\t\\t// noThemeHighlight=true (don't highlight the header)\\n\\t\\t\\t\\tthis.getDayClasses(date, true)\\n\\t\\t\\t);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tclassNames.push('fc-' + dayIDs[date.day()]); // only add the day-of-week class\\n\\t\\t}\\n\\n\\t\\treturn '' +\\n            '<th class=\\\"' + classNames.join(' ') + '\\\"' +\\n\\t\\t\\t\\t(this.rowCnt === 1 ?\\n\\t\\t\\t\\t\\t' data-date=\\\"' + date.format('YYYY-MM-DD') + '\\\"' :\\n\\t\\t\\t\\t\\t'') +\\n\\t\\t\\t\\t(colspan > 1 ?\\n\\t\\t\\t\\t\\t' colspan=\\\"' + colspan + '\\\"' :\\n\\t\\t\\t\\t\\t'') +\\n\\t\\t\\t\\t(otherAttrs ?\\n\\t\\t\\t\\t\\t' ' + otherAttrs :\\n\\t\\t\\t\\t\\t'') +\\n\\t\\t\\t\\t'>' +\\n\\t\\t\\t\\t// don't make a link if the heading could represent multiple days, or if there's only one day (forceOff)\\n\\t\\t\\t\\tview.buildGotoAnchorHtml(\\n\\t\\t\\t\\t\\t{ date: date, forceOff: this.rowCnt > 1 || this.colCnt === 1 },\\n\\t\\t\\t\\t\\thtmlEscape(date.format(this.colHeadFormat)) // inner HTML\\n\\t\\t\\t\\t) +\\n\\t\\t\\t'</th>';\\n\\t},\\n\\n\\n\\t/* Background Rendering\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderBgTrHtml: function(row) {\\n\\t\\treturn '' +\\n\\t\\t\\t'<tr>' +\\n\\t\\t\\t\\t(this.isRTL ? '' : this.renderBgIntroHtml(row)) +\\n\\t\\t\\t\\tthis.renderBgCellsHtml(row) +\\n\\t\\t\\t\\t(this.isRTL ? this.renderBgIntroHtml(row) : '') +\\n\\t\\t\\t'</tr>';\\n\\t},\\n\\n\\n\\trenderBgIntroHtml: function(row) {\\n\\t\\treturn this.renderIntroHtml(); // fall back to generic\\n\\t},\\n\\n\\n\\trenderBgCellsHtml: function(row) {\\n\\t\\tvar htmls = [];\\n\\t\\tvar col, date;\\n\\n\\t\\tfor (col = 0; col < this.colCnt; col++) {\\n\\t\\t\\tdate = this.getCellDate(row, col);\\n\\t\\t\\thtmls.push(this.renderBgCellHtml(date));\\n\\t\\t}\\n\\n\\t\\treturn htmls.join('');\\n\\t},\\n\\n\\n\\trenderBgCellHtml: function(date, otherAttrs) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar classes = this.getDayClasses(date);\\n\\n\\t\\tclasses.unshift('fc-day', view.widgetContentClass);\\n\\n\\t\\treturn '<td class=\\\"' + classes.join(' ') + '\\\"' +\\n\\t\\t\\t' data-date=\\\"' + date.format('YYYY-MM-DD') + '\\\"' + // if date has a time, won't format it\\n\\t\\t\\t(otherAttrs ?\\n\\t\\t\\t\\t' ' + otherAttrs :\\n\\t\\t\\t\\t'') +\\n\\t\\t\\t'></td>';\\n\\t},\\n\\n\\n\\t/* Generic\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Generates the default HTML intro for any row. User classes should override\\n\\trenderIntroHtml: function() {\\n\\t},\\n\\n\\n\\t// TODO: a generic method for dealing with <tr>, RTL, intro\\n\\t// when increment internalApiVersion\\n\\t// wrapTr (scheduler)\\n\\n\\n\\t/* Utils\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Applies the generic \\\"intro\\\" and \\\"outro\\\" HTML to the given cells.\\n\\t// Intro means the leftmost cell when the calendar is LTR and the rightmost cell when RTL. Vice-versa for outro.\\n\\tbookendCells: function(trEl) {\\n\\t\\tvar introHtml = this.renderIntroHtml();\\n\\n\\t\\tif (introHtml) {\\n\\t\\t\\tif (this.isRTL) {\\n\\t\\t\\t\\ttrEl.append(introHtml);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\ttrEl.prepend(introHtml);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n};\\n\\n;;\\n\\n/* A component that renders a grid of whole-days that runs horizontally. There can be multiple rows, one per week.\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nvar DayGrid = FC.DayGrid = Grid.extend(DayTableMixin, {\\n\\n\\tnumbersVisible: false, // should render a row for day/week numbers? set by outside view. TODO: make internal\\n\\tbottomCoordPadding: 0, // hack for extending the hit area for the last row of the coordinate grid\\n\\n\\trowEls: null, // set of fake row elements\\n\\tcellEls: null, // set of whole-day elements comprising the row's background\\n\\thelperEls: null, // set of cell skeleton elements for rendering the mock event \\\"helper\\\"\\n\\n\\trowCoordCache: null,\\n\\tcolCoordCache: null,\\n\\n\\n\\t// Renders the rows and columns into the component's `this.el`, which should already be assigned.\\n\\t// isRigid determins whether the individual rows should ignore the contents and be a constant height.\\n\\t// Relies on the view's colCnt and rowCnt. In the future, this component should probably be self-sufficient.\\n\\trenderDates: function(isRigid) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar rowCnt = this.rowCnt;\\n\\t\\tvar colCnt = this.colCnt;\\n\\t\\tvar html = '';\\n\\t\\tvar row;\\n\\t\\tvar col;\\n\\n\\t\\tfor (row = 0; row < rowCnt; row++) {\\n\\t\\t\\thtml += this.renderDayRowHtml(row, isRigid);\\n\\t\\t}\\n\\t\\tthis.el.html(html);\\n\\n\\t\\tthis.rowEls = this.el.find('.fc-row');\\n\\t\\tthis.cellEls = this.el.find('.fc-day');\\n\\n\\t\\tthis.rowCoordCache = new CoordCache({\\n\\t\\t\\tels: this.rowEls,\\n\\t\\t\\tisVertical: true\\n\\t\\t});\\n\\t\\tthis.colCoordCache = new CoordCache({\\n\\t\\t\\tels: this.cellEls.slice(0, this.colCnt), // only the first row\\n\\t\\t\\tisHorizontal: true\\n\\t\\t});\\n\\n\\t\\t// trigger dayRender with each cell's element\\n\\t\\tfor (row = 0; row < rowCnt; row++) {\\n\\t\\t\\tfor (col = 0; col < colCnt; col++) {\\n\\t\\t\\t\\tview.publiclyTrigger(\\n\\t\\t\\t\\t\\t'dayRender',\\n\\t\\t\\t\\t\\tnull,\\n\\t\\t\\t\\t\\tthis.getCellDate(row, col),\\n\\t\\t\\t\\t\\tthis.getCellEl(row, col)\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\tunrenderDates: function() {\\n\\t\\tthis.removeSegPopover();\\n\\t},\\n\\n\\n\\trenderBusinessHours: function() {\\n\\t\\tvar segs = this.buildBusinessHourSegs(true); // wholeDay=true\\n\\t\\tthis.renderFill('businessHours', segs, 'bgevent');\\n\\t},\\n\\n\\n\\tunrenderBusinessHours: function() {\\n\\t\\tthis.unrenderFill('businessHours');\\n\\t},\\n\\n\\n\\t// Generates the HTML for a single row, which is a div that wraps a table.\\n\\t// `row` is the row number.\\n\\trenderDayRowHtml: function(row, isRigid) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar classes = [ 'fc-row', 'fc-week', view.widgetContentClass ];\\n\\n\\t\\tif (isRigid) {\\n\\t\\t\\tclasses.push('fc-rigid');\\n\\t\\t}\\n\\n\\t\\treturn '' +\\n\\t\\t\\t'<div class=\\\"' + classes.join(' ') + '\\\">' +\\n\\t\\t\\t\\t'<div class=\\\"fc-bg\\\">' +\\n\\t\\t\\t\\t\\t'<table>' +\\n\\t\\t\\t\\t\\t\\tthis.renderBgTrHtml(row) +\\n\\t\\t\\t\\t\\t'</table>' +\\n\\t\\t\\t\\t'</div>' +\\n\\t\\t\\t\\t'<div class=\\\"fc-content-skeleton\\\">' +\\n\\t\\t\\t\\t\\t'<table>' +\\n\\t\\t\\t\\t\\t\\t(this.numbersVisible ?\\n\\t\\t\\t\\t\\t\\t\\t'<thead>' +\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.renderNumberTrHtml(row) +\\n\\t\\t\\t\\t\\t\\t\\t'</thead>' :\\n\\t\\t\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t\\t'</table>' +\\n\\t\\t\\t\\t'</div>' +\\n\\t\\t\\t'</div>';\\n\\t},\\n\\n\\n\\t/* Grid Number Rendering\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderNumberTrHtml: function(row) {\\n\\t\\treturn '' +\\n\\t\\t\\t'<tr>' +\\n\\t\\t\\t\\t(this.isRTL ? '' : this.renderNumberIntroHtml(row)) +\\n\\t\\t\\t\\tthis.renderNumberCellsHtml(row) +\\n\\t\\t\\t\\t(this.isRTL ? this.renderNumberIntroHtml(row) : '') +\\n\\t\\t\\t'</tr>';\\n\\t},\\n\\n\\n\\trenderNumberIntroHtml: function(row) {\\n\\t\\treturn this.renderIntroHtml();\\n\\t},\\n\\n\\n\\trenderNumberCellsHtml: function(row) {\\n\\t\\tvar htmls = [];\\n\\t\\tvar col, date;\\n\\n\\t\\tfor (col = 0; col < this.colCnt; col++) {\\n\\t\\t\\tdate = this.getCellDate(row, col);\\n\\t\\t\\thtmls.push(this.renderNumberCellHtml(date));\\n\\t\\t}\\n\\n\\t\\treturn htmls.join('');\\n\\t},\\n\\n\\n\\t// Generates the HTML for the <td>s of the \\\"number\\\" row in the DayGrid's content skeleton.\\n\\t// The number row will only exist if either day numbers or week numbers are turned on.\\n\\trenderNumberCellHtml: function(date) {\\n\\t\\tvar html = '';\\n\\t\\tvar classes;\\n\\t\\tvar weekCalcFirstDoW;\\n\\n\\t\\tif (!this.view.dayNumbersVisible && !this.view.cellWeekNumbersVisible) {\\n\\t\\t\\t// no numbers in day cell (week number must be along the side)\\n\\t\\t\\treturn '<td/>'; //  will create an empty space above events :(\\n\\t\\t}\\n\\n\\t\\tclasses = this.getDayClasses(date);\\n\\t\\tclasses.unshift('fc-day-top');\\n\\n\\t\\tif (this.view.cellWeekNumbersVisible) {\\n\\t\\t\\t// To determine the day of week number change under ISO, we cannot\\n\\t\\t\\t// rely on moment.js methods such as firstDayOfWeek() or weekday(),\\n\\t\\t\\t// because they rely on the locale's dow (possibly overridden by\\n\\t\\t\\t// our firstDay option), which may not be Monday. We cannot change\\n\\t\\t\\t// dow, because that would affect the calendar start day as well.\\n\\t\\t\\tif (date._locale._fullCalendar_weekCalc === 'ISO') {\\n\\t\\t\\t\\tweekCalcFirstDoW = 1;  // Monday by ISO 8601 definition\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tweekCalcFirstDoW = date._locale.firstDayOfWeek();\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\thtml += '<td class=\\\"' + classes.join(' ') + '\\\" data-date=\\\"' + date.format() + '\\\">';\\n\\n\\t\\tif (this.view.cellWeekNumbersVisible && (date.day() == weekCalcFirstDoW)) {\\n\\t\\t\\thtml += this.view.buildGotoAnchorHtml(\\n\\t\\t\\t\\t{ date: date, type: 'week' },\\n\\t\\t\\t\\t{ 'class': 'fc-week-number' },\\n\\t\\t\\t\\tdate.format('w') // inner HTML\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\tif (this.view.dayNumbersVisible) {\\n\\t\\t\\thtml += this.view.buildGotoAnchorHtml(\\n\\t\\t\\t\\tdate,\\n\\t\\t\\t\\t{ 'class': 'fc-day-number' },\\n\\t\\t\\t\\tdate.date() // inner HTML\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\thtml += '</td>';\\n\\n\\t\\treturn html;\\n\\t},\\n\\n\\n\\t/* Options\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Computes a default event time formatting string if `timeFormat` is not explicitly defined\\n\\tcomputeEventTimeFormat: function() {\\n\\t\\treturn this.view.opt('extraSmallTimeFormat'); // like \\\"6p\\\" or \\\"6:30p\\\"\\n\\t},\\n\\n\\n\\t// Computes a default `displayEventEnd` value if one is not expliclty defined\\n\\tcomputeDisplayEventEnd: function() {\\n\\t\\treturn this.colCnt == 1; // we'll likely have space if there's only one day\\n\\t},\\n\\n\\n\\t/* Dates\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trangeUpdated: function() {\\n\\t\\tthis.updateDayTable();\\n\\t},\\n\\n\\n\\t// Slices up the given span (unzoned start/end with other misc data) into an array of segments\\n\\tspanToSegs: function(span) {\\n\\t\\tvar segs = this.sliceRangeByRow(span);\\n\\t\\tvar i, seg;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\t\\t\\tif (this.isRTL) {\\n\\t\\t\\t\\tseg.leftCol = this.daysPerRow - 1 - seg.lastRowDayIndex;\\n\\t\\t\\t\\tseg.rightCol = this.daysPerRow - 1 - seg.firstRowDayIndex;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tseg.leftCol = seg.firstRowDayIndex;\\n\\t\\t\\t\\tseg.rightCol = seg.lastRowDayIndex;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t/* Hit System\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tprepareHits: function() {\\n\\t\\tthis.colCoordCache.build();\\n\\t\\tthis.rowCoordCache.build();\\n\\t\\tthis.rowCoordCache.bottoms[this.rowCnt - 1] += this.bottomCoordPadding; // hack\\n\\t},\\n\\n\\n\\treleaseHits: function() {\\n\\t\\tthis.colCoordCache.clear();\\n\\t\\tthis.rowCoordCache.clear();\\n\\t},\\n\\n\\n\\tqueryHit: function(leftOffset, topOffset) {\\n\\t\\tif (this.colCoordCache.isLeftInBounds(leftOffset) && this.rowCoordCache.isTopInBounds(topOffset)) {\\n\\t\\t\\tvar col = this.colCoordCache.getHorizontalIndex(leftOffset);\\n\\t\\t\\tvar row = this.rowCoordCache.getVerticalIndex(topOffset);\\n\\n\\t\\t\\tif (row != null && col != null) {\\n\\t\\t\\t\\treturn this.getCellHit(row, col);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\tgetHitSpan: function(hit) {\\n\\t\\treturn this.getCellRange(hit.row, hit.col);\\n\\t},\\n\\n\\n\\tgetHitEl: function(hit) {\\n\\t\\treturn this.getCellEl(hit.row, hit.col);\\n\\t},\\n\\n\\n\\t/* Cell System\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\t// FYI: the first column is the leftmost column, regardless of date\\n\\n\\n\\tgetCellHit: function(row, col) {\\n\\t\\treturn {\\n\\t\\t\\trow: row,\\n\\t\\t\\tcol: col,\\n\\t\\t\\tcomponent: this, // needed unfortunately :(\\n\\t\\t\\tleft: this.colCoordCache.getLeftOffset(col),\\n\\t\\t\\tright: this.colCoordCache.getRightOffset(col),\\n\\t\\t\\ttop: this.rowCoordCache.getTopOffset(row),\\n\\t\\t\\tbottom: this.rowCoordCache.getBottomOffset(row)\\n\\t\\t};\\n\\t},\\n\\n\\n\\tgetCellEl: function(row, col) {\\n\\t\\treturn this.cellEls.eq(row * this.colCnt + col);\\n\\t},\\n\\n\\n\\t/* Event Drag Visualization\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\t// TODO: move to DayGrid.event, similar to what we did with Grid's drag methods\\n\\n\\n\\t// Renders a visual indication of an event or external element being dragged.\\n\\t// `eventLocation` has zoned start and end (optional)\\n\\trenderDrag: function(eventLocation, seg) {\\n\\n\\t\\t// always render a highlight underneath\\n\\t\\tthis.renderHighlight(this.eventToSpan(eventLocation));\\n\\n\\t\\t// if a segment from the same calendar but another component is being dragged, render a helper event\\n\\t\\tif (seg && seg.component !== this) {\\n\\t\\t\\treturn this.renderEventLocationHelper(eventLocation, seg); // returns mock event elements\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Unrenders any visual indication of a hovering event\\n\\tunrenderDrag: function() {\\n\\t\\tthis.unrenderHighlight();\\n\\t\\tthis.unrenderHelper();\\n\\t},\\n\\n\\n\\t/* Event Resize Visualization\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of an event being resized\\n\\trenderEventResize: function(eventLocation, seg) {\\n\\t\\tthis.renderHighlight(this.eventToSpan(eventLocation));\\n\\t\\treturn this.renderEventLocationHelper(eventLocation, seg); // returns mock event elements\\n\\t},\\n\\n\\n\\t// Unrenders a visual indication of an event being resized\\n\\tunrenderEventResize: function() {\\n\\t\\tthis.unrenderHighlight();\\n\\t\\tthis.unrenderHelper();\\n\\t},\\n\\n\\n\\t/* Event Helper\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a mock \\\"helper\\\" event. `sourceSeg` is the associated internal segment object. It can be null.\\n\\trenderHelper: function(event, sourceSeg) {\\n\\t\\tvar helperNodes = [];\\n\\t\\tvar segs = this.eventToSegs(event);\\n\\t\\tvar rowStructs;\\n\\n\\t\\tsegs = this.renderFgSegEls(segs); // assigns each seg's el and returns a subset of segs that were rendered\\n\\t\\trowStructs = this.renderSegRows(segs);\\n\\n\\t\\t// inject each new event skeleton into each associated row\\n\\t\\tthis.rowEls.each(function(row, rowNode) {\\n\\t\\t\\tvar rowEl = $(rowNode); // the .fc-row\\n\\t\\t\\tvar skeletonEl = $('<div class=\\\"fc-helper-skeleton\\\"><table/></div>'); // will be absolutely positioned\\n\\t\\t\\tvar skeletonTop;\\n\\n\\t\\t\\t// If there is an original segment, match the top position. Otherwise, put it at the row's top level\\n\\t\\t\\tif (sourceSeg && sourceSeg.row === row) {\\n\\t\\t\\t\\tskeletonTop = sourceSeg.el.position().top;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tskeletonTop = rowEl.find('.fc-content-skeleton tbody').position().top;\\n\\t\\t\\t}\\n\\n\\t\\t\\tskeletonEl.css('top', skeletonTop)\\n\\t\\t\\t\\t.find('table')\\n\\t\\t\\t\\t\\t.append(rowStructs[row].tbodyEl);\\n\\n\\t\\t\\trowEl.append(skeletonEl);\\n\\t\\t\\thelperNodes.push(skeletonEl[0]);\\n\\t\\t});\\n\\n\\t\\treturn ( // must return the elements rendered\\n\\t\\t\\tthis.helperEls = $(helperNodes) // array -> jQuery set\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Unrenders any visual indication of a mock helper event\\n\\tunrenderHelper: function() {\\n\\t\\tif (this.helperEls) {\\n\\t\\t\\tthis.helperEls.remove();\\n\\t\\t\\tthis.helperEls = null;\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Fill System (highlight, background events, business hours)\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tfillSegTag: 'td', // override the default tag name\\n\\n\\n\\t// Renders a set of rectangles over the given segments of days.\\n\\t// Only returns segments that successfully rendered.\\n\\trenderFill: function(type, segs, className) {\\n\\t\\tvar nodes = [];\\n\\t\\tvar i, seg;\\n\\t\\tvar skeletonEl;\\n\\n\\t\\tsegs = this.renderFillSegEls(type, segs); // assignes `.el` to each seg. returns successfully rendered segs\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\t\\t\\tskeletonEl = this.renderFillRow(type, seg, className);\\n\\t\\t\\tthis.rowEls.eq(seg.row).append(skeletonEl);\\n\\t\\t\\tnodes.push(skeletonEl[0]);\\n\\t\\t}\\n\\n\\t\\tthis.elsByFill[type] = $(nodes);\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t// Generates the HTML needed for one row of a fill. Requires the seg's el to be rendered.\\n\\trenderFillRow: function(type, seg, className) {\\n\\t\\tvar colCnt = this.colCnt;\\n\\t\\tvar startCol = seg.leftCol;\\n\\t\\tvar endCol = seg.rightCol + 1;\\n\\t\\tvar skeletonEl;\\n\\t\\tvar trEl;\\n\\n\\t\\tclassName = className || type.toLowerCase();\\n\\n\\t\\tskeletonEl = $(\\n\\t\\t\\t'<div class=\\\"fc-' + className + '-skeleton\\\">' +\\n\\t\\t\\t\\t'<table><tr/></table>' +\\n\\t\\t\\t'</div>'\\n\\t\\t);\\n\\t\\ttrEl = skeletonEl.find('tr');\\n\\n\\t\\tif (startCol > 0) {\\n\\t\\t\\ttrEl.append('<td colspan=\\\"' + startCol + '\\\"/>');\\n\\t\\t}\\n\\n\\t\\ttrEl.append(\\n\\t\\t\\tseg.el.attr('colspan', endCol - startCol)\\n\\t\\t);\\n\\n\\t\\tif (endCol < colCnt) {\\n\\t\\t\\ttrEl.append('<td colspan=\\\"' + (colCnt - endCol) + '\\\"/>');\\n\\t\\t}\\n\\n\\t\\tthis.bookendCells(trEl);\\n\\n\\t\\treturn skeletonEl;\\n\\t}\\n\\n});\\n\\n;;\\n\\n/* Event-rendering methods for the DayGrid class\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nDayGrid.mixin({\\n\\n\\trowStructs: null, // an array of objects, each holding information about a row's foreground event-rendering\\n\\n\\n\\t// Unrenders all events currently rendered on the grid\\n\\tunrenderEvents: function() {\\n\\t\\tthis.removeSegPopover(); // removes the \\\"more..\\\" events popover\\n\\t\\tGrid.prototype.unrenderEvents.apply(this, arguments); // calls the super-method\\n\\t},\\n\\n\\n\\t// Retrieves all rendered segment objects currently rendered on the grid\\n\\tgetEventSegs: function() {\\n\\t\\treturn Grid.prototype.getEventSegs.call(this) // get the segments from the super-method\\n\\t\\t\\t.concat(this.popoverSegs || []); // append the segments from the \\\"more...\\\" popover\\n\\t},\\n\\n\\n\\t// Renders the given background event segments onto the grid\\n\\trenderBgSegs: function(segs) {\\n\\n\\t\\t// don't render timed background events\\n\\t\\tvar allDaySegs = $.grep(segs, function(seg) {\\n\\t\\t\\treturn seg.event.allDay;\\n\\t\\t});\\n\\n\\t\\treturn Grid.prototype.renderBgSegs.call(this, allDaySegs); // call the super-method\\n\\t},\\n\\n\\n\\t// Renders the given foreground event segments onto the grid\\n\\trenderFgSegs: function(segs) {\\n\\t\\tvar rowStructs;\\n\\n\\t\\t// render an `.el` on each seg\\n\\t\\t// returns a subset of the segs. segs that were actually rendered\\n\\t\\tsegs = this.renderFgSegEls(segs);\\n\\n\\t\\trowStructs = this.rowStructs = this.renderSegRows(segs);\\n\\n\\t\\t// append to each row's content skeleton\\n\\t\\tthis.rowEls.each(function(i, rowNode) {\\n\\t\\t\\t$(rowNode).find('.fc-content-skeleton > table').append(\\n\\t\\t\\t\\trowStructs[i].tbodyEl\\n\\t\\t\\t);\\n\\t\\t});\\n\\n\\t\\treturn segs; // return only the segs that were actually rendered\\n\\t},\\n\\n\\n\\t// Unrenders all currently rendered foreground event segments\\n\\tunrenderFgSegs: function() {\\n\\t\\tvar rowStructs = this.rowStructs || [];\\n\\t\\tvar rowStruct;\\n\\n\\t\\twhile ((rowStruct = rowStructs.pop())) {\\n\\t\\t\\trowStruct.tbodyEl.remove();\\n\\t\\t}\\n\\n\\t\\tthis.rowStructs = null;\\n\\t},\\n\\n\\n\\t// Uses the given events array to generate <tbody> elements that should be appended to each row's content skeleton.\\n\\t// Returns an array of rowStruct objects (see the bottom of `renderSegRow`).\\n\\t// PRECONDITION: each segment shoud already have a rendered and assigned `.el`\\n\\trenderSegRows: function(segs) {\\n\\t\\tvar rowStructs = [];\\n\\t\\tvar segRows;\\n\\t\\tvar row;\\n\\n\\t\\tsegRows = this.groupSegRows(segs); // group into nested arrays\\n\\n\\t\\t// iterate each row of segment groupings\\n\\t\\tfor (row = 0; row < segRows.length; row++) {\\n\\t\\t\\trowStructs.push(\\n\\t\\t\\t\\tthis.renderSegRow(row, segRows[row])\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\treturn rowStructs;\\n\\t},\\n\\n\\n\\t// Builds the HTML to be used for the default element for an individual segment\\n\\tfgSegHtml: function(seg, disableResizing) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar event = seg.event;\\n\\t\\tvar isDraggable = view.isEventDraggable(event);\\n\\t\\tvar isResizableFromStart = !disableResizing && event.allDay &&\\n\\t\\t\\tseg.isStart && view.isEventResizableFromStart(event);\\n\\t\\tvar isResizableFromEnd = !disableResizing && event.allDay &&\\n\\t\\t\\tseg.isEnd && view.isEventResizableFromEnd(event);\\n\\t\\tvar classes = this.getSegClasses(seg, isDraggable, isResizableFromStart || isResizableFromEnd);\\n\\t\\tvar skinCss = cssToStr(this.getSegSkinCss(seg));\\n\\t\\tvar timeHtml = '';\\n\\t\\tvar timeText;\\n\\t\\tvar titleHtml;\\n\\n\\t\\tclasses.unshift('fc-day-grid-event', 'fc-h-event');\\n\\n\\t\\t// Only display a timed events time if it is the starting segment\\n\\t\\tif (seg.isStart) {\\n\\t\\t\\ttimeText = this.getEventTimeText(event);\\n\\t\\t\\tif (timeText) {\\n\\t\\t\\t\\ttimeHtml = '<span class=\\\"fc-time\\\">' + htmlEscape(timeText) + '</span>';\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\ttitleHtml =\\n\\t\\t\\t'<span class=\\\"fc-title\\\">' +\\n\\t\\t\\t\\t(htmlEscape(event.title || '') || '&nbsp;') + // we always want one line of height\\n\\t\\t\\t'</span>';\\n\\t\\t\\n\\t\\treturn '<a class=\\\"' + classes.join(' ') + '\\\"' +\\n\\t\\t\\t\\t(event.url ?\\n\\t\\t\\t\\t\\t' href=\\\"' + htmlEscape(event.url) + '\\\"' :\\n\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t(skinCss ?\\n\\t\\t\\t\\t\\t' style=\\\"' + skinCss + '\\\"' :\\n\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t) +\\n\\t\\t\\t'>' +\\n\\t\\t\\t\\t'<div class=\\\"fc-content\\\">' +\\n\\t\\t\\t\\t\\t(this.isRTL ?\\n\\t\\t\\t\\t\\t\\ttitleHtml + ' ' + timeHtml : // put a natural space in between\\n\\t\\t\\t\\t\\t\\ttimeHtml + ' ' + titleHtml   //\\n\\t\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t'</div>' +\\n\\t\\t\\t\\t(isResizableFromStart ?\\n\\t\\t\\t\\t\\t'<div class=\\\"fc-resizer fc-start-resizer\\\" />' :\\n\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t(isResizableFromEnd ?\\n\\t\\t\\t\\t\\t'<div class=\\\"fc-resizer fc-end-resizer\\\" />' :\\n\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t) +\\n\\t\\t\\t'</a>';\\n\\t},\\n\\n\\n\\t// Given a row # and an array of segments all in the same row, render a <tbody> element, a skeleton that contains\\n\\t// the segments. Returns object with a bunch of internal data about how the render was calculated.\\n\\t// NOTE: modifies rowSegs\\n\\trenderSegRow: function(row, rowSegs) {\\n\\t\\tvar colCnt = this.colCnt;\\n\\t\\tvar segLevels = this.buildSegLevels(rowSegs); // group into sub-arrays of levels\\n\\t\\tvar levelCnt = Math.max(1, segLevels.length); // ensure at least one level\\n\\t\\tvar tbody = $('<tbody/>');\\n\\t\\tvar segMatrix = []; // lookup for which segments are rendered into which level+col cells\\n\\t\\tvar cellMatrix = []; // lookup for all <td> elements of the level+col matrix\\n\\t\\tvar loneCellMatrix = []; // lookup for <td> elements that only take up a single column\\n\\t\\tvar i, levelSegs;\\n\\t\\tvar col;\\n\\t\\tvar tr;\\n\\t\\tvar j, seg;\\n\\t\\tvar td;\\n\\n\\t\\t// populates empty cells from the current column (`col`) to `endCol`\\n\\t\\tfunction emptyCellsUntil(endCol) {\\n\\t\\t\\twhile (col < endCol) {\\n\\t\\t\\t\\t// try to grab a cell from the level above and extend its rowspan. otherwise, create a fresh cell\\n\\t\\t\\t\\ttd = (loneCellMatrix[i - 1] || [])[col];\\n\\t\\t\\t\\tif (td) {\\n\\t\\t\\t\\t\\ttd.attr(\\n\\t\\t\\t\\t\\t\\t'rowspan',\\n\\t\\t\\t\\t\\t\\tparseInt(td.attr('rowspan') || 1, 10) + 1\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\ttd = $('<td/>');\\n\\t\\t\\t\\t\\ttr.append(td);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tcellMatrix[i][col] = td;\\n\\t\\t\\t\\tloneCellMatrix[i][col] = td;\\n\\t\\t\\t\\tcol++;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tfor (i = 0; i < levelCnt; i++) { // iterate through all levels\\n\\t\\t\\tlevelSegs = segLevels[i];\\n\\t\\t\\tcol = 0;\\n\\t\\t\\ttr = $('<tr/>');\\n\\n\\t\\t\\tsegMatrix.push([]);\\n\\t\\t\\tcellMatrix.push([]);\\n\\t\\t\\tloneCellMatrix.push([]);\\n\\n\\t\\t\\t// levelCnt might be 1 even though there are no actual levels. protect against this.\\n\\t\\t\\t// this single empty row is useful for styling.\\n\\t\\t\\tif (levelSegs) {\\n\\t\\t\\t\\tfor (j = 0; j < levelSegs.length; j++) { // iterate through segments in level\\n\\t\\t\\t\\t\\tseg = levelSegs[j];\\n\\n\\t\\t\\t\\t\\temptyCellsUntil(seg.leftCol);\\n\\n\\t\\t\\t\\t\\t// create a container that occupies or more columns. append the event element.\\n\\t\\t\\t\\t\\ttd = $('<td class=\\\"fc-event-container\\\"/>').append(seg.el);\\n\\t\\t\\t\\t\\tif (seg.leftCol != seg.rightCol) {\\n\\t\\t\\t\\t\\t\\ttd.attr('colspan', seg.rightCol - seg.leftCol + 1);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse { // a single-column segment\\n\\t\\t\\t\\t\\t\\tloneCellMatrix[i][col] = td;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\twhile (col <= seg.rightCol) {\\n\\t\\t\\t\\t\\t\\tcellMatrix[i][col] = td;\\n\\t\\t\\t\\t\\t\\tsegMatrix[i][col] = seg;\\n\\t\\t\\t\\t\\t\\tcol++;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\ttr.append(td);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\temptyCellsUntil(colCnt); // finish off the row\\n\\t\\t\\tthis.bookendCells(tr);\\n\\t\\t\\ttbody.append(tr);\\n\\t\\t}\\n\\n\\t\\treturn { // a \\\"rowStruct\\\"\\n\\t\\t\\trow: row, // the row number\\n\\t\\t\\ttbodyEl: tbody,\\n\\t\\t\\tcellMatrix: cellMatrix,\\n\\t\\t\\tsegMatrix: segMatrix,\\n\\t\\t\\tsegLevels: segLevels,\\n\\t\\t\\tsegs: rowSegs\\n\\t\\t};\\n\\t},\\n\\n\\n\\t// Stacks a flat array of segments, which are all assumed to be in the same row, into subarrays of vertical levels.\\n\\t// NOTE: modifies segs\\n\\tbuildSegLevels: function(segs) {\\n\\t\\tvar levels = [];\\n\\t\\tvar i, seg;\\n\\t\\tvar j;\\n\\n\\t\\t// Give preference to elements with certain criteria, so they have\\n\\t\\t// a chance to be closer to the top.\\n\\t\\tthis.sortEventSegs(segs);\\n\\t\\t\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\n\\t\\t\\t// loop through levels, starting with the topmost, until the segment doesn't collide with other segments\\n\\t\\t\\tfor (j = 0; j < levels.length; j++) {\\n\\t\\t\\t\\tif (!isDaySegCollision(seg, levels[j])) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t// `j` now holds the desired subrow index\\n\\t\\t\\tseg.level = j;\\n\\n\\t\\t\\t// create new level array if needed and append segment\\n\\t\\t\\t(levels[j] || (levels[j] = [])).push(seg);\\n\\t\\t}\\n\\n\\t\\t// order segments left-to-right. very important if calendar is RTL\\n\\t\\tfor (j = 0; j < levels.length; j++) {\\n\\t\\t\\tlevels[j].sort(compareDaySegCols);\\n\\t\\t}\\n\\n\\t\\treturn levels;\\n\\t},\\n\\n\\n\\t// Given a flat array of segments, return an array of sub-arrays, grouped by each segment's row\\n\\tgroupSegRows: function(segs) {\\n\\t\\tvar segRows = [];\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < this.rowCnt; i++) {\\n\\t\\t\\tsegRows.push([]);\\n\\t\\t}\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tsegRows[segs[i].row].push(segs[i]);\\n\\t\\t}\\n\\n\\t\\treturn segRows;\\n\\t}\\n\\n});\\n\\n\\n// Computes whether two segments' columns collide. They are assumed to be in the same row.\\nfunction isDaySegCollision(seg, otherSegs) {\\n\\tvar i, otherSeg;\\n\\n\\tfor (i = 0; i < otherSegs.length; i++) {\\n\\t\\totherSeg = otherSegs[i];\\n\\n\\t\\tif (\\n\\t\\t\\totherSeg.leftCol <= seg.rightCol &&\\n\\t\\t\\totherSeg.rightCol >= seg.leftCol\\n\\t\\t) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t}\\n\\n\\treturn false;\\n}\\n\\n\\n// A cmp function for determining the leftmost event\\nfunction compareDaySegCols(a, b) {\\n\\treturn a.leftCol - b.leftCol;\\n}\\n\\n;;\\n\\n/* Methods relate to limiting the number events for a given day on a DayGrid\\n----------------------------------------------------------------------------------------------------------------------*/\\n// NOTE: all the segs being passed around in here are foreground segs\\n\\nDayGrid.mixin({\\n\\n\\tsegPopover: null, // the Popover that holds events that can't fit in a cell. null when not visible\\n\\tpopoverSegs: null, // an array of segment objects that the segPopover holds. null when not visible\\n\\n\\n\\tremoveSegPopover: function() {\\n\\t\\tif (this.segPopover) {\\n\\t\\t\\tthis.segPopover.hide(); // in handler, will call segPopover's removeElement\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Limits the number of \\\"levels\\\" (vertically stacking layers of events) for each row of the grid.\\n\\t// `levelLimit` can be false (don't limit), a number, or true (should be computed).\\n\\tlimitRows: function(levelLimit) {\\n\\t\\tvar rowStructs = this.rowStructs || [];\\n\\t\\tvar row; // row #\\n\\t\\tvar rowLevelLimit;\\n\\n\\t\\tfor (row = 0; row < rowStructs.length; row++) {\\n\\t\\t\\tthis.unlimitRow(row);\\n\\n\\t\\t\\tif (!levelLimit) {\\n\\t\\t\\t\\trowLevelLimit = false;\\n\\t\\t\\t}\\n\\t\\t\\telse if (typeof levelLimit === 'number') {\\n\\t\\t\\t\\trowLevelLimit = levelLimit;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\trowLevelLimit = this.computeRowLevelLimit(row);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (rowLevelLimit !== false) {\\n\\t\\t\\t\\tthis.limitRow(row, rowLevelLimit);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Computes the number of levels a row will accomodate without going outside its bounds.\\n\\t// Assumes the row is \\\"rigid\\\" (maintains a constant height regardless of what is inside).\\n\\t// `row` is the row number.\\n\\tcomputeRowLevelLimit: function(row) {\\n\\t\\tvar rowEl = this.rowEls.eq(row); // the containing \\\"fake\\\" row div\\n\\t\\tvar rowHeight = rowEl.height(); // TODO: cache somehow?\\n\\t\\tvar trEls = this.rowStructs[row].tbodyEl.children();\\n\\t\\tvar i, trEl;\\n\\t\\tvar trHeight;\\n\\n\\t\\tfunction iterInnerHeights(i, childNode) {\\n\\t\\t\\ttrHeight = Math.max(trHeight, $(childNode).outerHeight());\\n\\t\\t}\\n\\n\\t\\t// Reveal one level <tr> at a time and stop when we find one out of bounds\\n\\t\\tfor (i = 0; i < trEls.length; i++) {\\n\\t\\t\\ttrEl = trEls.eq(i).removeClass('fc-limited'); // reset to original state (reveal)\\n\\n\\t\\t\\t// with rowspans>1 and IE8, trEl.outerHeight() would return the height of the largest cell,\\n\\t\\t\\t// so instead, find the tallest inner content element.\\n\\t\\t\\ttrHeight = 0;\\n\\t\\t\\ttrEl.find('> td > :first-child').each(iterInnerHeights);\\n\\n\\t\\t\\tif (trEl.position().top + trHeight > rowHeight) {\\n\\t\\t\\t\\treturn i;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn false; // should not limit at all\\n\\t},\\n\\n\\n\\t// Limits the given grid row to the maximum number of levels and injects \\\"more\\\" links if necessary.\\n\\t// `row` is the row number.\\n\\t// `levelLimit` is a number for the maximum (inclusive) number of levels allowed.\\n\\tlimitRow: function(row, levelLimit) {\\n\\t\\tvar _this = this;\\n\\t\\tvar rowStruct = this.rowStructs[row];\\n\\t\\tvar moreNodes = []; // array of \\\"more\\\" <a> links and <td> DOM nodes\\n\\t\\tvar col = 0; // col #, left-to-right (not chronologically)\\n\\t\\tvar levelSegs; // array of segment objects in the last allowable level, ordered left-to-right\\n\\t\\tvar cellMatrix; // a matrix (by level, then column) of all <td> jQuery elements in the row\\n\\t\\tvar limitedNodes; // array of temporarily hidden level <tr> and segment <td> DOM nodes\\n\\t\\tvar i, seg;\\n\\t\\tvar segsBelow; // array of segment objects below `seg` in the current `col`\\n\\t\\tvar totalSegsBelow; // total number of segments below `seg` in any of the columns `seg` occupies\\n\\t\\tvar colSegsBelow; // array of segment arrays, below seg, one for each column (offset from segs's first column)\\n\\t\\tvar td, rowspan;\\n\\t\\tvar segMoreNodes; // array of \\\"more\\\" <td> cells that will stand-in for the current seg's cell\\n\\t\\tvar j;\\n\\t\\tvar moreTd, moreWrap, moreLink;\\n\\n\\t\\t// Iterates through empty level cells and places \\\"more\\\" links inside if need be\\n\\t\\tfunction emptyCellsUntil(endCol) { // goes from current `col` to `endCol`\\n\\t\\t\\twhile (col < endCol) {\\n\\t\\t\\t\\tsegsBelow = _this.getCellSegs(row, col, levelLimit);\\n\\t\\t\\t\\tif (segsBelow.length) {\\n\\t\\t\\t\\t\\ttd = cellMatrix[levelLimit - 1][col];\\n\\t\\t\\t\\t\\tmoreLink = _this.renderMoreLink(row, col, segsBelow);\\n\\t\\t\\t\\t\\tmoreWrap = $('<div/>').append(moreLink);\\n\\t\\t\\t\\t\\ttd.append(moreWrap);\\n\\t\\t\\t\\t\\tmoreNodes.push(moreWrap[0]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tcol++;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (levelLimit && levelLimit < rowStruct.segLevels.length) { // is it actually over the limit?\\n\\t\\t\\tlevelSegs = rowStruct.segLevels[levelLimit - 1];\\n\\t\\t\\tcellMatrix = rowStruct.cellMatrix;\\n\\n\\t\\t\\tlimitedNodes = rowStruct.tbodyEl.children().slice(levelLimit) // get level <tr> elements past the limit\\n\\t\\t\\t\\t.addClass('fc-limited').get(); // hide elements and get a simple DOM-nodes array\\n\\n\\t\\t\\t// iterate though segments in the last allowable level\\n\\t\\t\\tfor (i = 0; i < levelSegs.length; i++) {\\n\\t\\t\\t\\tseg = levelSegs[i];\\n\\t\\t\\t\\temptyCellsUntil(seg.leftCol); // process empty cells before the segment\\n\\n\\t\\t\\t\\t// determine *all* segments below `seg` that occupy the same columns\\n\\t\\t\\t\\tcolSegsBelow = [];\\n\\t\\t\\t\\ttotalSegsBelow = 0;\\n\\t\\t\\t\\twhile (col <= seg.rightCol) {\\n\\t\\t\\t\\t\\tsegsBelow = this.getCellSegs(row, col, levelLimit);\\n\\t\\t\\t\\t\\tcolSegsBelow.push(segsBelow);\\n\\t\\t\\t\\t\\ttotalSegsBelow += segsBelow.length;\\n\\t\\t\\t\\t\\tcol++;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (totalSegsBelow) { // do we need to replace this segment with one or many \\\"more\\\" links?\\n\\t\\t\\t\\t\\ttd = cellMatrix[levelLimit - 1][seg.leftCol]; // the segment's parent cell\\n\\t\\t\\t\\t\\trowspan = td.attr('rowspan') || 1;\\n\\t\\t\\t\\t\\tsegMoreNodes = [];\\n\\n\\t\\t\\t\\t\\t// make a replacement <td> for each column the segment occupies. will be one for each colspan\\n\\t\\t\\t\\t\\tfor (j = 0; j < colSegsBelow.length; j++) {\\n\\t\\t\\t\\t\\t\\tmoreTd = $('<td class=\\\"fc-more-cell\\\"/>').attr('rowspan', rowspan);\\n\\t\\t\\t\\t\\t\\tsegsBelow = colSegsBelow[j];\\n\\t\\t\\t\\t\\t\\tmoreLink = this.renderMoreLink(\\n\\t\\t\\t\\t\\t\\t\\trow,\\n\\t\\t\\t\\t\\t\\t\\tseg.leftCol + j,\\n\\t\\t\\t\\t\\t\\t\\t[ seg ].concat(segsBelow) // count seg as hidden too\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tmoreWrap = $('<div/>').append(moreLink);\\n\\t\\t\\t\\t\\t\\tmoreTd.append(moreWrap);\\n\\t\\t\\t\\t\\t\\tsegMoreNodes.push(moreTd[0]);\\n\\t\\t\\t\\t\\t\\tmoreNodes.push(moreTd[0]);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\ttd.addClass('fc-limited').after($(segMoreNodes)); // hide original <td> and inject replacements\\n\\t\\t\\t\\t\\tlimitedNodes.push(td[0]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\temptyCellsUntil(this.colCnt); // finish off the level\\n\\t\\t\\trowStruct.moreEls = $(moreNodes); // for easy undoing later\\n\\t\\t\\trowStruct.limitedEls = $(limitedNodes); // for easy undoing later\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Reveals all levels and removes all \\\"more\\\"-related elements for a grid's row.\\n\\t// `row` is a row number.\\n\\tunlimitRow: function(row) {\\n\\t\\tvar rowStruct = this.rowStructs[row];\\n\\n\\t\\tif (rowStruct.moreEls) {\\n\\t\\t\\trowStruct.moreEls.remove();\\n\\t\\t\\trowStruct.moreEls = null;\\n\\t\\t}\\n\\n\\t\\tif (rowStruct.limitedEls) {\\n\\t\\t\\trowStruct.limitedEls.removeClass('fc-limited');\\n\\t\\t\\trowStruct.limitedEls = null;\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Renders an <a> element that represents hidden event element for a cell.\\n\\t// Responsible for attaching click handler as well.\\n\\trenderMoreLink: function(row, col, hiddenSegs) {\\n\\t\\tvar _this = this;\\n\\t\\tvar view = this.view;\\n\\n\\t\\treturn $('<a class=\\\"fc-more\\\"/>')\\n\\t\\t\\t.text(\\n\\t\\t\\t\\tthis.getMoreLinkText(hiddenSegs.length)\\n\\t\\t\\t)\\n\\t\\t\\t.on('click', function(ev) {\\n\\t\\t\\t\\tvar clickOption = view.opt('eventLimitClick');\\n\\t\\t\\t\\tvar date = _this.getCellDate(row, col);\\n\\t\\t\\t\\tvar moreEl = $(this);\\n\\t\\t\\t\\tvar dayEl = _this.getCellEl(row, col);\\n\\t\\t\\t\\tvar allSegs = _this.getCellSegs(row, col);\\n\\n\\t\\t\\t\\t// rescope the segments to be within the cell's date\\n\\t\\t\\t\\tvar reslicedAllSegs = _this.resliceDaySegs(allSegs, date);\\n\\t\\t\\t\\tvar reslicedHiddenSegs = _this.resliceDaySegs(hiddenSegs, date);\\n\\n\\t\\t\\t\\tif (typeof clickOption === 'function') {\\n\\t\\t\\t\\t\\t// the returned value can be an atomic option\\n\\t\\t\\t\\t\\tclickOption = view.publiclyTrigger('eventLimitClick', null, {\\n\\t\\t\\t\\t\\t\\tdate: date,\\n\\t\\t\\t\\t\\t\\tdayEl: dayEl,\\n\\t\\t\\t\\t\\t\\tmoreEl: moreEl,\\n\\t\\t\\t\\t\\t\\tsegs: reslicedAllSegs,\\n\\t\\t\\t\\t\\t\\thiddenSegs: reslicedHiddenSegs\\n\\t\\t\\t\\t\\t}, ev);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (clickOption === 'popover') {\\n\\t\\t\\t\\t\\t_this.showSegPopover(row, col, moreEl, reslicedAllSegs);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse if (typeof clickOption === 'string') { // a view name\\n\\t\\t\\t\\t\\tview.calendar.zoomTo(date, clickOption);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t},\\n\\n\\n\\t// Reveals the popover that displays all events within a cell\\n\\tshowSegPopover: function(row, col, moreLink, segs) {\\n\\t\\tvar _this = this;\\n\\t\\tvar view = this.view;\\n\\t\\tvar moreWrap = moreLink.parent(); // the <div> wrapper around the <a>\\n\\t\\tvar topEl; // the element we want to match the top coordinate of\\n\\t\\tvar options;\\n\\n\\t\\tif (this.rowCnt == 1) {\\n\\t\\t\\ttopEl = view.el; // will cause the popover to cover any sort of header\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\ttopEl = this.rowEls.eq(row); // will align with top of row\\n\\t\\t}\\n\\n\\t\\toptions = {\\n\\t\\t\\tclassName: 'fc-more-popover',\\n\\t\\t\\tcontent: this.renderSegPopoverContent(row, col, segs),\\n\\t\\t\\tparentEl: this.view.el, // attach to root of view. guarantees outside of scrollbars.\\n\\t\\t\\ttop: topEl.offset().top,\\n\\t\\t\\tautoHide: true, // when the user clicks elsewhere, hide the popover\\n\\t\\t\\tviewportConstrain: view.opt('popoverViewportConstrain'),\\n\\t\\t\\thide: function() {\\n\\t\\t\\t\\t// kill everything when the popover is hidden\\n\\t\\t\\t\\t// notify events to be removed\\n\\t\\t\\t\\tif (_this.popoverSegs) {\\n\\t\\t\\t\\t\\tvar seg;\\n\\t\\t\\t\\t\\tfor (var i = 0; i < _this.popoverSegs.length; ++i) {\\n\\t\\t\\t\\t\\t\\tseg = _this.popoverSegs[i];\\n\\t\\t\\t\\t\\t\\tview.publiclyTrigger('eventDestroy', seg.event, seg.event, seg.el);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t_this.segPopover.removeElement();\\n\\t\\t\\t\\t_this.segPopover = null;\\n\\t\\t\\t\\t_this.popoverSegs = null;\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\t// Determine horizontal coordinate.\\n\\t\\t// We use the moreWrap instead of the <td> to avoid border confusion.\\n\\t\\tif (this.isRTL) {\\n\\t\\t\\toptions.right = moreWrap.offset().left + moreWrap.outerWidth() + 1; // +1 to be over cell border\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\toptions.left = moreWrap.offset().left - 1; // -1 to be over cell border\\n\\t\\t}\\n\\n\\t\\tthis.segPopover = new Popover(options);\\n\\t\\tthis.segPopover.show();\\n\\n\\t\\t// the popover doesn't live within the grid's container element, and thus won't get the event\\n\\t\\t// delegated-handlers for free. attach event-related handlers to the popover.\\n\\t\\tthis.bindSegHandlersToEl(this.segPopover.el);\\n\\t},\\n\\n\\n\\t// Builds the inner DOM contents of the segment popover\\n\\trenderSegPopoverContent: function(row, col, segs) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar isTheme = view.opt('theme');\\n\\t\\tvar title = this.getCellDate(row, col).format(view.opt('dayPopoverFormat'));\\n\\t\\tvar content = $(\\n\\t\\t\\t'<div class=\\\"fc-header ' + view.widgetHeaderClass + '\\\">' +\\n\\t\\t\\t\\t'<span class=\\\"fc-close ' +\\n\\t\\t\\t\\t\\t(isTheme ? 'ui-icon ui-icon-closethick' : 'fc-icon fc-icon-x') +\\n\\t\\t\\t\\t'\\\"></span>' +\\n\\t\\t\\t\\t'<span class=\\\"fc-title\\\">' +\\n\\t\\t\\t\\t\\thtmlEscape(title) +\\n\\t\\t\\t\\t'</span>' +\\n\\t\\t\\t\\t'<div class=\\\"fc-clear\\\"/>' +\\n\\t\\t\\t'</div>' +\\n\\t\\t\\t'<div class=\\\"fc-body ' + view.widgetContentClass + '\\\">' +\\n\\t\\t\\t\\t'<div class=\\\"fc-event-container\\\"></div>' +\\n\\t\\t\\t'</div>'\\n\\t\\t);\\n\\t\\tvar segContainer = content.find('.fc-event-container');\\n\\t\\tvar i;\\n\\n\\t\\t// render each seg's `el` and only return the visible segs\\n\\t\\tsegs = this.renderFgSegEls(segs, true); // disableResizing=true\\n\\t\\tthis.popoverSegs = segs;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\n\\t\\t\\t// because segments in the popover are not part of a grid coordinate system, provide a hint to any\\n\\t\\t\\t// grids that want to do drag-n-drop about which cell it came from\\n\\t\\t\\tthis.prepareHits();\\n\\t\\t\\tsegs[i].hit = this.getCellHit(row, col);\\n\\t\\t\\tthis.releaseHits();\\n\\n\\t\\t\\tsegContainer.append(segs[i].el);\\n\\t\\t}\\n\\n\\t\\treturn content;\\n\\t},\\n\\n\\n\\t// Given the events within an array of segment objects, reslice them to be in a single day\\n\\tresliceDaySegs: function(segs, dayDate) {\\n\\n\\t\\t// build an array of the original events\\n\\t\\tvar events = $.map(segs, function(seg) {\\n\\t\\t\\treturn seg.event;\\n\\t\\t});\\n\\n\\t\\tvar dayStart = dayDate.clone();\\n\\t\\tvar dayEnd = dayStart.clone().add(1, 'days');\\n\\t\\tvar dayRange = { start: dayStart, end: dayEnd };\\n\\n\\t\\t// slice the events with a custom slicing function\\n\\t\\tsegs = this.eventsToSegs(\\n\\t\\t\\tevents,\\n\\t\\t\\tfunction(range) {\\n\\t\\t\\t\\tvar seg = intersectRanges(range, dayRange); // undefind if no intersection\\n\\t\\t\\t\\treturn seg ? [ seg ] : []; // must return an array of segments\\n\\t\\t\\t}\\n\\t\\t);\\n\\n\\t\\t// force an order because eventsToSegs doesn't guarantee one\\n\\t\\tthis.sortEventSegs(segs);\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t// Generates the text that should be inside a \\\"more\\\" link, given the number of events it represents\\n\\tgetMoreLinkText: function(num) {\\n\\t\\tvar opt = this.view.opt('eventLimitText');\\n\\n\\t\\tif (typeof opt === 'function') {\\n\\t\\t\\treturn opt(num);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn '+' + num + ' ' + opt;\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Returns segments within a given cell.\\n\\t// If `startLevel` is specified, returns only events including and below that level. Otherwise returns all segs.\\n\\tgetCellSegs: function(row, col, startLevel) {\\n\\t\\tvar segMatrix = this.rowStructs[row].segMatrix;\\n\\t\\tvar level = startLevel || 0;\\n\\t\\tvar segs = [];\\n\\t\\tvar seg;\\n\\n\\t\\twhile (level < segMatrix.length) {\\n\\t\\t\\tseg = segMatrix[level][col];\\n\\t\\t\\tif (seg) {\\n\\t\\t\\t\\tsegs.push(seg);\\n\\t\\t\\t}\\n\\t\\t\\tlevel++;\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t}\\n\\n});\\n\\n;;\\n\\n/* A component that renders one or more columns of vertical time slots\\n----------------------------------------------------------------------------------------------------------------------*/\\n// We mixin DayTable, even though there is only a single row of days\\n\\nvar TimeGrid = FC.TimeGrid = Grid.extend(DayTableMixin, {\\n\\n\\tslotDuration: null, // duration of a \\\"slot\\\", a distinct time segment on given day, visualized by lines\\n\\tsnapDuration: null, // granularity of time for dragging and selecting\\n\\tsnapsPerSlot: null,\\n\\tminTime: null, // Duration object that denotes the first visible time of any given day\\n\\tmaxTime: null, // Duration object that denotes the exclusive visible end time of any given day\\n\\tlabelFormat: null, // formatting string for times running along vertical axis\\n\\tlabelInterval: null, // duration of how often a label should be displayed for a slot\\n\\n\\tcolEls: null, // cells elements in the day-row background\\n\\tslatContainerEl: null, // div that wraps all the slat rows\\n\\tslatEls: null, // elements running horizontally across all columns\\n\\tnowIndicatorEls: null,\\n\\n\\tcolCoordCache: null,\\n\\tslatCoordCache: null,\\n\\n\\n\\tconstructor: function() {\\n\\t\\tGrid.apply(this, arguments); // call the super-constructor\\n\\n\\t\\tthis.processOptions();\\n\\t},\\n\\n\\n\\t// Renders the time grid into `this.el`, which should already be assigned.\\n\\t// Relies on the view's colCnt. In the future, this component should probably be self-sufficient.\\n\\trenderDates: function() {\\n\\t\\tthis.el.html(this.renderHtml());\\n\\t\\tthis.colEls = this.el.find('.fc-day');\\n\\t\\tthis.slatContainerEl = this.el.find('.fc-slats');\\n\\t\\tthis.slatEls = this.slatContainerEl.find('tr');\\n\\n\\t\\tthis.colCoordCache = new CoordCache({\\n\\t\\t\\tels: this.colEls,\\n\\t\\t\\tisHorizontal: true\\n\\t\\t});\\n\\t\\tthis.slatCoordCache = new CoordCache({\\n\\t\\t\\tels: this.slatEls,\\n\\t\\t\\tisVertical: true\\n\\t\\t});\\n\\n\\t\\tthis.renderContentSkeleton();\\n\\t},\\n\\n\\n\\t// Renders the basic HTML skeleton for the grid\\n\\trenderHtml: function() {\\n\\t\\treturn '' +\\n\\t\\t\\t'<div class=\\\"fc-bg\\\">' +\\n\\t\\t\\t\\t'<table>' +\\n\\t\\t\\t\\t\\tthis.renderBgTrHtml(0) + // row=0\\n\\t\\t\\t\\t'</table>' +\\n\\t\\t\\t'</div>' +\\n\\t\\t\\t'<div class=\\\"fc-slats\\\">' +\\n\\t\\t\\t\\t'<table>' +\\n\\t\\t\\t\\t\\tthis.renderSlatRowHtml() +\\n\\t\\t\\t\\t'</table>' +\\n\\t\\t\\t'</div>';\\n\\t},\\n\\n\\n\\t// Generates the HTML for the horizontal \\\"slats\\\" that run width-wise. Has a time axis on a side. Depends on RTL.\\n\\trenderSlatRowHtml: function() {\\n\\t\\tvar view = this.view;\\n\\t\\tvar isRTL = this.isRTL;\\n\\t\\tvar html = '';\\n\\t\\tvar slotTime = moment.duration(+this.minTime); // wish there was .clone() for durations\\n\\t\\tvar slotDate; // will be on the view's first day, but we only care about its time\\n\\t\\tvar isLabeled;\\n\\t\\tvar axisHtml;\\n\\n\\t\\t// Calculate the time for each slot\\n\\t\\twhile (slotTime < this.maxTime) {\\n\\t\\t\\tslotDate = this.start.clone().time(slotTime);\\n\\t\\t\\tisLabeled = isInt(divideDurationByDuration(slotTime, this.labelInterval));\\n\\n\\t\\t\\taxisHtml =\\n\\t\\t\\t\\t'<td class=\\\"fc-axis fc-time ' + view.widgetContentClass + '\\\" ' + view.axisStyleAttr() + '>' +\\n\\t\\t\\t\\t\\t(isLabeled ?\\n\\t\\t\\t\\t\\t\\t'<span>' + // for matchCellWidths\\n\\t\\t\\t\\t\\t\\t\\thtmlEscape(slotDate.format(this.labelFormat)) +\\n\\t\\t\\t\\t\\t\\t'</span>' :\\n\\t\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t'</td>';\\n\\n\\t\\t\\thtml +=\\n\\t\\t\\t\\t'<tr data-time=\\\"' + slotDate.format('HH:mm:ss') + '\\\"' +\\n\\t\\t\\t\\t\\t(isLabeled ? '' : ' class=\\\"fc-minor\\\"') +\\n\\t\\t\\t\\t\\t'>' +\\n\\t\\t\\t\\t\\t(!isRTL ? axisHtml : '') +\\n\\t\\t\\t\\t\\t'<td class=\\\"' + view.widgetContentClass + '\\\"/>' +\\n\\t\\t\\t\\t\\t(isRTL ? axisHtml : '') +\\n\\t\\t\\t\\t\\\"</tr>\\\";\\n\\n\\t\\t\\tslotTime.add(this.slotDuration);\\n\\t\\t}\\n\\n\\t\\treturn html;\\n\\t},\\n\\n\\n\\t/* Options\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Parses various options into properties of this object\\n\\tprocessOptions: function() {\\n\\t\\tvar view = this.view;\\n\\t\\tvar slotDuration = view.opt('slotDuration');\\n\\t\\tvar snapDuration = view.opt('snapDuration');\\n\\t\\tvar input;\\n\\n\\t\\tslotDuration = moment.duration(slotDuration);\\n\\t\\tsnapDuration = snapDuration ? moment.duration(snapDuration) : slotDuration;\\n\\n\\t\\tthis.slotDuration = slotDuration;\\n\\t\\tthis.snapDuration = snapDuration;\\n\\t\\tthis.snapsPerSlot = slotDuration / snapDuration; // TODO: ensure an integer multiple?\\n\\n\\t\\tthis.minResizeDuration = snapDuration; // hack\\n\\n\\t\\tthis.minTime = moment.duration(view.opt('minTime'));\\n\\t\\tthis.maxTime = moment.duration(view.opt('maxTime'));\\n\\n\\t\\t// might be an array value (for TimelineView).\\n\\t\\t// if so, getting the most granular entry (the last one probably).\\n\\t\\tinput = view.opt('slotLabelFormat');\\n\\t\\tif ($.isArray(input)) {\\n\\t\\t\\tinput = input[input.length - 1];\\n\\t\\t}\\n\\n\\t\\tthis.labelFormat =\\n\\t\\t\\tinput ||\\n\\t\\t\\tview.opt('smallTimeFormat'); // the computed default\\n\\n\\t\\tinput = view.opt('slotLabelInterval');\\n\\t\\tthis.labelInterval = input ?\\n\\t\\t\\tmoment.duration(input) :\\n\\t\\t\\tthis.computeLabelInterval(slotDuration);\\n\\t},\\n\\n\\n\\t// Computes an automatic value for slotLabelInterval\\n\\tcomputeLabelInterval: function(slotDuration) {\\n\\t\\tvar i;\\n\\t\\tvar labelInterval;\\n\\t\\tvar slotsPerLabel;\\n\\n\\t\\t// find the smallest stock label interval that results in more than one slots-per-label\\n\\t\\tfor (i = AGENDA_STOCK_SUB_DURATIONS.length - 1; i >= 0; i--) {\\n\\t\\t\\tlabelInterval = moment.duration(AGENDA_STOCK_SUB_DURATIONS[i]);\\n\\t\\t\\tslotsPerLabel = divideDurationByDuration(labelInterval, slotDuration);\\n\\t\\t\\tif (isInt(slotsPerLabel) && slotsPerLabel > 1) {\\n\\t\\t\\t\\treturn labelInterval;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn moment.duration(slotDuration); // fall back. clone\\n\\t},\\n\\n\\n\\t// Computes a default event time formatting string if `timeFormat` is not explicitly defined\\n\\tcomputeEventTimeFormat: function() {\\n\\t\\treturn this.view.opt('noMeridiemTimeFormat'); // like \\\"6:30\\\" (no AM/PM)\\n\\t},\\n\\n\\n\\t// Computes a default `displayEventEnd` value if one is not expliclty defined\\n\\tcomputeDisplayEventEnd: function() {\\n\\t\\treturn true;\\n\\t},\\n\\n\\n\\t/* Hit System\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tprepareHits: function() {\\n\\t\\tthis.colCoordCache.build();\\n\\t\\tthis.slatCoordCache.build();\\n\\t},\\n\\n\\n\\treleaseHits: function() {\\n\\t\\tthis.colCoordCache.clear();\\n\\t\\t// NOTE: don't clear slatCoordCache because we rely on it for computeTimeTop\\n\\t},\\n\\n\\n\\tqueryHit: function(leftOffset, topOffset) {\\n\\t\\tvar snapsPerSlot = this.snapsPerSlot;\\n\\t\\tvar colCoordCache = this.colCoordCache;\\n\\t\\tvar slatCoordCache = this.slatCoordCache;\\n\\n\\t\\tif (colCoordCache.isLeftInBounds(leftOffset) && slatCoordCache.isTopInBounds(topOffset)) {\\n\\t\\t\\tvar colIndex = colCoordCache.getHorizontalIndex(leftOffset);\\n\\t\\t\\tvar slatIndex = slatCoordCache.getVerticalIndex(topOffset);\\n\\n\\t\\t\\tif (colIndex != null && slatIndex != null) {\\n\\t\\t\\t\\tvar slatTop = slatCoordCache.getTopOffset(slatIndex);\\n\\t\\t\\t\\tvar slatHeight = slatCoordCache.getHeight(slatIndex);\\n\\t\\t\\t\\tvar partial = (topOffset - slatTop) / slatHeight; // floating point number between 0 and 1\\n\\t\\t\\t\\tvar localSnapIndex = Math.floor(partial * snapsPerSlot); // the snap # relative to start of slat\\n\\t\\t\\t\\tvar snapIndex = slatIndex * snapsPerSlot + localSnapIndex;\\n\\t\\t\\t\\tvar snapTop = slatTop + (localSnapIndex / snapsPerSlot) * slatHeight;\\n\\t\\t\\t\\tvar snapBottom = slatTop + ((localSnapIndex + 1) / snapsPerSlot) * slatHeight;\\n\\n\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\tcol: colIndex,\\n\\t\\t\\t\\t\\tsnap: snapIndex,\\n\\t\\t\\t\\t\\tcomponent: this, // needed unfortunately :(\\n\\t\\t\\t\\t\\tleft: colCoordCache.getLeftOffset(colIndex),\\n\\t\\t\\t\\t\\tright: colCoordCache.getRightOffset(colIndex),\\n\\t\\t\\t\\t\\ttop: snapTop,\\n\\t\\t\\t\\t\\tbottom: snapBottom\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\tgetHitSpan: function(hit) {\\n\\t\\tvar start = this.getCellDate(0, hit.col); // row=0\\n\\t\\tvar time = this.computeSnapTime(hit.snap); // pass in the snap-index\\n\\t\\tvar end;\\n\\n\\t\\tstart.time(time);\\n\\t\\tend = start.clone().add(this.snapDuration);\\n\\n\\t\\treturn { start: start, end: end };\\n\\t},\\n\\n\\n\\tgetHitEl: function(hit) {\\n\\t\\treturn this.colEls.eq(hit.col);\\n\\t},\\n\\n\\n\\t/* Dates\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trangeUpdated: function() {\\n\\t\\tthis.updateDayTable();\\n\\t},\\n\\n\\n\\t// Given a row number of the grid, representing a \\\"snap\\\", returns a time (Duration) from its start-of-day\\n\\tcomputeSnapTime: function(snapIndex) {\\n\\t\\treturn moment.duration(this.minTime + this.snapDuration * snapIndex);\\n\\t},\\n\\n\\n\\t// Slices up the given span (unzoned start/end with other misc data) into an array of segments\\n\\tspanToSegs: function(span) {\\n\\t\\tvar segs = this.sliceRangeByTimes(span);\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tif (this.isRTL) {\\n\\t\\t\\t\\tsegs[i].col = this.daysPerRow - 1 - segs[i].dayIndex;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tsegs[i].col = segs[i].dayIndex;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\tsliceRangeByTimes: function(range) {\\n\\t\\tvar segs = [];\\n\\t\\tvar seg;\\n\\t\\tvar dayIndex;\\n\\t\\tvar dayDate;\\n\\t\\tvar dayRange;\\n\\n\\t\\tfor (dayIndex = 0; dayIndex < this.daysPerRow; dayIndex++) {\\n\\t\\t\\tdayDate = this.dayDates[dayIndex].clone(); // TODO: better API for this?\\n\\t\\t\\tdayRange = {\\n\\t\\t\\t\\tstart: dayDate.clone().time(this.minTime),\\n\\t\\t\\t\\tend: dayDate.clone().time(this.maxTime)\\n\\t\\t\\t};\\n\\t\\t\\tseg = intersectRanges(range, dayRange); // both will be ambig timezone\\n\\t\\t\\tif (seg) {\\n\\t\\t\\t\\tseg.dayIndex = dayIndex;\\n\\t\\t\\t\\tsegs.push(seg);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t/* Coordinates\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tupdateSize: function(isResize) { // NOT a standard Grid method\\n\\t\\tthis.slatCoordCache.build();\\n\\n\\t\\tif (isResize) {\\n\\t\\t\\tthis.updateSegVerticals(\\n\\t\\t\\t\\t[].concat(this.fgSegs || [], this.bgSegs || [], this.businessSegs || [])\\n\\t\\t\\t);\\n\\t\\t}\\n\\t},\\n\\n\\n\\tgetTotalSlatHeight: function() {\\n\\t\\treturn this.slatContainerEl.outerHeight();\\n\\t},\\n\\n\\n\\t// Computes the top coordinate, relative to the bounds of the grid, of the given date.\\n\\t// A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.\\n\\tcomputeDateTop: function(date, startOfDayDate) {\\n\\t\\treturn this.computeTimeTop(\\n\\t\\t\\tmoment.duration(\\n\\t\\t\\t\\tdate - startOfDayDate.clone().stripTime()\\n\\t\\t\\t)\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).\\n\\tcomputeTimeTop: function(time) {\\n\\t\\tvar len = this.slatEls.length;\\n\\t\\tvar slatCoverage = (time - this.minTime) / this.slotDuration; // floating-point value of # of slots covered\\n\\t\\tvar slatIndex;\\n\\t\\tvar slatRemainder;\\n\\n\\t\\t// compute a floating-point number for how many slats should be progressed through.\\n\\t\\t// from 0 to number of slats (inclusive)\\n\\t\\t// constrained because minTime/maxTime might be customized.\\n\\t\\tslatCoverage = Math.max(0, slatCoverage);\\n\\t\\tslatCoverage = Math.min(len, slatCoverage);\\n\\n\\t\\t// an integer index of the furthest whole slat\\n\\t\\t// from 0 to number slats (*exclusive*, so len-1)\\n\\t\\tslatIndex = Math.floor(slatCoverage);\\n\\t\\tslatIndex = Math.min(slatIndex, len - 1);\\n\\n\\t\\t// how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.\\n\\t\\t// could be 1.0 if slatCoverage is covering *all* the slots\\n\\t\\tslatRemainder = slatCoverage - slatIndex;\\n\\n\\t\\treturn this.slatCoordCache.getTopPosition(slatIndex) +\\n\\t\\t\\tthis.slatCoordCache.getHeight(slatIndex) * slatRemainder;\\n\\t},\\n\\n\\n\\n\\t/* Event Drag Visualization\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of an event being dragged over the specified date(s).\\n\\t// A returned value of `true` signals that a mock \\\"helper\\\" event has been rendered.\\n\\trenderDrag: function(eventLocation, seg) {\\n\\n\\t\\tif (seg) { // if there is event information for this drag, render a helper event\\n\\n\\t\\t\\t// returns mock event elements\\n\\t\\t\\t// signal that a helper has been rendered\\n\\t\\t\\treturn this.renderEventLocationHelper(eventLocation, seg);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\t// otherwise, just render a highlight\\n\\t\\t\\tthis.renderHighlight(this.eventToSpan(eventLocation));\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Unrenders any visual indication of an event being dragged\\n\\tunrenderDrag: function() {\\n\\t\\tthis.unrenderHelper();\\n\\t\\tthis.unrenderHighlight();\\n\\t},\\n\\n\\n\\t/* Event Resize Visualization\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of an event being resized\\n\\trenderEventResize: function(eventLocation, seg) {\\n\\t\\treturn this.renderEventLocationHelper(eventLocation, seg); // returns mock event elements\\n\\t},\\n\\n\\n\\t// Unrenders any visual indication of an event being resized\\n\\tunrenderEventResize: function() {\\n\\t\\tthis.unrenderHelper();\\n\\t},\\n\\n\\n\\t/* Event Helper\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a mock \\\"helper\\\" event. `sourceSeg` is the original segment object and might be null (an external drag)\\n\\trenderHelper: function(event, sourceSeg) {\\n\\t\\treturn this.renderHelperSegs(this.eventToSegs(event), sourceSeg); // returns mock event elements\\n\\t},\\n\\n\\n\\t// Unrenders any mock helper event\\n\\tunrenderHelper: function() {\\n\\t\\tthis.unrenderHelperSegs();\\n\\t},\\n\\n\\n\\t/* Business Hours\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderBusinessHours: function() {\\n\\t\\tthis.renderBusinessSegs(\\n\\t\\t\\tthis.buildBusinessHourSegs()\\n\\t\\t);\\n\\t},\\n\\n\\n\\tunrenderBusinessHours: function() {\\n\\t\\tthis.unrenderBusinessSegs();\\n\\t},\\n\\n\\n\\t/* Now Indicator\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tgetNowIndicatorUnit: function() {\\n\\t\\treturn 'minute'; // will refresh on the minute\\n\\t},\\n\\n\\n\\trenderNowIndicator: function(date) {\\n\\t\\t// seg system might be overkill, but it handles scenario where line needs to be rendered\\n\\t\\t//  more than once because of columns with the same date (resources columns for example)\\n\\t\\tvar segs = this.spanToSegs({ start: date, end: date });\\n\\t\\tvar top = this.computeDateTop(date, date);\\n\\t\\tvar nodes = [];\\n\\t\\tvar i;\\n\\n\\t\\t// render lines within the columns\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tnodes.push($('<div class=\\\"fc-now-indicator fc-now-indicator-line\\\"></div>')\\n\\t\\t\\t\\t.css('top', top)\\n\\t\\t\\t\\t.appendTo(this.colContainerEls.eq(segs[i].col))[0]);\\n\\t\\t}\\n\\n\\t\\t// render an arrow over the axis\\n\\t\\tif (segs.length > 0) { // is the current time in view?\\n\\t\\t\\tnodes.push($('<div class=\\\"fc-now-indicator fc-now-indicator-arrow\\\"></div>')\\n\\t\\t\\t\\t.css('top', top)\\n\\t\\t\\t\\t.appendTo(this.el.find('.fc-content-skeleton'))[0]);\\n\\t\\t}\\n\\n\\t\\tthis.nowIndicatorEls = $(nodes);\\n\\t},\\n\\n\\n\\tunrenderNowIndicator: function() {\\n\\t\\tif (this.nowIndicatorEls) {\\n\\t\\t\\tthis.nowIndicatorEls.remove();\\n\\t\\t\\tthis.nowIndicatorEls = null;\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Selection\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of a selection. Overrides the default, which was to simply render a highlight.\\n\\trenderSelection: function(span) {\\n\\t\\tif (this.view.opt('selectHelper')) { // this setting signals that a mock helper event should be rendered\\n\\n\\t\\t\\t// normally acceps an eventLocation, span has a start/end, which is good enough\\n\\t\\t\\tthis.renderEventLocationHelper(span);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tthis.renderHighlight(span);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Unrenders any visual indication of a selection\\n\\tunrenderSelection: function() {\\n\\t\\tthis.unrenderHelper();\\n\\t\\tthis.unrenderHighlight();\\n\\t},\\n\\n\\n\\t/* Highlight\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderHighlight: function(span) {\\n\\t\\tthis.renderHighlightSegs(this.spanToSegs(span));\\n\\t},\\n\\n\\n\\tunrenderHighlight: function() {\\n\\t\\tthis.unrenderHighlightSegs();\\n\\t}\\n\\n});\\n\\n;;\\n\\n/* Methods for rendering SEGMENTS, pieces of content that live on the view\\n ( this file is no longer just for events )\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nTimeGrid.mixin({\\n\\n\\tcolContainerEls: null, // containers for each column\\n\\n\\t// inner-containers for each column where different types of segs live\\n\\tfgContainerEls: null,\\n\\tbgContainerEls: null,\\n\\thelperContainerEls: null,\\n\\thighlightContainerEls: null,\\n\\tbusinessContainerEls: null,\\n\\n\\t// arrays of different types of displayed segments\\n\\tfgSegs: null,\\n\\tbgSegs: null,\\n\\thelperSegs: null,\\n\\thighlightSegs: null,\\n\\tbusinessSegs: null,\\n\\n\\n\\t// Renders the DOM that the view's content will live in\\n\\trenderContentSkeleton: function() {\\n\\t\\tvar cellHtml = '';\\n\\t\\tvar i;\\n\\t\\tvar skeletonEl;\\n\\n\\t\\tfor (i = 0; i < this.colCnt; i++) {\\n\\t\\t\\tcellHtml +=\\n\\t\\t\\t\\t'<td>' +\\n\\t\\t\\t\\t\\t'<div class=\\\"fc-content-col\\\">' +\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"fc-event-container fc-helper-container\\\"></div>' +\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"fc-event-container\\\"></div>' +\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"fc-highlight-container\\\"></div>' +\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"fc-bgevent-container\\\"></div>' +\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"fc-business-container\\\"></div>' +\\n\\t\\t\\t\\t\\t'</div>' +\\n\\t\\t\\t\\t'</td>';\\n\\t\\t}\\n\\n\\t\\tskeletonEl = $(\\n\\t\\t\\t'<div class=\\\"fc-content-skeleton\\\">' +\\n\\t\\t\\t\\t'<table>' +\\n\\t\\t\\t\\t\\t'<tr>' + cellHtml + '</tr>' +\\n\\t\\t\\t\\t'</table>' +\\n\\t\\t\\t'</div>'\\n\\t\\t);\\n\\n\\t\\tthis.colContainerEls = skeletonEl.find('.fc-content-col');\\n\\t\\tthis.helperContainerEls = skeletonEl.find('.fc-helper-container');\\n\\t\\tthis.fgContainerEls = skeletonEl.find('.fc-event-container:not(.fc-helper-container)');\\n\\t\\tthis.bgContainerEls = skeletonEl.find('.fc-bgevent-container');\\n\\t\\tthis.highlightContainerEls = skeletonEl.find('.fc-highlight-container');\\n\\t\\tthis.businessContainerEls = skeletonEl.find('.fc-business-container');\\n\\n\\t\\tthis.bookendCells(skeletonEl.find('tr')); // TODO: do this on string level\\n\\t\\tthis.el.append(skeletonEl);\\n\\t},\\n\\n\\n\\t/* Foreground Events\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderFgSegs: function(segs) {\\n\\t\\tsegs = this.renderFgSegsIntoContainers(segs, this.fgContainerEls);\\n\\t\\tthis.fgSegs = segs;\\n\\t\\treturn segs; // needed for Grid::renderEvents\\n\\t},\\n\\n\\n\\tunrenderFgSegs: function() {\\n\\t\\tthis.unrenderNamedSegs('fgSegs');\\n\\t},\\n\\n\\n\\t/* Foreground Helper Events\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderHelperSegs: function(segs, sourceSeg) {\\n\\t\\tvar helperEls = [];\\n\\t\\tvar i, seg;\\n\\t\\tvar sourceEl;\\n\\n\\t\\tsegs = this.renderFgSegsIntoContainers(segs, this.helperContainerEls);\\n\\n\\t\\t// Try to make the segment that is in the same row as sourceSeg look the same\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\t\\t\\tif (sourceSeg && sourceSeg.col === seg.col) {\\n\\t\\t\\t\\tsourceEl = sourceSeg.el;\\n\\t\\t\\t\\tseg.el.css({\\n\\t\\t\\t\\t\\tleft: sourceEl.css('left'),\\n\\t\\t\\t\\t\\tright: sourceEl.css('right'),\\n\\t\\t\\t\\t\\t'margin-left': sourceEl.css('margin-left'),\\n\\t\\t\\t\\t\\t'margin-right': sourceEl.css('margin-right')\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t\\thelperEls.push(seg.el[0]);\\n\\t\\t}\\n\\n\\t\\tthis.helperSegs = segs;\\n\\n\\t\\treturn $(helperEls); // must return rendered helpers\\n\\t},\\n\\n\\n\\tunrenderHelperSegs: function() {\\n\\t\\tthis.unrenderNamedSegs('helperSegs');\\n\\t},\\n\\n\\n\\t/* Background Events\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderBgSegs: function(segs) {\\n\\t\\tsegs = this.renderFillSegEls('bgEvent', segs); // TODO: old fill system\\n\\t\\tthis.updateSegVerticals(segs);\\n\\t\\tthis.attachSegsByCol(this.groupSegsByCol(segs), this.bgContainerEls);\\n\\t\\tthis.bgSegs = segs;\\n\\t\\treturn segs; // needed for Grid::renderEvents\\n\\t},\\n\\n\\n\\tunrenderBgSegs: function() {\\n\\t\\tthis.unrenderNamedSegs('bgSegs');\\n\\t},\\n\\n\\n\\t/* Highlight\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderHighlightSegs: function(segs) {\\n\\t\\tsegs = this.renderFillSegEls('highlight', segs); // TODO: old fill system\\n\\t\\tthis.updateSegVerticals(segs);\\n\\t\\tthis.attachSegsByCol(this.groupSegsByCol(segs), this.highlightContainerEls);\\n\\t\\tthis.highlightSegs = segs;\\n\\t},\\n\\n\\n\\tunrenderHighlightSegs: function() {\\n\\t\\tthis.unrenderNamedSegs('highlightSegs');\\n\\t},\\n\\n\\n\\t/* Business Hours\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderBusinessSegs: function(segs) {\\n\\t\\tsegs = this.renderFillSegEls('businessHours', segs); // TODO: old fill system\\n\\t\\tthis.updateSegVerticals(segs);\\n\\t\\tthis.attachSegsByCol(this.groupSegsByCol(segs), this.businessContainerEls);\\n\\t\\tthis.businessSegs = segs;\\n\\t},\\n\\n\\n\\tunrenderBusinessSegs: function() {\\n\\t\\tthis.unrenderNamedSegs('businessSegs');\\n\\t},\\n\\n\\n\\t/* Seg Rendering Utils\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Given a flat array of segments, return an array of sub-arrays, grouped by each segment's col\\n\\tgroupSegsByCol: function(segs) {\\n\\t\\tvar segsByCol = [];\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < this.colCnt; i++) {\\n\\t\\t\\tsegsByCol.push([]);\\n\\t\\t}\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tsegsByCol[segs[i].col].push(segs[i]);\\n\\t\\t}\\n\\n\\t\\treturn segsByCol;\\n\\t},\\n\\n\\n\\t// Given segments grouped by column, insert the segments' elements into a parallel array of container\\n\\t// elements, each living within a column.\\n\\tattachSegsByCol: function(segsByCol, containerEls) {\\n\\t\\tvar col;\\n\\t\\tvar segs;\\n\\t\\tvar i;\\n\\n\\t\\tfor (col = 0; col < this.colCnt; col++) { // iterate each column grouping\\n\\t\\t\\tsegs = segsByCol[col];\\n\\n\\t\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\t\\tcontainerEls.eq(col).append(segs[i].el);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Given the name of a property of `this` object, assumed to be an array of segments,\\n\\t// loops through each segment and removes from DOM. Will null-out the property afterwards.\\n\\tunrenderNamedSegs: function(propName) {\\n\\t\\tvar segs = this[propName];\\n\\t\\tvar i;\\n\\n\\t\\tif (segs) {\\n\\t\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\t\\tsegs[i].el.remove();\\n\\t\\t\\t}\\n\\t\\t\\tthis[propName] = null;\\n\\t\\t}\\n\\t},\\n\\n\\n\\n\\t/* Foreground Event Rendering Utils\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Given an array of foreground segments, render a DOM element for each, computes position,\\n\\t// and attaches to the column inner-container elements.\\n\\trenderFgSegsIntoContainers: function(segs, containerEls) {\\n\\t\\tvar segsByCol;\\n\\t\\tvar col;\\n\\n\\t\\tsegs = this.renderFgSegEls(segs); // will call fgSegHtml\\n\\t\\tsegsByCol = this.groupSegsByCol(segs);\\n\\n\\t\\tfor (col = 0; col < this.colCnt; col++) {\\n\\t\\t\\tthis.updateFgSegCoords(segsByCol[col]);\\n\\t\\t}\\n\\n\\t\\tthis.attachSegsByCol(segsByCol, containerEls);\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\n\\t// Renders the HTML for a single event segment's default rendering\\n\\tfgSegHtml: function(seg, disableResizing) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar event = seg.event;\\n\\t\\tvar isDraggable = view.isEventDraggable(event);\\n\\t\\tvar isResizableFromStart = !disableResizing && seg.isStart && view.isEventResizableFromStart(event);\\n\\t\\tvar isResizableFromEnd = !disableResizing && seg.isEnd && view.isEventResizableFromEnd(event);\\n\\t\\tvar classes = this.getSegClasses(seg, isDraggable, isResizableFromStart || isResizableFromEnd);\\n\\t\\tvar skinCss = cssToStr(this.getSegSkinCss(seg));\\n\\t\\tvar timeText;\\n\\t\\tvar fullTimeText; // more verbose time text. for the print stylesheet\\n\\t\\tvar startTimeText; // just the start time text\\n\\n\\t\\tclasses.unshift('fc-time-grid-event', 'fc-v-event');\\n\\n\\t\\tif (view.isMultiDayEvent(event)) { // if the event appears to span more than one day...\\n\\t\\t\\t// Don't display time text on segments that run entirely through a day.\\n\\t\\t\\t// That would appear as midnight-midnight and would look dumb.\\n\\t\\t\\t// Otherwise, display the time text for the *segment's* times (like 6pm-midnight or midnight-10am)\\n\\t\\t\\tif (seg.isStart || seg.isEnd) {\\n\\t\\t\\t\\ttimeText = this.getEventTimeText(seg);\\n\\t\\t\\t\\tfullTimeText = this.getEventTimeText(seg, 'LT');\\n\\t\\t\\t\\tstartTimeText = this.getEventTimeText(seg, null, false); // displayEnd=false\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\t// Display the normal time text for the *event's* times\\n\\t\\t\\ttimeText = this.getEventTimeText(event);\\n\\t\\t\\tfullTimeText = this.getEventTimeText(event, 'LT');\\n\\t\\t\\tstartTimeText = this.getEventTimeText(event, null, false); // displayEnd=false\\n\\t\\t}\\n\\n\\t\\treturn '<a class=\\\"' + classes.join(' ') + '\\\"' +\\n\\t\\t\\t(event.url ?\\n\\t\\t\\t\\t' href=\\\"' + htmlEscape(event.url) + '\\\"' :\\n\\t\\t\\t\\t''\\n\\t\\t\\t\\t) +\\n\\t\\t\\t(skinCss ?\\n\\t\\t\\t\\t' style=\\\"' + skinCss + '\\\"' :\\n\\t\\t\\t\\t''\\n\\t\\t\\t\\t) +\\n\\t\\t\\t'>' +\\n\\t\\t\\t\\t'<div class=\\\"fc-content\\\">' +\\n\\t\\t\\t\\t\\t(timeText ?\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"fc-time\\\"' +\\n\\t\\t\\t\\t\\t\\t' data-start=\\\"' + htmlEscape(startTimeText) + '\\\"' +\\n\\t\\t\\t\\t\\t\\t' data-full=\\\"' + htmlEscape(fullTimeText) + '\\\"' +\\n\\t\\t\\t\\t\\t\\t'>' +\\n\\t\\t\\t\\t\\t\\t\\t'<span>' + htmlEscape(timeText) + '</span>' +\\n\\t\\t\\t\\t\\t\\t'</div>' :\\n\\t\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t\\t(event.title ?\\n\\t\\t\\t\\t\\t\\t'<div class=\\\"fc-title\\\">' +\\n\\t\\t\\t\\t\\t\\t\\thtmlEscape(event.title) +\\n\\t\\t\\t\\t\\t\\t'</div>' :\\n\\t\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t'</div>' +\\n\\t\\t\\t\\t'<div class=\\\"fc-bg\\\"/>' +\\n\\t\\t\\t\\t/* TODO: write CSS for this\\n\\t\\t\\t\\t(isResizableFromStart ?\\n\\t\\t\\t\\t\\t'<div class=\\\"fc-resizer fc-start-resizer\\\" />' :\\n\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t*/\\n\\t\\t\\t\\t(isResizableFromEnd ?\\n\\t\\t\\t\\t\\t'<div class=\\\"fc-resizer fc-end-resizer\\\" />' :\\n\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t) +\\n\\t\\t\\t'</a>';\\n\\t},\\n\\n\\n\\t/* Seg Position Utils\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Refreshes the CSS top/bottom coordinates for each segment element.\\n\\t// Works when called after initial render, after a window resize/zoom for example.\\n\\tupdateSegVerticals: function(segs) {\\n\\t\\tthis.computeSegVerticals(segs);\\n\\t\\tthis.assignSegVerticals(segs);\\n\\t},\\n\\n\\n\\t// For each segment in an array, computes and assigns its top and bottom properties\\n\\tcomputeSegVerticals: function(segs) {\\n\\t\\tvar i, seg;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\t\\t\\tseg.top = this.computeDateTop(seg.start, seg.start);\\n\\t\\t\\tseg.bottom = this.computeDateTop(seg.end, seg.start);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Given segments that already have their top/bottom properties computed, applies those values to\\n\\t// the segments' elements.\\n\\tassignSegVerticals: function(segs) {\\n\\t\\tvar i, seg;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\t\\t\\tseg.el.css(this.generateSegVerticalCss(seg));\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Generates an object with CSS properties for the top/bottom coordinates of a segment element\\n\\tgenerateSegVerticalCss: function(seg) {\\n\\t\\treturn {\\n\\t\\t\\ttop: seg.top,\\n\\t\\t\\tbottom: -seg.bottom // flipped because needs to be space beyond bottom edge of event container\\n\\t\\t};\\n\\t},\\n\\n\\n\\t/* Foreground Event Positioning Utils\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Given segments that are assumed to all live in the *same column*,\\n\\t// compute their verical/horizontal coordinates and assign to their elements.\\n\\tupdateFgSegCoords: function(segs) {\\n\\t\\tthis.computeSegVerticals(segs); // horizontals relies on this\\n\\t\\tthis.computeFgSegHorizontals(segs); // compute horizontal coordinates, z-index's, and reorder the array\\n\\t\\tthis.assignSegVerticals(segs);\\n\\t\\tthis.assignFgSegHorizontals(segs);\\n\\t},\\n\\n\\n\\t// Given an array of segments that are all in the same column, sets the backwardCoord and forwardCoord on each.\\n\\t// NOTE: Also reorders the given array by date!\\n\\tcomputeFgSegHorizontals: function(segs) {\\n\\t\\tvar levels;\\n\\t\\tvar level0;\\n\\t\\tvar i;\\n\\n\\t\\tthis.sortEventSegs(segs); // order by certain criteria\\n\\t\\tlevels = buildSlotSegLevels(segs);\\n\\t\\tcomputeForwardSlotSegs(levels);\\n\\n\\t\\tif ((level0 = levels[0])) {\\n\\n\\t\\t\\tfor (i = 0; i < level0.length; i++) {\\n\\t\\t\\t\\tcomputeSlotSegPressures(level0[i]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor (i = 0; i < level0.length; i++) {\\n\\t\\t\\t\\tthis.computeFgSegForwardBack(level0[i], 0, 0);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Calculate seg.forwardCoord and seg.backwardCoord for the segment, where both values range\\n\\t// from 0 to 1. If the calendar is left-to-right, the seg.backwardCoord maps to \\\"left\\\" and\\n\\t// seg.forwardCoord maps to \\\"right\\\" (via percentage). Vice-versa if the calendar is right-to-left.\\n\\t//\\n\\t// The segment might be part of a \\\"series\\\", which means consecutive segments with the same pressure\\n\\t// who's width is unknown until an edge has been hit. `seriesBackwardPressure` is the number of\\n\\t// segments behind this one in the current series, and `seriesBackwardCoord` is the starting\\n\\t// coordinate of the first segment in the series.\\n\\tcomputeFgSegForwardBack: function(seg, seriesBackwardPressure, seriesBackwardCoord) {\\n\\t\\tvar forwardSegs = seg.forwardSegs;\\n\\t\\tvar i;\\n\\n\\t\\tif (seg.forwardCoord === undefined) { // not already computed\\n\\n\\t\\t\\tif (!forwardSegs.length) {\\n\\n\\t\\t\\t\\t// if there are no forward segments, this segment should butt up against the edge\\n\\t\\t\\t\\tseg.forwardCoord = 1;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\n\\t\\t\\t\\t// sort highest pressure first\\n\\t\\t\\t\\tthis.sortForwardSegs(forwardSegs);\\n\\n\\t\\t\\t\\t// this segment's forwardCoord will be calculated from the backwardCoord of the\\n\\t\\t\\t\\t// highest-pressure forward segment.\\n\\t\\t\\t\\tthis.computeFgSegForwardBack(forwardSegs[0], seriesBackwardPressure + 1, seriesBackwardCoord);\\n\\t\\t\\t\\tseg.forwardCoord = forwardSegs[0].backwardCoord;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// calculate the backwardCoord from the forwardCoord. consider the series\\n\\t\\t\\tseg.backwardCoord = seg.forwardCoord -\\n\\t\\t\\t\\t(seg.forwardCoord - seriesBackwardCoord) / // available width for series\\n\\t\\t\\t\\t(seriesBackwardPressure + 1); // # of segments in the series\\n\\n\\t\\t\\t// use this segment's coordinates to computed the coordinates of the less-pressurized\\n\\t\\t\\t// forward segments\\n\\t\\t\\tfor (i=0; i<forwardSegs.length; i++) {\\n\\t\\t\\t\\tthis.computeFgSegForwardBack(forwardSegs[i], 0, seg.forwardCoord);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\tsortForwardSegs: function(forwardSegs) {\\n\\t\\tforwardSegs.sort(proxy(this, 'compareForwardSegs'));\\n\\t},\\n\\n\\n\\t// A cmp function for determining which forward segment to rely on more when computing coordinates.\\n\\tcompareForwardSegs: function(seg1, seg2) {\\n\\t\\t// put higher-pressure first\\n\\t\\treturn seg2.forwardPressure - seg1.forwardPressure ||\\n\\t\\t\\t// put segments that are closer to initial edge first (and favor ones with no coords yet)\\n\\t\\t\\t(seg1.backwardCoord || 0) - (seg2.backwardCoord || 0) ||\\n\\t\\t\\t// do normal sorting...\\n\\t\\t\\tthis.compareEventSegs(seg1, seg2);\\n\\t},\\n\\n\\n\\t// Given foreground event segments that have already had their position coordinates computed,\\n\\t// assigns position-related CSS values to their elements.\\n\\tassignFgSegHorizontals: function(segs) {\\n\\t\\tvar i, seg;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\t\\t\\tseg.el.css(this.generateFgSegHorizontalCss(seg));\\n\\n\\t\\t\\t// if the height is short, add a className for alternate styling\\n\\t\\t\\tif (seg.bottom - seg.top < 30) {\\n\\t\\t\\t\\tseg.el.addClass('fc-short');\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Generates an object with CSS properties/values that should be applied to an event segment element.\\n\\t// Contains important positioning-related properties that should be applied to any event element, customized or not.\\n\\tgenerateFgSegHorizontalCss: function(seg) {\\n\\t\\tvar shouldOverlap = this.view.opt('slotEventOverlap');\\n\\t\\tvar backwardCoord = seg.backwardCoord; // the left side if LTR. the right side if RTL. floating-point\\n\\t\\tvar forwardCoord = seg.forwardCoord; // the right side if LTR. the left side if RTL. floating-point\\n\\t\\tvar props = this.generateSegVerticalCss(seg); // get top/bottom first\\n\\t\\tvar left; // amount of space from left edge, a fraction of the total width\\n\\t\\tvar right; // amount of space from right edge, a fraction of the total width\\n\\n\\t\\tif (shouldOverlap) {\\n\\t\\t\\t// double the width, but don't go beyond the maximum forward coordinate (1.0)\\n\\t\\t\\tforwardCoord = Math.min(1, backwardCoord + (forwardCoord - backwardCoord) * 2);\\n\\t\\t}\\n\\n\\t\\tif (this.isRTL) {\\n\\t\\t\\tleft = 1 - forwardCoord;\\n\\t\\t\\tright = backwardCoord;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tleft = backwardCoord;\\n\\t\\t\\tright = 1 - forwardCoord;\\n\\t\\t}\\n\\n\\t\\tprops.zIndex = seg.level + 1; // convert from 0-base to 1-based\\n\\t\\tprops.left = left * 100 + '%';\\n\\t\\tprops.right = right * 100 + '%';\\n\\n\\t\\tif (shouldOverlap && seg.forwardPressure) {\\n\\t\\t\\t// add padding to the edge so that forward stacked events don't cover the resizer's icon\\n\\t\\t\\tprops[this.isRTL ? 'marginLeft' : 'marginRight'] = 10 * 2; // 10 is a guesstimate of the icon's width\\n\\t\\t}\\n\\n\\t\\treturn props;\\n\\t}\\n\\n});\\n\\n\\n// Builds an array of segments \\\"levels\\\". The first level will be the leftmost tier of segments if the calendar is\\n// left-to-right, or the rightmost if the calendar is right-to-left. Assumes the segments are already ordered by date.\\nfunction buildSlotSegLevels(segs) {\\n\\tvar levels = [];\\n\\tvar i, seg;\\n\\tvar j;\\n\\n\\tfor (i=0; i<segs.length; i++) {\\n\\t\\tseg = segs[i];\\n\\n\\t\\t// go through all the levels and stop on the first level where there are no collisions\\n\\t\\tfor (j=0; j<levels.length; j++) {\\n\\t\\t\\tif (!computeSlotSegCollisions(seg, levels[j]).length) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tseg.level = j;\\n\\n\\t\\t(levels[j] || (levels[j] = [])).push(seg);\\n\\t}\\n\\n\\treturn levels;\\n}\\n\\n\\n// For every segment, figure out the other segments that are in subsequent\\n// levels that also occupy the same vertical space. Accumulate in seg.forwardSegs\\nfunction computeForwardSlotSegs(levels) {\\n\\tvar i, level;\\n\\tvar j, seg;\\n\\tvar k;\\n\\n\\tfor (i=0; i<levels.length; i++) {\\n\\t\\tlevel = levels[i];\\n\\n\\t\\tfor (j=0; j<level.length; j++) {\\n\\t\\t\\tseg = level[j];\\n\\n\\t\\t\\tseg.forwardSegs = [];\\n\\t\\t\\tfor (k=i+1; k<levels.length; k++) {\\n\\t\\t\\t\\tcomputeSlotSegCollisions(seg, levels[k], seg.forwardSegs);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n\\n// Figure out which path forward (via seg.forwardSegs) results in the longest path until\\n// the furthest edge is reached. The number of segments in this path will be seg.forwardPressure\\nfunction computeSlotSegPressures(seg) {\\n\\tvar forwardSegs = seg.forwardSegs;\\n\\tvar forwardPressure = 0;\\n\\tvar i, forwardSeg;\\n\\n\\tif (seg.forwardPressure === undefined) { // not already computed\\n\\n\\t\\tfor (i=0; i<forwardSegs.length; i++) {\\n\\t\\t\\tforwardSeg = forwardSegs[i];\\n\\n\\t\\t\\t// figure out the child's maximum forward path\\n\\t\\t\\tcomputeSlotSegPressures(forwardSeg);\\n\\n\\t\\t\\t// either use the existing maximum, or use the child's forward pressure\\n\\t\\t\\t// plus one (for the forwardSeg itself)\\n\\t\\t\\tforwardPressure = Math.max(\\n\\t\\t\\t\\tforwardPressure,\\n\\t\\t\\t\\t1 + forwardSeg.forwardPressure\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\tseg.forwardPressure = forwardPressure;\\n\\t}\\n}\\n\\n\\n// Find all the segments in `otherSegs` that vertically collide with `seg`.\\n// Append into an optionally-supplied `results` array and return.\\nfunction computeSlotSegCollisions(seg, otherSegs, results) {\\n\\tresults = results || [];\\n\\n\\tfor (var i=0; i<otherSegs.length; i++) {\\n\\t\\tif (isSlotSegCollision(seg, otherSegs[i])) {\\n\\t\\t\\tresults.push(otherSegs[i]);\\n\\t\\t}\\n\\t}\\n\\n\\treturn results;\\n}\\n\\n\\n// Do these segments occupy the same vertical space?\\nfunction isSlotSegCollision(seg1, seg2) {\\n\\treturn seg1.bottom > seg2.top && seg1.top < seg2.bottom;\\n}\\n\\n;;\\n\\n/* An abstract class from which other views inherit from\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nvar View = FC.View = Class.extend(EmitterMixin, ListenerMixin, {\\n\\n\\ttype: null, // subclass' view name (string)\\n\\tname: null, // deprecated. use `type` instead\\n\\ttitle: null, // the text that will be displayed in the header's title\\n\\n\\tcalendar: null, // owner Calendar object\\n\\toptions: null, // hash containing all options. already merged with view-specific-options\\n\\tel: null, // the view's containing element. set by Calendar\\n\\n\\tisDateSet: false,\\n\\tisDateRendered: false,\\n\\tdateRenderQueue: null,\\n\\n\\tisEventsBound: false,\\n\\tisEventsSet: false,\\n\\tisEventsRendered: false,\\n\\teventRenderQueue: null,\\n\\n\\t// range the view is actually displaying (moments)\\n\\tstart: null,\\n\\tend: null, // exclusive\\n\\n\\t// range the view is formally responsible for (moments)\\n\\t// may be different from start/end. for example, a month view might have 1st-31st, excluding padded dates\\n\\tintervalStart: null,\\n\\tintervalEnd: null, // exclusive\\n\\tintervalDuration: null,\\n\\tintervalUnit: null, // name of largest unit being displayed, like \\\"month\\\" or \\\"week\\\"\\n\\n\\tisRTL: false,\\n\\tisSelected: false, // boolean whether a range of time is user-selected or not\\n\\tselectedEvent: null,\\n\\n\\teventOrderSpecs: null, // criteria for ordering events when they have same date/time\\n\\n\\t// classNames styled by jqui themes\\n\\twidgetHeaderClass: null,\\n\\twidgetContentClass: null,\\n\\thighlightStateClass: null,\\n\\n\\t// for date utils, computed from options\\n\\tnextDayThreshold: null,\\n\\tisHiddenDayHash: null,\\n\\n\\t// now indicator\\n\\tisNowIndicatorRendered: null,\\n\\tinitialNowDate: null, // result first getNow call\\n\\tinitialNowQueriedMs: null, // ms time the getNow was called\\n\\tnowIndicatorTimeoutID: null, // for refresh timing of now indicator\\n\\tnowIndicatorIntervalID: null, // \\\"\\n\\n\\n\\tconstructor: function(calendar, type, options, intervalDuration) {\\n\\n\\t\\tthis.calendar = calendar;\\n\\t\\tthis.type = this.name = type; // .name is deprecated\\n\\t\\tthis.options = options;\\n\\t\\tthis.intervalDuration = intervalDuration || moment.duration(1, 'day');\\n\\n\\t\\tthis.nextDayThreshold = moment.duration(this.opt('nextDayThreshold'));\\n\\t\\tthis.initThemingProps();\\n\\t\\tthis.initHiddenDays();\\n\\t\\tthis.isRTL = this.opt('isRTL');\\n\\n\\t\\tthis.eventOrderSpecs = parseFieldSpecs(this.opt('eventOrder'));\\n\\n\\t\\tthis.dateRenderQueue = new TaskQueue();\\n\\t\\tthis.eventRenderQueue = new TaskQueue(this.opt('eventRenderWait'));\\n\\n\\t\\tthis.initialize();\\n\\t},\\n\\n\\n\\t// A good place for subclasses to initialize member variables\\n\\tinitialize: function() {\\n\\t\\t// subclasses can implement\\n\\t},\\n\\n\\n\\t// Retrieves an option with the given name\\n\\topt: function(name) {\\n\\t\\treturn this.options[name];\\n\\t},\\n\\n\\n\\t// Triggers handlers that are view-related. Modifies args before passing to calendar.\\n\\tpubliclyTrigger: function(name, thisObj) { // arguments beyond thisObj are passed along\\n\\t\\tvar calendar = this.calendar;\\n\\n\\t\\treturn calendar.publiclyTrigger.apply(\\n\\t\\t\\tcalendar,\\n\\t\\t\\t[name, thisObj || this].concat(\\n\\t\\t\\t\\tArray.prototype.slice.call(arguments, 2), // arguments beyond thisObj\\n\\t\\t\\t\\t[ this ] // always make the last argument a reference to the view. TODO: deprecate\\n\\t\\t\\t)\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Returns a proxy of the given promise that will be rejected if the given event fires\\n\\t// before the promise resolves.\\n\\trejectOn: function(eventName, promise) {\\n\\t\\tvar _this = this;\\n\\n\\t\\treturn new Promise(function(resolve, reject) {\\n\\t\\t\\t_this.one(eventName, reject);\\n\\n\\t\\t\\tfunction cleanup() {\\n\\t\\t\\t\\t_this.off(eventName, reject);\\n\\t\\t\\t}\\n\\n\\t\\t\\tpromise.then(function(res) { // success\\n\\t\\t\\t\\tcleanup();\\n\\t\\t\\t\\tresolve(res);\\n\\t\\t\\t}, function() { // failure\\n\\t\\t\\t\\tcleanup();\\n\\t\\t\\t\\treject();\\n\\t\\t\\t});\\n\\t\\t});\\n\\t},\\n\\n\\n\\t/* Date Computation\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Updates all internal dates for displaying the given unzoned range.\\n\\tsetRange: function(range) {\\n\\t\\t$.extend(this, range); // assigns every property to this object's member variables\\n\\t\\tthis.updateTitle();\\n\\t},\\n\\n\\n\\t// Given a single current unzoned date, produce information about what range to display.\\n\\t// Subclasses can override. Must return all properties.\\n\\tcomputeRange: function(date) {\\n\\t\\tvar intervalUnit = computeIntervalUnit(this.intervalDuration);\\n\\t\\tvar intervalStart = date.clone().startOf(intervalUnit);\\n\\t\\tvar intervalEnd = intervalStart.clone().add(this.intervalDuration);\\n\\t\\tvar start, end;\\n\\n\\t\\t// normalize the range's time-ambiguity\\n\\t\\tif (/year|month|week|day/.test(intervalUnit)) { // whole-days?\\n\\t\\t\\tintervalStart.stripTime();\\n\\t\\t\\tintervalEnd.stripTime();\\n\\t\\t}\\n\\t\\telse { // needs to have a time?\\n\\t\\t\\tif (!intervalStart.hasTime()) {\\n\\t\\t\\t\\tintervalStart = this.calendar.time(0); // give 00:00 time\\n\\t\\t\\t}\\n\\t\\t\\tif (!intervalEnd.hasTime()) {\\n\\t\\t\\t\\tintervalEnd = this.calendar.time(0); // give 00:00 time\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tstart = intervalStart.clone();\\n\\t\\tstart = this.skipHiddenDays(start);\\n\\t\\tend = intervalEnd.clone();\\n\\t\\tend = this.skipHiddenDays(end, -1, true); // exclusively move backwards\\n\\n\\t\\treturn {\\n\\t\\t\\tintervalUnit: intervalUnit,\\n\\t\\t\\tintervalStart: intervalStart,\\n\\t\\t\\tintervalEnd: intervalEnd,\\n\\t\\t\\tstart: start,\\n\\t\\t\\tend: end\\n\\t\\t};\\n\\t},\\n\\n\\n\\t// Computes the new date when the user hits the prev button, given the current date\\n\\tcomputePrevDate: function(date) {\\n\\t\\treturn this.massageCurrentDate(\\n\\t\\t\\tdate.clone().startOf(this.intervalUnit).subtract(this.intervalDuration), -1\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Computes the new date when the user hits the next button, given the current date\\n\\tcomputeNextDate: function(date) {\\n\\t\\treturn this.massageCurrentDate(\\n\\t\\t\\tdate.clone().startOf(this.intervalUnit).add(this.intervalDuration)\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Given an arbitrarily calculated current date of the calendar, returns a date that is ensured to be completely\\n\\t// visible. `direction` is optional and indicates which direction the current date was being\\n\\t// incremented or decremented (1 or -1).\\n\\tmassageCurrentDate: function(date, direction) {\\n\\t\\tif (this.intervalDuration.as('days') <= 1) { // if the view displays a single day or smaller\\n\\t\\t\\tif (this.isHiddenDay(date)) {\\n\\t\\t\\t\\tdate = this.skipHiddenDays(date, direction);\\n\\t\\t\\t\\tdate.startOf('day');\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn date;\\n\\t},\\n\\n\\n\\t/* Title and Date Formatting\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Sets the view's title property to the most updated computed value\\n\\tupdateTitle: function() {\\n\\t\\tthis.title = this.computeTitle();\\n\\t\\tthis.calendar.setToolbarsTitle(this.title);\\n\\t},\\n\\n\\n\\t// Computes what the title at the top of the calendar should be for this view\\n\\tcomputeTitle: function() {\\n\\t\\treturn this.formatRange(\\n\\t\\t\\t{\\n\\t\\t\\t\\t// in case intervalStart/End has a time, make sure timezone is correct\\n\\t\\t\\t\\tstart: this.calendar.applyTimezone(this.intervalStart),\\n\\t\\t\\t\\tend: this.calendar.applyTimezone(this.intervalEnd)\\n\\t\\t\\t},\\n\\t\\t\\tthis.opt('titleFormat') || this.computeTitleFormat(),\\n\\t\\t\\tthis.opt('titleRangeSeparator')\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Generates the format string that should be used to generate the title for the current date range.\\n\\t// Attempts to compute the most appropriate format if not explicitly specified with `titleFormat`.\\n\\tcomputeTitleFormat: function() {\\n\\t\\tif (this.intervalUnit == 'year') {\\n\\t\\t\\treturn 'YYYY';\\n\\t\\t}\\n\\t\\telse if (this.intervalUnit == 'month') {\\n\\t\\t\\treturn this.opt('monthYearFormat'); // like \\\"September 2014\\\"\\n\\t\\t}\\n\\t\\telse if (this.intervalDuration.as('days') > 1) {\\n\\t\\t\\treturn 'll'; // multi-day range. shorter, like \\\"Sep 9 - 10 2014\\\"\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn 'LL'; // one day. longer, like \\\"September 9 2014\\\"\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Utility for formatting a range. Accepts a range object, formatting string, and optional separator.\\n\\t// Displays all-day ranges naturally, with an inclusive end. Takes the current isRTL into account.\\n\\t// The timezones of the dates within `range` will be respected.\\n\\tformatRange: function(range, formatStr, separator) {\\n\\t\\tvar end = range.end;\\n\\n\\t\\tif (!end.hasTime()) { // all-day?\\n\\t\\t\\tend = end.clone().subtract(1); // convert to inclusive. last ms of previous day\\n\\t\\t}\\n\\n\\t\\treturn formatRange(range.start, end, formatStr, separator, this.opt('isRTL'));\\n\\t},\\n\\n\\n\\tgetAllDayHtml: function() {\\n\\t\\treturn this.opt('allDayHtml') || htmlEscape(this.opt('allDayText'));\\n\\t},\\n\\n\\n\\t/* Navigation\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Generates HTML for an anchor to another view into the calendar.\\n\\t// Will either generate an <a> tag or a non-clickable <span> tag, depending on enabled settings.\\n\\t// `gotoOptions` can either be a moment input, or an object with the form:\\n\\t// { date, type, forceOff }\\n\\t// `type` is a view-type like \\\"day\\\" or \\\"week\\\". default value is \\\"day\\\".\\n\\t// `attrs` and `innerHtml` are use to generate the rest of the HTML tag.\\n\\tbuildGotoAnchorHtml: function(gotoOptions, attrs, innerHtml) {\\n\\t\\tvar date, type, forceOff;\\n\\t\\tvar finalOptions;\\n\\n\\t\\tif ($.isPlainObject(gotoOptions)) {\\n\\t\\t\\tdate = gotoOptions.date;\\n\\t\\t\\ttype = gotoOptions.type;\\n\\t\\t\\tforceOff = gotoOptions.forceOff;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tdate = gotoOptions; // a single moment input\\n\\t\\t}\\n\\t\\tdate = FC.moment(date); // if a string, parse it\\n\\n\\t\\tfinalOptions = { // for serialization into the link\\n\\t\\t\\tdate: date.format('YYYY-MM-DD'),\\n\\t\\t\\ttype: type || 'day'\\n\\t\\t};\\n\\n\\t\\tif (typeof attrs === 'string') {\\n\\t\\t\\tinnerHtml = attrs;\\n\\t\\t\\tattrs = null;\\n\\t\\t}\\n\\n\\t\\tattrs = attrs ? ' ' + attrsToStr(attrs) : ''; // will have a leading space\\n\\t\\tinnerHtml = innerHtml || '';\\n\\n\\t\\tif (!forceOff && this.opt('navLinks')) {\\n\\t\\t\\treturn '<a' + attrs +\\n\\t\\t\\t\\t' data-goto=\\\"' + htmlEscape(JSON.stringify(finalOptions)) + '\\\">' +\\n\\t\\t\\t\\tinnerHtml +\\n\\t\\t\\t\\t'</a>';\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn '<span' + attrs + '>' +\\n\\t\\t\\t\\tinnerHtml +\\n\\t\\t\\t\\t'</span>';\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Rendering Non-date-related Content\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// Sets the container element that the view should render inside of, does global DOM-related initializations,\\n\\t// and renders all the non-date-related content inside.\\n\\tsetElement: function(el) {\\n\\t\\tthis.el = el;\\n\\t\\tthis.bindGlobalHandlers();\\n\\t\\tthis.renderSkeleton();\\n\\t},\\n\\n\\n\\t// Removes the view's container element from the DOM, clearing any content beforehand.\\n\\t// Undoes any other DOM-related attachments.\\n\\tremoveElement: function() {\\n\\t\\tthis.unsetDate();\\n\\t\\tthis.unrenderSkeleton();\\n\\n\\t\\tthis.unbindGlobalHandlers();\\n\\n\\t\\tthis.el.remove();\\n\\t\\t// NOTE: don't null-out this.el in case the View was destroyed within an API callback.\\n\\t\\t// We don't null-out the View's other jQuery element references upon destroy,\\n\\t\\t//  so we shouldn't kill this.el either.\\n\\t},\\n\\n\\n\\t// Renders the basic structure of the view before any content is rendered\\n\\trenderSkeleton: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Unrenders the basic structure of the view\\n\\tunrenderSkeleton: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Date Setting/Unsetting\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tsetDate: function(date) {\\n\\t\\tvar isReset = this.isDateSet;\\n\\n\\t\\tthis.isDateSet = true;\\n\\t\\tthis.handleDate(date, isReset);\\n\\t\\tthis.trigger(isReset ? 'dateReset' : 'dateSet', date);\\n\\t},\\n\\n\\n\\tunsetDate: function() {\\n\\t\\tif (this.isDateSet) {\\n\\t\\t\\tthis.isDateSet = false;\\n\\t\\t\\tthis.handleDateUnset();\\n\\t\\t\\tthis.trigger('dateUnset');\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Date Handling\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\thandleDate: function(date, isReset) {\\n\\t\\tvar _this = this;\\n\\n\\t\\tthis.unbindEvents(); // will do nothing if not already bound\\n\\t\\tthis.requestDateRender(date).then(function() {\\n\\t\\t\\t// wish we could start earlier, but setRange/computeRange needs to execute first\\n\\t\\t\\t_this.bindEvents(); // will request events\\n\\t\\t});\\n\\t},\\n\\n\\n\\thandleDateUnset: function() {\\n\\t\\tthis.unbindEvents();\\n\\t\\tthis.requestDateUnrender();\\n\\t},\\n\\n\\n\\t// Date Render Queuing\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// if date not specified, uses current\\n\\trequestDateRender: function(date) {\\n\\t\\tvar _this = this;\\n\\n\\t\\treturn this.dateRenderQueue.add(function() {\\n\\t\\t\\treturn _this.executeDateRender(date);\\n\\t\\t});\\n\\t},\\n\\n\\n\\trequestDateUnrender: function() {\\n\\t\\tvar _this = this;\\n\\n\\t\\treturn this.dateRenderQueue.add(function() {\\n\\t\\t\\treturn _this.executeDateUnrender();\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Date High-level Rendering\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// if date not specified, uses current\\n\\texecuteDateRender: function(date) {\\n\\t\\tvar _this = this;\\n\\n\\t\\t// if rendering a new date, reset scroll to initial state (scrollTime)\\n\\t\\tif (date) {\\n\\t\\t\\tthis.captureInitialScroll();\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tthis.captureScroll(); // a rerender of the current date\\n\\t\\t}\\n\\n\\t\\tthis.freezeHeight();\\n\\n\\t\\treturn this.executeDateUnrender().then(function() {\\n\\n\\t\\t\\tif (date) {\\n\\t\\t\\t\\t_this.setRange(_this.computeRange(date));\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (_this.render) {\\n\\t\\t\\t\\t_this.render(); // TODO: deprecate\\n\\t\\t\\t}\\n\\n\\t\\t\\t_this.renderDates();\\n\\t\\t\\t_this.updateSize();\\n\\t\\t\\t_this.renderBusinessHours(); // might need coordinates, so should go after updateSize()\\n\\t\\t\\t_this.startNowIndicator();\\n\\n\\t\\t\\t_this.thawHeight();\\n\\t\\t\\t_this.releaseScroll();\\n\\n\\t\\t\\t_this.isDateRendered = true;\\n\\t\\t\\t_this.onDateRender();\\n\\t\\t\\t_this.trigger('dateRender');\\n\\t\\t});\\n\\t},\\n\\n\\n\\texecuteDateUnrender: function() {\\n\\t\\tvar _this = this;\\n\\n\\t\\tif (_this.isDateRendered) {\\n\\t\\t\\treturn this.requestEventsUnrender().then(function() {\\n\\n\\t\\t\\t\\t_this.unselect();\\n\\t\\t\\t\\t_this.stopNowIndicator();\\n\\t\\t\\t\\t_this.triggerUnrender();\\n\\t\\t\\t\\t_this.unrenderBusinessHours();\\n\\t\\t\\t\\t_this.unrenderDates();\\n\\n\\t\\t\\t\\tif (_this.destroy) {\\n\\t\\t\\t\\t\\t_this.destroy(); // TODO: deprecate\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t_this.isDateRendered = false;\\n\\t\\t\\t\\t_this.trigger('dateUnrender');\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn Promise.resolve();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Date Rendering Triggers\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tonDateRender: function() {\\n\\t\\tthis.triggerRender();\\n\\t},\\n\\n\\n\\t// Date Low-level Rendering\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// date-cell content only\\n\\trenderDates: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// date-cell content only\\n\\tunrenderDates: function() {\\n\\t\\t// subclasses should override\\n\\t},\\n\\n\\n\\t// Misc view rendering utils\\n\\t// -------------------------\\n\\n\\n\\t// Signals that the view's content has been rendered\\n\\ttriggerRender: function() {\\n\\t\\tthis.publiclyTrigger('viewRender', this, this, this.el);\\n\\t},\\n\\n\\n\\t// Signals that the view's content is about to be unrendered\\n\\ttriggerUnrender: function() {\\n\\t\\tthis.publiclyTrigger('viewDestroy', this, this, this.el);\\n\\t},\\n\\n\\n\\t// Binds DOM handlers to elements that reside outside the view container, such as the document\\n\\tbindGlobalHandlers: function() {\\n\\t\\tthis.listenTo($(document), 'mousedown', this.handleDocumentMousedown);\\n\\t\\tthis.listenTo($(document), 'touchstart', this.processUnselect);\\n\\t},\\n\\n\\n\\t// Unbinds DOM handlers from elements that reside outside the view container\\n\\tunbindGlobalHandlers: function() {\\n\\t\\tthis.stopListeningTo($(document));\\n\\t},\\n\\n\\n\\t// Initializes internal variables related to theming\\n\\tinitThemingProps: function() {\\n\\t\\tvar tm = this.opt('theme') ? 'ui' : 'fc';\\n\\n\\t\\tthis.widgetHeaderClass = tm + '-widget-header';\\n\\t\\tthis.widgetContentClass = tm + '-widget-content';\\n\\t\\tthis.highlightStateClass = tm + '-state-highlight';\\n\\t},\\n\\n\\n\\t/* Business Hours\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders business-hours onto the view. Assumes updateSize has already been called.\\n\\trenderBusinessHours: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Unrenders previously-rendered business-hours\\n\\tunrenderBusinessHours: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t/* Now Indicator\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Immediately render the current time indicator and begins re-rendering it at an interval,\\n\\t// which is defined by this.getNowIndicatorUnit().\\n\\t// TODO: somehow do this for the current whole day's background too\\n\\tstartNowIndicator: function() {\\n\\t\\tvar _this = this;\\n\\t\\tvar unit;\\n\\t\\tvar update;\\n\\t\\tvar delay; // ms wait value\\n\\n\\t\\tif (this.opt('nowIndicator')) {\\n\\t\\t\\tunit = this.getNowIndicatorUnit();\\n\\t\\t\\tif (unit) {\\n\\t\\t\\t\\tupdate = proxy(this, 'updateNowIndicator'); // bind to `this`\\n\\n\\t\\t\\t\\tthis.initialNowDate = this.calendar.getNow();\\n\\t\\t\\t\\tthis.initialNowQueriedMs = +new Date();\\n\\t\\t\\t\\tthis.renderNowIndicator(this.initialNowDate);\\n\\t\\t\\t\\tthis.isNowIndicatorRendered = true;\\n\\n\\t\\t\\t\\t// wait until the beginning of the next interval\\n\\t\\t\\t\\tdelay = this.initialNowDate.clone().startOf(unit).add(1, unit) - this.initialNowDate;\\n\\t\\t\\t\\tthis.nowIndicatorTimeoutID = setTimeout(function() {\\n\\t\\t\\t\\t\\t_this.nowIndicatorTimeoutID = null;\\n\\t\\t\\t\\t\\tupdate();\\n\\t\\t\\t\\t\\tdelay = +moment.duration(1, unit);\\n\\t\\t\\t\\t\\tdelay = Math.max(100, delay); // prevent too frequent\\n\\t\\t\\t\\t\\t_this.nowIndicatorIntervalID = setInterval(update, delay); // update every interval\\n\\t\\t\\t\\t}, delay);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// rerenders the now indicator, computing the new current time from the amount of time that has passed\\n\\t// since the initial getNow call.\\n\\tupdateNowIndicator: function() {\\n\\t\\tif (this.isNowIndicatorRendered) {\\n\\t\\t\\tthis.unrenderNowIndicator();\\n\\t\\t\\tthis.renderNowIndicator(\\n\\t\\t\\t\\tthis.initialNowDate.clone().add(new Date() - this.initialNowQueriedMs) // add ms\\n\\t\\t\\t);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Immediately unrenders the view's current time indicator and stops any re-rendering timers.\\n\\t// Won't cause side effects if indicator isn't rendered.\\n\\tstopNowIndicator: function() {\\n\\t\\tif (this.isNowIndicatorRendered) {\\n\\n\\t\\t\\tif (this.nowIndicatorTimeoutID) {\\n\\t\\t\\t\\tclearTimeout(this.nowIndicatorTimeoutID);\\n\\t\\t\\t\\tthis.nowIndicatorTimeoutID = null;\\n\\t\\t\\t}\\n\\t\\t\\tif (this.nowIndicatorIntervalID) {\\n\\t\\t\\t\\tclearTimeout(this.nowIndicatorIntervalID);\\n\\t\\t\\t\\tthis.nowIndicatorIntervalID = null;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.unrenderNowIndicator();\\n\\t\\t\\tthis.isNowIndicatorRendered = false;\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Returns a string unit, like 'second' or 'minute' that defined how often the current time indicator\\n\\t// should be refreshed. If something falsy is returned, no time indicator is rendered at all.\\n\\tgetNowIndicatorUnit: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Renders a current time indicator at the given datetime\\n\\trenderNowIndicator: function(date) {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Undoes the rendering actions from renderNowIndicator\\n\\tunrenderNowIndicator: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t/* Dimensions\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Refreshes anything dependant upon sizing of the container element of the grid\\n\\tupdateSize: function(isResize) {\\n\\n\\t\\tif (isResize) {\\n\\t\\t\\tthis.captureScroll();\\n\\t\\t}\\n\\n\\t\\tthis.updateHeight(isResize);\\n\\t\\tthis.updateWidth(isResize);\\n\\t\\tthis.updateNowIndicator();\\n\\n\\t\\tif (isResize) {\\n\\t\\t\\tthis.releaseScroll();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Refreshes the horizontal dimensions of the calendar\\n\\tupdateWidth: function(isResize) {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Refreshes the vertical dimensions of the calendar\\n\\tupdateHeight: function(isResize) {\\n\\t\\tvar calendar = this.calendar; // we poll the calendar for height information\\n\\n\\t\\tthis.setHeight(\\n\\t\\t\\tcalendar.getSuggestedViewHeight(),\\n\\t\\t\\tcalendar.isHeightAuto()\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Updates the vertical dimensions of the calendar to the specified height.\\n\\t// if `isAuto` is set to true, height becomes merely a suggestion and the view should use its \\\"natural\\\" height.\\n\\tsetHeight: function(height, isAuto) {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t/* Scroller\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tcapturedScroll: null,\\n\\tcapturedScrollDepth: 0,\\n\\n\\n\\tcaptureScroll: function() {\\n\\t\\tif (!(this.capturedScrollDepth++)) {\\n\\t\\t\\tthis.capturedScroll = this.isDateRendered ? this.queryScroll() : {}; // require a render first\\n\\t\\t\\treturn true; // root?\\n\\t\\t}\\n\\t\\treturn false;\\n\\t},\\n\\n\\n\\tcaptureInitialScroll: function(forcedScroll) {\\n\\t\\tif (this.captureScroll()) { // root?\\n\\t\\t\\tthis.capturedScroll.isInitial = true;\\n\\n\\t\\t\\tif (forcedScroll) {\\n\\t\\t\\t\\t$.extend(this.capturedScroll, forcedScroll);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tthis.capturedScroll.isComputed = true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\treleaseScroll: function() {\\n\\t\\tvar scroll = this.capturedScroll;\\n\\t\\tvar isRoot = this.discardScroll();\\n\\n\\t\\tif (scroll.isComputed) {\\n\\t\\t\\tif (isRoot) {\\n\\t\\t\\t\\t// only compute initial scroll if it will actually be used (is the root capture)\\n\\t\\t\\t\\t$.extend(scroll, this.computeInitialScroll());\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tscroll = null; // scroll couldn't be computed. don't apply it to the DOM\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (scroll) {\\n\\t\\t\\t// we act immediately on a releaseScroll operation, as opposed to captureScroll.\\n\\t\\t\\t// if capture/release wraps a render operation that screws up the scroll,\\n\\t\\t\\t// we still want to restore it a good state after, regardless of depth.\\n\\n\\t\\t\\tif (scroll.isInitial) {\\n\\t\\t\\t\\tthis.hardSetScroll(scroll); // outsmart how browsers set scroll on initial DOM\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tthis.setScroll(scroll);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\tdiscardScroll: function() {\\n\\t\\tif (!(--this.capturedScrollDepth)) {\\n\\t\\t\\tthis.capturedScroll = null;\\n\\t\\t\\treturn true; // root?\\n\\t\\t}\\n\\t\\treturn false;\\n\\t},\\n\\n\\n\\tcomputeInitialScroll: function() {\\n\\t\\treturn {};\\n\\t},\\n\\n\\n\\tqueryScroll: function() {\\n\\t\\treturn {};\\n\\t},\\n\\n\\n\\thardSetScroll: function(scroll) {\\n\\t\\tvar _this = this;\\n\\t\\tvar exec = function() { _this.setScroll(scroll); };\\n\\t\\texec();\\n\\t\\tsetTimeout(exec, 0); // to surely clear the browser's initial scroll for the DOM\\n\\t},\\n\\n\\n\\tsetScroll: function(scroll) {\\n\\t},\\n\\n\\n\\t/* Height Freezing\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tfreezeHeight: function() {\\n\\t\\tthis.calendar.freezeContentHeight();\\n\\t},\\n\\n\\n\\tthawHeight: function() {\\n\\t\\tthis.calendar.thawContentHeight();\\n\\t},\\n\\n\\n\\t// Event Binding/Unbinding\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tbindEvents: function() {\\n\\t\\tvar _this = this;\\n\\n\\t\\tif (!this.isEventsBound) {\\n\\t\\t\\tthis.isEventsBound = true;\\n\\t\\t\\tthis.rejectOn('eventsUnbind', this.requestEvents()).then(function(events) { // TODO: test rejection\\n\\t\\t\\t\\t_this.listenTo(_this.calendar, 'eventsReset', _this.setEvents);\\n\\t\\t\\t\\t_this.setEvents(events);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t},\\n\\n\\n\\tunbindEvents: function() {\\n\\t\\tif (this.isEventsBound) {\\n\\t\\t\\tthis.isEventsBound = false;\\n\\t\\t\\tthis.stopListeningTo(this.calendar, 'eventsReset');\\n\\t\\t\\tthis.unsetEvents();\\n\\t\\t\\tthis.trigger('eventsUnbind');\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Event Setting/Unsetting\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tsetEvents: function(events) {\\n\\t\\tvar isReset = this.isEventSet;\\n\\n\\t\\tthis.isEventsSet = true;\\n\\t\\tthis.handleEvents(events, isReset);\\n\\t\\tthis.trigger(isReset ? 'eventsReset' : 'eventsSet', events);\\n\\t},\\n\\n\\n\\tunsetEvents: function() {\\n\\t\\tif (this.isEventsSet) {\\n\\t\\t\\tthis.isEventsSet = false;\\n\\t\\t\\tthis.handleEventsUnset();\\n\\t\\t\\tthis.trigger('eventsUnset');\\n\\t\\t}\\n\\t},\\n\\n\\n\\twhenEventsSet: function() {\\n\\t\\tvar _this = this;\\n\\n\\t\\tif (this.isEventsSet) {\\n\\t\\t\\treturn Promise.resolve(this.getCurrentEvents());\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn new Promise(function(resolve) {\\n\\t\\t\\t\\t_this.one('eventsSet', resolve);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Event Handling\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\thandleEvents: function(events, isReset) {\\n\\t\\tthis.requestEventsRender(events);\\n\\t},\\n\\n\\n\\thandleEventsUnset: function() {\\n\\t\\tthis.requestEventsUnrender();\\n\\t},\\n\\n\\n\\t// Event Render Queuing\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// assumes any previous event renders have been cleared already\\n\\trequestEventsRender: function(events) {\\n\\t\\tvar _this = this;\\n\\n\\t\\treturn this.eventRenderQueue.add(function() { // might not return a promise if debounced!? bad\\n\\t\\t\\treturn _this.executeEventsRender(events);\\n\\t\\t});\\n\\t},\\n\\n\\n\\trequestEventsUnrender: function() {\\n\\t\\tvar _this = this;\\n\\n\\t\\tif (this.isEventsRendered) {\\n\\t\\t\\treturn this.eventRenderQueue.addQuickly(function() {\\n\\t\\t\\t\\treturn _this.executeEventsUnrender();\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn Promise.resolve();\\n\\t\\t}\\n\\t},\\n\\n\\n\\trequestCurrentEventsRender: function() {\\n\\t\\tif (this.isEventsSet) {\\n\\t\\t\\tthis.requestEventsRender(this.getCurrentEvents());\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn Promise.reject();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Event High-level Rendering\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\texecuteEventsRender: function(events) {\\n\\t\\tvar _this = this;\\n\\n\\t\\tthis.captureScroll();\\n\\t\\tthis.freezeHeight();\\n\\n\\t\\treturn this.executeEventsUnrender().then(function() {\\n\\t\\t\\t_this.renderEvents(events);\\n\\n\\t\\t\\t_this.thawHeight();\\n\\t\\t\\t_this.releaseScroll();\\n\\n\\t\\t\\t_this.isEventsRendered = true;\\n\\t\\t\\t_this.onEventsRender();\\n\\t\\t\\t_this.trigger('eventsRender');\\n\\t\\t});\\n\\t},\\n\\n\\n\\texecuteEventsUnrender: function() {\\n\\t\\tif (this.isEventsRendered) {\\n\\t\\t\\tthis.onBeforeEventsUnrender();\\n\\n\\t\\t\\tthis.captureScroll();\\n\\t\\t\\tthis.freezeHeight();\\n\\n\\t\\t\\tif (this.destroyEvents) {\\n\\t\\t\\t\\tthis.destroyEvents(); // TODO: deprecate\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.unrenderEvents();\\n\\n\\t\\t\\tthis.thawHeight();\\n\\t\\t\\tthis.releaseScroll();\\n\\n\\t\\t\\tthis.isEventsRendered = false;\\n\\t\\t\\tthis.trigger('eventsUnrender');\\n\\t\\t}\\n\\n\\t\\treturn Promise.resolve(); // always synchronous\\n\\t},\\n\\n\\n\\t// Event Rendering Triggers\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// Signals that all events have been rendered\\n\\tonEventsRender: function() {\\n\\t\\tthis.renderedEventSegEach(function(seg) {\\n\\t\\t\\tthis.publiclyTrigger('eventAfterRender', seg.event, seg.event, seg.el);\\n\\t\\t});\\n\\t\\tthis.publiclyTrigger('eventAfterAllRender');\\n\\t},\\n\\n\\n\\t// Signals that all event elements are about to be removed\\n\\tonBeforeEventsUnrender: function() {\\n\\t\\tthis.renderedEventSegEach(function(seg) {\\n\\t\\t\\tthis.publiclyTrigger('eventDestroy', seg.event, seg.event, seg.el);\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Event Low-level Rendering\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// Renders the events onto the view.\\n\\trenderEvents: function(events) {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Removes event elements from the view.\\n\\tunrenderEvents: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Event Data Access\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\trequestEvents: function() {\\n\\t\\treturn this.calendar.requestEvents(this.start, this.end);\\n\\t},\\n\\n\\n\\tgetCurrentEvents: function() {\\n\\t\\treturn this.calendar.getPrunedEventCache();\\n\\t},\\n\\n\\n\\t// Event Rendering Utils\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\t// Given an event and the default element used for rendering, returns the element that should actually be used.\\n\\t// Basically runs events and elements through the eventRender hook.\\n\\tresolveEventEl: function(event, el) {\\n\\t\\tvar custom = this.publiclyTrigger('eventRender', event, event, el);\\n\\n\\t\\tif (custom === false) { // means don't render at all\\n\\t\\t\\tel = null;\\n\\t\\t}\\n\\t\\telse if (custom && custom !== true) {\\n\\t\\t\\tel = $(custom);\\n\\t\\t}\\n\\n\\t\\treturn el;\\n\\t},\\n\\n\\n\\t// Hides all rendered event segments linked to the given event\\n\\tshowEvent: function(event) {\\n\\t\\tthis.renderedEventSegEach(function(seg) {\\n\\t\\t\\tseg.el.css('visibility', '');\\n\\t\\t}, event);\\n\\t},\\n\\n\\n\\t// Shows all rendered event segments linked to the given event\\n\\thideEvent: function(event) {\\n\\t\\tthis.renderedEventSegEach(function(seg) {\\n\\t\\t\\tseg.el.css('visibility', 'hidden');\\n\\t\\t}, event);\\n\\t},\\n\\n\\n\\t// Iterates through event segments that have been rendered (have an el). Goes through all by default.\\n\\t// If the optional `event` argument is specified, only iterates through segments linked to that event.\\n\\t// The `this` value of the callback function will be the view.\\n\\trenderedEventSegEach: function(func, event) {\\n\\t\\tvar segs = this.getEventSegs();\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tif (!event || segs[i].event._id === event._id) {\\n\\t\\t\\t\\tif (segs[i].el) {\\n\\t\\t\\t\\t\\tfunc.call(this, segs[i]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Retrieves all the rendered segment objects for the view\\n\\tgetEventSegs: function() {\\n\\t\\t// subclasses must implement\\n\\t\\treturn [];\\n\\t},\\n\\n\\n\\t/* Event Drag-n-Drop\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Computes if the given event is allowed to be dragged by the user\\n\\tisEventDraggable: function(event) {\\n\\t\\treturn this.isEventStartEditable(event);\\n\\t},\\n\\n\\n\\tisEventStartEditable: function(event) {\\n\\t\\treturn firstDefined(\\n\\t\\t\\tevent.startEditable,\\n\\t\\t\\t(event.source || {}).startEditable,\\n\\t\\t\\tthis.opt('eventStartEditable'),\\n\\t\\t\\tthis.isEventGenerallyEditable(event)\\n\\t\\t);\\n\\t},\\n\\n\\n\\tisEventGenerallyEditable: function(event) {\\n\\t\\treturn firstDefined(\\n\\t\\t\\tevent.editable,\\n\\t\\t\\t(event.source || {}).editable,\\n\\t\\t\\tthis.opt('editable')\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Must be called when an event in the view is dropped onto new location.\\n\\t// `dropLocation` is an object that contains the new zoned start/end/allDay values for the event.\\n\\treportEventDrop: function(event, dropLocation, largeUnit, el, ev) {\\n\\t\\tvar calendar = this.calendar;\\n\\t\\tvar mutateResult = calendar.mutateEvent(event, dropLocation, largeUnit);\\n\\t\\tvar undoFunc = function() {\\n\\t\\t\\tmutateResult.undo();\\n\\t\\t\\tcalendar.reportEventChange();\\n\\t\\t};\\n\\n\\t\\tthis.triggerEventDrop(event, mutateResult.dateDelta, undoFunc, el, ev);\\n\\t\\tcalendar.reportEventChange(); // will rerender events\\n\\t},\\n\\n\\n\\t// Triggers event-drop handlers that have subscribed via the API\\n\\ttriggerEventDrop: function(event, dateDelta, undoFunc, el, ev) {\\n\\t\\tthis.publiclyTrigger('eventDrop', el[0], event, dateDelta, undoFunc, ev, {}); // {} = jqui dummy\\n\\t},\\n\\n\\n\\t/* External Element Drag-n-Drop\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Must be called when an external element, via jQuery UI, has been dropped onto the calendar.\\n\\t// `meta` is the parsed data that has been embedded into the dragging event.\\n\\t// `dropLocation` is an object that contains the new zoned start/end/allDay values for the event.\\n\\treportExternalDrop: function(meta, dropLocation, el, ev, ui) {\\n\\t\\tvar eventProps = meta.eventProps;\\n\\t\\tvar eventInput;\\n\\t\\tvar event;\\n\\n\\t\\t// Try to build an event object and render it. TODO: decouple the two\\n\\t\\tif (eventProps) {\\n\\t\\t\\teventInput = $.extend({}, eventProps, dropLocation);\\n\\t\\t\\tevent = this.calendar.renderEvent(eventInput, meta.stick)[0]; // renderEvent returns an array\\n\\t\\t}\\n\\n\\t\\tthis.triggerExternalDrop(event, dropLocation, el, ev, ui);\\n\\t},\\n\\n\\n\\t// Triggers external-drop handlers that have subscribed via the API\\n\\ttriggerExternalDrop: function(event, dropLocation, el, ev, ui) {\\n\\n\\t\\t// trigger 'drop' regardless of whether element represents an event\\n\\t\\tthis.publiclyTrigger('drop', el[0], dropLocation.start, ev, ui);\\n\\n\\t\\tif (event) {\\n\\t\\t\\tthis.publiclyTrigger('eventReceive', null, event); // signal an external event landed\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Drag-n-Drop Rendering (for both events and external elements)\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of a event or external-element drag over the given drop zone.\\n\\t// If an external-element, seg will be `null`.\\n\\t// Must return elements used for any mock events.\\n\\trenderDrag: function(dropLocation, seg) {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t// Unrenders a visual indication of an event or external-element being dragged.\\n\\tunrenderDrag: function() {\\n\\t\\t// subclasses must implement\\n\\t},\\n\\n\\n\\t/* Event Resizing\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Computes if the given event is allowed to be resized from its starting edge\\n\\tisEventResizableFromStart: function(event) {\\n\\t\\treturn this.opt('eventResizableFromStart') && this.isEventResizable(event);\\n\\t},\\n\\n\\n\\t// Computes if the given event is allowed to be resized from its ending edge\\n\\tisEventResizableFromEnd: function(event) {\\n\\t\\treturn this.isEventResizable(event);\\n\\t},\\n\\n\\n\\t// Computes if the given event is allowed to be resized by the user at all\\n\\tisEventResizable: function(event) {\\n\\t\\tvar source = event.source || {};\\n\\n\\t\\treturn firstDefined(\\n\\t\\t\\tevent.durationEditable,\\n\\t\\t\\tsource.durationEditable,\\n\\t\\t\\tthis.opt('eventDurationEditable'),\\n\\t\\t\\tevent.editable,\\n\\t\\t\\tsource.editable,\\n\\t\\t\\tthis.opt('editable')\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Must be called when an event in the view has been resized to a new length\\n\\treportEventResize: function(event, resizeLocation, largeUnit, el, ev) {\\n\\t\\tvar calendar = this.calendar;\\n\\t\\tvar mutateResult = calendar.mutateEvent(event, resizeLocation, largeUnit);\\n\\t\\tvar undoFunc = function() {\\n\\t\\t\\tmutateResult.undo();\\n\\t\\t\\tcalendar.reportEventChange();\\n\\t\\t};\\n\\n\\t\\tthis.triggerEventResize(event, mutateResult.durationDelta, undoFunc, el, ev);\\n\\t\\tcalendar.reportEventChange(); // will rerender events\\n\\t},\\n\\n\\n\\t// Triggers event-resize handlers that have subscribed via the API\\n\\ttriggerEventResize: function(event, durationDelta, undoFunc, el, ev) {\\n\\t\\tthis.publiclyTrigger('eventResize', el[0], event, durationDelta, undoFunc, ev, {}); // {} = jqui dummy\\n\\t},\\n\\n\\n\\t/* Selection (time range)\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Selects a date span on the view. `start` and `end` are both Moments.\\n\\t// `ev` is the native mouse event that begin the interaction.\\n\\tselect: function(span, ev) {\\n\\t\\tthis.unselect(ev);\\n\\t\\tthis.renderSelection(span);\\n\\t\\tthis.reportSelection(span, ev);\\n\\t},\\n\\n\\n\\t// Renders a visual indication of the selection\\n\\trenderSelection: function(span) {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t// Called when a new selection is made. Updates internal state and triggers handlers.\\n\\treportSelection: function(span, ev) {\\n\\t\\tthis.isSelected = true;\\n\\t\\tthis.triggerSelect(span, ev);\\n\\t},\\n\\n\\n\\t// Triggers handlers to 'select'\\n\\ttriggerSelect: function(span, ev) {\\n\\t\\tthis.publiclyTrigger(\\n\\t\\t\\t'select',\\n\\t\\t\\tnull,\\n\\t\\t\\tthis.calendar.applyTimezone(span.start), // convert to calendar's tz for external API\\n\\t\\t\\tthis.calendar.applyTimezone(span.end), // \\\"\\n\\t\\t\\tev\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Undoes a selection. updates in the internal state and triggers handlers.\\n\\t// `ev` is the native mouse event that began the interaction.\\n\\tunselect: function(ev) {\\n\\t\\tif (this.isSelected) {\\n\\t\\t\\tthis.isSelected = false;\\n\\t\\t\\tif (this.destroySelection) {\\n\\t\\t\\t\\tthis.destroySelection(); // TODO: deprecate\\n\\t\\t\\t}\\n\\t\\t\\tthis.unrenderSelection();\\n\\t\\t\\tthis.publiclyTrigger('unselect', null, ev);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Unrenders a visual indication of selection\\n\\tunrenderSelection: function() {\\n\\t\\t// subclasses should implement\\n\\t},\\n\\n\\n\\t/* Event Selection\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tselectEvent: function(event) {\\n\\t\\tif (!this.selectedEvent || this.selectedEvent !== event) {\\n\\t\\t\\tthis.unselectEvent();\\n\\t\\t\\tthis.renderedEventSegEach(function(seg) {\\n\\t\\t\\t\\tseg.el.addClass('fc-selected');\\n\\t\\t\\t}, event);\\n\\t\\t\\tthis.selectedEvent = event;\\n\\t\\t}\\n\\t},\\n\\n\\n\\tunselectEvent: function() {\\n\\t\\tif (this.selectedEvent) {\\n\\t\\t\\tthis.renderedEventSegEach(function(seg) {\\n\\t\\t\\t\\tseg.el.removeClass('fc-selected');\\n\\t\\t\\t}, this.selectedEvent);\\n\\t\\t\\tthis.selectedEvent = null;\\n\\t\\t}\\n\\t},\\n\\n\\n\\tisEventSelected: function(event) {\\n\\t\\t// event references might change on refetchEvents(), while selectedEvent doesn't,\\n\\t\\t// so compare IDs\\n\\t\\treturn this.selectedEvent && this.selectedEvent._id === event._id;\\n\\t},\\n\\n\\n\\t/* Mouse / Touch Unselecting (time range & event unselection)\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\t// TODO: move consistently to down/start or up/end?\\n\\t// TODO: don't kill previous selection if touch scrolling\\n\\n\\n\\thandleDocumentMousedown: function(ev) {\\n\\t\\tif (isPrimaryMouseButton(ev)) {\\n\\t\\t\\tthis.processUnselect(ev);\\n\\t\\t}\\n\\t},\\n\\n\\n\\tprocessUnselect: function(ev) {\\n\\t\\tthis.processRangeUnselect(ev);\\n\\t\\tthis.processEventUnselect(ev);\\n\\t},\\n\\n\\n\\tprocessRangeUnselect: function(ev) {\\n\\t\\tvar ignore;\\n\\n\\t\\t// is there a time-range selection?\\n\\t\\tif (this.isSelected && this.opt('unselectAuto')) {\\n\\t\\t\\t// only unselect if the clicked element is not identical to or inside of an 'unselectCancel' element\\n\\t\\t\\tignore = this.opt('unselectCancel');\\n\\t\\t\\tif (!ignore || !$(ev.target).closest(ignore).length) {\\n\\t\\t\\t\\tthis.unselect(ev);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\tprocessEventUnselect: function(ev) {\\n\\t\\tif (this.selectedEvent) {\\n\\t\\t\\tif (!$(ev.target).closest('.fc-selected').length) {\\n\\t\\t\\t\\tthis.unselectEvent();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Day Click\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Triggers handlers to 'dayClick'\\n\\t// Span has start/end of the clicked area. Only the start is useful.\\n\\ttriggerDayClick: function(span, dayEl, ev) {\\n\\t\\tthis.publiclyTrigger(\\n\\t\\t\\t'dayClick',\\n\\t\\t\\tdayEl,\\n\\t\\t\\tthis.calendar.applyTimezone(span.start), // convert to calendar's timezone for external API\\n\\t\\t\\tev\\n\\t\\t);\\n\\t},\\n\\n\\n\\t/* Date Utils\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Initializes internal variables related to calculating hidden days-of-week\\n\\tinitHiddenDays: function() {\\n\\t\\tvar hiddenDays = this.opt('hiddenDays') || []; // array of day-of-week indices that are hidden\\n\\t\\tvar isHiddenDayHash = []; // is the day-of-week hidden? (hash with day-of-week-index -> bool)\\n\\t\\tvar dayCnt = 0;\\n\\t\\tvar i;\\n\\n\\t\\tif (this.opt('weekends') === false) {\\n\\t\\t\\thiddenDays.push(0, 6); // 0=sunday, 6=saturday\\n\\t\\t}\\n\\n\\t\\tfor (i = 0; i < 7; i++) {\\n\\t\\t\\tif (\\n\\t\\t\\t\\t!(isHiddenDayHash[i] = $.inArray(i, hiddenDays) !== -1)\\n\\t\\t\\t) {\\n\\t\\t\\t\\tdayCnt++;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (!dayCnt) {\\n\\t\\t\\tthrow 'invalid hiddenDays'; // all days were hidden? bad.\\n\\t\\t}\\n\\n\\t\\tthis.isHiddenDayHash = isHiddenDayHash;\\n\\t},\\n\\n\\n\\t// Is the current day hidden?\\n\\t// `day` is a day-of-week index (0-6), or a Moment\\n\\tisHiddenDay: function(day) {\\n\\t\\tif (moment.isMoment(day)) {\\n\\t\\t\\tday = day.day();\\n\\t\\t}\\n\\t\\treturn this.isHiddenDayHash[day];\\n\\t},\\n\\n\\n\\t// Incrementing the current day until it is no longer a hidden day, returning a copy.\\n\\t// If the initial value of `date` is not a hidden day, don't do anything.\\n\\t// Pass `isExclusive` as `true` if you are dealing with an end date.\\n\\t// `inc` defaults to `1` (increment one day forward each time)\\n\\tskipHiddenDays: function(date, inc, isExclusive) {\\n\\t\\tvar out = date.clone();\\n\\t\\tinc = inc || 1;\\n\\t\\twhile (\\n\\t\\t\\tthis.isHiddenDayHash[(out.day() + (isExclusive ? inc : 0) + 7) % 7]\\n\\t\\t) {\\n\\t\\t\\tout.add(inc, 'days');\\n\\t\\t}\\n\\t\\treturn out;\\n\\t},\\n\\n\\n\\t// Returns the date range of the full days the given range visually appears to occupy.\\n\\t// Returns a new range object.\\n\\tcomputeDayRange: function(range) {\\n\\t\\tvar startDay = range.start.clone().stripTime(); // the beginning of the day the range starts\\n\\t\\tvar end = range.end;\\n\\t\\tvar endDay = null;\\n\\t\\tvar endTimeMS;\\n\\n\\t\\tif (end) {\\n\\t\\t\\tendDay = end.clone().stripTime(); // the beginning of the day the range exclusively ends\\n\\t\\t\\tendTimeMS = +end.time(); // # of milliseconds into `endDay`\\n\\n\\t\\t\\t// If the end time is actually inclusively part of the next day and is equal to or\\n\\t\\t\\t// beyond the next day threshold, adjust the end to be the exclusive end of `endDay`.\\n\\t\\t\\t// Otherwise, leaving it as inclusive will cause it to exclude `endDay`.\\n\\t\\t\\tif (endTimeMS && endTimeMS >= this.nextDayThreshold) {\\n\\t\\t\\t\\tendDay.add(1, 'days');\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// If no end was specified, or if it is within `startDay` but not past nextDayThreshold,\\n\\t\\t// assign the default duration of one day.\\n\\t\\tif (!end || endDay <= startDay) {\\n\\t\\t\\tendDay = startDay.clone().add(1, 'days');\\n\\t\\t}\\n\\n\\t\\treturn { start: startDay, end: endDay };\\n\\t},\\n\\n\\n\\t// Does the given event visually appear to occupy more than one day?\\n\\tisMultiDayEvent: function(event) {\\n\\t\\tvar range = this.computeDayRange(event); // event is range-ish\\n\\n\\t\\treturn range.end.diff(range.start, 'days') > 1;\\n\\t}\\n\\n});\\n\\n;;\\n\\n/*\\nEmbodies a div that has potential scrollbars\\n*/\\nvar Scroller = FC.Scroller = Class.extend({\\n\\n\\tel: null, // the guaranteed outer element\\n\\tscrollEl: null, // the element with the scrollbars\\n\\toverflowX: null,\\n\\toverflowY: null,\\n\\n\\n\\tconstructor: function(options) {\\n\\t\\toptions = options || {};\\n\\t\\tthis.overflowX = options.overflowX || options.overflow || 'auto';\\n\\t\\tthis.overflowY = options.overflowY || options.overflow || 'auto';\\n\\t},\\n\\n\\n\\trender: function() {\\n\\t\\tthis.el = this.renderEl();\\n\\t\\tthis.applyOverflow();\\n\\t},\\n\\n\\n\\trenderEl: function() {\\n\\t\\treturn (this.scrollEl = $('<div class=\\\"fc-scroller\\\"></div>'));\\n\\t},\\n\\n\\n\\t// sets to natural height, unlocks overflow\\n\\tclear: function() {\\n\\t\\tthis.setHeight('auto');\\n\\t\\tthis.applyOverflow();\\n\\t},\\n\\n\\n\\tdestroy: function() {\\n\\t\\tthis.el.remove();\\n\\t},\\n\\n\\n\\t// Overflow\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tapplyOverflow: function() {\\n\\t\\tthis.scrollEl.css({\\n\\t\\t\\t'overflow-x': this.overflowX,\\n\\t\\t\\t'overflow-y': this.overflowY\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Causes any 'auto' overflow values to resolves to 'scroll' or 'hidden'.\\n\\t// Useful for preserving scrollbar widths regardless of future resizes.\\n\\t// Can pass in scrollbarWidths for optimization.\\n\\tlockOverflow: function(scrollbarWidths) {\\n\\t\\tvar overflowX = this.overflowX;\\n\\t\\tvar overflowY = this.overflowY;\\n\\n\\t\\tscrollbarWidths = scrollbarWidths || this.getScrollbarWidths();\\n\\n\\t\\tif (overflowX === 'auto') {\\n\\t\\t\\toverflowX = (\\n\\t\\t\\t\\t\\tscrollbarWidths.top || scrollbarWidths.bottom || // horizontal scrollbars?\\n\\t\\t\\t\\t\\t// OR scrolling pane with massless scrollbars?\\n\\t\\t\\t\\t\\tthis.scrollEl[0].scrollWidth - 1 > this.scrollEl[0].clientWidth\\n\\t\\t\\t\\t\\t\\t// subtract 1 because of IE off-by-one issue\\n\\t\\t\\t\\t) ? 'scroll' : 'hidden';\\n\\t\\t}\\n\\n\\t\\tif (overflowY === 'auto') {\\n\\t\\t\\toverflowY = (\\n\\t\\t\\t\\t\\tscrollbarWidths.left || scrollbarWidths.right || // vertical scrollbars?\\n\\t\\t\\t\\t\\t// OR scrolling pane with massless scrollbars?\\n\\t\\t\\t\\t\\tthis.scrollEl[0].scrollHeight - 1 > this.scrollEl[0].clientHeight\\n\\t\\t\\t\\t\\t\\t// subtract 1 because of IE off-by-one issue\\n\\t\\t\\t\\t) ? 'scroll' : 'hidden';\\n\\t\\t}\\n\\n\\t\\tthis.scrollEl.css({ 'overflow-x': overflowX, 'overflow-y': overflowY });\\n\\t},\\n\\n\\n\\t// Getters / Setters\\n\\t// -----------------------------------------------------------------------------------------------------------------\\n\\n\\n\\tsetHeight: function(height) {\\n\\t\\tthis.scrollEl.height(height);\\n\\t},\\n\\n\\n\\tgetScrollTop: function() {\\n\\t\\treturn this.scrollEl.scrollTop();\\n\\t},\\n\\n\\n\\tsetScrollTop: function(top) {\\n\\t\\tthis.scrollEl.scrollTop(top);\\n\\t},\\n\\n\\n\\tgetClientWidth: function() {\\n\\t\\treturn this.scrollEl[0].clientWidth;\\n\\t},\\n\\n\\n\\tgetClientHeight: function() {\\n\\t\\treturn this.scrollEl[0].clientHeight;\\n\\t},\\n\\n\\n\\tgetScrollbarWidths: function() {\\n\\t\\treturn getScrollbarWidths(this.scrollEl);\\n\\t}\\n\\n});\\n\\n;;\\nfunction Iterator(items) {\\n    this.items = items || [];\\n}\\n\\n\\n/* Calls a method on every item passing the arguments through */\\nIterator.prototype.proxyCall = function(methodName) {\\n    var args = Array.prototype.slice.call(arguments, 1);\\n    var results = [];\\n\\n    this.items.forEach(function(item) {\\n        results.push(item[methodName].apply(item, args));\\n    });\\n\\n    return results;\\n};\\n\\n;;\\n\\n/* Toolbar with buttons and title\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nfunction Toolbar(calendar, toolbarOptions) {\\n\\tvar t = this;\\n\\n\\t// exports\\n\\tt.setToolbarOptions = setToolbarOptions;\\n\\tt.render = render;\\n\\tt.removeElement = removeElement;\\n\\tt.updateTitle = updateTitle;\\n\\tt.activateButton = activateButton;\\n\\tt.deactivateButton = deactivateButton;\\n\\tt.disableButton = disableButton;\\n\\tt.enableButton = enableButton;\\n\\tt.getViewsWithButtons = getViewsWithButtons;\\n\\tt.el = null; // mirrors local `el`\\n\\n\\t// locals\\n\\tvar el;\\n\\tvar viewsWithButtons = [];\\n\\tvar tm;\\n\\n\\t// method to update toolbar-specific options, not calendar-wide options\\n\\tfunction setToolbarOptions(newToolbarOptions) {\\n\\t\\ttoolbarOptions = newToolbarOptions;\\n\\t}\\n\\n\\t// can be called repeatedly and will rerender\\n\\tfunction render() {\\n\\t\\tvar sections = toolbarOptions.layout;\\n\\n\\t\\ttm = calendar.options.theme ? 'ui' : 'fc';\\n\\n\\t\\tif (sections) {\\n\\t\\t\\tif (!el) {\\n\\t\\t\\t\\tel = this.el = $(\\\"<div class='fc-toolbar \\\"+ toolbarOptions.extraClasses + \\\"'/>\\\");\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tel.empty();\\n\\t\\t\\t}\\n\\t\\t\\tel.append(renderSection('left'))\\n\\t\\t\\t\\t.append(renderSection('right'))\\n\\t\\t\\t\\t.append(renderSection('center'))\\n\\t\\t\\t\\t.append('<div class=\\\"fc-clear\\\"/>');\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tremoveElement();\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction removeElement() {\\n\\t\\tif (el) {\\n\\t\\t\\tel.remove();\\n\\t\\t\\tel = t.el = null;\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction renderSection(position) {\\n\\t\\tvar sectionEl = $('<div class=\\\"fc-' + position + '\\\"/>');\\n\\t\\tvar buttonStr = toolbarOptions.layout[position];\\n\\n\\t\\tif (buttonStr) {\\n\\t\\t\\t$.each(buttonStr.split(' '), function(i) {\\n\\t\\t\\t\\tvar groupChildren = $();\\n\\t\\t\\t\\tvar isOnlyButtons = true;\\n\\t\\t\\t\\tvar groupEl;\\n\\n\\t\\t\\t\\t$.each(this.split(','), function(j, buttonName) {\\n\\t\\t\\t\\t\\tvar customButtonProps;\\n\\t\\t\\t\\t\\tvar viewSpec;\\n\\t\\t\\t\\t\\tvar buttonClick;\\n\\t\\t\\t\\t\\tvar overrideText; // text explicitly set by calendar's constructor options. overcomes icons\\n\\t\\t\\t\\t\\tvar defaultText;\\n\\t\\t\\t\\t\\tvar themeIcon;\\n\\t\\t\\t\\t\\tvar normalIcon;\\n\\t\\t\\t\\t\\tvar innerHtml;\\n\\t\\t\\t\\t\\tvar classes;\\n\\t\\t\\t\\t\\tvar button; // the element\\n\\n\\t\\t\\t\\t\\tif (buttonName == 'title') {\\n\\t\\t\\t\\t\\t\\tgroupChildren = groupChildren.add($('<h2>&nbsp;</h2>')); // we always want it to take up height\\n\\t\\t\\t\\t\\t\\tisOnlyButtons = false;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\tif ((customButtonProps = (calendar.options.customButtons || {})[buttonName])) {\\n\\t\\t\\t\\t\\t\\t\\tbuttonClick = function(ev) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif (customButtonProps.click) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcustomButtonProps.click.call(button[0], ev);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\toverrideText = ''; // icons will override text\\n\\t\\t\\t\\t\\t\\t\\tdefaultText = customButtonProps.text;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse if ((viewSpec = calendar.getViewSpec(buttonName))) {\\n\\t\\t\\t\\t\\t\\t\\tbuttonClick = function() {\\n\\t\\t\\t\\t\\t\\t\\t\\tcalendar.changeView(buttonName);\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\tviewsWithButtons.push(buttonName);\\n\\t\\t\\t\\t\\t\\t\\toverrideText = viewSpec.buttonTextOverride;\\n\\t\\t\\t\\t\\t\\t\\tdefaultText = viewSpec.buttonTextDefault;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse if (calendar[buttonName]) { // a calendar method\\n\\t\\t\\t\\t\\t\\t\\tbuttonClick = function() {\\n\\t\\t\\t\\t\\t\\t\\t\\tcalendar[buttonName]();\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\toverrideText = (calendar.overrides.buttonText || {})[buttonName];\\n\\t\\t\\t\\t\\t\\t\\tdefaultText = calendar.options.buttonText[buttonName]; // everything else is considered default\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif (buttonClick) {\\n\\n\\t\\t\\t\\t\\t\\t\\tthemeIcon =\\n\\t\\t\\t\\t\\t\\t\\t\\tcustomButtonProps ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcustomButtonProps.themeIcon :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcalendar.options.themeButtonIcons[buttonName];\\n\\n\\t\\t\\t\\t\\t\\t\\tnormalIcon =\\n\\t\\t\\t\\t\\t\\t\\t\\tcustomButtonProps ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcustomButtonProps.icon :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcalendar.options.buttonIcons[buttonName];\\n\\n\\t\\t\\t\\t\\t\\t\\tif (overrideText) {\\n\\t\\t\\t\\t\\t\\t\\t\\tinnerHtml = htmlEscape(overrideText);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\telse if (themeIcon && calendar.options.theme) {\\n\\t\\t\\t\\t\\t\\t\\t\\tinnerHtml = \\\"<span class='ui-icon ui-icon-\\\" + themeIcon + \\\"'></span>\\\";\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\telse if (normalIcon && !calendar.options.theme) {\\n\\t\\t\\t\\t\\t\\t\\t\\tinnerHtml = \\\"<span class='fc-icon fc-icon-\\\" + normalIcon + \\\"'></span>\\\";\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\t\\t\\tinnerHtml = htmlEscape(defaultText);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\tclasses = [\\n\\t\\t\\t\\t\\t\\t\\t\\t'fc-' + buttonName + '-button',\\n\\t\\t\\t\\t\\t\\t\\t\\ttm + '-button',\\n\\t\\t\\t\\t\\t\\t\\t\\ttm + '-state-default'\\n\\t\\t\\t\\t\\t\\t\\t];\\n\\n\\t\\t\\t\\t\\t\\t\\tbutton = $( // type=\\\"button\\\" so that it doesn't submit a form\\n\\t\\t\\t\\t\\t\\t\\t\\t'<button type=\\\"button\\\" class=\\\"' + classes.join(' ') + '\\\">' +\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tinnerHtml +\\n\\t\\t\\t\\t\\t\\t\\t\\t'</button>'\\n\\t\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t\\t\\t.click(function(ev) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// don't process clicks for disabled buttons\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (!button.hasClass(tm + '-state-disabled')) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbuttonClick(ev);\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// after the click action, if the button becomes the \\\"active\\\" tab, or disabled,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// it should never have a hover class, so remove it now.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbutton.hasClass(tm + '-state-active') ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbutton.hasClass(tm + '-state-disabled')\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbutton.removeClass(tm + '-state-hover');\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t\\t.mousedown(function() {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// the *down* effect (mouse pressed in).\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// only on buttons that are not the \\\"active\\\" tab, or disabled\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbutton\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.not('.' + tm + '-state-active')\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.not('.' + tm + '-state-disabled')\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.addClass(tm + '-state-down');\\n\\t\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t\\t.mouseup(function() {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// undo the *down* effect\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbutton.removeClass(tm + '-state-down');\\n\\t\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t\\t.hover(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfunction() {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// the *hover* effect.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// only on buttons that are not the \\\"active\\\" tab, or disabled\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbutton\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.not('.' + tm + '-state-active')\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.not('.' + tm + '-state-disabled')\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.addClass(tm + '-state-hover');\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfunction() {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// undo the *hover* effect\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbutton\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.removeClass(tm + '-state-hover')\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.removeClass(tm + '-state-down'); // if mouseleave happens before mouseup\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\tgroupChildren = groupChildren.add(button);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tif (isOnlyButtons) {\\n\\t\\t\\t\\t\\tgroupChildren\\n\\t\\t\\t\\t\\t\\t.first().addClass(tm + '-corner-left').end()\\n\\t\\t\\t\\t\\t\\t.last().addClass(tm + '-corner-right').end();\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (groupChildren.length > 1) {\\n\\t\\t\\t\\t\\tgroupEl = $('<div/>');\\n\\t\\t\\t\\t\\tif (isOnlyButtons) {\\n\\t\\t\\t\\t\\t\\tgroupEl.addClass('fc-button-group');\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tgroupEl.append(groupChildren);\\n\\t\\t\\t\\t\\tsectionEl.append(groupEl);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\tsectionEl.append(groupChildren); // 1 or 0 children\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\treturn sectionEl;\\n\\t}\\n\\n\\n\\tfunction updateTitle(text) {\\n\\t\\tif (el) {\\n\\t\\t\\tel.find('h2').text(text);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction activateButton(buttonName) {\\n\\t\\tif (el) {\\n\\t\\t\\tel.find('.fc-' + buttonName + '-button')\\n\\t\\t\\t\\t.addClass(tm + '-state-active');\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction deactivateButton(buttonName) {\\n\\t\\tif (el) {\\n\\t\\t\\tel.find('.fc-' + buttonName + '-button')\\n\\t\\t\\t\\t.removeClass(tm + '-state-active');\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction disableButton(buttonName) {\\n\\t\\tif (el) {\\n\\t\\t\\tel.find('.fc-' + buttonName + '-button')\\n\\t\\t\\t\\t.prop('disabled', true)\\n\\t\\t\\t\\t.addClass(tm + '-state-disabled');\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction enableButton(buttonName) {\\n\\t\\tif (el) {\\n\\t\\t\\tel.find('.fc-' + buttonName + '-button')\\n\\t\\t\\t\\t.prop('disabled', false)\\n\\t\\t\\t\\t.removeClass(tm + '-state-disabled');\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction getViewsWithButtons() {\\n\\t\\treturn viewsWithButtons;\\n\\t}\\n\\n}\\n\\n;;\\n\\nvar Calendar = FC.Calendar = Class.extend({\\n\\n\\tdirDefaults: null, // option defaults related to LTR or RTL\\n\\tlocaleDefaults: null, // option defaults related to current locale\\n\\toverrides: null, // option overrides given to the fullCalendar constructor\\n\\tdynamicOverrides: null, // options set with dynamic setter method. higher precedence than view overrides.\\n\\toptions: null, // all defaults combined with overrides\\n\\tviewSpecCache: null, // cache of view definitions\\n\\tview: null, // current View object\\n\\theader: null,\\n\\tfooter: null,\\n\\tloadingLevel: 0, // number of simultaneous loading tasks\\n\\n\\n\\t// a lot of this class' OOP logic is scoped within this constructor function,\\n\\t// but in the future, write individual methods on the prototype.\\n\\tconstructor: Calendar_constructor,\\n\\n\\n\\t// Subclasses can override this for initialization logic after the constructor has been called\\n\\tinitialize: function() {\\n\\t},\\n\\n\\n\\t// Computes the flattened options hash for the calendar and assigns to `this.options`.\\n\\t// Assumes this.overrides and this.dynamicOverrides have already been initialized.\\n\\tpopulateOptionsHash: function() {\\n\\t\\tvar locale, localeDefaults;\\n\\t\\tvar isRTL, dirDefaults;\\n\\n\\t\\tlocale = firstDefined( // explicit locale option given?\\n\\t\\t\\tthis.dynamicOverrides.locale,\\n\\t\\t\\tthis.overrides.locale\\n\\t\\t);\\n\\t\\tlocaleDefaults = localeOptionHash[locale];\\n\\t\\tif (!localeDefaults) { // explicit locale option not given or invalid?\\n\\t\\t\\tlocale = Calendar.defaults.locale;\\n\\t\\t\\tlocaleDefaults = localeOptionHash[locale] || {};\\n\\t\\t}\\n\\n\\t\\tisRTL = firstDefined( // based on options computed so far, is direction RTL?\\n\\t\\t\\tthis.dynamicOverrides.isRTL,\\n\\t\\t\\tthis.overrides.isRTL,\\n\\t\\t\\tlocaleDefaults.isRTL,\\n\\t\\t\\tCalendar.defaults.isRTL\\n\\t\\t);\\n\\t\\tdirDefaults = isRTL ? Calendar.rtlDefaults : {};\\n\\n\\t\\tthis.dirDefaults = dirDefaults;\\n\\t\\tthis.localeDefaults = localeDefaults;\\n\\t\\tthis.options = mergeOptions([ // merge defaults and overrides. lowest to highest precedence\\n\\t\\t\\tCalendar.defaults, // global defaults\\n\\t\\t\\tdirDefaults,\\n\\t\\t\\tlocaleDefaults,\\n\\t\\t\\tthis.overrides,\\n\\t\\t\\tthis.dynamicOverrides\\n\\t\\t]);\\n\\t\\tpopulateInstanceComputableOptions(this.options); // fill in gaps with computed options\\n\\t},\\n\\n\\n\\t// Gets information about how to create a view. Will use a cache.\\n\\tgetViewSpec: function(viewType) {\\n\\t\\tvar cache = this.viewSpecCache;\\n\\n\\t\\treturn cache[viewType] || (cache[viewType] = this.buildViewSpec(viewType));\\n\\t},\\n\\n\\n\\t// Given a duration singular unit, like \\\"week\\\" or \\\"day\\\", finds a matching view spec.\\n\\t// Preference is given to views that have corresponding buttons.\\n\\tgetUnitViewSpec: function(unit) {\\n\\t\\tvar viewTypes;\\n\\t\\tvar i;\\n\\t\\tvar spec;\\n\\n\\t\\tif ($.inArray(unit, intervalUnits) != -1) {\\n\\n\\t\\t\\t// put views that have buttons first. there will be duplicates, but oh well\\n\\t\\t\\tviewTypes = this.header.getViewsWithButtons(); // TODO: include footer as well?\\n\\t\\t\\t$.each(FC.views, function(viewType) { // all views\\n\\t\\t\\t\\tviewTypes.push(viewType);\\n\\t\\t\\t});\\n\\n\\t\\t\\tfor (i = 0; i < viewTypes.length; i++) {\\n\\t\\t\\t\\tspec = this.getViewSpec(viewTypes[i]);\\n\\t\\t\\t\\tif (spec) {\\n\\t\\t\\t\\t\\tif (spec.singleUnit == unit) {\\n\\t\\t\\t\\t\\t\\treturn spec;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Builds an object with information on how to create a given view\\n\\tbuildViewSpec: function(requestedViewType) {\\n\\t\\tvar viewOverrides = this.overrides.views || {};\\n\\t\\tvar specChain = []; // for the view. lowest to highest priority\\n\\t\\tvar defaultsChain = []; // for the view. lowest to highest priority\\n\\t\\tvar overridesChain = []; // for the view. lowest to highest priority\\n\\t\\tvar viewType = requestedViewType;\\n\\t\\tvar spec; // for the view\\n\\t\\tvar overrides; // for the view\\n\\t\\tvar duration;\\n\\t\\tvar unit;\\n\\n\\t\\t// iterate from the specific view definition to a more general one until we hit an actual View class\\n\\t\\twhile (viewType) {\\n\\t\\t\\tspec = fcViews[viewType];\\n\\t\\t\\toverrides = viewOverrides[viewType];\\n\\t\\t\\tviewType = null; // clear. might repopulate for another iteration\\n\\n\\t\\t\\tif (typeof spec === 'function') { // TODO: deprecate\\n\\t\\t\\t\\tspec = { 'class': spec };\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (spec) {\\n\\t\\t\\t\\tspecChain.unshift(spec);\\n\\t\\t\\t\\tdefaultsChain.unshift(spec.defaults || {});\\n\\t\\t\\t\\tduration = duration || spec.duration;\\n\\t\\t\\t\\tviewType = viewType || spec.type;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (overrides) {\\n\\t\\t\\t\\toverridesChain.unshift(overrides); // view-specific option hashes have options at zero-level\\n\\t\\t\\t\\tduration = duration || overrides.duration;\\n\\t\\t\\t\\tviewType = viewType || overrides.type;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tspec = mergeProps(specChain);\\n\\t\\tspec.type = requestedViewType;\\n\\t\\tif (!spec['class']) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tif (duration) {\\n\\t\\t\\tduration = moment.duration(duration);\\n\\t\\t\\tif (duration.valueOf()) { // valid?\\n\\t\\t\\t\\tspec.duration = duration;\\n\\t\\t\\t\\tunit = computeIntervalUnit(duration);\\n\\n\\t\\t\\t\\t// view is a single-unit duration, like \\\"week\\\" or \\\"day\\\"\\n\\t\\t\\t\\t// incorporate options for this. lowest priority\\n\\t\\t\\t\\tif (duration.as(unit) === 1) {\\n\\t\\t\\t\\t\\tspec.singleUnit = unit;\\n\\t\\t\\t\\t\\toverridesChain.unshift(viewOverrides[unit] || {});\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tspec.defaults = mergeOptions(defaultsChain);\\n\\t\\tspec.overrides = mergeOptions(overridesChain);\\n\\n\\t\\tthis.buildViewSpecOptions(spec);\\n\\t\\tthis.buildViewSpecButtonText(spec, requestedViewType);\\n\\n\\t\\treturn spec;\\n\\t},\\n\\n\\n\\t// Builds and assigns a view spec's options object from its already-assigned defaults and overrides\\n\\tbuildViewSpecOptions: function(spec) {\\n\\t\\tspec.options = mergeOptions([ // lowest to highest priority\\n\\t\\t\\tCalendar.defaults, // global defaults\\n\\t\\t\\tspec.defaults, // view's defaults (from ViewSubclass.defaults)\\n\\t\\t\\tthis.dirDefaults,\\n\\t\\t\\tthis.localeDefaults, // locale and dir take precedence over view's defaults!\\n\\t\\t\\tthis.overrides, // calendar's overrides (options given to constructor)\\n\\t\\t\\tspec.overrides, // view's overrides (view-specific options)\\n\\t\\t\\tthis.dynamicOverrides // dynamically set via setter. highest precedence\\n\\t\\t]);\\n\\t\\tpopulateInstanceComputableOptions(spec.options);\\n\\t},\\n\\n\\n\\t// Computes and assigns a view spec's buttonText-related options\\n\\tbuildViewSpecButtonText: function(spec, requestedViewType) {\\n\\n\\t\\t// given an options object with a possible `buttonText` hash, lookup the buttonText for the\\n\\t\\t// requested view, falling back to a generic unit entry like \\\"week\\\" or \\\"day\\\"\\n\\t\\tfunction queryButtonText(options) {\\n\\t\\t\\tvar buttonText = options.buttonText || {};\\n\\t\\t\\treturn buttonText[requestedViewType] ||\\n\\t\\t\\t\\t// view can decide to look up a certain key\\n\\t\\t\\t\\t(spec.buttonTextKey ? buttonText[spec.buttonTextKey] : null) ||\\n\\t\\t\\t\\t// a key like \\\"month\\\"\\n\\t\\t\\t\\t(spec.singleUnit ? buttonText[spec.singleUnit] : null);\\n\\t\\t}\\n\\n\\t\\t// highest to lowest priority\\n\\t\\tspec.buttonTextOverride =\\n\\t\\t\\tqueryButtonText(this.dynamicOverrides) ||\\n\\t\\t\\tqueryButtonText(this.overrides) || // constructor-specified buttonText lookup hash takes precedence\\n\\t\\t\\tspec.overrides.buttonText; // `buttonText` for view-specific options is a string\\n\\n\\t\\t// highest to lowest priority. mirrors buildViewSpecOptions\\n\\t\\tspec.buttonTextDefault =\\n\\t\\t\\tqueryButtonText(this.localeDefaults) ||\\n\\t\\t\\tqueryButtonText(this.dirDefaults) ||\\n\\t\\t\\tspec.defaults.buttonText || // a single string. from ViewSubclass.defaults\\n\\t\\t\\tqueryButtonText(Calendar.defaults) ||\\n\\t\\t\\t(spec.duration ? this.humanizeDuration(spec.duration) : null) || // like \\\"3 days\\\"\\n\\t\\t\\trequestedViewType; // fall back to given view name\\n\\t},\\n\\n\\n\\t// Given a view name for a custom view or a standard view, creates a ready-to-go View object\\n\\tinstantiateView: function(viewType) {\\n\\t\\tvar spec = this.getViewSpec(viewType);\\n\\n\\t\\treturn new spec['class'](this, viewType, spec.options, spec.duration);\\n\\t},\\n\\n\\n\\t// Returns a boolean about whether the view is okay to instantiate at some point\\n\\tisValidViewType: function(viewType) {\\n\\t\\treturn Boolean(this.getViewSpec(viewType));\\n\\t},\\n\\n\\n\\t// Should be called when any type of async data fetching begins\\n\\tpushLoading: function() {\\n\\t\\tif (!(this.loadingLevel++)) {\\n\\t\\t\\tthis.publiclyTrigger('loading', null, true, this.view);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Should be called when any type of async data fetching completes\\n\\tpopLoading: function() {\\n\\t\\tif (!(--this.loadingLevel)) {\\n\\t\\t\\tthis.publiclyTrigger('loading', null, false, this.view);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Given arguments to the select method in the API, returns a span (unzoned start/end and other info)\\n\\tbuildSelectSpan: function(zonedStartInput, zonedEndInput) {\\n\\t\\tvar start = this.moment(zonedStartInput).stripZone();\\n\\t\\tvar end;\\n\\n\\t\\tif (zonedEndInput) {\\n\\t\\t\\tend = this.moment(zonedEndInput).stripZone();\\n\\t\\t}\\n\\t\\telse if (start.hasTime()) {\\n\\t\\t\\tend = start.clone().add(this.defaultTimedEventDuration);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tend = start.clone().add(this.defaultAllDayEventDuration);\\n\\t\\t}\\n\\n\\t\\treturn { start: start, end: end };\\n\\t}\\n\\n});\\n\\n\\nCalendar.mixin(EmitterMixin);\\n\\n\\nfunction Calendar_constructor(element, overrides) {\\n\\tvar t = this;\\n\\n\\n\\t// Exports\\n\\t// -----------------------------------------------------------------------------------\\n\\n\\tt.render = render;\\n\\tt.destroy = destroy;\\n\\tt.rerenderEvents = rerenderEvents;\\n\\tt.changeView = renderView; // `renderView` will switch to another view\\n\\tt.select = select;\\n\\tt.unselect = unselect;\\n\\tt.prev = prev;\\n\\tt.next = next;\\n\\tt.prevYear = prevYear;\\n\\tt.nextYear = nextYear;\\n\\tt.today = today;\\n\\tt.gotoDate = gotoDate;\\n\\tt.incrementDate = incrementDate;\\n\\tt.zoomTo = zoomTo;\\n\\tt.getDate = getDate;\\n\\tt.getCalendar = getCalendar;\\n\\tt.getView = getView;\\n\\tt.option = option; // getter/setter method\\n\\tt.publiclyTrigger = publiclyTrigger;\\n\\n\\n\\t// Options\\n\\t// -----------------------------------------------------------------------------------\\n\\n\\tt.dynamicOverrides = {};\\n\\tt.viewSpecCache = {};\\n\\tt.optionHandlers = {}; // for Calendar.options.js\\n\\tt.overrides = $.extend({}, overrides); // make a copy\\n\\n\\tt.populateOptionsHash(); // sets this.options\\n\\n\\n\\n\\t// Locale-data Internals\\n\\t// -----------------------------------------------------------------------------------\\n\\t// Apply overrides to the current locale's data\\n\\n\\tvar localeData;\\n\\n\\t// Called immediately, and when any of the options change.\\n\\t// Happens before any internal objects rebuild or rerender, because this is very core.\\n\\tt.bindOptions([\\n\\t\\t'locale', 'monthNames', 'monthNamesShort', 'dayNames', 'dayNamesShort', 'firstDay', 'weekNumberCalculation'\\n\\t], function(locale, monthNames, monthNamesShort, dayNames, dayNamesShort, firstDay, weekNumberCalculation) {\\n\\n\\t\\t// normalize\\n\\t\\tif (weekNumberCalculation === 'iso') {\\n\\t\\t\\tweekNumberCalculation = 'ISO'; // normalize\\n\\t\\t}\\n\\n\\t\\tlocaleData = createObject( // make a cheap copy\\n\\t\\t\\tgetMomentLocaleData(locale) // will fall back to en\\n\\t\\t);\\n\\n\\t\\tif (monthNames) {\\n\\t\\t\\tlocaleData._months = monthNames;\\n\\t\\t}\\n\\t\\tif (monthNamesShort) {\\n\\t\\t\\tlocaleData._monthsShort = monthNamesShort;\\n\\t\\t}\\n\\t\\tif (dayNames) {\\n\\t\\t\\tlocaleData._weekdays = dayNames;\\n\\t\\t}\\n\\t\\tif (dayNamesShort) {\\n\\t\\t\\tlocaleData._weekdaysShort = dayNamesShort;\\n\\t\\t}\\n\\n\\t\\tif (firstDay == null && weekNumberCalculation === 'ISO') {\\n\\t\\t\\tfirstDay = 1;\\n\\t\\t}\\n\\t\\tif (firstDay != null) {\\n\\t\\t\\tvar _week = createObject(localeData._week); // _week: { dow: # }\\n\\t\\t\\t_week.dow = firstDay;\\n\\t\\t\\tlocaleData._week = _week;\\n\\t\\t}\\n\\n\\t\\tif ( // whitelist certain kinds of input\\n\\t\\t\\tweekNumberCalculation === 'ISO' ||\\n\\t\\t\\tweekNumberCalculation === 'local' ||\\n\\t\\t\\ttypeof weekNumberCalculation === 'function'\\n\\t\\t) {\\n\\t\\t\\tlocaleData._fullCalendar_weekCalc = weekNumberCalculation; // moment-ext will know what to do with it\\n\\t\\t}\\n\\n\\t\\t// If the internal current date object already exists, move to new locale.\\n\\t\\t// We do NOT need to do this technique for event dates, because this happens when converting to \\\"segments\\\".\\n\\t\\tif (date) {\\n\\t\\t\\tlocalizeMoment(date); // sets to localeData\\n\\t\\t}\\n\\t});\\n\\n\\n\\t// Calendar-specific Date Utilities\\n\\t// -----------------------------------------------------------------------------------\\n\\n\\n\\tt.defaultAllDayEventDuration = moment.duration(t.options.defaultAllDayEventDuration);\\n\\tt.defaultTimedEventDuration = moment.duration(t.options.defaultTimedEventDuration);\\n\\n\\n\\t// Builds a moment using the settings of the current calendar: timezone and locale.\\n\\t// Accepts anything the vanilla moment() constructor accepts.\\n\\tt.moment = function() {\\n\\t\\tvar mom;\\n\\n\\t\\tif (t.options.timezone === 'local') {\\n\\t\\t\\tmom = FC.moment.apply(null, arguments);\\n\\n\\t\\t\\t// Force the moment to be local, because FC.moment doesn't guarantee it.\\n\\t\\t\\tif (mom.hasTime()) { // don't give ambiguously-timed moments a local zone\\n\\t\\t\\t\\tmom.local();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse if (t.options.timezone === 'UTC') {\\n\\t\\t\\tmom = FC.moment.utc.apply(null, arguments); // process as UTC\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tmom = FC.moment.parseZone.apply(null, arguments); // let the input decide the zone\\n\\t\\t}\\n\\n\\t\\tlocalizeMoment(mom);\\n\\n\\t\\treturn mom;\\n\\t};\\n\\n\\n\\t// Updates the given moment's locale settings to the current calendar locale settings.\\n\\tfunction localizeMoment(mom) {\\n\\t\\tmom._locale = localeData;\\n\\t}\\n\\tt.localizeMoment = localizeMoment;\\n\\n\\n\\t// Returns a boolean about whether or not the calendar knows how to calculate\\n\\t// the timezone offset of arbitrary dates in the current timezone.\\n\\tt.getIsAmbigTimezone = function() {\\n\\t\\treturn t.options.timezone !== 'local' && t.options.timezone !== 'UTC';\\n\\t};\\n\\n\\n\\t// Returns a copy of the given date in the current timezone. Has no effect on dates without times.\\n\\tt.applyTimezone = function(date) {\\n\\t\\tif (!date.hasTime()) {\\n\\t\\t\\treturn date.clone();\\n\\t\\t}\\n\\n\\t\\tvar zonedDate = t.moment(date.toArray());\\n\\t\\tvar timeAdjust = date.time() - zonedDate.time();\\n\\t\\tvar adjustedZonedDate;\\n\\n\\t\\t// Safari sometimes has problems with this coersion when near DST. Adjust if necessary. (bug #2396)\\n\\t\\tif (timeAdjust) { // is the time result different than expected?\\n\\t\\t\\tadjustedZonedDate = zonedDate.clone().add(timeAdjust); // add milliseconds\\n\\t\\t\\tif (date.time() - adjustedZonedDate.time() === 0) { // does it match perfectly now?\\n\\t\\t\\t\\tzonedDate = adjustedZonedDate;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn zonedDate;\\n\\t};\\n\\n\\n\\t// Returns a moment for the current date, as defined by the client's computer or from the `now` option.\\n\\t// Will return an moment with an ambiguous timezone.\\n\\tt.getNow = function() {\\n\\t\\tvar now = t.options.now;\\n\\t\\tif (typeof now === 'function') {\\n\\t\\t\\tnow = now();\\n\\t\\t}\\n\\t\\treturn t.moment(now).stripZone();\\n\\t};\\n\\n\\n\\t// Get an event's normalized end date. If not present, calculate it from the defaults.\\n\\tt.getEventEnd = function(event) {\\n\\t\\tif (event.end) {\\n\\t\\t\\treturn event.end.clone();\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn t.getDefaultEventEnd(event.allDay, event.start);\\n\\t\\t}\\n\\t};\\n\\n\\n\\t// Given an event's allDay status and start date, return what its fallback end date should be.\\n\\t// TODO: rename to computeDefaultEventEnd\\n\\tt.getDefaultEventEnd = function(allDay, zonedStart) {\\n\\t\\tvar end = zonedStart.clone();\\n\\n\\t\\tif (allDay) {\\n\\t\\t\\tend.stripTime().add(t.defaultAllDayEventDuration);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tend.add(t.defaultTimedEventDuration);\\n\\t\\t}\\n\\n\\t\\tif (t.getIsAmbigTimezone()) {\\n\\t\\t\\tend.stripZone(); // we don't know what the tzo should be\\n\\t\\t}\\n\\n\\t\\treturn end;\\n\\t};\\n\\n\\n\\t// Produces a human-readable string for the given duration.\\n\\t// Side-effect: changes the locale of the given duration.\\n\\tt.humanizeDuration = function(duration) {\\n\\t\\treturn duration.locale(t.options.locale).humanize();\\n\\t};\\n\\n\\n\\n\\t// Imports\\n\\t// -----------------------------------------------------------------------------------\\n\\n\\n\\tEventManager.call(t);\\n\\n\\n\\n\\t// Locals\\n\\t// -----------------------------------------------------------------------------------\\n\\n\\n\\tvar _element = element[0];\\n\\tvar toolbarsManager;\\n\\tvar header;\\n\\tvar footer;\\n\\tvar content;\\n\\tvar tm; // for making theme classes\\n\\tvar currentView; // NOTE: keep this in sync with this.view\\n\\tvar viewsByType = {}; // holds all instantiated view instances, current or not\\n\\tvar suggestedViewHeight;\\n\\tvar windowResizeProxy; // wraps the windowResize function\\n\\tvar ignoreWindowResize = 0;\\n\\tvar date; // unzoned\\n\\n\\n\\n\\t// Main Rendering\\n\\t// -----------------------------------------------------------------------------------\\n\\n\\n\\t// compute the initial ambig-timezone date\\n\\tif (t.options.defaultDate != null) {\\n\\t\\tdate = t.moment(t.options.defaultDate).stripZone();\\n\\t}\\n\\telse {\\n\\t\\tdate = t.getNow(); // getNow already returns unzoned\\n\\t}\\n\\n\\n\\tfunction render() {\\n\\t\\tif (!content) {\\n\\t\\t\\tinitialRender();\\n\\t\\t}\\n\\t\\telse if (elementVisible()) {\\n\\t\\t\\t// mainly for the public API\\n\\t\\t\\tcalcSize();\\n\\t\\t\\trenderView();\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction initialRender() {\\n\\t\\telement.addClass('fc');\\n\\n\\t\\t// event delegation for nav links\\n\\t\\telement.on('click.fc', 'a[data-goto]', function(ev) {\\n\\t\\t\\tvar anchorEl = $(this);\\n\\t\\t\\tvar gotoOptions = anchorEl.data('goto'); // will automatically parse JSON\\n\\t\\t\\tvar date = t.moment(gotoOptions.date);\\n\\t\\t\\tvar viewType = gotoOptions.type;\\n\\n\\t\\t\\t// property like \\\"navLinkDayClick\\\". might be a string or a function\\n\\t\\t\\tvar customAction = currentView.opt('navLink' + capitaliseFirstLetter(viewType) + 'Click');\\n\\n\\t\\t\\tif (typeof customAction === 'function') {\\n\\t\\t\\t\\tcustomAction(date, ev);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tif (typeof customAction === 'string') {\\n\\t\\t\\t\\t\\tviewType = customAction;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tzoomTo(date, viewType);\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\t// called immediately, and upon option change\\n\\t\\tt.bindOption('theme', function(theme) {\\n\\t\\t\\ttm = theme ? 'ui' : 'fc'; // affects a larger scope\\n\\t\\t\\telement.toggleClass('ui-widget', theme);\\n\\t\\t\\telement.toggleClass('fc-unthemed', !theme);\\n\\t\\t});\\n\\n\\t\\t// called immediately, and upon option change.\\n\\t\\t// HACK: locale often affects isRTL, so we explicitly listen to that too.\\n\\t\\tt.bindOptions([ 'isRTL', 'locale' ], function(isRTL) {\\n\\t\\t\\telement.toggleClass('fc-ltr', !isRTL);\\n\\t\\t\\telement.toggleClass('fc-rtl', isRTL);\\n\\t\\t});\\n\\n\\t\\tcontent = $(\\\"<div class='fc-view-container'/>\\\").prependTo(element);\\n\\n\\t\\tvar toolbars = buildToolbars();\\n\\t\\ttoolbarsManager = new Iterator(toolbars);\\n\\n\\t\\theader = t.header = toolbars[0];\\n\\t\\tfooter = t.footer = toolbars[1];\\n\\n\\t\\trenderHeader();\\n\\t\\trenderFooter();\\n\\t\\trenderView(t.options.defaultView);\\n\\n\\t\\tif (t.options.handleWindowResize) {\\n\\t\\t\\twindowResizeProxy = debounce(windowResize, t.options.windowResizeDelay); // prevents rapid calls\\n\\t\\t\\t$(window).resize(windowResizeProxy);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction destroy() {\\n\\n\\t\\tif (currentView) {\\n\\t\\t\\tcurrentView.removeElement();\\n\\n\\t\\t\\t// NOTE: don't null-out currentView/t.view in case API methods are called after destroy.\\n\\t\\t\\t// It is still the \\\"current\\\" view, just not rendered.\\n\\t\\t}\\n\\n\\t\\ttoolbarsManager.proxyCall('removeElement');\\n\\t\\tcontent.remove();\\n\\t\\telement.removeClass('fc fc-ltr fc-rtl fc-unthemed ui-widget');\\n\\n\\t\\telement.off('.fc'); // unbind nav link handlers\\n\\n\\t\\tif (windowResizeProxy) {\\n\\t\\t\\t$(window).unbind('resize', windowResizeProxy);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction elementVisible() {\\n\\t\\treturn element.is(':visible');\\n\\t}\\n\\n\\n\\n\\t// View Rendering\\n\\t// -----------------------------------------------------------------------------------\\n\\n\\n\\t// Renders a view because of a date change, view-type change, or for the first time.\\n\\t// If not given a viewType, keep the current view but render different dates.\\n\\t// Accepts an optional scroll state to restore to.\\n\\tfunction renderView(viewType, forcedScroll) {\\n\\t\\tignoreWindowResize++;\\n\\n\\t\\tvar needsClearView = currentView && viewType && currentView.type !== viewType;\\n\\n\\t\\t// if viewType is changing, remove the old view's rendering\\n\\t\\tif (needsClearView) {\\n\\t\\t\\tfreezeContentHeight(); // prevent a scroll jump when view element is removed\\n\\t\\t\\tclearView();\\n\\t\\t}\\n\\n\\t\\t// if viewType changed, or the view was never created, create a fresh view\\n\\t\\tif (!currentView && viewType) {\\n\\t\\t\\tcurrentView = t.view =\\n\\t\\t\\t\\tviewsByType[viewType] ||\\n\\t\\t\\t\\t(viewsByType[viewType] = t.instantiateView(viewType));\\n\\n\\t\\t\\tcurrentView.setElement(\\n\\t\\t\\t\\t$(\\\"<div class='fc-view fc-\\\" + viewType + \\\"-view' />\\\").appendTo(content)\\n\\t\\t\\t);\\n\\t\\t\\ttoolbarsManager.proxyCall('activateButton', viewType);\\n\\t\\t}\\n\\n\\t\\tif (currentView) {\\n\\n\\t\\t\\t// in case the view should render a period of time that is completely hidden\\n\\t\\t\\tdate = currentView.massageCurrentDate(date);\\n\\n\\t\\t\\t// render or rerender the view\\n\\t\\t\\tif (\\n\\t\\t\\t\\t!currentView.isDateSet ||\\n\\t\\t\\t\\t!( // NOT within interval range signals an implicit date window change\\n\\t\\t\\t\\t\\tdate >= currentView.intervalStart &&\\n\\t\\t\\t\\t\\tdate < currentView.intervalEnd\\n\\t\\t\\t\\t)\\n\\t\\t\\t) {\\n\\t\\t\\t\\tif (elementVisible()) {\\n\\n\\t\\t\\t\\t\\tif (forcedScroll) {\\n\\t\\t\\t\\t\\t\\tcurrentView.captureInitialScroll(forcedScroll);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tcurrentView.setDate(date, forcedScroll);\\n\\n\\t\\t\\t\\t\\tif (forcedScroll) {\\n\\t\\t\\t\\t\\t\\tcurrentView.releaseScroll();\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// need to do this after View::render, so dates are calculated\\n\\t\\t\\t\\t\\t// NOTE: view updates title text proactively\\n\\t\\t\\t\\t\\tupdateToolbarsTodayButton();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (needsClearView) {\\n\\t\\t\\tthawContentHeight();\\n\\t\\t}\\n\\n\\t\\tignoreWindowResize--;\\n\\t}\\n\\n\\n\\t// Unrenders the current view and reflects this change in the Header.\\n\\t// Unregsiters the `currentView`, but does not remove from viewByType hash.\\n\\tfunction clearView() {\\n\\t\\ttoolbarsManager.proxyCall('deactivateButton', currentView.type);\\n\\t\\tcurrentView.removeElement();\\n\\t\\tcurrentView = t.view = null;\\n\\t}\\n\\n\\n\\t// Destroys the view, including the view object. Then, re-instantiates it and renders it.\\n\\t// Maintains the same scroll state.\\n\\t// TODO: maintain any other user-manipulated state.\\n\\tfunction reinitView() {\\n\\t\\tignoreWindowResize++;\\n\\t\\tfreezeContentHeight();\\n\\n\\t\\tvar viewType = currentView.type;\\n\\t\\tvar scrollState = currentView.queryScroll();\\n\\t\\tclearView();\\n\\t\\tcalcSize();\\n\\t\\trenderView(viewType, scrollState);\\n\\n\\t\\tthawContentHeight();\\n\\t\\tignoreWindowResize--;\\n\\t}\\n\\n\\n\\n\\t// Resizing\\n\\t// -----------------------------------------------------------------------------------\\n\\n\\n\\tt.getSuggestedViewHeight = function() {\\n\\t\\tif (suggestedViewHeight === undefined) {\\n\\t\\t\\tcalcSize();\\n\\t\\t}\\n\\t\\treturn suggestedViewHeight;\\n\\t};\\n\\n\\n\\tt.isHeightAuto = function() {\\n\\t\\treturn t.options.contentHeight === 'auto' || t.options.height === 'auto';\\n\\t};\\n\\n\\n\\tfunction updateSize(shouldRecalc) {\\n\\t\\tif (elementVisible()) {\\n\\n\\t\\t\\tif (shouldRecalc) {\\n\\t\\t\\t\\t_calcSize();\\n\\t\\t\\t}\\n\\n\\t\\t\\tignoreWindowResize++;\\n\\t\\t\\tcurrentView.updateSize(true); // isResize=true. will poll getSuggestedViewHeight() and isHeightAuto()\\n\\t\\t\\tignoreWindowResize--;\\n\\n\\t\\t\\treturn true; // signal success\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction calcSize() {\\n\\t\\tif (elementVisible()) {\\n\\t\\t\\t_calcSize();\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction _calcSize() { // assumes elementVisible\\n\\t\\tvar contentHeightInput = t.options.contentHeight;\\n\\t\\tvar heightInput = t.options.height;\\n\\n\\t\\tif (typeof contentHeightInput === 'number') { // exists and not 'auto'\\n\\t\\t\\tsuggestedViewHeight = contentHeightInput;\\n\\t\\t}\\n\\t\\telse if (typeof contentHeightInput === 'function') { // exists and is a function\\n\\t\\t\\tsuggestedViewHeight = contentHeightInput();\\n\\t\\t}\\n\\t\\telse if (typeof heightInput === 'number') { // exists and not 'auto'\\n\\t\\t\\tsuggestedViewHeight = heightInput - queryToolbarsHeight();\\n\\t\\t}\\n\\t\\telse if (typeof heightInput === 'function') { // exists and is a function\\n\\t\\t\\tsuggestedViewHeight = heightInput() - queryToolbarsHeight();\\n\\t\\t}\\n\\t\\telse if (heightInput === 'parent') { // set to height of parent element\\n\\t\\t\\tsuggestedViewHeight = element.parent().height() - queryToolbarsHeight();\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tsuggestedViewHeight = Math.round(content.width() / Math.max(t.options.aspectRatio, .5));\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction queryToolbarsHeight() {\\n\\t\\treturn toolbarsManager.items.reduce(function(accumulator, toolbar) {\\n\\t\\t\\tvar toolbarHeight = toolbar.el ? toolbar.el.outerHeight(true) : 0; // includes margin\\n\\t\\t\\treturn accumulator + toolbarHeight;\\n\\t\\t}, 0);\\n\\t}\\n\\n\\n\\tfunction windowResize(ev) {\\n\\t\\tif (\\n\\t\\t\\t!ignoreWindowResize &&\\n\\t\\t\\tev.target === window && // so we don't process jqui \\\"resize\\\" events that have bubbled up\\n\\t\\t\\tcurrentView.start // view has already been rendered\\n\\t\\t) {\\n\\t\\t\\tif (updateSize(true)) {\\n\\t\\t\\t\\tcurrentView.publiclyTrigger('windowResize', _element);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\n\\n\\t/* Event Rendering\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\tfunction rerenderEvents() { // API method. destroys old events if previously rendered.\\n\\t\\tif (elementVisible()) {\\n\\t\\t\\tt.reportEventChange(); // will re-trasmit events to the view, causing a rerender\\n\\t\\t}\\n\\t}\\n\\n\\n\\n\\t/* Toolbars\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\tfunction buildToolbars() {\\n\\t\\treturn [\\n\\t\\t\\tnew Toolbar(t, computeHeaderOptions()),\\n\\t\\t\\tnew Toolbar(t, computeFooterOptions())\\n\\t\\t];\\n\\t}\\n\\n\\n\\tfunction computeHeaderOptions() {\\n\\t\\treturn {\\n\\t\\t\\textraClasses: 'fc-header-toolbar',\\n\\t\\t\\tlayout: t.options.header\\n\\t\\t};\\n\\t}\\n\\n\\n\\tfunction computeFooterOptions() {\\n\\t\\treturn {\\n\\t\\t\\textraClasses: 'fc-footer-toolbar',\\n\\t\\t\\tlayout: t.options.footer\\n\\t\\t};\\n\\t}\\n\\n\\n\\t// can be called repeatedly and Header will rerender\\n\\tfunction renderHeader() {\\n\\t\\theader.setToolbarOptions(computeHeaderOptions());\\n\\t\\theader.render();\\n\\t\\tif (header.el) {\\n\\t\\t\\telement.prepend(header.el);\\n\\t\\t}\\n\\t}\\n\\n\\n\\t// can be called repeatedly and Footer will rerender\\n\\tfunction renderFooter() {\\n\\t\\tfooter.setToolbarOptions(computeFooterOptions());\\n\\t\\tfooter.render();\\n\\t\\tif (footer.el) {\\n\\t\\t\\telement.append(footer.el);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tt.setToolbarsTitle = function(title) {\\n\\t\\ttoolbarsManager.proxyCall('updateTitle', title);\\n\\t};\\n\\n\\n\\tfunction updateToolbarsTodayButton() {\\n\\t\\tvar now = t.getNow();\\n\\t\\tif (now >= currentView.intervalStart && now < currentView.intervalEnd) {\\n\\t\\t\\ttoolbarsManager.proxyCall('disableButton', 'today');\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\ttoolbarsManager.proxyCall('enableButton', 'today');\\n\\t\\t}\\n\\t}\\n\\n\\n\\n\\t/* Selection\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\t// this public method receives start/end dates in any format, with any timezone\\n\\tfunction select(zonedStartInput, zonedEndInput) {\\n\\t\\tcurrentView.select(\\n\\t\\t\\tt.buildSelectSpan.apply(t, arguments)\\n\\t\\t);\\n\\t}\\n\\n\\n\\tfunction unselect() { // safe to be called before renderView\\n\\t\\tif (currentView) {\\n\\t\\t\\tcurrentView.unselect();\\n\\t\\t}\\n\\t}\\n\\n\\n\\n\\t/* Date\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\tfunction prev() {\\n\\t\\tdate = currentView.computePrevDate(date);\\n\\t\\trenderView();\\n\\t}\\n\\n\\n\\tfunction next() {\\n\\t\\tdate = currentView.computeNextDate(date);\\n\\t\\trenderView();\\n\\t}\\n\\n\\n\\tfunction prevYear() {\\n\\t\\tdate.add(-1, 'years');\\n\\t\\trenderView();\\n\\t}\\n\\n\\n\\tfunction nextYear() {\\n\\t\\tdate.add(1, 'years');\\n\\t\\trenderView();\\n\\t}\\n\\n\\n\\tfunction today() {\\n\\t\\tdate = t.getNow();\\n\\t\\trenderView();\\n\\t}\\n\\n\\n\\tfunction gotoDate(zonedDateInput) {\\n\\t\\tdate = t.moment(zonedDateInput).stripZone();\\n\\t\\trenderView();\\n\\t}\\n\\n\\n\\tfunction incrementDate(delta) {\\n\\t\\tdate.add(moment.duration(delta));\\n\\t\\trenderView();\\n\\t}\\n\\n\\n\\t// Forces navigation to a view for the given date.\\n\\t// `viewType` can be a specific view name or a generic one like \\\"week\\\" or \\\"day\\\".\\n\\tfunction zoomTo(newDate, viewType) {\\n\\t\\tvar spec;\\n\\n\\t\\tviewType = viewType || 'day'; // day is default zoom\\n\\t\\tspec = t.getViewSpec(viewType) || t.getUnitViewSpec(viewType);\\n\\n\\t\\tdate = newDate.clone();\\n\\t\\trenderView(spec ? spec.type : null);\\n\\t}\\n\\n\\n\\t// for external API\\n\\tfunction getDate() {\\n\\t\\treturn t.applyTimezone(date); // infuse the calendar's timezone\\n\\t}\\n\\n\\n\\n\\t/* Height \\\"Freezing\\\"\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\tt.freezeContentHeight = freezeContentHeight;\\n\\tt.thawContentHeight = thawContentHeight;\\n\\n\\tvar freezeContentHeightDepth = 0;\\n\\n\\n\\tfunction freezeContentHeight() {\\n\\t\\tif (!(freezeContentHeightDepth++)) {\\n\\t\\t\\tcontent.css({\\n\\t\\t\\t\\twidth: '100%',\\n\\t\\t\\t\\theight: content.height(),\\n\\t\\t\\t\\toverflow: 'hidden'\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction thawContentHeight() {\\n\\t\\tif (!(--freezeContentHeightDepth)) {\\n\\t\\t\\tcontent.css({\\n\\t\\t\\t\\twidth: '',\\n\\t\\t\\t\\theight: '',\\n\\t\\t\\t\\toverflow: ''\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\n\\n\\t/* Misc\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\tfunction getCalendar() {\\n\\t\\treturn t;\\n\\t}\\n\\n\\n\\tfunction getView() {\\n\\t\\treturn currentView;\\n\\t}\\n\\n\\n\\tfunction option(name, value) {\\n\\t\\tvar newOptionHash;\\n\\n\\t\\tif (typeof name === 'string') {\\n\\t\\t\\tif (value === undefined) { // getter\\n\\t\\t\\t\\treturn t.options[name];\\n\\t\\t\\t}\\n\\t\\t\\telse { // setter for individual option\\n\\t\\t\\t\\tnewOptionHash = {};\\n\\t\\t\\t\\tnewOptionHash[name] = value;\\n\\t\\t\\t\\tsetOptions(newOptionHash);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse if (typeof name === 'object') { // compound setter with object input\\n\\t\\t\\tsetOptions(name);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction setOptions(newOptionHash) {\\n\\t\\tvar optionCnt = 0;\\n\\t\\tvar optionName;\\n\\n\\t\\tfor (optionName in newOptionHash) {\\n\\t\\t\\tt.dynamicOverrides[optionName] = newOptionHash[optionName];\\n\\t\\t}\\n\\n\\t\\tt.viewSpecCache = {}; // the dynamic override invalidates the options in this cache, so just clear it\\n\\t\\tt.populateOptionsHash(); // this.options needs to be recomputed after the dynamic override\\n\\n\\t\\t// trigger handlers after this.options has been updated\\n\\t\\tfor (optionName in newOptionHash) {\\n\\t\\t\\tt.triggerOptionHandlers(optionName); // recall bindOption/bindOptions\\n\\t\\t\\toptionCnt++;\\n\\t\\t}\\n\\n\\t\\t// special-case handling of single option change.\\n\\t\\t// if only one option change, `optionName` will be its name.\\n\\t\\tif (optionCnt === 1) {\\n\\t\\t\\tif (optionName === 'height' || optionName === 'contentHeight' || optionName === 'aspectRatio') {\\n\\t\\t\\t\\tupdateSize(true); // true = allow recalculation of height\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\telse if (optionName === 'defaultDate') {\\n\\t\\t\\t\\treturn; // can't change date this way. use gotoDate instead\\n\\t\\t\\t}\\n\\t\\t\\telse if (optionName === 'businessHours') {\\n\\t\\t\\t\\tif (currentView) {\\n\\t\\t\\t\\t\\tcurrentView.unrenderBusinessHours();\\n\\t\\t\\t\\t\\tcurrentView.renderBusinessHours();\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\telse if (optionName === 'timezone') {\\n\\t\\t\\t\\tt.rezoneArrayEventSources();\\n\\t\\t\\t\\tt.refetchEvents();\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// catch-all. rerender the header and footer and rebuild/rerender the current view\\n\\t\\trenderHeader();\\n\\t\\trenderFooter();\\n\\t\\tviewsByType = {}; // even non-current views will be affected by this option change. do before rerender\\n\\t\\treinitView();\\n\\t}\\n\\n\\n\\tfunction publiclyTrigger(name, thisObj) {\\n\\t\\tvar args = Array.prototype.slice.call(arguments, 2);\\n\\n\\t\\tthisObj = thisObj || _element;\\n\\t\\tthis.triggerWith(name, thisObj, args); // Emitter's method\\n\\n\\t\\tif (t.options[name]) {\\n\\t\\t\\treturn t.options[name].apply(thisObj, args);\\n\\t\\t}\\n\\t}\\n\\n\\tt.initialize();\\n}\\n\\n;;\\n/*\\nOptions binding/triggering system.\\n*/\\nCalendar.mixin({\\n\\n\\t// A map of option names to arrays of handler objects. Initialized to {} in Calendar.\\n\\t// Format for a handler object:\\n\\t// {\\n\\t//   func // callback function to be called upon change\\n\\t//   names // option names whose values should be given to func\\n\\t// }\\n\\toptionHandlers: null, \\n\\n\\t// Calls handlerFunc immediately, and when the given option has changed.\\n\\t// handlerFunc will be given the option value.\\n\\tbindOption: function(optionName, handlerFunc) {\\n\\t\\tthis.bindOptions([ optionName ], handlerFunc);\\n\\t},\\n\\n\\t// Calls handlerFunc immediately, and when any of the given options change.\\n\\t// handlerFunc will be given each option value as ordered function arguments.\\n\\tbindOptions: function(optionNames, handlerFunc) {\\n\\t\\tvar handlerObj = { func: handlerFunc, names: optionNames };\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < optionNames.length; i++) {\\n\\t\\t\\tthis.registerOptionHandlerObj(optionNames[i], handlerObj);\\n\\t\\t}\\n\\n\\t\\tthis.triggerOptionHandlerObj(handlerObj);\\n\\t},\\n\\n\\t// Puts the given handler object into the internal hash\\n\\tregisterOptionHandlerObj: function(optionName, handlerObj) {\\n\\t\\t(this.optionHandlers[optionName] || (this.optionHandlers[optionName] = []))\\n\\t\\t\\t.push(handlerObj);\\n\\t},\\n\\n\\t// Reports that the given option has changed, and calls all appropriate handlers.\\n\\ttriggerOptionHandlers: function(optionName) {\\n\\t\\tvar handlerObjs = this.optionHandlers[optionName] || [];\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < handlerObjs.length; i++) {\\n\\t\\t\\tthis.triggerOptionHandlerObj(handlerObjs[i]);\\n\\t\\t}\\n\\t},\\n\\n\\t// Calls the callback for a specific handler object, passing in the appropriate arguments.\\n\\ttriggerOptionHandlerObj: function(handlerObj) {\\n\\t\\tvar optionNames = handlerObj.names;\\n\\t\\tvar optionValues = [];\\n\\t\\tvar i;\\n\\n\\t\\tfor (i = 0; i < optionNames.length; i++) {\\n\\t\\t\\toptionValues.push(this.options[optionNames[i]]);\\n\\t\\t}\\n\\n\\t\\thandlerObj.func.apply(this, optionValues); // maintain the Calendar's `this` context\\n\\t}\\n\\n});\\n\\n;;\\n\\nCalendar.defaults = {\\n\\n\\ttitleRangeSeparator: ' \\\\u2013 ', // en dash\\n\\tmonthYearFormat: 'MMMM YYYY', // required for en. other locales rely on datepicker computable option\\n\\n\\tdefaultTimedEventDuration: '02:00:00',\\n\\tdefaultAllDayEventDuration: { days: 1 },\\n\\tforceEventDuration: false,\\n\\tnextDayThreshold: '09:00:00', // 9am\\n\\n\\t// display\\n\\tdefaultView: 'month',\\n\\taspectRatio: 1.35,\\n\\theader: {\\n\\t\\tleft: 'title',\\n\\t\\tcenter: '',\\n\\t\\tright: 'today prev,next'\\n\\t},\\n\\tweekends: true,\\n\\tweekNumbers: false,\\n\\n\\tweekNumberTitle: 'W',\\n\\tweekNumberCalculation: 'local',\\n\\t\\n\\t//editable: false,\\n\\n\\t//nowIndicator: false,\\n\\n\\tscrollTime: '06:00:00',\\n\\t\\n\\t// event ajax\\n\\tlazyFetching: true,\\n\\tstartParam: 'start',\\n\\tendParam: 'end',\\n\\ttimezoneParam: 'timezone',\\n\\n\\ttimezone: false,\\n\\n\\t//allDayDefault: undefined,\\n\\n\\t// locale\\n\\tisRTL: false,\\n\\tbuttonText: {\\n\\t\\tprev: \\\"prev\\\",\\n\\t\\tnext: \\\"next\\\",\\n\\t\\tprevYear: \\\"prev year\\\",\\n\\t\\tnextYear: \\\"next year\\\",\\n\\t\\tyear: 'year', // TODO: locale files need to specify this\\n\\t\\ttoday: 'today',\\n\\t\\tmonth: 'month',\\n\\t\\tweek: 'week',\\n\\t\\tday: 'day'\\n\\t},\\n\\n\\tbuttonIcons: {\\n\\t\\tprev: 'left-single-arrow',\\n\\t\\tnext: 'right-single-arrow',\\n\\t\\tprevYear: 'left-double-arrow',\\n\\t\\tnextYear: 'right-double-arrow'\\n\\t},\\n\\n\\tallDayText: 'all-day',\\n\\t\\n\\t// jquery-ui theming\\n\\ttheme: false,\\n\\tthemeButtonIcons: {\\n\\t\\tprev: 'circle-triangle-w',\\n\\t\\tnext: 'circle-triangle-e',\\n\\t\\tprevYear: 'seek-prev',\\n\\t\\tnextYear: 'seek-next'\\n\\t},\\n\\n\\t//eventResizableFromStart: false,\\n\\tdragOpacity: .75,\\n\\tdragRevertDuration: 500,\\n\\tdragScroll: true,\\n\\t\\n\\t//selectable: false,\\n\\tunselectAuto: true,\\n\\t\\n\\tdropAccept: '*',\\n\\n\\teventOrder: 'title',\\n\\t//eventRenderWait: null,\\n\\n\\teventLimit: false,\\n\\teventLimitText: 'more',\\n\\teventLimitClick: 'popover',\\n\\tdayPopoverFormat: 'LL',\\n\\t\\n\\thandleWindowResize: true,\\n\\twindowResizeDelay: 100, // milliseconds before an updateSize happens\\n\\n\\tlongPressDelay: 1000\\n\\t\\n};\\n\\n\\nCalendar.englishDefaults = { // used by locale.js\\n\\tdayPopoverFormat: 'dddd, MMMM D'\\n};\\n\\n\\nCalendar.rtlDefaults = { // right-to-left defaults\\n\\theader: { // TODO: smarter solution (first/center/last ?)\\n\\t\\tleft: 'next,prev today',\\n\\t\\tcenter: '',\\n\\t\\tright: 'title'\\n\\t},\\n\\tbuttonIcons: {\\n\\t\\tprev: 'right-single-arrow',\\n\\t\\tnext: 'left-single-arrow',\\n\\t\\tprevYear: 'right-double-arrow',\\n\\t\\tnextYear: 'left-double-arrow'\\n\\t},\\n\\tthemeButtonIcons: {\\n\\t\\tprev: 'circle-triangle-e',\\n\\t\\tnext: 'circle-triangle-w',\\n\\t\\tnextYear: 'seek-prev',\\n\\t\\tprevYear: 'seek-next'\\n\\t}\\n};\\n\\n;;\\n\\nvar localeOptionHash = FC.locales = {}; // initialize and expose\\n\\n\\n// TODO: document the structure and ordering of a FullCalendar locale file\\n\\n\\n// Initialize jQuery UI datepicker translations while using some of the translations\\n// Will set this as the default locales for datepicker.\\nFC.datepickerLocale = function(localeCode, dpLocaleCode, dpOptions) {\\n\\n\\t// get the FullCalendar internal option hash for this locale. create if necessary\\n\\tvar fcOptions = localeOptionHash[localeCode] || (localeOptionHash[localeCode] = {});\\n\\n\\t// transfer some simple options from datepicker to fc\\n\\tfcOptions.isRTL = dpOptions.isRTL;\\n\\tfcOptions.weekNumberTitle = dpOptions.weekHeader;\\n\\n\\t// compute some more complex options from datepicker\\n\\t$.each(dpComputableOptions, function(name, func) {\\n\\t\\tfcOptions[name] = func(dpOptions);\\n\\t});\\n\\n\\t// is jQuery UI Datepicker is on the page?\\n\\tif ($.datepicker) {\\n\\n\\t\\t// Register the locale data.\\n\\t\\t// FullCalendar and MomentJS use locale codes like \\\"pt-br\\\" but Datepicker\\n\\t\\t// does it like \\\"pt-BR\\\" or if it doesn't have the locale, maybe just \\\"pt\\\".\\n\\t\\t// Make an alias so the locale can be referenced either way.\\n\\t\\t$.datepicker.regional[dpLocaleCode] =\\n\\t\\t\\t$.datepicker.regional[localeCode] = // alias\\n\\t\\t\\t\\tdpOptions;\\n\\n\\t\\t// Alias 'en' to the default locale data. Do this every time.\\n\\t\\t$.datepicker.regional.en = $.datepicker.regional[''];\\n\\n\\t\\t// Set as Datepicker's global defaults.\\n\\t\\t$.datepicker.setDefaults(dpOptions);\\n\\t}\\n};\\n\\n\\n// Sets FullCalendar-specific translations. Will set the locales as the global default.\\nFC.locale = function(localeCode, newFcOptions) {\\n\\tvar fcOptions;\\n\\tvar momOptions;\\n\\n\\t// get the FullCalendar internal option hash for this locale. create if necessary\\n\\tfcOptions = localeOptionHash[localeCode] || (localeOptionHash[localeCode] = {});\\n\\n\\t// provided new options for this locales? merge them in\\n\\tif (newFcOptions) {\\n\\t\\tfcOptions = localeOptionHash[localeCode] = mergeOptions([ fcOptions, newFcOptions ]);\\n\\t}\\n\\n\\t// compute locale options that weren't defined.\\n\\t// always do this. newFcOptions can be undefined when initializing from i18n file,\\n\\t// so no way to tell if this is an initialization or a default-setting.\\n\\tmomOptions = getMomentLocaleData(localeCode); // will fall back to en\\n\\t$.each(momComputableOptions, function(name, func) {\\n\\t\\tif (fcOptions[name] == null) {\\n\\t\\t\\tfcOptions[name] = func(momOptions, fcOptions);\\n\\t\\t}\\n\\t});\\n\\n\\t// set it as the default locale for FullCalendar\\n\\tCalendar.defaults.locale = localeCode;\\n};\\n\\n\\n// NOTE: can't guarantee any of these computations will run because not every locale has datepicker\\n// configs, so make sure there are English fallbacks for these in the defaults file.\\nvar dpComputableOptions = {\\n\\n\\tbuttonText: function(dpOptions) {\\n\\t\\treturn {\\n\\t\\t\\t// the translations sometimes wrongly contain HTML entities\\n\\t\\t\\tprev: stripHtmlEntities(dpOptions.prevText),\\n\\t\\t\\tnext: stripHtmlEntities(dpOptions.nextText),\\n\\t\\t\\ttoday: stripHtmlEntities(dpOptions.currentText)\\n\\t\\t};\\n\\t},\\n\\n\\t// Produces format strings like \\\"MMMM YYYY\\\" -> \\\"September 2014\\\"\\n\\tmonthYearFormat: function(dpOptions) {\\n\\t\\treturn dpOptions.showMonthAfterYear ?\\n\\t\\t\\t'YYYY[' + dpOptions.yearSuffix + '] MMMM' :\\n\\t\\t\\t'MMMM YYYY[' + dpOptions.yearSuffix + ']';\\n\\t}\\n\\n};\\n\\nvar momComputableOptions = {\\n\\n\\t// Produces format strings like \\\"ddd M/D\\\" -> \\\"Fri 9/15\\\"\\n\\tdayOfMonthFormat: function(momOptions, fcOptions) {\\n\\t\\tvar format = momOptions.longDateFormat('l'); // for the format like \\\"M/D/YYYY\\\"\\n\\n\\t\\t// strip the year off the edge, as well as other misc non-whitespace chars\\n\\t\\tformat = format.replace(/^Y+[^\\\\w\\\\s]*|[^\\\\w\\\\s]*Y+$/g, '');\\n\\n\\t\\tif (fcOptions.isRTL) {\\n\\t\\t\\tformat += ' ddd'; // for RTL, add day-of-week to end\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tformat = 'ddd ' + format; // for LTR, add day-of-week to beginning\\n\\t\\t}\\n\\t\\treturn format;\\n\\t},\\n\\n\\t// Produces format strings like \\\"h:mma\\\" -> \\\"6:00pm\\\"\\n\\tmediumTimeFormat: function(momOptions) { // can't be called `timeFormat` because collides with option\\n\\t\\treturn momOptions.longDateFormat('LT')\\n\\t\\t\\t.replace(/\\\\s*a$/i, 'a'); // convert AM/PM/am/pm to lowercase. remove any spaces beforehand\\n\\t},\\n\\n\\t// Produces format strings like \\\"h(:mm)a\\\" -> \\\"6pm\\\" / \\\"6:30pm\\\"\\n\\tsmallTimeFormat: function(momOptions) {\\n\\t\\treturn momOptions.longDateFormat('LT')\\n\\t\\t\\t.replace(':mm', '(:mm)')\\n\\t\\t\\t.replace(/(\\\\Wmm)$/, '($1)') // like above, but for foreign locales\\n\\t\\t\\t.replace(/\\\\s*a$/i, 'a'); // convert AM/PM/am/pm to lowercase. remove any spaces beforehand\\n\\t},\\n\\n\\t// Produces format strings like \\\"h(:mm)t\\\" -> \\\"6p\\\" / \\\"6:30p\\\"\\n\\textraSmallTimeFormat: function(momOptions) {\\n\\t\\treturn momOptions.longDateFormat('LT')\\n\\t\\t\\t.replace(':mm', '(:mm)')\\n\\t\\t\\t.replace(/(\\\\Wmm)$/, '($1)') // like above, but for foreign locales\\n\\t\\t\\t.replace(/\\\\s*a$/i, 't'); // convert to AM/PM/am/pm to lowercase one-letter. remove any spaces beforehand\\n\\t},\\n\\n\\t// Produces format strings like \\\"ha\\\" / \\\"H\\\" -> \\\"6pm\\\" / \\\"18\\\"\\n\\thourFormat: function(momOptions) {\\n\\t\\treturn momOptions.longDateFormat('LT')\\n\\t\\t\\t.replace(':mm', '')\\n\\t\\t\\t.replace(/(\\\\Wmm)$/, '') // like above, but for foreign locales\\n\\t\\t\\t.replace(/\\\\s*a$/i, 'a'); // convert AM/PM/am/pm to lowercase. remove any spaces beforehand\\n\\t},\\n\\n\\t// Produces format strings like \\\"h:mm\\\" -> \\\"6:30\\\" (with no AM/PM)\\n\\tnoMeridiemTimeFormat: function(momOptions) {\\n\\t\\treturn momOptions.longDateFormat('LT')\\n\\t\\t\\t.replace(/\\\\s*a$/i, ''); // remove trailing AM/PM\\n\\t}\\n\\n};\\n\\n\\n// options that should be computed off live calendar options (considers override options)\\n// TODO: best place for this? related to locale?\\n// TODO: flipping text based on isRTL is a bad idea because the CSS `direction` might want to handle it\\nvar instanceComputableOptions = {\\n\\n\\t// Produces format strings for results like \\\"Mo 16\\\"\\n\\tsmallDayDateFormat: function(options) {\\n\\t\\treturn options.isRTL ?\\n\\t\\t\\t'D dd' :\\n\\t\\t\\t'dd D';\\n\\t},\\n\\n\\t// Produces format strings for results like \\\"Wk 5\\\"\\n\\tweekFormat: function(options) {\\n\\t\\treturn options.isRTL ?\\n\\t\\t\\t'w[ ' + options.weekNumberTitle + ']' :\\n\\t\\t\\t'[' + options.weekNumberTitle + ' ]w';\\n\\t},\\n\\n\\t// Produces format strings for results like \\\"Wk5\\\"\\n\\tsmallWeekFormat: function(options) {\\n\\t\\treturn options.isRTL ?\\n\\t\\t\\t'w[' + options.weekNumberTitle + ']' :\\n\\t\\t\\t'[' + options.weekNumberTitle + ']w';\\n\\t}\\n\\n};\\n\\nfunction populateInstanceComputableOptions(options) {\\n\\t$.each(instanceComputableOptions, function(name, func) {\\n\\t\\tif (options[name] == null) {\\n\\t\\t\\toptions[name] = func(options);\\n\\t\\t}\\n\\t});\\n}\\n\\n\\n// Returns moment's internal locale data. If doesn't exist, returns English.\\nfunction getMomentLocaleData(localeCode) {\\n\\treturn moment.localeData(localeCode) || moment.localeData('en');\\n}\\n\\n\\n// Initialize English by forcing computation of moment-derived options.\\n// Also, sets it as the default.\\nFC.locale('en', Calendar.englishDefaults);\\n\\n;;\\n\\nFC.sourceNormalizers = [];\\nFC.sourceFetchers = [];\\n\\nvar ajaxDefaults = {\\n\\tdataType: 'json',\\n\\tcache: false\\n};\\n\\nvar eventGUID = 1;\\n\\n\\nfunction EventManager() { // assumed to be a calendar\\n\\tvar t = this;\\n\\n\\n\\t// exports\\n\\tt.requestEvents = requestEvents;\\n\\tt.reportEventChange = reportEventChange;\\n\\tt.isFetchNeeded = isFetchNeeded;\\n\\tt.fetchEvents = fetchEvents;\\n\\tt.fetchEventSources = fetchEventSources;\\n\\tt.refetchEvents = refetchEvents;\\n\\tt.refetchEventSources = refetchEventSources;\\n\\tt.getEventSources = getEventSources;\\n\\tt.getEventSourceById = getEventSourceById;\\n\\tt.addEventSource = addEventSource;\\n\\tt.removeEventSource = removeEventSource;\\n\\tt.removeEventSources = removeEventSources;\\n\\tt.updateEvent = updateEvent;\\n\\tt.updateEvents = updateEvents;\\n\\tt.renderEvent = renderEvent;\\n\\tt.renderEvents = renderEvents;\\n\\tt.removeEvents = removeEvents;\\n\\tt.clientEvents = clientEvents;\\n\\tt.mutateEvent = mutateEvent;\\n\\tt.normalizeEventDates = normalizeEventDates;\\n\\tt.normalizeEventTimes = normalizeEventTimes;\\n\\n\\n\\t// locals\\n\\tvar stickySource = { events: [] };\\n\\tvar sources = [ stickySource ];\\n\\tvar rangeStart, rangeEnd;\\n\\tvar pendingSourceCnt = 0; // outstanding fetch requests, max one per source\\n\\tvar cache = []; // holds events that have already been expanded\\n\\tvar prunedCache; // like cache, but only events that intersect with rangeStart/rangeEnd\\n\\n\\n\\t$.each(\\n\\t\\t(t.options.events ? [ t.options.events ] : []).concat(t.options.eventSources || []),\\n\\t\\tfunction(i, sourceInput) {\\n\\t\\t\\tvar source = buildEventSource(sourceInput);\\n\\t\\t\\tif (source) {\\n\\t\\t\\t\\tsources.push(source);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t);\\n\\n\\n\\n\\tfunction requestEvents(start, end) {\\n\\t\\tif (!t.options.lazyFetching || isFetchNeeded(start, end)) {\\n\\t\\t\\treturn fetchEvents(start, end);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn Promise.resolve(prunedCache);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction reportEventChange() {\\n\\t\\tprunedCache = filterEventsWithinRange(cache);\\n\\t\\tt.trigger('eventsReset', prunedCache);\\n\\t}\\n\\n\\n\\tfunction filterEventsWithinRange(events) {\\n\\t\\tvar filteredEvents = [];\\n\\t\\tvar i, event;\\n\\n\\t\\tfor (i = 0; i < events.length; i++) {\\n\\t\\t\\tevent = events[i];\\n\\n\\t\\t\\tif (\\n\\t\\t\\t\\tevent.start.clone().stripZone() < rangeEnd &&\\n\\t\\t\\t\\tt.getEventEnd(event).stripZone() > rangeStart\\n\\t\\t\\t) {\\n\\t\\t\\t\\tfilteredEvents.push(event);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn filteredEvents;\\n\\t}\\n\\n\\n\\tt.getEventCache = function() {\\n\\t\\treturn cache;\\n\\t};\\n\\n\\n\\tt.getPrunedEventCache = function() {\\n\\t\\treturn prunedCache;\\n\\t};\\n\\n\\n\\n\\t/* Fetching\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\t// start and end are assumed to be unzoned\\n\\tfunction isFetchNeeded(start, end) {\\n\\t\\treturn !rangeStart || // nothing has been fetched yet?\\n\\t\\t\\tstart < rangeStart || end > rangeEnd; // is part of the new range outside of the old range?\\n\\t}\\n\\n\\n\\tfunction fetchEvents(start, end) {\\n\\t\\trangeStart = start;\\n\\t\\trangeEnd = end;\\n\\t\\treturn refetchEvents();\\n\\t}\\n\\n\\n\\t// poorly named. fetches all sources with current `rangeStart` and `rangeEnd`.\\n\\tfunction refetchEvents() {\\n\\t\\treturn fetchEventSources(sources, 'reset');\\n\\t}\\n\\n\\n\\t// poorly named. fetches a subset of event sources.\\n\\tfunction refetchEventSources(matchInputs) {\\n\\t\\treturn fetchEventSources(getEventSourcesByMatchArray(matchInputs));\\n\\t}\\n\\n\\n\\t// expects an array of event source objects (the originals, not copies)\\n\\t// `specialFetchType` is an optimization parameter that affects purging of the event cache.\\n\\tfunction fetchEventSources(specificSources, specialFetchType) {\\n\\t\\tvar i, source;\\n\\n\\t\\tif (specialFetchType === 'reset') {\\n\\t\\t\\tcache = [];\\n\\t\\t}\\n\\t\\telse if (specialFetchType !== 'add') {\\n\\t\\t\\tcache = excludeEventsBySources(cache, specificSources);\\n\\t\\t}\\n\\n\\t\\tfor (i = 0; i < specificSources.length; i++) {\\n\\t\\t\\tsource = specificSources[i];\\n\\n\\t\\t\\t// already-pending sources have already been accounted for in pendingSourceCnt\\n\\t\\t\\tif (source._status !== 'pending') {\\n\\t\\t\\t\\tpendingSourceCnt++;\\n\\t\\t\\t}\\n\\n\\t\\t\\tsource._fetchId = (source._fetchId || 0) + 1;\\n\\t\\t\\tsource._status = 'pending';\\n\\t\\t}\\n\\n\\t\\tfor (i = 0; i < specificSources.length; i++) {\\n\\t\\t\\tsource = specificSources[i];\\n\\t\\t\\ttryFetchEventSource(source, source._fetchId);\\n\\t\\t}\\n\\n\\t\\tif (pendingSourceCnt) {\\n\\t\\t\\treturn new Promise(function(resolve) {\\n\\t\\t\\t\\tt.one('eventsReceived', resolve); // will send prunedCache\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\telse { // executed all synchronously, or no sources at all\\n\\t\\t\\treturn Promise.resolve(prunedCache);\\n\\t\\t}\\n\\t}\\n\\n\\n\\t// fetches an event source and processes its result ONLY if it is still the current fetch.\\n\\t// caller is responsible for incrementing pendingSourceCnt first.\\n\\tfunction tryFetchEventSource(source, fetchId) {\\n\\t\\t_fetchEventSource(source, function(eventInputs) {\\n\\t\\t\\tvar isArraySource = $.isArray(source.events);\\n\\t\\t\\tvar i, eventInput;\\n\\t\\t\\tvar abstractEvent;\\n\\n\\t\\t\\tif (\\n\\t\\t\\t\\t// is this the source's most recent fetch?\\n\\t\\t\\t\\t// if not, rely on an upcoming fetch of this source to decrement pendingSourceCnt\\n\\t\\t\\t\\tfetchId === source._fetchId &&\\n\\t\\t\\t\\t// event source no longer valid?\\n\\t\\t\\t\\tsource._status !== 'rejected'\\n\\t\\t\\t) {\\n\\t\\t\\t\\tsource._status = 'resolved';\\n\\n\\t\\t\\t\\tif (eventInputs) {\\n\\t\\t\\t\\t\\tfor (i = 0; i < eventInputs.length; i++) {\\n\\t\\t\\t\\t\\t\\teventInput = eventInputs[i];\\n\\n\\t\\t\\t\\t\\t\\tif (isArraySource) { // array sources have already been convert to Event Objects\\n\\t\\t\\t\\t\\t\\t\\tabstractEvent = eventInput;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\t\\tabstractEvent = buildEventFromInput(eventInput, source);\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif (abstractEvent) { // not false (an invalid event)\\n\\t\\t\\t\\t\\t\\t\\tcache.push.apply( // append\\n\\t\\t\\t\\t\\t\\t\\t\\tcache,\\n\\t\\t\\t\\t\\t\\t\\t\\texpandEvent(abstractEvent) // add individual expanded events to the cache\\n\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tdecrementPendingSourceCnt();\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\n\\n\\tfunction rejectEventSource(source) {\\n\\t\\tvar wasPending = source._status === 'pending';\\n\\n\\t\\tsource._status = 'rejected';\\n\\n\\t\\tif (wasPending) {\\n\\t\\t\\tdecrementPendingSourceCnt();\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction decrementPendingSourceCnt() {\\n\\t\\tpendingSourceCnt--;\\n\\t\\tif (!pendingSourceCnt) {\\n\\t\\t\\treportEventChange(cache); // updates prunedCache\\n\\t\\t\\tt.trigger('eventsReceived', prunedCache);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction _fetchEventSource(source, callback) {\\n\\t\\tvar i;\\n\\t\\tvar fetchers = FC.sourceFetchers;\\n\\t\\tvar res;\\n\\n\\t\\tfor (i=0; i<fetchers.length; i++) {\\n\\t\\t\\tres = fetchers[i].call(\\n\\t\\t\\t\\tt, // this, the Calendar object\\n\\t\\t\\t\\tsource,\\n\\t\\t\\t\\trangeStart.clone(),\\n\\t\\t\\t\\trangeEnd.clone(),\\n\\t\\t\\t\\tt.options.timezone,\\n\\t\\t\\t\\tcallback\\n\\t\\t\\t);\\n\\n\\t\\t\\tif (res === true) {\\n\\t\\t\\t\\t// the fetcher is in charge. made its own async request\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\telse if (typeof res == 'object') {\\n\\t\\t\\t\\t// the fetcher returned a new source. process it\\n\\t\\t\\t\\t_fetchEventSource(res, callback);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tvar events = source.events;\\n\\t\\tif (events) {\\n\\t\\t\\tif ($.isFunction(events)) {\\n\\t\\t\\t\\tt.pushLoading();\\n\\t\\t\\t\\tevents.call(\\n\\t\\t\\t\\t\\tt, // this, the Calendar object\\n\\t\\t\\t\\t\\trangeStart.clone(),\\n\\t\\t\\t\\t\\trangeEnd.clone(),\\n\\t\\t\\t\\t\\tt.options.timezone,\\n\\t\\t\\t\\t\\tfunction(events) {\\n\\t\\t\\t\\t\\t\\tcallback(events);\\n\\t\\t\\t\\t\\t\\tt.popLoading();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t\\telse if ($.isArray(events)) {\\n\\t\\t\\t\\tcallback(events);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tcallback();\\n\\t\\t\\t}\\n\\t\\t}else{\\n\\t\\t\\tvar url = source.url;\\n\\t\\t\\tif (url) {\\n\\t\\t\\t\\tvar success = source.success;\\n\\t\\t\\t\\tvar error = source.error;\\n\\t\\t\\t\\tvar complete = source.complete;\\n\\n\\t\\t\\t\\t// retrieve any outbound GET/POST $.ajax data from the options\\n\\t\\t\\t\\tvar customData;\\n\\t\\t\\t\\tif ($.isFunction(source.data)) {\\n\\t\\t\\t\\t\\t// supplied as a function that returns a key/value object\\n\\t\\t\\t\\t\\tcustomData = source.data();\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t// supplied as a straight key/value object\\n\\t\\t\\t\\t\\tcustomData = source.data;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// use a copy of the custom data so we can modify the parameters\\n\\t\\t\\t\\t// and not affect the passed-in object.\\n\\t\\t\\t\\tvar data = $.extend({}, customData || {});\\n\\n\\t\\t\\t\\tvar startParam = firstDefined(source.startParam, t.options.startParam);\\n\\t\\t\\t\\tvar endParam = firstDefined(source.endParam, t.options.endParam);\\n\\t\\t\\t\\tvar timezoneParam = firstDefined(source.timezoneParam, t.options.timezoneParam);\\n\\n\\t\\t\\t\\tif (startParam) {\\n\\t\\t\\t\\t\\tdata[startParam] = rangeStart.format();\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (endParam) {\\n\\t\\t\\t\\t\\tdata[endParam] = rangeEnd.format();\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (t.options.timezone && t.options.timezone != 'local') {\\n\\t\\t\\t\\t\\tdata[timezoneParam] = t.options.timezone;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tt.pushLoading();\\n\\t\\t\\t\\t$.ajax($.extend({}, ajaxDefaults, source, {\\n\\t\\t\\t\\t\\tdata: data,\\n\\t\\t\\t\\t\\tsuccess: function(events) {\\n\\t\\t\\t\\t\\t\\tevents = events || [];\\n\\t\\t\\t\\t\\t\\tvar res = applyAll(success, this, arguments);\\n\\t\\t\\t\\t\\t\\tif ($.isArray(res)) {\\n\\t\\t\\t\\t\\t\\t\\tevents = res;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tcallback(events);\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\terror: function() {\\n\\t\\t\\t\\t\\t\\tapplyAll(error, this, arguments);\\n\\t\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\tcomplete: function() {\\n\\t\\t\\t\\t\\t\\tapplyAll(complete, this, arguments);\\n\\t\\t\\t\\t\\t\\tt.popLoading();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}));\\n\\t\\t\\t}else{\\n\\t\\t\\t\\tcallback();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\n\\n\\t/* Sources\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\tfunction addEventSource(sourceInput) {\\n\\t\\tvar source = buildEventSource(sourceInput);\\n\\t\\tif (source) {\\n\\t\\t\\tsources.push(source);\\n\\t\\t\\tfetchEventSources([ source ], 'add'); // will eventually call reportEventChange\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction buildEventSource(sourceInput) { // will return undefined if invalid source\\n\\t\\tvar normalizers = FC.sourceNormalizers;\\n\\t\\tvar source;\\n\\t\\tvar i;\\n\\n\\t\\tif ($.isFunction(sourceInput) || $.isArray(sourceInput)) {\\n\\t\\t\\tsource = { events: sourceInput };\\n\\t\\t}\\n\\t\\telse if (typeof sourceInput === 'string') {\\n\\t\\t\\tsource = { url: sourceInput };\\n\\t\\t}\\n\\t\\telse if (typeof sourceInput === 'object') {\\n\\t\\t\\tsource = $.extend({}, sourceInput); // shallow copy\\n\\t\\t}\\n\\n\\t\\tif (source) {\\n\\n\\t\\t\\t// TODO: repeat code, same code for event classNames\\n\\t\\t\\tif (source.className) {\\n\\t\\t\\t\\tif (typeof source.className === 'string') {\\n\\t\\t\\t\\t\\tsource.className = source.className.split(/\\\\s+/);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t// otherwise, assumed to be an array\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tsource.className = [];\\n\\t\\t\\t}\\n\\n\\t\\t\\t// for array sources, we convert to standard Event Objects up front\\n\\t\\t\\tif ($.isArray(source.events)) {\\n\\t\\t\\t\\tsource.origArray = source.events; // for removeEventSource\\n\\t\\t\\t\\tsource.events = $.map(source.events, function(eventInput) {\\n\\t\\t\\t\\t\\treturn buildEventFromInput(eventInput, source);\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor (i=0; i<normalizers.length; i++) {\\n\\t\\t\\t\\tnormalizers[i].call(t, source);\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn source;\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction removeEventSource(matchInput) {\\n\\t\\tremoveSpecificEventSources(\\n\\t\\t\\tgetEventSourcesByMatch(matchInput)\\n\\t\\t);\\n\\t}\\n\\n\\n\\t// if called with no arguments, removes all.\\n\\tfunction removeEventSources(matchInputs) {\\n\\t\\tif (matchInputs == null) {\\n\\t\\t\\tremoveSpecificEventSources(sources, true); // isAll=true\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tremoveSpecificEventSources(\\n\\t\\t\\t\\tgetEventSourcesByMatchArray(matchInputs)\\n\\t\\t\\t);\\n\\t\\t}\\n\\t}\\n\\n\\n\\tfunction removeSpecificEventSources(targetSources, isAll) {\\n\\t\\tvar i;\\n\\n\\t\\t// cancel pending requests\\n\\t\\tfor (i = 0; i < targetSources.length; i++) {\\n\\t\\t\\trejectEventSource(targetSources[i]);\\n\\t\\t}\\n\\n\\t\\tif (isAll) { // an optimization\\n\\t\\t\\tsources = [];\\n\\t\\t\\tcache = [];\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\t// remove from persisted source list\\n\\t\\t\\tsources = $.grep(sources, function(source) {\\n\\t\\t\\t\\tfor (i = 0; i < targetSources.length; i++) {\\n\\t\\t\\t\\t\\tif (source === targetSources[i]) {\\n\\t\\t\\t\\t\\t\\treturn false; // exclude\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn true; // include\\n\\t\\t\\t});\\n\\n\\t\\t\\tcache = excludeEventsBySources(cache, targetSources);\\n\\t\\t}\\n\\n\\t\\treportEventChange();\\n\\t}\\n\\n\\n\\tfunction getEventSources() {\\n\\t\\treturn sources.slice(1); // returns a shallow copy of sources with stickySource removed\\n\\t}\\n\\n\\n\\tfunction getEventSourceById(id) {\\n\\t\\treturn $.grep(sources, function(source) {\\n\\t\\t\\treturn source.id && source.id === id;\\n\\t\\t})[0];\\n\\t}\\n\\n\\n\\t// like getEventSourcesByMatch, but accepts multple match criteria (like multiple IDs)\\n\\tfunction getEventSourcesByMatchArray(matchInputs) {\\n\\n\\t\\t// coerce into an array\\n\\t\\tif (!matchInputs) {\\n\\t\\t\\tmatchInputs = [];\\n\\t\\t}\\n\\t\\telse if (!$.isArray(matchInputs)) {\\n\\t\\t\\tmatchInputs = [ matchInputs ];\\n\\t\\t}\\n\\n\\t\\tvar matchingSources = [];\\n\\t\\tvar i;\\n\\n\\t\\t// resolve raw inputs to real event source objects\\n\\t\\tfor (i = 0; i < matchInputs.length; i++) {\\n\\t\\t\\tmatchingSources.push.apply( // append\\n\\t\\t\\t\\tmatchingSources,\\n\\t\\t\\t\\tgetEventSourcesByMatch(matchInputs[i])\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\treturn matchingSources;\\n\\t}\\n\\n\\n\\t// matchInput can either by a real event source object, an ID, or the function/URL for the source.\\n\\t// returns an array of matching source objects.\\n\\tfunction getEventSourcesByMatch(matchInput) {\\n\\t\\tvar i, source;\\n\\n\\t\\t// given an proper event source object\\n\\t\\tfor (i = 0; i < sources.length; i++) {\\n\\t\\t\\tsource = sources[i];\\n\\t\\t\\tif (source === matchInput) {\\n\\t\\t\\t\\treturn [ source ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// an ID match\\n\\t\\tsource = getEventSourceById(matchInput);\\n\\t\\tif (source) {\\n\\t\\t\\treturn [ source ];\\n\\t\\t}\\n\\n\\t\\treturn $.grep(sources, function(source) {\\n\\t\\t\\treturn isSourcesEquivalent(matchInput, source);\\n\\t\\t});\\n\\t}\\n\\n\\n\\tfunction isSourcesEquivalent(source1, source2) {\\n\\t\\treturn source1 && source2 && getSourcePrimitive(source1) == getSourcePrimitive(source2);\\n\\t}\\n\\n\\n\\tfunction getSourcePrimitive(source) {\\n\\t\\treturn (\\n\\t\\t\\t(typeof source === 'object') ? // a normalized event source?\\n\\t\\t\\t\\t(source.origArray || source.googleCalendarId || source.url || source.events) : // get the primitive\\n\\t\\t\\t\\tnull\\n\\t\\t) ||\\n\\t\\tsource; // the given argument *is* the primitive\\n\\t}\\n\\n\\n\\t// util\\n\\t// returns a filtered array without events that are part of any of the given sources\\n\\tfunction excludeEventsBySources(specificEvents, specificSources) {\\n\\t\\treturn $.grep(specificEvents, function(event) {\\n\\t\\t\\tfor (var i = 0; i < specificSources.length; i++) {\\n\\t\\t\\t\\tif (event.source === specificSources[i]) {\\n\\t\\t\\t\\t\\treturn false; // exclude\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn true; // keep\\n\\t\\t});\\n\\t}\\n\\n\\n\\n\\t/* Manipulation\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\t// Only ever called from the externally-facing API\\n\\tfunction updateEvent(event) {\\n\\t\\tupdateEvents([ event ]);\\n\\t}\\n\\n\\n\\t// Only ever called from the externally-facing API\\n\\tfunction updateEvents(events) {\\n\\t\\tvar i, event;\\n\\n\\t\\tfor (i = 0; i < events.length; i++) {\\n\\t\\t\\tevent = events[i];\\n\\n\\t\\t\\t// massage start/end values, even if date string values\\n\\t\\t\\tevent.start = t.moment(event.start);\\n\\t\\t\\tif (event.end) {\\n\\t\\t\\t\\tevent.end = t.moment(event.end);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tevent.end = null;\\n\\t\\t\\t}\\n\\n\\t\\t\\tmutateEvent(event, getMiscEventProps(event)); // will handle start/end/allDay normalization\\n\\t\\t}\\n\\n\\t\\treportEventChange(); // reports event modifications (so we can redraw)\\n\\t}\\n\\n\\n\\t// Returns a hash of misc event properties that should be copied over to related events.\\n\\tfunction getMiscEventProps(event) {\\n\\t\\tvar props = {};\\n\\n\\t\\t$.each(event, function(name, val) {\\n\\t\\t\\tif (isMiscEventPropName(name)) {\\n\\t\\t\\t\\tif (val !== undefined && isAtomic(val)) { // a defined non-object\\n\\t\\t\\t\\t\\tprops[name] = val;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\treturn props;\\n\\t}\\n\\n\\t// non-date-related, non-id-related, non-secret\\n\\tfunction isMiscEventPropName(name) {\\n\\t\\treturn !/^_|^(id|allDay|start|end)$/.test(name);\\n\\t}\\n\\n\\n\\t// returns the expanded events that were created\\n\\tfunction renderEvent(eventInput, stick) {\\n\\t\\treturn renderEvents([ eventInput ], stick);\\n\\t}\\n\\n\\n\\t// returns the expanded events that were created\\n\\tfunction renderEvents(eventInputs, stick) {\\n\\t\\tvar renderedEvents = [];\\n\\t\\tvar renderableEvents;\\n\\t\\tvar abstractEvent;\\n\\t\\tvar i, j, event;\\n\\n\\t\\tfor (i = 0; i < eventInputs.length; i++) {\\n\\t\\t\\tabstractEvent = buildEventFromInput(eventInputs[i]);\\n\\n\\t\\t\\tif (abstractEvent) { // not false (a valid input)\\n\\t\\t\\t\\trenderableEvents = expandEvent(abstractEvent);\\n\\n\\t\\t\\t\\tfor (j = 0; j < renderableEvents.length; j++) {\\n\\t\\t\\t\\t\\tevent = renderableEvents[j];\\n\\n\\t\\t\\t\\t\\tif (!event.source) {\\n\\t\\t\\t\\t\\t\\tif (stick) {\\n\\t\\t\\t\\t\\t\\t\\tstickySource.events.push(event);\\n\\t\\t\\t\\t\\t\\t\\tevent.source = stickySource;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tcache.push(event);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\trenderedEvents = renderedEvents.concat(renderableEvents);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (renderedEvents.length) { // any new events rendered?\\n\\t\\t\\treportEventChange();\\n\\t\\t}\\n\\n\\t\\treturn renderedEvents;\\n\\t}\\n\\n\\n\\tfunction removeEvents(filter) {\\n\\t\\tvar eventID;\\n\\t\\tvar i;\\n\\n\\t\\tif (filter == null) { // null or undefined. remove all events\\n\\t\\t\\tfilter = function() { return true; }; // will always match\\n\\t\\t}\\n\\t\\telse if (!$.isFunction(filter)) { // an event ID\\n\\t\\t\\teventID = filter + '';\\n\\t\\t\\tfilter = function(event) {\\n\\t\\t\\t\\treturn event._id == eventID;\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// Purge event(s) from our local cache\\n\\t\\tcache = $.grep(cache, filter, true); // inverse=true\\n\\n\\t\\t// Remove events from array sources.\\n\\t\\t// This works because they have been converted to official Event Objects up front.\\n\\t\\t// (and as a result, event._id has been calculated).\\n\\t\\tfor (i=0; i<sources.length; i++) {\\n\\t\\t\\tif ($.isArray(sources[i].events)) {\\n\\t\\t\\t\\tsources[i].events = $.grep(sources[i].events, filter, true);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treportEventChange();\\n\\t}\\n\\n\\n\\tfunction clientEvents(filter) {\\n\\t\\tif ($.isFunction(filter)) {\\n\\t\\t\\treturn $.grep(cache, filter);\\n\\t\\t}\\n\\t\\telse if (filter != null) { // not null, not undefined. an event ID\\n\\t\\t\\tfilter += '';\\n\\t\\t\\treturn $.grep(cache, function(e) {\\n\\t\\t\\t\\treturn e._id == filter;\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\treturn cache; // else, return all\\n\\t}\\n\\n\\n\\t// Makes sure all array event sources have their internal event objects\\n\\t// converted over to the Calendar's current timezone.\\n\\tt.rezoneArrayEventSources = function() {\\n\\t\\tvar i;\\n\\t\\tvar events;\\n\\t\\tvar j;\\n\\n\\t\\tfor (i = 0; i < sources.length; i++) {\\n\\t\\t\\tevents = sources[i].events;\\n\\t\\t\\tif ($.isArray(events)) {\\n\\n\\t\\t\\t\\tfor (j = 0; j < events.length; j++) {\\n\\t\\t\\t\\t\\trezoneEventDates(events[j]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\tfunction rezoneEventDates(event) {\\n\\t\\tevent.start = t.moment(event.start);\\n\\t\\tif (event.end) {\\n\\t\\t\\tevent.end = t.moment(event.end);\\n\\t\\t}\\n\\t\\tbackupEventDates(event);\\n\\t}\\n\\n\\n\\t/* Event Normalization\\n\\t-----------------------------------------------------------------------------*/\\n\\n\\n\\t// Given a raw object with key/value properties, returns an \\\"abstract\\\" Event object.\\n\\t// An \\\"abstract\\\" event is an event that, if recurring, will not have been expanded yet.\\n\\t// Will return `false` when input is invalid.\\n\\t// `source` is optional\\n\\tfunction buildEventFromInput(input, source) {\\n\\t\\tvar out = {};\\n\\t\\tvar start, end;\\n\\t\\tvar allDay;\\n\\n\\t\\tif (t.options.eventDataTransform) {\\n\\t\\t\\tinput = t.options.eventDataTransform(input);\\n\\t\\t}\\n\\t\\tif (source && source.eventDataTransform) {\\n\\t\\t\\tinput = source.eventDataTransform(input);\\n\\t\\t}\\n\\n\\t\\t// Copy all properties over to the resulting object.\\n\\t\\t// The special-case properties will be copied over afterwards.\\n\\t\\t$.extend(out, input);\\n\\n\\t\\tif (source) {\\n\\t\\t\\tout.source = source;\\n\\t\\t}\\n\\n\\t\\tout._id = input._id || (input.id === undefined ? '_fc' + eventGUID++ : input.id + '');\\n\\n\\t\\tif (input.className) {\\n\\t\\t\\tif (typeof input.className == 'string') {\\n\\t\\t\\t\\tout.className = input.className.split(/\\\\s+/);\\n\\t\\t\\t}\\n\\t\\t\\telse { // assumed to be an array\\n\\t\\t\\t\\tout.className = input.className;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tout.className = [];\\n\\t\\t}\\n\\n\\t\\tstart = input.start || input.date; // \\\"date\\\" is an alias for \\\"start\\\"\\n\\t\\tend = input.end;\\n\\n\\t\\t// parse as a time (Duration) if applicable\\n\\t\\tif (isTimeString(start)) {\\n\\t\\t\\tstart = moment.duration(start);\\n\\t\\t}\\n\\t\\tif (isTimeString(end)) {\\n\\t\\t\\tend = moment.duration(end);\\n\\t\\t}\\n\\n\\t\\tif (input.dow || moment.isDuration(start) || moment.isDuration(end)) {\\n\\n\\t\\t\\t// the event is \\\"abstract\\\" (recurring) so don't calculate exact start/end dates just yet\\n\\t\\t\\tout.start = start ? moment.duration(start) : null; // will be a Duration or null\\n\\t\\t\\tout.end = end ? moment.duration(end) : null; // will be a Duration or null\\n\\t\\t\\tout._recurring = true; // our internal marker\\n\\t\\t}\\n\\t\\telse {\\n\\n\\t\\t\\tif (start) {\\n\\t\\t\\t\\tstart = t.moment(start);\\n\\t\\t\\t\\tif (!start.isValid()) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (end) {\\n\\t\\t\\t\\tend = t.moment(end);\\n\\t\\t\\t\\tif (!end.isValid()) {\\n\\t\\t\\t\\t\\tend = null; // let defaults take over\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tallDay = input.allDay;\\n\\t\\t\\tif (allDay === undefined) { // still undefined? fallback to default\\n\\t\\t\\t\\tallDay = firstDefined(\\n\\t\\t\\t\\t\\tsource ? source.allDayDefault : undefined,\\n\\t\\t\\t\\t\\tt.options.allDayDefault\\n\\t\\t\\t\\t);\\n\\t\\t\\t\\t// still undefined? normalizeEventDates will calculate it\\n\\t\\t\\t}\\n\\n\\t\\t\\tassignDatesToEvent(start, end, allDay, out);\\n\\t\\t}\\n\\n\\t\\tt.normalizeEvent(out); // hook for external use. a prototype method\\n\\n\\t\\treturn out;\\n\\t}\\n\\tt.buildEventFromInput = buildEventFromInput;\\n\\n\\n\\t// Normalizes and assigns the given dates to the given partially-formed event object.\\n\\t// NOTE: mutates the given start/end moments. does not make a copy.\\n\\tfunction assignDatesToEvent(start, end, allDay, event) {\\n\\t\\tevent.start = start;\\n\\t\\tevent.end = end;\\n\\t\\tevent.allDay = allDay;\\n\\t\\tnormalizeEventDates(event);\\n\\t\\tbackupEventDates(event);\\n\\t}\\n\\n\\n\\t// Ensures proper values for allDay/start/end. Accepts an Event object, or a plain object with event-ish properties.\\n\\t// NOTE: Will modify the given object.\\n\\tfunction normalizeEventDates(eventProps) {\\n\\n\\t\\tnormalizeEventTimes(eventProps);\\n\\n\\t\\tif (eventProps.end && !eventProps.end.isAfter(eventProps.start)) {\\n\\t\\t\\teventProps.end = null;\\n\\t\\t}\\n\\n\\t\\tif (!eventProps.end) {\\n\\t\\t\\tif (t.options.forceEventDuration) {\\n\\t\\t\\t\\teventProps.end = t.getDefaultEventEnd(eventProps.allDay, eventProps.start);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\teventProps.end = null;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\n\\t// Ensures the allDay property exists and the timeliness of the start/end dates are consistent\\n\\tfunction normalizeEventTimes(eventProps) {\\n\\t\\tif (eventProps.allDay == null) {\\n\\t\\t\\teventProps.allDay = !(eventProps.start.hasTime() || (eventProps.end && eventProps.end.hasTime()));\\n\\t\\t}\\n\\n\\t\\tif (eventProps.allDay) {\\n\\t\\t\\teventProps.start.stripTime();\\n\\t\\t\\tif (eventProps.end) {\\n\\t\\t\\t\\t// TODO: consider nextDayThreshold here? If so, will require a lot of testing and adjustment\\n\\t\\t\\t\\teventProps.end.stripTime();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tif (!eventProps.start.hasTime()) {\\n\\t\\t\\t\\teventProps.start = t.applyTimezone(eventProps.start.time(0)); // will assign a 00:00 time\\n\\t\\t\\t}\\n\\t\\t\\tif (eventProps.end && !eventProps.end.hasTime()) {\\n\\t\\t\\t\\teventProps.end = t.applyTimezone(eventProps.end.time(0)); // will assign a 00:00 time\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\n\\t// If the given event is a recurring event, break it down into an array of individual instances.\\n\\t// If not a recurring event, return an array with the single original event.\\n\\t// If given a falsy input (probably because of a failed buildEventFromInput call), returns an empty array.\\n\\t// HACK: can override the recurring window by providing custom rangeStart/rangeEnd (for businessHours).\\n\\tfunction expandEvent(abstractEvent, _rangeStart, _rangeEnd) {\\n\\t\\tvar events = [];\\n\\t\\tvar dowHash;\\n\\t\\tvar dow;\\n\\t\\tvar i;\\n\\t\\tvar date;\\n\\t\\tvar startTime, endTime;\\n\\t\\tvar start, end;\\n\\t\\tvar event;\\n\\n\\t\\t_rangeStart = _rangeStart || rangeStart;\\n\\t\\t_rangeEnd = _rangeEnd || rangeEnd;\\n\\n\\t\\tif (abstractEvent) {\\n\\t\\t\\tif (abstractEvent._recurring) {\\n\\n\\t\\t\\t\\t// make a boolean hash as to whether the event occurs on each day-of-week\\n\\t\\t\\t\\tif ((dow = abstractEvent.dow)) {\\n\\t\\t\\t\\t\\tdowHash = {};\\n\\t\\t\\t\\t\\tfor (i = 0; i < dow.length; i++) {\\n\\t\\t\\t\\t\\t\\tdowHash[dow[i]] = true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// iterate through every day in the current range\\n\\t\\t\\t\\tdate = _rangeStart.clone().stripTime(); // holds the date of the current day\\n\\t\\t\\t\\twhile (date.isBefore(_rangeEnd)) {\\n\\n\\t\\t\\t\\t\\tif (!dowHash || dowHash[date.day()]) { // if everyday, or this particular day-of-week\\n\\n\\t\\t\\t\\t\\t\\tstartTime = abstractEvent.start; // the stored start and end properties are times (Durations)\\n\\t\\t\\t\\t\\t\\tendTime = abstractEvent.end; // \\\"\\n\\t\\t\\t\\t\\t\\tstart = date.clone();\\n\\t\\t\\t\\t\\t\\tend = null;\\n\\n\\t\\t\\t\\t\\t\\tif (startTime) {\\n\\t\\t\\t\\t\\t\\t\\tstart = start.time(startTime);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif (endTime) {\\n\\t\\t\\t\\t\\t\\t\\tend = date.clone().time(endTime);\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tevent = $.extend({}, abstractEvent); // make a copy of the original\\n\\t\\t\\t\\t\\t\\tassignDatesToEvent(\\n\\t\\t\\t\\t\\t\\t\\tstart, end,\\n\\t\\t\\t\\t\\t\\t\\t!startTime && !endTime, // allDay?\\n\\t\\t\\t\\t\\t\\t\\tevent\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tevents.push(event);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tdate.add(1, 'days');\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tevents.push(abstractEvent); // return the original event. will be a one-item array\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn events;\\n\\t}\\n\\tt.expandEvent = expandEvent;\\n\\n\\n\\n\\t/* Event Modification Math\\n\\t-----------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Modifies an event and all related events by applying the given properties.\\n\\t// Special date-diffing logic is used for manipulation of dates.\\n\\t// If `props` does not contain start/end dates, the updated values are assumed to be the event's current start/end.\\n\\t// All date comparisons are done against the event's pristine _start and _end dates.\\n\\t// Returns an object with delta information and a function to undo all operations.\\n\\t// For making computations in a granularity greater than day/time, specify largeUnit.\\n\\t// NOTE: The given `newProps` might be mutated for normalization purposes.\\n\\tfunction mutateEvent(event, newProps, largeUnit) {\\n\\t\\tvar miscProps = {};\\n\\t\\tvar oldProps;\\n\\t\\tvar clearEnd;\\n\\t\\tvar startDelta;\\n\\t\\tvar endDelta;\\n\\t\\tvar durationDelta;\\n\\t\\tvar undoFunc;\\n\\n\\t\\t// diffs the dates in the appropriate way, returning a duration\\n\\t\\tfunction diffDates(date1, date0) { // date1 - date0\\n\\t\\t\\tif (largeUnit) {\\n\\t\\t\\t\\treturn diffByUnit(date1, date0, largeUnit);\\n\\t\\t\\t}\\n\\t\\t\\telse if (newProps.allDay) {\\n\\t\\t\\t\\treturn diffDay(date1, date0);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\treturn diffDayTime(date1, date0);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tnewProps = newProps || {};\\n\\n\\t\\t// normalize new date-related properties\\n\\t\\tif (!newProps.start) {\\n\\t\\t\\tnewProps.start = event.start.clone();\\n\\t\\t}\\n\\t\\tif (newProps.end === undefined) {\\n\\t\\t\\tnewProps.end = event.end ? event.end.clone() : null;\\n\\t\\t}\\n\\t\\tif (newProps.allDay == null) { // is null or undefined?\\n\\t\\t\\tnewProps.allDay = event.allDay;\\n\\t\\t}\\n\\t\\tnormalizeEventDates(newProps);\\n\\n\\t\\t// create normalized versions of the original props to compare against\\n\\t\\t// need a real end value, for diffing\\n\\t\\toldProps = {\\n\\t\\t\\tstart: event._start.clone(),\\n\\t\\t\\tend: event._end ? event._end.clone() : t.getDefaultEventEnd(event._allDay, event._start),\\n\\t\\t\\tallDay: newProps.allDay // normalize the dates in the same regard as the new properties\\n\\t\\t};\\n\\t\\tnormalizeEventDates(oldProps);\\n\\n\\t\\t// need to clear the end date if explicitly changed to null\\n\\t\\tclearEnd = event._end !== null && newProps.end === null;\\n\\n\\t\\t// compute the delta for moving the start date\\n\\t\\tstartDelta = diffDates(newProps.start, oldProps.start);\\n\\n\\t\\t// compute the delta for moving the end date\\n\\t\\tif (newProps.end) {\\n\\t\\t\\tendDelta = diffDates(newProps.end, oldProps.end);\\n\\t\\t\\tdurationDelta = endDelta.subtract(startDelta);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tdurationDelta = null;\\n\\t\\t}\\n\\n\\t\\t// gather all non-date-related properties\\n\\t\\t$.each(newProps, function(name, val) {\\n\\t\\t\\tif (isMiscEventPropName(name)) {\\n\\t\\t\\t\\tif (val !== undefined) {\\n\\t\\t\\t\\t\\tmiscProps[name] = val;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\t// apply the operations to the event and all related events\\n\\t\\tundoFunc = mutateEvents(\\n\\t\\t\\tclientEvents(event._id), // get events with this ID\\n\\t\\t\\tclearEnd,\\n\\t\\t\\tnewProps.allDay,\\n\\t\\t\\tstartDelta,\\n\\t\\t\\tdurationDelta,\\n\\t\\t\\tmiscProps\\n\\t\\t);\\n\\n\\t\\treturn {\\n\\t\\t\\tdateDelta: startDelta,\\n\\t\\t\\tdurationDelta: durationDelta,\\n\\t\\t\\tundo: undoFunc\\n\\t\\t};\\n\\t}\\n\\n\\n\\t// Modifies an array of events in the following ways (operations are in order):\\n\\t// - clear the event's `end`\\n\\t// - convert the event to allDay\\n\\t// - add `dateDelta` to the start and end\\n\\t// - add `durationDelta` to the event's duration\\n\\t// - assign `miscProps` to the event\\n\\t//\\n\\t// Returns a function that can be called to undo all the operations.\\n\\t//\\n\\t// TODO: don't use so many closures. possible memory issues when lots of events with same ID.\\n\\t//\\n\\tfunction mutateEvents(events, clearEnd, allDay, dateDelta, durationDelta, miscProps) {\\n\\t\\tvar isAmbigTimezone = t.getIsAmbigTimezone();\\n\\t\\tvar undoFunctions = [];\\n\\n\\t\\t// normalize zero-length deltas to be null\\n\\t\\tif (dateDelta && !dateDelta.valueOf()) { dateDelta = null; }\\n\\t\\tif (durationDelta && !durationDelta.valueOf()) { durationDelta = null; }\\n\\n\\t\\t$.each(events, function(i, event) {\\n\\t\\t\\tvar oldProps;\\n\\t\\t\\tvar newProps;\\n\\n\\t\\t\\t// build an object holding all the old values, both date-related and misc.\\n\\t\\t\\t// for the undo function.\\n\\t\\t\\toldProps = {\\n\\t\\t\\t\\tstart: event.start.clone(),\\n\\t\\t\\t\\tend: event.end ? event.end.clone() : null,\\n\\t\\t\\t\\tallDay: event.allDay\\n\\t\\t\\t};\\n\\t\\t\\t$.each(miscProps, function(name) {\\n\\t\\t\\t\\toldProps[name] = event[name];\\n\\t\\t\\t});\\n\\n\\t\\t\\t// new date-related properties. work off the original date snapshot.\\n\\t\\t\\t// ok to use references because they will be thrown away when backupEventDates is called.\\n\\t\\t\\tnewProps = {\\n\\t\\t\\t\\tstart: event._start,\\n\\t\\t\\t\\tend: event._end,\\n\\t\\t\\t\\tallDay: allDay // normalize the dates in the same regard as the new properties\\n\\t\\t\\t};\\n\\t\\t\\tnormalizeEventDates(newProps); // massages start/end/allDay\\n\\n\\t\\t\\t// strip or ensure the end date\\n\\t\\t\\tif (clearEnd) {\\n\\t\\t\\t\\tnewProps.end = null;\\n\\t\\t\\t}\\n\\t\\t\\telse if (durationDelta && !newProps.end) { // the duration translation requires an end date\\n\\t\\t\\t\\tnewProps.end = t.getDefaultEventEnd(newProps.allDay, newProps.start);\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (dateDelta) {\\n\\t\\t\\t\\tnewProps.start.add(dateDelta);\\n\\t\\t\\t\\tif (newProps.end) {\\n\\t\\t\\t\\t\\tnewProps.end.add(dateDelta);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (durationDelta) {\\n\\t\\t\\t\\tnewProps.end.add(durationDelta); // end already ensured above\\n\\t\\t\\t}\\n\\n\\t\\t\\t// if the dates have changed, and we know it is impossible to recompute the\\n\\t\\t\\t// timezone offsets, strip the zone.\\n\\t\\t\\tif (\\n\\t\\t\\t\\tisAmbigTimezone &&\\n\\t\\t\\t\\t!newProps.allDay &&\\n\\t\\t\\t\\t(dateDelta || durationDelta)\\n\\t\\t\\t) {\\n\\t\\t\\t\\tnewProps.start.stripZone();\\n\\t\\t\\t\\tif (newProps.end) {\\n\\t\\t\\t\\t\\tnewProps.end.stripZone();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t$.extend(event, miscProps, newProps); // copy over misc props, then date-related props\\n\\t\\t\\tbackupEventDates(event); // regenerate internal _start/_end/_allDay\\n\\n\\t\\t\\tundoFunctions.push(function() {\\n\\t\\t\\t\\t$.extend(event, oldProps);\\n\\t\\t\\t\\tbackupEventDates(event); // regenerate internal _start/_end/_allDay\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\treturn function() {\\n\\t\\t\\tfor (var i = 0; i < undoFunctions.length; i++) {\\n\\t\\t\\t\\tundoFunctions[i]();\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n\\n}\\n\\n\\n// hook for external libs to manipulate event properties upon creation.\\n// should manipulate the event in-place.\\nCalendar.prototype.normalizeEvent = function(event) {\\n};\\n\\n\\n// Does the given span (start, end, and other location information)\\n// fully contain the other?\\nCalendar.prototype.spanContainsSpan = function(outerSpan, innerSpan) {\\n\\tvar eventStart = outerSpan.start.clone().stripZone();\\n\\tvar eventEnd = this.getEventEnd(outerSpan).stripZone();\\n\\n\\treturn innerSpan.start >= eventStart && innerSpan.end <= eventEnd;\\n};\\n\\n\\n// Returns a list of events that the given event should be compared against when being considered for a move to\\n// the specified span. Attached to the Calendar's prototype because EventManager is a mixin for a Calendar.\\nCalendar.prototype.getPeerEvents = function(span, event) {\\n\\tvar cache = this.getEventCache();\\n\\tvar peerEvents = [];\\n\\tvar i, otherEvent;\\n\\n\\tfor (i = 0; i < cache.length; i++) {\\n\\t\\totherEvent = cache[i];\\n\\t\\tif (\\n\\t\\t\\t!event ||\\n\\t\\t\\tevent._id !== otherEvent._id // don't compare the event to itself or other related [repeating] events\\n\\t\\t) {\\n\\t\\t\\tpeerEvents.push(otherEvent);\\n\\t\\t}\\n\\t}\\n\\n\\treturn peerEvents;\\n};\\n\\n\\n// updates the \\\"backup\\\" properties, which are preserved in order to compute diffs later on.\\nfunction backupEventDates(event) {\\n\\tevent._allDay = event.allDay;\\n\\tevent._start = event.start.clone();\\n\\tevent._end = event.end ? event.end.clone() : null;\\n}\\n\\n\\n/* Overlapping / Constraining\\n-----------------------------------------------------------------------------------------*/\\n\\n\\n// Determines if the given event can be relocated to the given span (unzoned start/end with other misc data)\\nCalendar.prototype.isEventSpanAllowed = function(span, event) {\\n\\tvar source = event.source || {};\\n\\n\\tvar constraint = firstDefined(\\n\\t\\tevent.constraint,\\n\\t\\tsource.constraint,\\n\\t\\tthis.options.eventConstraint\\n\\t);\\n\\n\\tvar overlap = firstDefined(\\n\\t\\tevent.overlap,\\n\\t\\tsource.overlap,\\n\\t\\tthis.options.eventOverlap\\n\\t);\\n\\n\\treturn this.isSpanAllowed(span, constraint, overlap, event) &&\\n\\t\\t(!this.options.eventAllow || this.options.eventAllow(span, event) !== false);\\n};\\n\\n\\n// Determines if an external event can be relocated to the given span (unzoned start/end with other misc data)\\nCalendar.prototype.isExternalSpanAllowed = function(eventSpan, eventLocation, eventProps) {\\n\\tvar eventInput;\\n\\tvar event;\\n\\n\\t// note: very similar logic is in View's reportExternalDrop\\n\\tif (eventProps) {\\n\\t\\teventInput = $.extend({}, eventProps, eventLocation);\\n\\t\\tevent = this.expandEvent(\\n\\t\\t\\tthis.buildEventFromInput(eventInput)\\n\\t\\t)[0];\\n\\t}\\n\\n\\tif (event) {\\n\\t\\treturn this.isEventSpanAllowed(eventSpan, event);\\n\\t}\\n\\telse { // treat it as a selection\\n\\n\\t\\treturn this.isSelectionSpanAllowed(eventSpan);\\n\\t}\\n};\\n\\n\\n// Determines the given span (unzoned start/end with other misc data) can be selected.\\nCalendar.prototype.isSelectionSpanAllowed = function(span) {\\n\\treturn this.isSpanAllowed(span, this.options.selectConstraint, this.options.selectOverlap) &&\\n\\t\\t(!this.options.selectAllow || this.options.selectAllow(span) !== false);\\n};\\n\\n\\n// Returns true if the given span (caused by an event drop/resize or a selection) is allowed to exist\\n// according to the constraint/overlap settings.\\n// `event` is not required if checking a selection.\\nCalendar.prototype.isSpanAllowed = function(span, constraint, overlap, event) {\\n\\tvar constraintEvents;\\n\\tvar anyContainment;\\n\\tvar peerEvents;\\n\\tvar i, peerEvent;\\n\\tvar peerOverlap;\\n\\n\\t// the range must be fully contained by at least one of produced constraint events\\n\\tif (constraint != null) {\\n\\n\\t\\t// not treated as an event! intermediate data structure\\n\\t\\t// TODO: use ranges in the future\\n\\t\\tconstraintEvents = this.constraintToEvents(constraint);\\n\\t\\tif (constraintEvents) { // not invalid\\n\\n\\t\\t\\tanyContainment = false;\\n\\t\\t\\tfor (i = 0; i < constraintEvents.length; i++) {\\n\\t\\t\\t\\tif (this.spanContainsSpan(constraintEvents[i], span)) {\\n\\t\\t\\t\\t\\tanyContainment = true;\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!anyContainment) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tpeerEvents = this.getPeerEvents(span, event);\\n\\n\\tfor (i = 0; i < peerEvents.length; i++)  {\\n\\t\\tpeerEvent = peerEvents[i];\\n\\n\\t\\t// there needs to be an actual intersection before disallowing anything\\n\\t\\tif (this.eventIntersectsRange(peerEvent, span)) {\\n\\n\\t\\t\\t// evaluate overlap for the given range and short-circuit if necessary\\n\\t\\t\\tif (overlap === false) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t\\t// if the event's overlap is a test function, pass the peer event in question as the first param\\n\\t\\t\\telse if (typeof overlap === 'function' && !overlap(peerEvent, event)) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// if we are computing if the given range is allowable for an event, consider the other event's\\n\\t\\t\\t// EventObject-specific or Source-specific `overlap` property\\n\\t\\t\\tif (event) {\\n\\t\\t\\t\\tpeerOverlap = firstDefined(\\n\\t\\t\\t\\t\\tpeerEvent.overlap,\\n\\t\\t\\t\\t\\t(peerEvent.source || {}).overlap\\n\\t\\t\\t\\t\\t// we already considered the global `eventOverlap`\\n\\t\\t\\t\\t);\\n\\t\\t\\t\\tif (peerOverlap === false) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t// if the peer event's overlap is a test function, pass the subject event as the first param\\n\\t\\t\\t\\tif (typeof peerOverlap === 'function' && !peerOverlap(event, peerEvent)) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn true;\\n};\\n\\n\\n// Given an event input from the API, produces an array of event objects. Possible event inputs:\\n// 'businessHours'\\n// An event ID (number or string)\\n// An object with specific start/end dates or a recurring event (like what businessHours accepts)\\nCalendar.prototype.constraintToEvents = function(constraintInput) {\\n\\n\\tif (constraintInput === 'businessHours') {\\n\\t\\treturn this.getCurrentBusinessHourEvents();\\n\\t}\\n\\n\\tif (typeof constraintInput === 'object') {\\n\\t\\tif (constraintInput.start != null) { // needs to be event-like input\\n\\t\\t\\treturn this.expandEvent(this.buildEventFromInput(constraintInput));\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn null; // invalid\\n\\t\\t}\\n\\t}\\n\\n\\treturn this.clientEvents(constraintInput); // probably an ID\\n};\\n\\n\\n// Does the event's date range intersect with the given range?\\n// start/end already assumed to have stripped zones :(\\nCalendar.prototype.eventIntersectsRange = function(event, range) {\\n\\tvar eventStart = event.start.clone().stripZone();\\n\\tvar eventEnd = this.getEventEnd(event).stripZone();\\n\\n\\treturn range.start < eventEnd && range.end > eventStart;\\n};\\n\\n\\n/* Business Hours\\n-----------------------------------------------------------------------------------------*/\\n\\nvar BUSINESS_HOUR_EVENT_DEFAULTS = {\\n\\tid: '_fcBusinessHours', // will relate events from different calls to expandEvent\\n\\tstart: '09:00',\\n\\tend: '17:00',\\n\\tdow: [ 1, 2, 3, 4, 5 ], // monday - friday\\n\\trendering: 'inverse-background'\\n\\t// classNames are defined in businessHoursSegClasses\\n};\\n\\n// Return events objects for business hours within the current view.\\n// Abuse of our event system :(\\nCalendar.prototype.getCurrentBusinessHourEvents = function(wholeDay) {\\n\\treturn this.computeBusinessHourEvents(wholeDay, this.options.businessHours);\\n};\\n\\n// Given a raw input value from options, return events objects for business hours within the current view.\\nCalendar.prototype.computeBusinessHourEvents = function(wholeDay, input) {\\n\\tif (input === true) {\\n\\t\\treturn this.expandBusinessHourEvents(wholeDay, [ {} ]);\\n\\t}\\n\\telse if ($.isPlainObject(input)) {\\n\\t\\treturn this.expandBusinessHourEvents(wholeDay, [ input ]);\\n\\t}\\n\\telse if ($.isArray(input)) {\\n\\t\\treturn this.expandBusinessHourEvents(wholeDay, input, true);\\n\\t}\\n\\telse {\\n\\t\\treturn [];\\n\\t}\\n};\\n\\n// inputs expected to be an array of objects.\\n// if ignoreNoDow is true, will ignore entries that don't specify a day-of-week (dow) key.\\nCalendar.prototype.expandBusinessHourEvents = function(wholeDay, inputs, ignoreNoDow) {\\n\\tvar view = this.getView();\\n\\tvar events = [];\\n\\tvar i, input;\\n\\n\\tfor (i = 0; i < inputs.length; i++) {\\n\\t\\tinput = inputs[i];\\n\\n\\t\\tif (ignoreNoDow && !input.dow) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\t// give defaults. will make a copy\\n\\t\\tinput = $.extend({}, BUSINESS_HOUR_EVENT_DEFAULTS, input);\\n\\n\\t\\t// if a whole-day series is requested, clear the start/end times\\n\\t\\tif (wholeDay) {\\n\\t\\t\\tinput.start = null;\\n\\t\\t\\tinput.end = null;\\n\\t\\t}\\n\\n\\t\\tevents.push.apply(events, // append\\n\\t\\t\\tthis.expandEvent(\\n\\t\\t\\t\\tthis.buildEventFromInput(input),\\n\\t\\t\\t\\tview.start,\\n\\t\\t\\t\\tview.end\\n\\t\\t\\t)\\n\\t\\t);\\n\\t}\\n\\n\\treturn events;\\n};\\n\\n;;\\n\\n/* An abstract class for the \\\"basic\\\" views, as well as month view. Renders one or more rows of day cells.\\n----------------------------------------------------------------------------------------------------------------------*/\\n// It is a manager for a DayGrid subcomponent, which does most of the heavy lifting.\\n// It is responsible for managing width/height.\\n\\nvar BasicView = FC.BasicView = View.extend({\\n\\n\\tscroller: null,\\n\\n\\tdayGridClass: DayGrid, // class the dayGrid will be instantiated from (overridable by subclasses)\\n\\tdayGrid: null, // the main subcomponent that does most of the heavy lifting\\n\\n\\tdayNumbersVisible: false, // display day numbers on each day cell?\\n\\tcolWeekNumbersVisible: false, // display week numbers along the side?\\n\\tcellWeekNumbersVisible: false, // display week numbers in day cell?\\n\\n\\tweekNumberWidth: null, // width of all the week-number cells running down the side\\n\\n\\theadContainerEl: null, // div that hold's the dayGrid's rendered date header\\n\\theadRowEl: null, // the fake row element of the day-of-week header\\n\\n\\n\\tinitialize: function() {\\n\\t\\tthis.dayGrid = this.instantiateDayGrid();\\n\\n\\t\\tthis.scroller = new Scroller({\\n\\t\\t\\toverflowX: 'hidden',\\n\\t\\t\\toverflowY: 'auto'\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Generates the DayGrid object this view needs. Draws from this.dayGridClass\\n\\tinstantiateDayGrid: function() {\\n\\t\\t// generate a subclass on the fly with BasicView-specific behavior\\n\\t\\t// TODO: cache this subclass\\n\\t\\tvar subclass = this.dayGridClass.extend(basicDayGridMethods);\\n\\n\\t\\treturn new subclass(this);\\n\\t},\\n\\n\\n\\t// Sets the display range and computes all necessary dates\\n\\tsetRange: function(range) {\\n\\t\\tView.prototype.setRange.call(this, range); // call the super-method\\n\\n\\t\\tthis.dayGrid.breakOnWeeks = /year|month|week/.test(this.intervalUnit); // do before setRange\\n\\t\\tthis.dayGrid.setRange(range);\\n\\t},\\n\\n\\n\\t// Compute the value to feed into setRange. Overrides superclass.\\n\\tcomputeRange: function(date) {\\n\\t\\tvar range = View.prototype.computeRange.call(this, date); // get value from the super-method\\n\\n\\t\\t// year and month views should be aligned with weeks. this is already done for week\\n\\t\\tif (/year|month/.test(range.intervalUnit)) {\\n\\t\\t\\trange.start.startOf('week');\\n\\t\\t\\trange.start = this.skipHiddenDays(range.start);\\n\\n\\t\\t\\t// make end-of-week if not already\\n\\t\\t\\tif (range.end.weekday()) {\\n\\t\\t\\t\\trange.end.add(1, 'week').startOf('week');\\n\\t\\t\\t\\trange.end = this.skipHiddenDays(range.end, -1, true); // exclusively move backwards\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn range;\\n\\t},\\n\\n\\n\\t// Renders the view into `this.el`, which should already be assigned\\n\\trenderDates: function() {\\n\\n\\t\\tthis.dayNumbersVisible = this.dayGrid.rowCnt > 1; // TODO: make grid responsible\\n\\t\\tif (this.opt('weekNumbers')) {\\n\\t\\t\\tif (this.opt('weekNumbersWithinDays')) {\\n\\t\\t\\t\\tthis.cellWeekNumbersVisible = true;\\n\\t\\t\\t\\tthis.colWeekNumbersVisible = false;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tthis.cellWeekNumbersVisible = false;\\n\\t\\t\\t\\tthis.colWeekNumbersVisible = true;\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tthis.dayGrid.numbersVisible = this.dayNumbersVisible ||\\n\\t\\t\\tthis.cellWeekNumbersVisible || this.colWeekNumbersVisible;\\n\\n\\t\\tthis.el.addClass('fc-basic-view').html(this.renderSkeletonHtml());\\n\\t\\tthis.renderHead();\\n\\n\\t\\tthis.scroller.render();\\n\\t\\tvar dayGridContainerEl = this.scroller.el.addClass('fc-day-grid-container');\\n\\t\\tvar dayGridEl = $('<div class=\\\"fc-day-grid\\\" />').appendTo(dayGridContainerEl);\\n\\t\\tthis.el.find('.fc-body > tr > td').append(dayGridContainerEl);\\n\\n\\t\\tthis.dayGrid.setElement(dayGridEl);\\n\\t\\tthis.dayGrid.renderDates(this.hasRigidRows());\\n\\t},\\n\\n\\n\\t// render the day-of-week headers\\n\\trenderHead: function() {\\n\\t\\tthis.headContainerEl =\\n\\t\\t\\tthis.el.find('.fc-head-container')\\n\\t\\t\\t\\t.html(this.dayGrid.renderHeadHtml());\\n\\t\\tthis.headRowEl = this.headContainerEl.find('.fc-row');\\n\\t},\\n\\n\\n\\t// Unrenders the content of the view. Since we haven't separated skeleton rendering from date rendering,\\n\\t// always completely kill the dayGrid's rendering.\\n\\tunrenderDates: function() {\\n\\t\\tthis.dayGrid.unrenderDates();\\n\\t\\tthis.dayGrid.removeElement();\\n\\t\\tthis.scroller.destroy();\\n\\t},\\n\\n\\n\\trenderBusinessHours: function() {\\n\\t\\tthis.dayGrid.renderBusinessHours();\\n\\t},\\n\\n\\n\\tunrenderBusinessHours: function() {\\n\\t\\tthis.dayGrid.unrenderBusinessHours();\\n\\t},\\n\\n\\n\\t// Builds the HTML skeleton for the view.\\n\\t// The day-grid component will render inside of a container defined by this HTML.\\n\\trenderSkeletonHtml: function() {\\n\\t\\treturn '' +\\n\\t\\t\\t'<table>' +\\n\\t\\t\\t\\t'<thead class=\\\"fc-head\\\">' +\\n\\t\\t\\t\\t\\t'<tr>' +\\n\\t\\t\\t\\t\\t\\t'<td class=\\\"fc-head-container ' + this.widgetHeaderClass + '\\\"></td>' +\\n\\t\\t\\t\\t\\t'</tr>' +\\n\\t\\t\\t\\t'</thead>' +\\n\\t\\t\\t\\t'<tbody class=\\\"fc-body\\\">' +\\n\\t\\t\\t\\t\\t'<tr>' +\\n\\t\\t\\t\\t\\t\\t'<td class=\\\"' + this.widgetContentClass + '\\\"></td>' +\\n\\t\\t\\t\\t\\t'</tr>' +\\n\\t\\t\\t\\t'</tbody>' +\\n\\t\\t\\t'</table>';\\n\\t},\\n\\n\\n\\t// Generates an HTML attribute string for setting the width of the week number column, if it is known\\n\\tweekNumberStyleAttr: function() {\\n\\t\\tif (this.weekNumberWidth !== null) {\\n\\t\\t\\treturn 'style=\\\"width:' + this.weekNumberWidth + 'px\\\"';\\n\\t\\t}\\n\\t\\treturn '';\\n\\t},\\n\\n\\n\\t// Determines whether each row should have a constant height\\n\\thasRigidRows: function() {\\n\\t\\tvar eventLimit = this.opt('eventLimit');\\n\\t\\treturn eventLimit && typeof eventLimit !== 'number';\\n\\t},\\n\\n\\n\\t/* Dimensions\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Refreshes the horizontal dimensions of the view\\n\\tupdateWidth: function() {\\n\\t\\tif (this.colWeekNumbersVisible) {\\n\\t\\t\\t// Make sure all week number cells running down the side have the same width.\\n\\t\\t\\t// Record the width for cells created later.\\n\\t\\t\\tthis.weekNumberWidth = matchCellWidths(\\n\\t\\t\\t\\tthis.el.find('.fc-week-number')\\n\\t\\t\\t);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Adjusts the vertical dimensions of the view to the specified values\\n\\tsetHeight: function(totalHeight, isAuto) {\\n\\t\\tvar eventLimit = this.opt('eventLimit');\\n\\t\\tvar scrollerHeight;\\n\\t\\tvar scrollbarWidths;\\n\\n\\t\\t// reset all heights to be natural\\n\\t\\tthis.scroller.clear();\\n\\t\\tuncompensateScroll(this.headRowEl);\\n\\n\\t\\tthis.dayGrid.removeSegPopover(); // kill the \\\"more\\\" popover if displayed\\n\\n\\t\\t// is the event limit a constant level number?\\n\\t\\tif (eventLimit && typeof eventLimit === 'number') {\\n\\t\\t\\tthis.dayGrid.limitRows(eventLimit); // limit the levels first so the height can redistribute after\\n\\t\\t}\\n\\n\\t\\t// distribute the height to the rows\\n\\t\\t// (totalHeight is a \\\"recommended\\\" value if isAuto)\\n\\t\\tscrollerHeight = this.computeScrollerHeight(totalHeight);\\n\\t\\tthis.setGridHeight(scrollerHeight, isAuto);\\n\\n\\t\\t// is the event limit dynamically calculated?\\n\\t\\tif (eventLimit && typeof eventLimit !== 'number') {\\n\\t\\t\\tthis.dayGrid.limitRows(eventLimit); // limit the levels after the grid's row heights have been set\\n\\t\\t}\\n\\n\\t\\tif (!isAuto) { // should we force dimensions of the scroll container?\\n\\n\\t\\t\\tthis.scroller.setHeight(scrollerHeight);\\n\\t\\t\\tscrollbarWidths = this.scroller.getScrollbarWidths();\\n\\n\\t\\t\\tif (scrollbarWidths.left || scrollbarWidths.right) { // using scrollbars?\\n\\n\\t\\t\\t\\tcompensateScroll(this.headRowEl, scrollbarWidths);\\n\\n\\t\\t\\t\\t// doing the scrollbar compensation might have created text overflow which created more height. redo\\n\\t\\t\\t\\tscrollerHeight = this.computeScrollerHeight(totalHeight);\\n\\t\\t\\t\\tthis.scroller.setHeight(scrollerHeight);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// guarantees the same scrollbar widths\\n\\t\\t\\tthis.scroller.lockOverflow(scrollbarWidths);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// given a desired total height of the view, returns what the height of the scroller should be\\n\\tcomputeScrollerHeight: function(totalHeight) {\\n\\t\\treturn totalHeight -\\n\\t\\t\\tsubtractInnerElHeight(this.el, this.scroller.el); // everything that's NOT the scroller\\n\\t},\\n\\n\\n\\t// Sets the height of just the DayGrid component in this view\\n\\tsetGridHeight: function(height, isAuto) {\\n\\t\\tif (isAuto) {\\n\\t\\t\\tundistributeHeight(this.dayGrid.rowEls); // let the rows be their natural height with no expanding\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tdistributeHeight(this.dayGrid.rowEls, height, true); // true = compensate for height-hogging rows\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Scroll\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tcomputeInitialScroll: function() {\\n\\t\\treturn { top: 0 };\\n\\t},\\n\\n\\n\\tqueryScroll: function() {\\n\\t\\treturn { top: this.scroller.getScrollTop() };\\n\\t},\\n\\n\\n\\tsetScroll: function(scroll) {\\n\\t\\tthis.scroller.setScrollTop(scroll.top);\\n\\t},\\n\\n\\n\\t/* Hit Areas\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\t// forward all hit-related method calls to dayGrid\\n\\n\\n\\tprepareHits: function() {\\n\\t\\tthis.dayGrid.prepareHits();\\n\\t},\\n\\n\\n\\treleaseHits: function() {\\n\\t\\tthis.dayGrid.releaseHits();\\n\\t},\\n\\n\\n\\tqueryHit: function(left, top) {\\n\\t\\treturn this.dayGrid.queryHit(left, top);\\n\\t},\\n\\n\\n\\tgetHitSpan: function(hit) {\\n\\t\\treturn this.dayGrid.getHitSpan(hit);\\n\\t},\\n\\n\\n\\tgetHitEl: function(hit) {\\n\\t\\treturn this.dayGrid.getHitEl(hit);\\n\\t},\\n\\n\\n\\t/* Events\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders the given events onto the view and populates the segments array\\n\\trenderEvents: function(events) {\\n\\t\\tthis.dayGrid.renderEvents(events);\\n\\n\\t\\tthis.updateHeight(); // must compensate for events that overflow the row\\n\\t},\\n\\n\\n\\t// Retrieves all segment objects that are rendered in the view\\n\\tgetEventSegs: function() {\\n\\t\\treturn this.dayGrid.getEventSegs();\\n\\t},\\n\\n\\n\\t// Unrenders all event elements and clears internal segment data\\n\\tunrenderEvents: function() {\\n\\t\\tthis.dayGrid.unrenderEvents();\\n\\n\\t\\t// we DON'T need to call updateHeight() because\\n\\t\\t// a renderEvents() call always happens after this, which will eventually call updateHeight()\\n\\t},\\n\\n\\n\\t/* Dragging (for both events and external elements)\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// A returned value of `true` signals that a mock \\\"helper\\\" event has been rendered.\\n\\trenderDrag: function(dropLocation, seg) {\\n\\t\\treturn this.dayGrid.renderDrag(dropLocation, seg);\\n\\t},\\n\\n\\n\\tunrenderDrag: function() {\\n\\t\\tthis.dayGrid.unrenderDrag();\\n\\t},\\n\\n\\n\\t/* Selection\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of a selection\\n\\trenderSelection: function(span) {\\n\\t\\tthis.dayGrid.renderSelection(span);\\n\\t},\\n\\n\\n\\t// Unrenders a visual indications of a selection\\n\\tunrenderSelection: function() {\\n\\t\\tthis.dayGrid.unrenderSelection();\\n\\t}\\n\\n});\\n\\n\\n// Methods that will customize the rendering behavior of the BasicView's dayGrid\\nvar basicDayGridMethods = {\\n\\n\\n\\t// Generates the HTML that will go before the day-of week header cells\\n\\trenderHeadIntroHtml: function() {\\n\\t\\tvar view = this.view;\\n\\n\\t\\tif (view.colWeekNumbersVisible) {\\n\\t\\t\\treturn '' +\\n\\t\\t\\t\\t'<th class=\\\"fc-week-number ' + view.widgetHeaderClass + '\\\" ' + view.weekNumberStyleAttr() + '>' +\\n\\t\\t\\t\\t\\t'<span>' + // needed for matchCellWidths\\n\\t\\t\\t\\t\\t\\thtmlEscape(view.opt('weekNumberTitle')) +\\n\\t\\t\\t\\t\\t'</span>' +\\n\\t\\t\\t\\t'</th>';\\n\\t\\t}\\n\\n\\t\\treturn '';\\n\\t},\\n\\n\\n\\t// Generates the HTML that will go before content-skeleton cells that display the day/week numbers\\n\\trenderNumberIntroHtml: function(row) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar weekStart = this.getCellDate(row, 0);\\n\\n\\t\\tif (view.colWeekNumbersVisible) {\\n\\t\\t\\treturn '' +\\n\\t\\t\\t\\t'<td class=\\\"fc-week-number\\\" ' + view.weekNumberStyleAttr() + '>' +\\n\\t\\t\\t\\t\\tview.buildGotoAnchorHtml( // aside from link, important for matchCellWidths\\n\\t\\t\\t\\t\\t\\t{ date: weekStart, type: 'week', forceOff: this.colCnt === 1 },\\n\\t\\t\\t\\t\\t\\tweekStart.format('w') // inner HTML\\n\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t'</td>';\\n\\t\\t}\\n\\n\\t\\treturn '';\\n\\t},\\n\\n\\n\\t// Generates the HTML that goes before the day bg cells for each day-row\\n\\trenderBgIntroHtml: function() {\\n\\t\\tvar view = this.view;\\n\\n\\t\\tif (view.colWeekNumbersVisible) {\\n\\t\\t\\treturn '<td class=\\\"fc-week-number ' + view.widgetContentClass + '\\\" ' +\\n\\t\\t\\t\\tview.weekNumberStyleAttr() + '></td>';\\n\\t\\t}\\n\\n\\t\\treturn '';\\n\\t},\\n\\n\\n\\t// Generates the HTML that goes before every other type of row generated by DayGrid.\\n\\t// Affects helper-skeleton and highlight-skeleton rows.\\n\\trenderIntroHtml: function() {\\n\\t\\tvar view = this.view;\\n\\n\\t\\tif (view.colWeekNumbersVisible) {\\n\\t\\t\\treturn '<td class=\\\"fc-week-number\\\" ' + view.weekNumberStyleAttr() + '></td>';\\n\\t\\t}\\n\\n\\t\\treturn '';\\n\\t}\\n\\n};\\n\\n;;\\n\\n/* A month view with day cells running in rows (one-per-week) and columns\\n----------------------------------------------------------------------------------------------------------------------*/\\n\\nvar MonthView = FC.MonthView = BasicView.extend({\\n\\n\\t// Produces information about what range to display\\n\\tcomputeRange: function(date) {\\n\\t\\tvar range = BasicView.prototype.computeRange.call(this, date); // get value from super-method\\n\\t\\tvar rowCnt;\\n\\n\\t\\t// ensure 6 weeks\\n\\t\\tif (this.isFixedWeeks()) {\\n\\t\\t\\trowCnt = Math.ceil(range.end.diff(range.start, 'weeks', true)); // could be partial weeks due to hiddenDays\\n\\t\\t\\trange.end.add(6 - rowCnt, 'weeks');\\n\\t\\t}\\n\\n\\t\\treturn range;\\n\\t},\\n\\n\\n\\t// Overrides the default BasicView behavior to have special multi-week auto-height logic\\n\\tsetGridHeight: function(height, isAuto) {\\n\\n\\t\\t// if auto, make the height of each row the height that it would be if there were 6 weeks\\n\\t\\tif (isAuto) {\\n\\t\\t\\theight *= this.rowCnt / 6;\\n\\t\\t}\\n\\n\\t\\tdistributeHeight(this.dayGrid.rowEls, height, !isAuto); // if auto, don't compensate for height-hogging rows\\n\\t},\\n\\n\\n\\tisFixedWeeks: function() {\\n\\t\\treturn this.opt('fixedWeekCount');\\n\\t}\\n\\n});\\n\\n;;\\n\\nfcViews.basic = {\\n\\t'class': BasicView\\n};\\n\\nfcViews.basicDay = {\\n\\ttype: 'basic',\\n\\tduration: { days: 1 }\\n};\\n\\nfcViews.basicWeek = {\\n\\ttype: 'basic',\\n\\tduration: { weeks: 1 }\\n};\\n\\nfcViews.month = {\\n\\t'class': MonthView,\\n\\tduration: { months: 1 }, // important for prev/next\\n\\tdefaults: {\\n\\t\\tfixedWeekCount: true\\n\\t}\\n};\\n;;\\n\\n/* An abstract class for all agenda-related views. Displays one more columns with time slots running vertically.\\n----------------------------------------------------------------------------------------------------------------------*/\\n// Is a manager for the TimeGrid subcomponent and possibly the DayGrid subcomponent (if allDaySlot is on).\\n// Responsible for managing width/height.\\n\\nvar AgendaView = FC.AgendaView = View.extend({\\n\\n\\tscroller: null,\\n\\n\\ttimeGridClass: TimeGrid, // class used to instantiate the timeGrid. subclasses can override\\n\\ttimeGrid: null, // the main time-grid subcomponent of this view\\n\\n\\tdayGridClass: DayGrid, // class used to instantiate the dayGrid. subclasses can override\\n\\tdayGrid: null, // the \\\"all-day\\\" subcomponent. if all-day is turned off, this will be null\\n\\n\\taxisWidth: null, // the width of the time axis running down the side\\n\\n\\theadContainerEl: null, // div that hold's the timeGrid's rendered date header\\n\\tnoScrollRowEls: null, // set of fake row elements that must compensate when scroller has scrollbars\\n\\n\\t// when the time-grid isn't tall enough to occupy the given height, we render an <hr> underneath\\n\\tbottomRuleEl: null,\\n\\n\\n\\tinitialize: function() {\\n\\t\\tthis.timeGrid = this.instantiateTimeGrid();\\n\\n\\t\\tif (this.opt('allDaySlot')) { // should we display the \\\"all-day\\\" area?\\n\\t\\t\\tthis.dayGrid = this.instantiateDayGrid(); // the all-day subcomponent of this view\\n\\t\\t}\\n\\n\\t\\tthis.scroller = new Scroller({\\n\\t\\t\\toverflowX: 'hidden',\\n\\t\\t\\toverflowY: 'auto'\\n\\t\\t});\\n\\t},\\n\\n\\n\\t// Instantiates the TimeGrid object this view needs. Draws from this.timeGridClass\\n\\tinstantiateTimeGrid: function() {\\n\\t\\tvar subclass = this.timeGridClass.extend(agendaTimeGridMethods);\\n\\n\\t\\treturn new subclass(this);\\n\\t},\\n\\n\\n\\t// Instantiates the DayGrid object this view might need. Draws from this.dayGridClass\\n\\tinstantiateDayGrid: function() {\\n\\t\\tvar subclass = this.dayGridClass.extend(agendaDayGridMethods);\\n\\n\\t\\treturn new subclass(this);\\n\\t},\\n\\n\\n\\t/* Rendering\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Sets the display range and computes all necessary dates\\n\\tsetRange: function(range) {\\n\\t\\tView.prototype.setRange.call(this, range); // call the super-method\\n\\n\\t\\tthis.timeGrid.setRange(range);\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.setRange(range);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Renders the view into `this.el`, which has already been assigned\\n\\trenderDates: function() {\\n\\n\\t\\tthis.el.addClass('fc-agenda-view').html(this.renderSkeletonHtml());\\n\\t\\tthis.renderHead();\\n\\n\\t\\tthis.scroller.render();\\n\\t\\tvar timeGridWrapEl = this.scroller.el.addClass('fc-time-grid-container');\\n\\t\\tvar timeGridEl = $('<div class=\\\"fc-time-grid\\\" />').appendTo(timeGridWrapEl);\\n\\t\\tthis.el.find('.fc-body > tr > td').append(timeGridWrapEl);\\n\\n\\t\\tthis.timeGrid.setElement(timeGridEl);\\n\\t\\tthis.timeGrid.renderDates();\\n\\n\\t\\t// the <hr> that sometimes displays under the time-grid\\n\\t\\tthis.bottomRuleEl = $('<hr class=\\\"fc-divider ' + this.widgetHeaderClass + '\\\"/>')\\n\\t\\t\\t.appendTo(this.timeGrid.el); // inject it into the time-grid\\n\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.setElement(this.el.find('.fc-day-grid'));\\n\\t\\t\\tthis.dayGrid.renderDates();\\n\\n\\t\\t\\t// have the day-grid extend it's coordinate area over the <hr> dividing the two grids\\n\\t\\t\\tthis.dayGrid.bottomCoordPadding = this.dayGrid.el.next('hr').outerHeight();\\n\\t\\t}\\n\\n\\t\\tthis.noScrollRowEls = this.el.find('.fc-row:not(.fc-scroller *)'); // fake rows not within the scroller\\n\\t},\\n\\n\\n\\t// render the day-of-week headers\\n\\trenderHead: function() {\\n\\t\\tthis.headContainerEl =\\n\\t\\t\\tthis.el.find('.fc-head-container')\\n\\t\\t\\t\\t.html(this.timeGrid.renderHeadHtml());\\n\\t},\\n\\n\\n\\t// Unrenders the content of the view. Since we haven't separated skeleton rendering from date rendering,\\n\\t// always completely kill each grid's rendering.\\n\\tunrenderDates: function() {\\n\\t\\tthis.timeGrid.unrenderDates();\\n\\t\\tthis.timeGrid.removeElement();\\n\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.unrenderDates();\\n\\t\\t\\tthis.dayGrid.removeElement();\\n\\t\\t}\\n\\n\\t\\tthis.scroller.destroy();\\n\\t},\\n\\n\\n\\t// Builds the HTML skeleton for the view.\\n\\t// The day-grid and time-grid components will render inside containers defined by this HTML.\\n\\trenderSkeletonHtml: function() {\\n\\t\\treturn '' +\\n\\t\\t\\t'<table>' +\\n\\t\\t\\t\\t'<thead class=\\\"fc-head\\\">' +\\n\\t\\t\\t\\t\\t'<tr>' +\\n\\t\\t\\t\\t\\t\\t'<td class=\\\"fc-head-container ' + this.widgetHeaderClass + '\\\"></td>' +\\n\\t\\t\\t\\t\\t'</tr>' +\\n\\t\\t\\t\\t'</thead>' +\\n\\t\\t\\t\\t'<tbody class=\\\"fc-body\\\">' +\\n\\t\\t\\t\\t\\t'<tr>' +\\n\\t\\t\\t\\t\\t\\t'<td class=\\\"' + this.widgetContentClass + '\\\">' +\\n\\t\\t\\t\\t\\t\\t\\t(this.dayGrid ?\\n\\t\\t\\t\\t\\t\\t\\t\\t'<div class=\\\"fc-day-grid\\\"/>' +\\n\\t\\t\\t\\t\\t\\t\\t\\t'<hr class=\\\"fc-divider ' + this.widgetHeaderClass + '\\\"/>' :\\n\\t\\t\\t\\t\\t\\t\\t\\t''\\n\\t\\t\\t\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t\\t\\t'</td>' +\\n\\t\\t\\t\\t\\t'</tr>' +\\n\\t\\t\\t\\t'</tbody>' +\\n\\t\\t\\t'</table>';\\n\\t},\\n\\n\\n\\t// Generates an HTML attribute string for setting the width of the axis, if it is known\\n\\taxisStyleAttr: function() {\\n\\t\\tif (this.axisWidth !== null) {\\n\\t\\t\\t return 'style=\\\"width:' + this.axisWidth + 'px\\\"';\\n\\t\\t}\\n\\t\\treturn '';\\n\\t},\\n\\n\\n\\t/* Business Hours\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\trenderBusinessHours: function() {\\n\\t\\tthis.timeGrid.renderBusinessHours();\\n\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.renderBusinessHours();\\n\\t\\t}\\n\\t},\\n\\n\\n\\tunrenderBusinessHours: function() {\\n\\t\\tthis.timeGrid.unrenderBusinessHours();\\n\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.unrenderBusinessHours();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Now Indicator\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tgetNowIndicatorUnit: function() {\\n\\t\\treturn this.timeGrid.getNowIndicatorUnit();\\n\\t},\\n\\n\\n\\trenderNowIndicator: function(date) {\\n\\t\\tthis.timeGrid.renderNowIndicator(date);\\n\\t},\\n\\n\\n\\tunrenderNowIndicator: function() {\\n\\t\\tthis.timeGrid.unrenderNowIndicator();\\n\\t},\\n\\n\\n\\t/* Dimensions\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\tupdateSize: function(isResize) {\\n\\t\\tthis.timeGrid.updateSize(isResize);\\n\\n\\t\\tView.prototype.updateSize.call(this, isResize); // call the super-method\\n\\t},\\n\\n\\n\\t// Refreshes the horizontal dimensions of the view\\n\\tupdateWidth: function() {\\n\\t\\t// make all axis cells line up, and record the width so newly created axis cells will have it\\n\\t\\tthis.axisWidth = matchCellWidths(this.el.find('.fc-axis'));\\n\\t},\\n\\n\\n\\t// Adjusts the vertical dimensions of the view to the specified values\\n\\tsetHeight: function(totalHeight, isAuto) {\\n\\t\\tvar eventLimit;\\n\\t\\tvar scrollerHeight;\\n\\t\\tvar scrollbarWidths;\\n\\n\\t\\t// reset all dimensions back to the original state\\n\\t\\tthis.bottomRuleEl.hide(); // .show() will be called later if this <hr> is necessary\\n\\t\\tthis.scroller.clear(); // sets height to 'auto' and clears overflow\\n\\t\\tuncompensateScroll(this.noScrollRowEls);\\n\\n\\t\\t// limit number of events in the all-day area\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.removeSegPopover(); // kill the \\\"more\\\" popover if displayed\\n\\n\\t\\t\\teventLimit = this.opt('eventLimit');\\n\\t\\t\\tif (eventLimit && typeof eventLimit !== 'number') {\\n\\t\\t\\t\\teventLimit = AGENDA_ALL_DAY_EVENT_LIMIT; // make sure \\\"auto\\\" goes to a real number\\n\\t\\t\\t}\\n\\t\\t\\tif (eventLimit) {\\n\\t\\t\\t\\tthis.dayGrid.limitRows(eventLimit);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (!isAuto) { // should we force dimensions of the scroll container?\\n\\n\\t\\t\\tscrollerHeight = this.computeScrollerHeight(totalHeight);\\n\\t\\t\\tthis.scroller.setHeight(scrollerHeight);\\n\\t\\t\\tscrollbarWidths = this.scroller.getScrollbarWidths();\\n\\n\\t\\t\\tif (scrollbarWidths.left || scrollbarWidths.right) { // using scrollbars?\\n\\n\\t\\t\\t\\t// make the all-day and header rows lines up\\n\\t\\t\\t\\tcompensateScroll(this.noScrollRowEls, scrollbarWidths);\\n\\n\\t\\t\\t\\t// the scrollbar compensation might have changed text flow, which might affect height, so recalculate\\n\\t\\t\\t\\t// and reapply the desired height to the scroller.\\n\\t\\t\\t\\tscrollerHeight = this.computeScrollerHeight(totalHeight);\\n\\t\\t\\t\\tthis.scroller.setHeight(scrollerHeight);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// guarantees the same scrollbar widths\\n\\t\\t\\tthis.scroller.lockOverflow(scrollbarWidths);\\n\\n\\t\\t\\t// if there's any space below the slats, show the horizontal rule.\\n\\t\\t\\t// this won't cause any new overflow, because lockOverflow already called.\\n\\t\\t\\tif (this.timeGrid.getTotalSlatHeight() < scrollerHeight) {\\n\\t\\t\\t\\tthis.bottomRuleEl.show();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// given a desired total height of the view, returns what the height of the scroller should be\\n\\tcomputeScrollerHeight: function(totalHeight) {\\n\\t\\treturn totalHeight -\\n\\t\\t\\tsubtractInnerElHeight(this.el, this.scroller.el); // everything that's NOT the scroller\\n\\t},\\n\\n\\n\\t/* Scroll\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Computes the initial pre-configured scroll state prior to allowing the user to change it\\n\\tcomputeInitialScroll: function() {\\n\\t\\tvar scrollTime = moment.duration(this.opt('scrollTime'));\\n\\t\\tvar top = this.timeGrid.computeTimeTop(scrollTime);\\n\\n\\t\\t// zoom can give weird floating-point values. rather scroll a little bit further\\n\\t\\ttop = Math.ceil(top);\\n\\n\\t\\tif (top) {\\n\\t\\t\\ttop++; // to overcome top border that slots beyond the first have. looks better\\n\\t\\t}\\n\\n\\t\\treturn { top: top };\\n\\t},\\n\\n\\n\\tqueryScroll: function() {\\n\\t\\treturn { top: this.scroller.getScrollTop() };\\n\\t},\\n\\n\\n\\tsetScroll: function(scroll) {\\n\\t\\tthis.scroller.setScrollTop(scroll.top);\\n\\t},\\n\\n\\n\\t/* Hit Areas\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\t// forward all hit-related method calls to the grids (dayGrid might not be defined)\\n\\n\\n\\tprepareHits: function() {\\n\\t\\tthis.timeGrid.prepareHits();\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.prepareHits();\\n\\t\\t}\\n\\t},\\n\\n\\n\\treleaseHits: function() {\\n\\t\\tthis.timeGrid.releaseHits();\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.releaseHits();\\n\\t\\t}\\n\\t},\\n\\n\\n\\tqueryHit: function(left, top) {\\n\\t\\tvar hit = this.timeGrid.queryHit(left, top);\\n\\n\\t\\tif (!hit && this.dayGrid) {\\n\\t\\t\\thit = this.dayGrid.queryHit(left, top);\\n\\t\\t}\\n\\n\\t\\treturn hit;\\n\\t},\\n\\n\\n\\tgetHitSpan: function(hit) {\\n\\t\\t// TODO: hit.component is set as a hack to identify where the hit came from\\n\\t\\treturn hit.component.getHitSpan(hit);\\n\\t},\\n\\n\\n\\tgetHitEl: function(hit) {\\n\\t\\t// TODO: hit.component is set as a hack to identify where the hit came from\\n\\t\\treturn hit.component.getHitEl(hit);\\n\\t},\\n\\n\\n\\t/* Events\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders events onto the view and populates the View's segment array\\n\\trenderEvents: function(events) {\\n\\t\\tvar dayEvents = [];\\n\\t\\tvar timedEvents = [];\\n\\t\\tvar daySegs = [];\\n\\t\\tvar timedSegs;\\n\\t\\tvar i;\\n\\n\\t\\t// separate the events into all-day and timed\\n\\t\\tfor (i = 0; i < events.length; i++) {\\n\\t\\t\\tif (events[i].allDay) {\\n\\t\\t\\t\\tdayEvents.push(events[i]);\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\ttimedEvents.push(events[i]);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// render the events in the subcomponents\\n\\t\\ttimedSegs = this.timeGrid.renderEvents(timedEvents);\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tdaySegs = this.dayGrid.renderEvents(dayEvents);\\n\\t\\t}\\n\\n\\t\\t// the all-day area is flexible and might have a lot of events, so shift the height\\n\\t\\tthis.updateHeight();\\n\\t},\\n\\n\\n\\t// Retrieves all segment objects that are rendered in the view\\n\\tgetEventSegs: function() {\\n\\t\\treturn this.timeGrid.getEventSegs().concat(\\n\\t\\t\\tthis.dayGrid ? this.dayGrid.getEventSegs() : []\\n\\t\\t);\\n\\t},\\n\\n\\n\\t// Unrenders all event elements and clears internal segment data\\n\\tunrenderEvents: function() {\\n\\n\\t\\t// unrender the events in the subcomponents\\n\\t\\tthis.timeGrid.unrenderEvents();\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.unrenderEvents();\\n\\t\\t}\\n\\n\\t\\t// we DON'T need to call updateHeight() because\\n\\t\\t// a renderEvents() call always happens after this, which will eventually call updateHeight()\\n\\t},\\n\\n\\n\\t/* Dragging (for events and external elements)\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// A returned value of `true` signals that a mock \\\"helper\\\" event has been rendered.\\n\\trenderDrag: function(dropLocation, seg) {\\n\\t\\tif (dropLocation.start.hasTime()) {\\n\\t\\t\\treturn this.timeGrid.renderDrag(dropLocation, seg);\\n\\t\\t}\\n\\t\\telse if (this.dayGrid) {\\n\\t\\t\\treturn this.dayGrid.renderDrag(dropLocation, seg);\\n\\t\\t}\\n\\t},\\n\\n\\n\\tunrenderDrag: function() {\\n\\t\\tthis.timeGrid.unrenderDrag();\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.unrenderDrag();\\n\\t\\t}\\n\\t},\\n\\n\\n\\t/* Selection\\n\\t------------------------------------------------------------------------------------------------------------------*/\\n\\n\\n\\t// Renders a visual indication of a selection\\n\\trenderSelection: function(span) {\\n\\t\\tif (span.start.hasTime() || span.end.hasTime()) {\\n\\t\\t\\tthis.timeGrid.renderSelection(span);\\n\\t\\t}\\n\\t\\telse if (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.renderSelection(span);\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Unrenders a visual indications of a selection\\n\\tunrenderSelection: function() {\\n\\t\\tthis.timeGrid.unrenderSelection();\\n\\t\\tif (this.dayGrid) {\\n\\t\\t\\tthis.dayGrid.unrenderSelection();\\n\\t\\t}\\n\\t}\\n\\n});\\n\\n\\n// Methods that will customize the rendering behavior of the AgendaView's timeGrid\\n// TODO: move into TimeGrid\\nvar agendaTimeGridMethods = {\\n\\n\\n\\t// Generates the HTML that will go before the day-of week header cells\\n\\trenderHeadIntroHtml: function() {\\n\\t\\tvar view = this.view;\\n\\t\\tvar weekText;\\n\\n\\t\\tif (view.opt('weekNumbers')) {\\n\\t\\t\\tweekText = this.start.format(view.opt('smallWeekFormat'));\\n\\n\\t\\t\\treturn '' +\\n\\t\\t\\t\\t'<th class=\\\"fc-axis fc-week-number ' + view.widgetHeaderClass + '\\\" ' + view.axisStyleAttr() + '>' +\\n\\t\\t\\t\\t\\tview.buildGotoAnchorHtml( // aside from link, important for matchCellWidths\\n\\t\\t\\t\\t\\t\\t{ date: this.start, type: 'week', forceOff: this.colCnt > 1 },\\n\\t\\t\\t\\t\\t\\thtmlEscape(weekText) // inner HTML\\n\\t\\t\\t\\t\\t) +\\n\\t\\t\\t\\t'</th>';\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\treturn '<th class=\\\"fc-axis ' + view.widgetHeaderClass + '\\\" ' + view.axisStyleAttr() + '></th>';\\n\\t\\t}\\n\\t},\\n\\n\\n\\t// Generates the HTML that goes before the bg of the TimeGrid slot area. Long vertical column.\\n\\trenderBgIntroHtml: function() {\\n\\t\\tvar view = this.view;\\n\\n\\t\\treturn '<td class=\\\"fc-axis ' + view.widgetContentClass + '\\\" ' + view.axisStyleAttr() + '></td>';\\n\\t},\\n\\n\\n\\t// Generates the HTML that goes before all other types of cells.\\n\\t// Affects content-skeleton, helper-skeleton, highlight-skeleton for both the time-grid and day-grid.\\n\\trenderIntroHtml: function() {\\n\\t\\tvar view = this.view;\\n\\n\\t\\treturn '<td class=\\\"fc-axis\\\" ' + view.axisStyleAttr() + '></td>';\\n\\t}\\n\\n};\\n\\n\\n// Methods that will customize the rendering behavior of the AgendaView's dayGrid\\nvar agendaDayGridMethods = {\\n\\n\\n\\t// Generates the HTML that goes before the all-day cells\\n\\trenderBgIntroHtml: function() {\\n\\t\\tvar view = this.view;\\n\\n\\t\\treturn '' +\\n\\t\\t\\t'<td class=\\\"fc-axis ' + view.widgetContentClass + '\\\" ' + view.axisStyleAttr() + '>' +\\n\\t\\t\\t\\t'<span>' + // needed for matchCellWidths\\n\\t\\t\\t\\t\\tview.getAllDayHtml() +\\n\\t\\t\\t\\t'</span>' +\\n\\t\\t\\t'</td>';\\n\\t},\\n\\n\\n\\t// Generates the HTML that goes before all other types of cells.\\n\\t// Affects content-skeleton, helper-skeleton, highlight-skeleton for both the time-grid and day-grid.\\n\\trenderIntroHtml: function() {\\n\\t\\tvar view = this.view;\\n\\n\\t\\treturn '<td class=\\\"fc-axis\\\" ' + view.axisStyleAttr() + '></td>';\\n\\t}\\n\\n};\\n\\n;;\\n\\nvar AGENDA_ALL_DAY_EVENT_LIMIT = 5;\\n\\n// potential nice values for the slot-duration and interval-duration\\n// from largest to smallest\\nvar AGENDA_STOCK_SUB_DURATIONS = [\\n\\t{ hours: 1 },\\n\\t{ minutes: 30 },\\n\\t{ minutes: 15 },\\n\\t{ seconds: 30 },\\n\\t{ seconds: 15 }\\n];\\n\\nfcViews.agenda = {\\n\\t'class': AgendaView,\\n\\tdefaults: {\\n\\t\\tallDaySlot: true,\\n\\t\\tslotDuration: '00:30:00',\\n\\t\\tminTime: '00:00:00',\\n\\t\\tmaxTime: '24:00:00',\\n\\t\\tslotEventOverlap: true // a bad name. confused with overlap/constraint system\\n\\t}\\n};\\n\\nfcViews.agendaDay = {\\n\\ttype: 'agenda',\\n\\tduration: { days: 1 }\\n};\\n\\nfcViews.agendaWeek = {\\n\\ttype: 'agenda',\\n\\tduration: { weeks: 1 }\\n};\\n;;\\n\\n/*\\nResponsible for the scroller, and forwarding event-related actions into the \\\"grid\\\"\\n*/\\nvar ListView = View.extend({\\n\\n\\tgrid: null,\\n\\tscroller: null,\\n\\n\\tinitialize: function() {\\n\\t\\tthis.grid = new ListViewGrid(this);\\n\\t\\tthis.scroller = new Scroller({\\n\\t\\t\\toverflowX: 'hidden',\\n\\t\\t\\toverflowY: 'auto'\\n\\t\\t});\\n\\t},\\n\\n\\tsetRange: function(range) {\\n\\t\\tView.prototype.setRange.call(this, range); // super\\n\\n\\t\\tthis.grid.setRange(range); // needs to process range-related options\\n\\t},\\n\\n\\trenderSkeleton: function() {\\n\\t\\tthis.el.addClass(\\n\\t\\t\\t'fc-list-view ' +\\n\\t\\t\\tthis.widgetContentClass\\n\\t\\t);\\n\\n\\t\\tthis.scroller.render();\\n\\t\\tthis.scroller.el.appendTo(this.el);\\n\\n\\t\\tthis.grid.setElement(this.scroller.scrollEl);\\n\\t},\\n\\n\\tunrenderSkeleton: function() {\\n\\t\\tthis.scroller.destroy(); // will remove the Grid too\\n\\t},\\n\\n\\tsetHeight: function(totalHeight, isAuto) {\\n\\t\\tthis.scroller.setHeight(this.computeScrollerHeight(totalHeight));\\n\\t},\\n\\n\\tcomputeScrollerHeight: function(totalHeight) {\\n\\t\\treturn totalHeight -\\n\\t\\t\\tsubtractInnerElHeight(this.el, this.scroller.el); // everything that's NOT the scroller\\n\\t},\\n\\n\\trenderEvents: function(events) {\\n\\t\\tthis.grid.renderEvents(events);\\n\\t},\\n\\n\\tunrenderEvents: function() {\\n\\t\\tthis.grid.unrenderEvents();\\n\\t},\\n\\n\\tisEventResizable: function(event) {\\n\\t\\treturn false;\\n\\t},\\n\\n\\tisEventDraggable: function(event) {\\n\\t\\treturn false;\\n\\t}\\n\\n});\\n\\n/*\\nResponsible for event rendering and user-interaction.\\nIts \\\"el\\\" is the inner-content of the above view's scroller.\\n*/\\nvar ListViewGrid = Grid.extend({\\n\\n\\tsegSelector: '.fc-list-item', // which elements accept event actions\\n\\thasDayInteractions: false, // no day selection or day clicking\\n\\n\\t// slices by day\\n\\tspanToSegs: function(span) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar dayStart = view.start.clone().time(0); // timed, so segs get times!\\n\\t\\tvar dayIndex = 0;\\n\\t\\tvar seg;\\n\\t\\tvar segs = [];\\n\\n\\t\\twhile (dayStart < view.end) {\\n\\n\\t\\t\\tseg = intersectRanges(span, {\\n\\t\\t\\t\\tstart: dayStart,\\n\\t\\t\\t\\tend: dayStart.clone().add(1, 'day')\\n\\t\\t\\t});\\n\\n\\t\\t\\tif (seg) {\\n\\t\\t\\t\\tseg.dayIndex = dayIndex;\\n\\t\\t\\t\\tsegs.push(seg);\\n\\t\\t\\t}\\n\\n\\t\\t\\tdayStart.add(1, 'day');\\n\\t\\t\\tdayIndex++;\\n\\n\\t\\t\\t// detect when span won't go fully into the next day,\\n\\t\\t\\t// and mutate the latest seg to the be the end.\\n\\t\\t\\tif (\\n\\t\\t\\t\\tseg && !seg.isEnd && span.end.hasTime() &&\\n\\t\\t\\t\\tspan.end < dayStart.clone().add(this.view.nextDayThreshold)\\n\\t\\t\\t) {\\n\\t\\t\\t\\tseg.end = span.end.clone();\\n\\t\\t\\t\\tseg.isEnd = true;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\t// like \\\"4:00am\\\"\\n\\tcomputeEventTimeFormat: function() {\\n\\t\\treturn this.view.opt('mediumTimeFormat');\\n\\t},\\n\\n\\t// for events with a url, the whole <tr> should be clickable,\\n\\t// but it's impossible to wrap with an <a> tag. simulate this.\\n\\thandleSegClick: function(seg, ev) {\\n\\t\\tvar url;\\n\\n\\t\\tGrid.prototype.handleSegClick.apply(this, arguments); // super. might prevent the default action\\n\\n\\t\\t// not clicking on or within an <a> with an href\\n\\t\\tif (!$(ev.target).closest('a[href]').length) {\\n\\t\\t\\turl = seg.event.url;\\n\\t\\t\\tif (url && !ev.isDefaultPrevented()) { // jsEvent not cancelled in handler\\n\\t\\t\\t\\twindow.location.href = url; // simulate link click\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\t// returns list of foreground segs that were actually rendered\\n\\trenderFgSegs: function(segs) {\\n\\t\\tsegs = this.renderFgSegEls(segs); // might filter away hidden events\\n\\n\\t\\tif (!segs.length) {\\n\\t\\t\\tthis.renderEmptyMessage();\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tthis.renderSegList(segs);\\n\\t\\t}\\n\\n\\t\\treturn segs;\\n\\t},\\n\\n\\trenderEmptyMessage: function() {\\n\\t\\tthis.el.html(\\n\\t\\t\\t'<div class=\\\"fc-list-empty-wrap2\\\">' + // TODO: try less wraps\\n\\t\\t\\t'<div class=\\\"fc-list-empty-wrap1\\\">' +\\n\\t\\t\\t'<div class=\\\"fc-list-empty\\\">' +\\n\\t\\t\\t\\thtmlEscape(this.view.opt('noEventsMessage')) +\\n\\t\\t\\t'</div>' +\\n\\t\\t\\t'</div>' +\\n\\t\\t\\t'</div>'\\n\\t\\t);\\n\\t},\\n\\n\\t// render the event segments in the view\\n\\trenderSegList: function(allSegs) {\\n\\t\\tvar segsByDay = this.groupSegsByDay(allSegs); // sparse array\\n\\t\\tvar dayIndex;\\n\\t\\tvar daySegs;\\n\\t\\tvar i;\\n\\t\\tvar tableEl = $('<table class=\\\"fc-list-table\\\"><tbody/></table>');\\n\\t\\tvar tbodyEl = tableEl.find('tbody');\\n\\n\\t\\tfor (dayIndex = 0; dayIndex < segsByDay.length; dayIndex++) {\\n\\t\\t\\tdaySegs = segsByDay[dayIndex];\\n\\t\\t\\tif (daySegs) { // sparse array, so might be undefined\\n\\n\\t\\t\\t\\t// append a day header\\n\\t\\t\\t\\ttbodyEl.append(this.dayHeaderHtml(\\n\\t\\t\\t\\t\\tthis.view.start.clone().add(dayIndex, 'days')\\n\\t\\t\\t\\t));\\n\\n\\t\\t\\t\\tthis.sortEventSegs(daySegs);\\n\\n\\t\\t\\t\\tfor (i = 0; i < daySegs.length; i++) {\\n\\t\\t\\t\\t\\ttbodyEl.append(daySegs[i].el); // append event row\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tthis.el.empty().append(tableEl);\\n\\t},\\n\\n\\t// Returns a sparse array of arrays, segs grouped by their dayIndex\\n\\tgroupSegsByDay: function(segs) {\\n\\t\\tvar segsByDay = []; // sparse array\\n\\t\\tvar i, seg;\\n\\n\\t\\tfor (i = 0; i < segs.length; i++) {\\n\\t\\t\\tseg = segs[i];\\n\\t\\t\\t(segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = []))\\n\\t\\t\\t\\t.push(seg);\\n\\t\\t}\\n\\n\\t\\treturn segsByDay;\\n\\t},\\n\\n\\t// generates the HTML for the day headers that live amongst the event rows\\n\\tdayHeaderHtml: function(dayDate) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar mainFormat = view.opt('listDayFormat');\\n\\t\\tvar altFormat = view.opt('listDayAltFormat');\\n\\n\\t\\treturn '<tr class=\\\"fc-list-heading\\\" data-date=\\\"' + dayDate.format('YYYY-MM-DD') + '\\\">' +\\n\\t\\t\\t'<td class=\\\"' + view.widgetHeaderClass + '\\\" colspan=\\\"3\\\">' +\\n\\t\\t\\t\\t(mainFormat ?\\n\\t\\t\\t\\t\\tview.buildGotoAnchorHtml(\\n\\t\\t\\t\\t\\t\\tdayDate,\\n\\t\\t\\t\\t\\t\\t{ 'class': 'fc-list-heading-main' },\\n\\t\\t\\t\\t\\t\\thtmlEscape(dayDate.format(mainFormat)) // inner HTML\\n\\t\\t\\t\\t\\t) :\\n\\t\\t\\t\\t\\t'') +\\n\\t\\t\\t\\t(altFormat ?\\n\\t\\t\\t\\t\\tview.buildGotoAnchorHtml(\\n\\t\\t\\t\\t\\t\\tdayDate,\\n\\t\\t\\t\\t\\t\\t{ 'class': 'fc-list-heading-alt' },\\n\\t\\t\\t\\t\\t\\thtmlEscape(dayDate.format(altFormat)) // inner HTML\\n\\t\\t\\t\\t\\t) :\\n\\t\\t\\t\\t\\t'') +\\n\\t\\t\\t'</td>' +\\n\\t\\t'</tr>';\\n\\t},\\n\\n\\t// generates the HTML for a single event row\\n\\tfgSegHtml: function(seg) {\\n\\t\\tvar view = this.view;\\n\\t\\tvar classes = [ 'fc-list-item' ].concat(this.getSegCustomClasses(seg));\\n\\t\\tvar bgColor = this.getSegBackgroundColor(seg);\\n\\t\\tvar event = seg.event;\\n\\t\\tvar url = event.url;\\n\\t\\tvar timeHtml;\\n\\n\\t\\tif (event.allDay) {\\n\\t\\t\\ttimeHtml = view.getAllDayHtml();\\n\\t\\t}\\n\\t\\telse if (view.isMultiDayEvent(event)) { // if the event appears to span more than one day\\n\\t\\t\\tif (seg.isStart || seg.isEnd) { // outer segment that probably lasts part of the day\\n\\t\\t\\t\\ttimeHtml = htmlEscape(this.getEventTimeText(seg));\\n\\t\\t\\t}\\n\\t\\t\\telse { // inner segment that lasts the whole day\\n\\t\\t\\t\\ttimeHtml = view.getAllDayHtml();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\t// Display the normal time text for the *event's* times\\n\\t\\t\\ttimeHtml = htmlEscape(this.getEventTimeText(event));\\n\\t\\t}\\n\\n\\t\\tif (url) {\\n\\t\\t\\tclasses.push('fc-has-url');\\n\\t\\t}\\n\\n\\t\\treturn '<tr class=\\\"' + classes.join(' ') + '\\\">' +\\n\\t\\t\\t(this.displayEventTime ?\\n\\t\\t\\t\\t'<td class=\\\"fc-list-item-time ' + view.widgetContentClass + '\\\">' +\\n\\t\\t\\t\\t\\t(timeHtml || '') +\\n\\t\\t\\t\\t'</td>' :\\n\\t\\t\\t\\t'') +\\n\\t\\t\\t'<td class=\\\"fc-list-item-marker ' + view.widgetContentClass + '\\\">' +\\n\\t\\t\\t\\t'<span class=\\\"fc-event-dot\\\"' +\\n\\t\\t\\t\\t(bgColor ?\\n\\t\\t\\t\\t\\t' style=\\\"background-color:' + bgColor + '\\\"' :\\n\\t\\t\\t\\t\\t'') +\\n\\t\\t\\t\\t'></span>' +\\n\\t\\t\\t'</td>' +\\n\\t\\t\\t'<td class=\\\"fc-list-item-title ' + view.widgetContentClass + '\\\">' +\\n\\t\\t\\t\\t'<a' + (url ? ' href=\\\"' + htmlEscape(url) + '\\\"' : '') + '>' +\\n\\t\\t\\t\\t\\thtmlEscape(seg.event.title || '') +\\n\\t\\t\\t\\t'</a>' +\\n\\t\\t\\t'</td>' +\\n\\t\\t'</tr>';\\n\\t}\\n\\n});\\n\\n;;\\n\\nfcViews.list = {\\n\\t'class': ListView,\\n\\tbuttonTextKey: 'list', // what to lookup in locale files\\n\\tdefaults: {\\n\\t\\tbuttonText: 'list', // text to display for English\\n\\t\\tlistDayFormat: 'LL', // like \\\"January 1, 2016\\\"\\n\\t\\tnoEventsMessage: 'No events to display'\\n\\t}\\n};\\n\\nfcViews.listDay = {\\n\\ttype: 'list',\\n\\tduration: { days: 1 },\\n\\tdefaults: {\\n\\t\\tlistDayFormat: 'dddd' // day-of-week is all we need. full date is probably in header\\n\\t}\\n};\\n\\nfcViews.listWeek = {\\n\\ttype: 'list',\\n\\tduration: { weeks: 1 },\\n\\tdefaults: {\\n\\t\\tlistDayFormat: 'dddd', // day-of-week is more important\\n\\t\\tlistDayAltFormat: 'LL'\\n\\t}\\n};\\n\\nfcViews.listMonth = {\\n\\ttype: 'list',\\n\\tduration: { month: 1 },\\n\\tdefaults: {\\n\\t\\tlistDayAltFormat: 'dddd' // day-of-week is nice-to-have\\n\\t}\\n};\\n\\nfcViews.listYear = {\\n\\ttype: 'list',\\n\\tduration: { year: 1 },\\n\\tdefaults: {\\n\\t\\tlistDayAltFormat: 'dddd' // day-of-week is nice-to-have\\n\\t}\\n};\\n\\n;;\\n\\r\\nreturn FC; // export for Node/CommonJS\\r\\n});\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/fullcalendar/dist/fullcalendar.js\n// module id = 749\n// module chunks = 2","module.exports = \"/*! jQuery v3.1.1 | (c) jQuery Foundation | jquery.org/license */\\n!function(a,b){\\\"use strict\\\";\\\"object\\\"==typeof module&&\\\"object\\\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\\\"jQuery requires a window with a document\\\");return b(a)}:b(a)}(\\\"undefined\\\"!=typeof window?window:this,function(a,b){\\\"use strict\\\";var c=[],d=a.document,e=Object.getPrototypeOf,f=c.slice,g=c.concat,h=c.push,i=c.indexOf,j={},k=j.toString,l=j.hasOwnProperty,m=l.toString,n=m.call(Object),o={};function p(a,b){b=b||d;var c=b.createElement(\\\"script\\\");c.text=a,b.head.appendChild(c).parentNode.removeChild(c)}var q=\\\"3.1.1\\\",r=function(a,b){return new r.fn.init(a,b)},s=/^[\\\\s\\\\uFEFF\\\\xA0]+|[\\\\s\\\\uFEFF\\\\xA0]+$/g,t=/^-ms-/,u=/-([a-z])/g,v=function(a,b){return b.toUpperCase()};r.fn=r.prototype={jquery:q,constructor:r,length:0,toArray:function(){return f.call(this)},get:function(a){return null==a?f.call(this):a<0?this[a+this.length]:this[a]},pushStack:function(a){var b=r.merge(this.constructor(),a);return b.prevObject=this,b},each:function(a){return r.each(this,a)},map:function(a){return this.pushStack(r.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(f.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(a<0?b:0);return this.pushStack(c>=0&&c<b?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:h,sort:c.sort,splice:c.splice},r.extend=r.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\\\"boolean\\\"==typeof g&&(j=g,g=arguments[h]||{},h++),\\\"object\\\"==typeof g||r.isFunction(g)||(g={}),h===i&&(g=this,h--);h<i;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(r.isPlainObject(d)||(e=r.isArray(d)))?(e?(e=!1,f=c&&r.isArray(c)?c:[]):f=c&&r.isPlainObject(c)?c:{},g[b]=r.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},r.extend({expando:\\\"jQuery\\\"+(q+Math.random()).replace(/\\\\D/g,\\\"\\\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\\\"function\\\"===r.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){var b=r.type(a);return(\\\"number\\\"===b||\\\"string\\\"===b)&&!isNaN(a-parseFloat(a))},isPlainObject:function(a){var b,c;return!(!a||\\\"[object Object]\\\"!==k.call(a))&&(!(b=e(a))||(c=l.call(b,\\\"constructor\\\")&&b.constructor,\\\"function\\\"==typeof c&&m.call(c)===n))},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\\\"\\\":\\\"object\\\"==typeof a||\\\"function\\\"==typeof a?j[k.call(a)]||\\\"object\\\":typeof a},globalEval:function(a){p(a)},camelCase:function(a){return a.replace(t,\\\"ms-\\\").replace(u,v)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b){var c,d=0;if(w(a)){for(c=a.length;d<c;d++)if(b.call(a[d],d,a[d])===!1)break}else for(d in a)if(b.call(a[d],d,a[d])===!1)break;return a},trim:function(a){return null==a?\\\"\\\":(a+\\\"\\\").replace(s,\\\"\\\")},makeArray:function(a,b){var c=b||[];return null!=a&&(w(Object(a))?r.merge(c,\\\"string\\\"==typeof a?[a]:a):h.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:i.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;d<c;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;f<g;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,f=0,h=[];if(w(a))for(d=a.length;f<d;f++)e=b(a[f],f,c),null!=e&&h.push(e);else for(f in a)e=b(a[f],f,c),null!=e&&h.push(e);return g.apply([],h)},guid:1,proxy:function(a,b){var c,d,e;if(\\\"string\\\"==typeof b&&(c=a[b],b=a,a=c),r.isFunction(a))return d=f.call(arguments,2),e=function(){return a.apply(b||this,d.concat(f.call(arguments)))},e.guid=a.guid=a.guid||r.guid++,e},now:Date.now,support:o}),\\\"function\\\"==typeof Symbol&&(r.fn[Symbol.iterator]=c[Symbol.iterator]),r.each(\\\"Boolean Number String Function Array Date RegExp Object Error Symbol\\\".split(\\\" \\\"),function(a,b){j[\\\"[object \\\"+b+\\\"]\\\"]=b.toLowerCase()});function w(a){var b=!!a&&\\\"length\\\"in a&&a.length,c=r.type(a);return\\\"function\\\"!==c&&!r.isWindow(a)&&(\\\"array\\\"===c||0===b||\\\"number\\\"==typeof b&&b>0&&b-1 in a)}var x=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\\\"sizzle\\\"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C={}.hasOwnProperty,D=[],E=D.pop,F=D.push,G=D.push,H=D.slice,I=function(a,b){for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},J=\\\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\\\",K=\\\"[\\\\\\\\x20\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\f]\\\",L=\\\"(?:\\\\\\\\\\\\\\\\.|[\\\\\\\\w-]|[^\\\\0-\\\\\\\\xa0])+\\\",M=\\\"\\\\\\\\[\\\"+K+\\\"*(\\\"+L+\\\")(?:\\\"+K+\\\"*([*^$|!~]?=)\\\"+K+\\\"*(?:'((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\"|(\\\"+L+\\\"))|)\\\"+K+\\\"*\\\\\\\\]\\\",N=\\\":(\\\"+L+\\\")(?:\\\\\\\\((('((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\")|((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\()[\\\\\\\\]]|\\\"+M+\\\")*)|.*)\\\\\\\\)|)\\\",O=new RegExp(K+\\\"+\\\",\\\"g\\\"),P=new RegExp(\\\"^\\\"+K+\\\"+|((?:^|[^\\\\\\\\\\\\\\\\])(?:\\\\\\\\\\\\\\\\.)*)\\\"+K+\\\"+$\\\",\\\"g\\\"),Q=new RegExp(\\\"^\\\"+K+\\\"*,\\\"+K+\\\"*\\\"),R=new RegExp(\\\"^\\\"+K+\\\"*([>+~]|\\\"+K+\\\")\\\"+K+\\\"*\\\"),S=new RegExp(\\\"=\\\"+K+\\\"*([^\\\\\\\\]'\\\\\\\"]*?)\\\"+K+\\\"*\\\\\\\\]\\\",\\\"g\\\"),T=new RegExp(N),U=new RegExp(\\\"^\\\"+L+\\\"$\\\"),V={ID:new RegExp(\\\"^#(\\\"+L+\\\")\\\"),CLASS:new RegExp(\\\"^\\\\\\\\.(\\\"+L+\\\")\\\"),TAG:new RegExp(\\\"^(\\\"+L+\\\"|[*])\\\"),ATTR:new RegExp(\\\"^\\\"+M),PSEUDO:new RegExp(\\\"^\\\"+N),CHILD:new RegExp(\\\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\\\\\(\\\"+K+\\\"*(even|odd|(([+-]|)(\\\\\\\\d*)n|)\\\"+K+\\\"*(?:([+-]|)\\\"+K+\\\"*(\\\\\\\\d+)|))\\\"+K+\\\"*\\\\\\\\)|)\\\",\\\"i\\\"),bool:new RegExp(\\\"^(?:\\\"+J+\\\")$\\\",\\\"i\\\"),needsContext:new RegExp(\\\"^\\\"+K+\\\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\\\\\(\\\"+K+\\\"*((?:-\\\\\\\\d)?\\\\\\\\d*)\\\"+K+\\\"*\\\\\\\\)|)(?=[^-]|$)\\\",\\\"i\\\")},W=/^(?:input|select|textarea|button)$/i,X=/^h\\\\d$/i,Y=/^[^{]+\\\\{\\\\s*\\\\[native \\\\w/,Z=/^(?:#([\\\\w-]+)|(\\\\w+)|\\\\.([\\\\w-]+))$/,$=/[+~]/,_=new RegExp(\\\"\\\\\\\\\\\\\\\\([\\\\\\\\da-f]{1,6}\\\"+K+\\\"?|(\\\"+K+\\\")|.)\\\",\\\"ig\\\"),aa=function(a,b,c){var d=\\\"0x\\\"+b-65536;return d!==d||c?b:d<0?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ba=/([\\\\0-\\\\x1f\\\\x7f]|^-?\\\\d)|^-$|[^\\\\0-\\\\x1f\\\\x7f-\\\\uFFFF\\\\w-]/g,ca=function(a,b){return b?\\\"\\\\0\\\"===a?\\\"\\\\ufffd\\\":a.slice(0,-1)+\\\"\\\\\\\\\\\"+a.charCodeAt(a.length-1).toString(16)+\\\" \\\":\\\"\\\\\\\\\\\"+a},da=function(){m()},ea=ta(function(a){return a.disabled===!0&&(\\\"form\\\"in a||\\\"label\\\"in a)},{dir:\\\"parentNode\\\",next:\\\"legend\\\"});try{G.apply(D=H.call(v.childNodes),v.childNodes),D[v.childNodes.length].nodeType}catch(fa){G={apply:D.length?function(a,b){F.apply(a,H.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s=b&&b.ownerDocument,w=b?b.nodeType:9;if(d=d||[],\\\"string\\\"!=typeof a||!a||1!==w&&9!==w&&11!==w)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==w&&(l=Z.exec(a)))if(f=l[1]){if(9===w){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(s&&(j=s.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(l[2])return G.apply(d,b.getElementsByTagName(a)),d;if((f=l[3])&&c.getElementsByClassName&&b.getElementsByClassName)return G.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\\\" \\\"]&&(!q||!q.test(a))){if(1!==w)s=b,r=a;else if(\\\"object\\\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\\\"id\\\"))?k=k.replace(ba,ca):b.setAttribute(\\\"id\\\",k=u),o=g(a),h=o.length;while(h--)o[h]=\\\"#\\\"+k+\\\" \\\"+sa(o[h]);r=o.join(\\\",\\\"),s=$.test(a)&&qa(b.parentNode)||b}if(r)try{return G.apply(d,s.querySelectorAll(r)),d}catch(x){}finally{k===u&&b.removeAttribute(\\\"id\\\")}}}return i(a.replace(P,\\\"$1\\\"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+\\\" \\\")>d.cacheLength&&delete b[a.shift()],b[c+\\\" \\\"]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement(\\\"fieldset\\\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split(\\\"|\\\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&a.sourceIndex-b.sourceIndex;if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return\\\"input\\\"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return(\\\"input\\\"===c||\\\"button\\\"===c)&&b.type===a}}function oa(a){return function(b){return\\\"form\\\"in b?b.parentNode&&b.disabled===!1?\\\"label\\\"in b?\\\"label\\\"in b.parentNode?b.parentNode.disabled===a:b.disabled===a:b.isDisabled===a||b.isDisabled!==!a&&ea(b)===a:b.disabled===a:\\\"label\\\"in b&&b.disabled===a}}function pa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function qa(a){return a&&\\\"undefined\\\"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return!!b&&\\\"HTML\\\"!==b.nodeName},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),v!==n&&(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener(\\\"unload\\\",da,!1):e.attachEvent&&e.attachEvent(\\\"onunload\\\",da)),c.attributes=ja(function(a){return a.className=\\\"i\\\",!a.getAttribute(\\\"className\\\")}),c.getElementsByTagName=ja(function(a){return a.appendChild(n.createComment(\\\"\\\")),!a.getElementsByTagName(\\\"*\\\").length}),c.getElementsByClassName=Y.test(n.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){return a.getAttribute(\\\"id\\\")===b}},d.find.ID=function(a,b){if(\\\"undefined\\\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}}):(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){var c=\\\"undefined\\\"!=typeof a.getAttributeNode&&a.getAttributeNode(\\\"id\\\");return c&&c.value===b}},d.find.ID=function(a,b){if(\\\"undefined\\\"!=typeof b.getElementById&&p){var c,d,e,f=b.getElementById(a);if(f){if(c=f.getAttributeNode(\\\"id\\\"),c&&c.value===a)return[f];e=b.getElementsByName(a),d=0;while(f=e[d++])if(c=f.getAttributeNode(\\\"id\\\"),c&&c.value===a)return[f]}return[]}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\\\"undefined\\\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\\\"*\\\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){if(\\\"undefined\\\"!=typeof b.getElementsByClassName&&p)return b.getElementsByClassName(a)},r=[],q=[],(c.qsa=Y.test(n.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML=\\\"<a id='\\\"+u+\\\"'></a><select id='\\\"+u+\\\"-\\\\r\\\\\\\\' msallowcapture=''><option selected=''></option></select>\\\",a.querySelectorAll(\\\"[msallowcapture^='']\\\").length&&q.push(\\\"[*^$]=\\\"+K+\\\"*(?:''|\\\\\\\"\\\\\\\")\\\"),a.querySelectorAll(\\\"[selected]\\\").length||q.push(\\\"\\\\\\\\[\\\"+K+\\\"*(?:value|\\\"+J+\\\")\\\"),a.querySelectorAll(\\\"[id~=\\\"+u+\\\"-]\\\").length||q.push(\\\"~=\\\"),a.querySelectorAll(\\\":checked\\\").length||q.push(\\\":checked\\\"),a.querySelectorAll(\\\"a#\\\"+u+\\\"+*\\\").length||q.push(\\\".#.+[+~]\\\")}),ja(function(a){a.innerHTML=\\\"<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>\\\";var b=n.createElement(\\\"input\\\");b.setAttribute(\\\"type\\\",\\\"hidden\\\"),a.appendChild(b).setAttribute(\\\"name\\\",\\\"D\\\"),a.querySelectorAll(\\\"[name=d]\\\").length&&q.push(\\\"name\\\"+K+\\\"*[*^$|!~]?=\\\"),2!==a.querySelectorAll(\\\":enabled\\\").length&&q.push(\\\":enabled\\\",\\\":disabled\\\"),o.appendChild(a).disabled=!0,2!==a.querySelectorAll(\\\":disabled\\\").length&&q.push(\\\":enabled\\\",\\\":disabled\\\"),a.querySelectorAll(\\\"*,:x\\\"),q.push(\\\",.*:\\\")})),(c.matchesSelector=Y.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,\\\"*\\\"),s.call(a,\\\"[s!='']:x\\\"),r.push(\\\"!=\\\",N)}),q=q.length&&new RegExp(q.join(\\\"|\\\")),r=r.length&&new RegExp(r.join(\\\"|\\\")),b=Y.test(o.compareDocumentPosition),t=b||Y.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?I(k,a)-I(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?I(k,a)-I(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?la(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(S,\\\"='$1']\\\"),c.matchesSelector&&p&&!A[b+\\\" \\\"]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&C.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.escape=function(a){return(a+\\\"\\\").replace(ba,ca)},ga.error=function(a){throw new Error(\\\"Syntax error, unrecognized expression: \\\"+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c=\\\"\\\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\\\"string\\\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:V,attrHandle:{},find:{},relative:{\\\">\\\":{dir:\\\"parentNode\\\",first:!0},\\\" \\\":{dir:\\\"parentNode\\\"},\\\"+\\\":{dir:\\\"previousSibling\\\",first:!0},\\\"~\\\":{dir:\\\"previousSibling\\\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(_,aa),a[3]=(a[3]||a[4]||a[5]||\\\"\\\").replace(_,aa),\\\"~=\\\"===a[2]&&(a[3]=\\\" \\\"+a[3]+\\\" \\\"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\\\"nth\\\"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\\\"even\\\"===a[3]||\\\"odd\\\"===a[3])),a[5]=+(a[7]+a[8]||\\\"odd\\\"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return V.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\\\"\\\":c&&T.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\\\")\\\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(_,aa).toLowerCase();return\\\"*\\\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\\\" \\\"];return b||(b=new RegExp(\\\"(^|\\\"+K+\\\")\\\"+a+\\\"(\\\"+K+\\\"|$)\\\"))&&y(a,function(a){return b.test(\\\"string\\\"==typeof a.className&&a.className||\\\"undefined\\\"!=typeof a.getAttribute&&a.getAttribute(\\\"class\\\")||\\\"\\\")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?\\\"!=\\\"===b:!b||(e+=\\\"\\\",\\\"=\\\"===b?e===c:\\\"!=\\\"===b?e!==c:\\\"^=\\\"===b?c&&0===e.indexOf(c):\\\"*=\\\"===b?c&&e.indexOf(c)>-1:\\\"$=\\\"===b?c&&e.slice(-c.length)===c:\\\"~=\\\"===b?(\\\" \\\"+e.replace(O,\\\" \\\")+\\\" \\\").indexOf(c)>-1:\\\"|=\\\"===b&&(e===c||e.slice(0,c.length+1)===c+\\\"-\\\"))}},CHILD:function(a,b,c,d,e){var f=\\\"nth\\\"!==a.slice(0,3),g=\\\"last\\\"!==a.slice(-4),h=\\\"of-type\\\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\\\"nextSibling\\\":\\\"previousSibling\\\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p=\\\"only\\\"===a&&!o&&\\\"nextSibling\\\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error(\\\"unsupported pseudo: \\\"+a);return e[u]?e(b):e.length>1?(c=[a,a,\\\"\\\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=I(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(P,\\\"$1\\\"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(_,aa),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return U.test(a||\\\"\\\")||ga.error(\\\"unsupported lang: \\\"+a),a=a.replace(_,aa).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\\\"xml:lang\\\")||b.getAttribute(\\\"lang\\\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\\\"-\\\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:oa(!1),disabled:oa(!0),checked:function(a){var b=a.nodeName.toLowerCase();return\\\"input\\\"===b&&!!a.checked||\\\"option\\\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return X.test(a.nodeName)},input:function(a){return W.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\\\"input\\\"===b&&\\\"button\\\"===a.type||\\\"button\\\"===b},text:function(a){var b;return\\\"input\\\"===a.nodeName.toLowerCase()&&\\\"text\\\"===a.type&&(null==(b=a.getAttribute(\\\"type\\\"))||\\\"text\\\"===b.toLowerCase())},first:pa(function(){return[0]}),last:pa(function(a,b){return[b-1]}),eq:pa(function(a,b,c){return[c<0?c+b:c]}),even:pa(function(a,b){for(var c=0;c<b;c+=2)a.push(c);return a}),odd:pa(function(a,b){for(var c=1;c<b;c+=2)a.push(c);return a}),lt:pa(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:pa(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function ra(){}ra.prototype=d.filters=d.pseudos,d.setFilters=new ra,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\\\" \\\"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){c&&!(e=Q.exec(h))||(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=R.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(P,\\\" \\\")}),h=h.slice(c.length));for(g in d.filter)!(e=V[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function sa(a){for(var b=0,c=a.length,d=\\\"\\\";b<c;b++)d+=a[b].value;return d}function ta(a,b,c){var d=b.dir,e=b.next,f=e||d,g=c&&\\\"parentNode\\\"===f,h=x++;return b.first?function(b,c,e){while(b=b[d])if(1===b.nodeType||g)return a(b,c,e);return!1}:function(b,c,i){var j,k,l,m=[w,h];if(i){while(b=b[d])if((1===b.nodeType||g)&&a(b,c,i))return!0}else while(b=b[d])if(1===b.nodeType||g)if(l=b[u]||(b[u]={}),k=l[b.uniqueID]||(l[b.uniqueID]={}),e&&e===b.nodeName.toLowerCase())b=b[d]||b;else{if((j=k[f])&&j[0]===w&&j[1]===h)return m[2]=j[2];if(k[f]=m,m[2]=a(b,c,i))return!0}return!1}}function ua(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function va(a,b,c){for(var d=0,e=b.length;d<e;d++)ga(a,b[d],c);return c}function wa(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;h<i;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}function xa(a,b,c,d,e,f){return d&&!d[u]&&(d=xa(d)),e&&!e[u]&&(e=xa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||va(b||\\\"*\\\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:wa(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=wa(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?I(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=wa(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):G.apply(g,r)})}function ya(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\\\" \\\"],i=g?1:0,k=ta(function(a){return a===b},h,!0),l=ta(function(a){return I(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];i<f;i++)if(c=d.relative[a[i].type])m=[ta(ua(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;e<f;e++)if(d.relative[a[e].type])break;return xa(i>1&&ua(m),i>1&&sa(a.slice(0,i-1).concat({value:\\\" \\\"===a[i-2].type?\\\"*\\\":\\\"\\\"})).replace(P,\\\"$1\\\"),c,i<e&&ya(a.slice(i,e)),e<f&&ya(a=a.slice(e)),e<f&&sa(a))}m.push(c)}return ua(m)}function za(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\\\"0\\\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\\\"*\\\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=E.call(i));u=wa(u)}G.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&ga.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+\\\" \\\"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=ya(b[c]),f[u]?d.push(f):e.push(f);f=A(a,za(e,d)),f.selector=a}return f},i=ga.select=function(a,b,c,e){var f,i,j,k,l,m=\\\"function\\\"==typeof a&&a,n=!e&&g(a=m.selector||a);if(c=c||[],1===n.length){if(i=n[0]=n[0].slice(0),i.length>2&&\\\"ID\\\"===(j=i[0]).type&&9===b.nodeType&&p&&d.relative[i[1].type]){if(b=(d.find.ID(j.matches[0].replace(_,aa),b)||[])[0],!b)return c;m&&(b=b.parentNode),a=a.slice(i.shift().value.length)}f=V.needsContext.test(a)?0:i.length;while(f--){if(j=i[f],d.relative[k=j.type])break;if((l=d.find[k])&&(e=l(j.matches[0].replace(_,aa),$.test(i[0].type)&&qa(b.parentNode)||b))){if(i.splice(f,1),a=e.length&&sa(i),!a)return G.apply(c,e),c;break}}}return(m||h(a,n))(e,b,!p,c,!b||$.test(a)&&qa(b.parentNode)||b),c},c.sortStable=u.split(\\\"\\\").sort(B).join(\\\"\\\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement(\\\"fieldset\\\"))}),ja(function(a){return a.innerHTML=\\\"<a href='#'></a>\\\",\\\"#\\\"===a.firstChild.getAttribute(\\\"href\\\")})||ka(\\\"type|href|height|width\\\",function(a,b,c){if(!c)return a.getAttribute(b,\\\"type\\\"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML=\\\"<input/>\\\",a.firstChild.setAttribute(\\\"value\\\",\\\"\\\"),\\\"\\\"===a.firstChild.getAttribute(\\\"value\\\")})||ka(\\\"value\\\",function(a,b,c){if(!c&&\\\"input\\\"===a.nodeName.toLowerCase())return a.defaultValue}),ja(function(a){return null==a.getAttribute(\\\"disabled\\\")})||ka(J,function(a,b,c){var d;if(!c)return a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);r.find=x,r.expr=x.selectors,r.expr[\\\":\\\"]=r.expr.pseudos,r.uniqueSort=r.unique=x.uniqueSort,r.text=x.getText,r.isXMLDoc=x.isXML,r.contains=x.contains,r.escapeSelector=x.escape;var y=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&r(a).is(c))break;d.push(a)}return d},z=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},A=r.expr.match.needsContext,B=/^<([a-z][^\\\\/\\\\0>:\\\\x20\\\\t\\\\r\\\\n\\\\f]*)[\\\\x20\\\\t\\\\r\\\\n\\\\f]*\\\\/?>(?:<\\\\/\\\\1>|)$/i,C=/^.[^:#\\\\[\\\\.,]*$/;function D(a,b,c){return r.isFunction(b)?r.grep(a,function(a,d){return!!b.call(a,d,a)!==c}):b.nodeType?r.grep(a,function(a){return a===b!==c}):\\\"string\\\"!=typeof b?r.grep(a,function(a){return i.call(b,a)>-1!==c}):C.test(b)?r.filter(b,a,c):(b=r.filter(b,a),r.grep(a,function(a){return i.call(b,a)>-1!==c&&1===a.nodeType}))}r.filter=function(a,b,c){var d=b[0];return c&&(a=\\\":not(\\\"+a+\\\")\\\"),1===b.length&&1===d.nodeType?r.find.matchesSelector(d,a)?[d]:[]:r.find.matches(a,r.grep(b,function(a){return 1===a.nodeType}))},r.fn.extend({find:function(a){var b,c,d=this.length,e=this;if(\\\"string\\\"!=typeof a)return this.pushStack(r(a).filter(function(){for(b=0;b<d;b++)if(r.contains(e[b],this))return!0}));for(c=this.pushStack([]),b=0;b<d;b++)r.find(a,e[b],c);return d>1?r.uniqueSort(c):c},filter:function(a){return this.pushStack(D(this,a||[],!1))},not:function(a){return this.pushStack(D(this,a||[],!0))},is:function(a){return!!D(this,\\\"string\\\"==typeof a&&A.test(a)?r(a):a||[],!1).length}});var E,F=/^(?:\\\\s*(<[\\\\w\\\\W]+>)[^>]*|#([\\\\w-]+))$/,G=r.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||E,\\\"string\\\"==typeof a){if(e=\\\"<\\\"===a[0]&&\\\">\\\"===a[a.length-1]&&a.length>=3?[null,a,null]:F.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof r?b[0]:b,r.merge(this,r.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),B.test(e[1])&&r.isPlainObject(b))for(e in b)r.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&(this[0]=f,this.length=1),this}return a.nodeType?(this[0]=a,this.length=1,this):r.isFunction(a)?void 0!==c.ready?c.ready(a):a(r):r.makeArray(a,this)};G.prototype=r.fn,E=r(d);var H=/^(?:parents|prev(?:Until|All))/,I={children:!0,contents:!0,next:!0,prev:!0};r.fn.extend({has:function(a){var b=r(a,this),c=b.length;return this.filter(function(){for(var a=0;a<c;a++)if(r.contains(this,b[a]))return!0})},closest:function(a,b){var c,d=0,e=this.length,f=[],g=\\\"string\\\"!=typeof a&&r(a);if(!A.test(a))for(;d<e;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&r.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?r.uniqueSort(f):f)},index:function(a){return a?\\\"string\\\"==typeof a?i.call(r(a),this[0]):i.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(r.uniqueSort(r.merge(this.get(),r(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function J(a,b){while((a=a[b])&&1!==a.nodeType);return a}r.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return y(a,\\\"parentNode\\\")},parentsUntil:function(a,b,c){return y(a,\\\"parentNode\\\",c)},next:function(a){return J(a,\\\"nextSibling\\\")},prev:function(a){return J(a,\\\"previousSibling\\\")},nextAll:function(a){return y(a,\\\"nextSibling\\\")},prevAll:function(a){return y(a,\\\"previousSibling\\\")},nextUntil:function(a,b,c){return y(a,\\\"nextSibling\\\",c)},prevUntil:function(a,b,c){return y(a,\\\"previousSibling\\\",c)},siblings:function(a){return z((a.parentNode||{}).firstChild,a)},children:function(a){return z(a.firstChild)},contents:function(a){return a.contentDocument||r.merge([],a.childNodes)}},function(a,b){r.fn[a]=function(c,d){var e=r.map(this,b,c);return\\\"Until\\\"!==a.slice(-5)&&(d=c),d&&\\\"string\\\"==typeof d&&(e=r.filter(d,e)),this.length>1&&(I[a]||r.uniqueSort(e),H.test(a)&&e.reverse()),this.pushStack(e)}});var K=/[^\\\\x20\\\\t\\\\r\\\\n\\\\f]+/g;function L(a){var b={};return r.each(a.match(K)||[],function(a,c){b[c]=!0}),b}r.Callbacks=function(a){a=\\\"string\\\"==typeof a?L(a):r.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\\\"\\\")},j={add:function(){return f&&(c&&!b&&(h=f.length-1,g.push(c)),function d(b){r.each(b,function(b,c){r.isFunction(c)?a.unique&&j.has(c)||f.push(c):c&&c.length&&\\\"string\\\"!==r.type(c)&&d(c)})}(arguments),c&&!b&&i()),this},remove:function(){return r.each(arguments,function(a,b){var c;while((c=r.inArray(b,f,c))>-1)f.splice(c,1),c<=h&&h--}),this},has:function(a){return a?r.inArray(a,f)>-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c=\\\"\\\",this},disabled:function(){return!f},lock:function(){return e=g=[],c||b||(f=c=\\\"\\\"),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j};function M(a){return a}function N(a){throw a}function O(a,b,c){var d;try{a&&r.isFunction(d=a.promise)?d.call(a).done(b).fail(c):a&&r.isFunction(d=a.then)?d.call(a,b,c):b.call(void 0,a)}catch(a){c.call(void 0,a)}}r.extend({Deferred:function(b){var c=[[\\\"notify\\\",\\\"progress\\\",r.Callbacks(\\\"memory\\\"),r.Callbacks(\\\"memory\\\"),2],[\\\"resolve\\\",\\\"done\\\",r.Callbacks(\\\"once memory\\\"),r.Callbacks(\\\"once memory\\\"),0,\\\"resolved\\\"],[\\\"reject\\\",\\\"fail\\\",r.Callbacks(\\\"once memory\\\"),r.Callbacks(\\\"once memory\\\"),1,\\\"rejected\\\"]],d=\\\"pending\\\",e={state:function(){return d},always:function(){return f.done(arguments).fail(arguments),this},\\\"catch\\\":function(a){return e.then(null,a)},pipe:function(){var a=arguments;return r.Deferred(function(b){r.each(c,function(c,d){var e=r.isFunction(a[d[4]])&&a[d[4]];f[d[1]](function(){var a=e&&e.apply(this,arguments);a&&r.isFunction(a.promise)?a.promise().progress(b.notify).done(b.resolve).fail(b.reject):b[d[0]+\\\"With\\\"](this,e?[a]:arguments)})}),a=null}).promise()},then:function(b,d,e){var f=0;function g(b,c,d,e){return function(){var h=this,i=arguments,j=function(){var a,j;if(!(b<f)){if(a=d.apply(h,i),a===c.promise())throw new TypeError(\\\"Thenable self-resolution\\\");j=a&&(\\\"object\\\"==typeof a||\\\"function\\\"==typeof a)&&a.then,r.isFunction(j)?e?j.call(a,g(f,c,M,e),g(f,c,N,e)):(f++,j.call(a,g(f,c,M,e),g(f,c,N,e),g(f,c,M,c.notifyWith))):(d!==M&&(h=void 0,i=[a]),(e||c.resolveWith)(h,i))}},k=e?j:function(){try{j()}catch(a){r.Deferred.exceptionHook&&r.Deferred.exceptionHook(a,k.stackTrace),b+1>=f&&(d!==N&&(h=void 0,i=[a]),c.rejectWith(h,i))}};b?k():(r.Deferred.getStackHook&&(k.stackTrace=r.Deferred.getStackHook()),a.setTimeout(k))}}return r.Deferred(function(a){c[0][3].add(g(0,a,r.isFunction(e)?e:M,a.notifyWith)),c[1][3].add(g(0,a,r.isFunction(b)?b:M)),c[2][3].add(g(0,a,r.isFunction(d)?d:N))}).promise()},promise:function(a){return null!=a?r.extend(a,e):e}},f={};return r.each(c,function(a,b){var g=b[2],h=b[5];e[b[1]]=g.add,h&&g.add(function(){d=h},c[3-a][2].disable,c[0][2].lock),g.add(b[3].fire),f[b[0]]=function(){return f[b[0]+\\\"With\\\"](this===f?void 0:this,arguments),this},f[b[0]+\\\"With\\\"]=g.fireWith}),e.promise(f),b&&b.call(f,f),f},when:function(a){var b=arguments.length,c=b,d=Array(c),e=f.call(arguments),g=r.Deferred(),h=function(a){return function(c){d[a]=this,e[a]=arguments.length>1?f.call(arguments):c,--b||g.resolveWith(d,e)}};if(b<=1&&(O(a,g.done(h(c)).resolve,g.reject),\\\"pending\\\"===g.state()||r.isFunction(e[c]&&e[c].then)))return g.then();while(c--)O(e[c],h(c),g.reject);return g.promise()}});var P=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;r.Deferred.exceptionHook=function(b,c){a.console&&a.console.warn&&b&&P.test(b.name)&&a.console.warn(\\\"jQuery.Deferred exception: \\\"+b.message,b.stack,c)},r.readyException=function(b){a.setTimeout(function(){throw b})};var Q=r.Deferred();r.fn.ready=function(a){return Q.then(a)[\\\"catch\\\"](function(a){r.readyException(a)}),this},r.extend({isReady:!1,readyWait:1,holdReady:function(a){a?r.readyWait++:r.ready(!0)},ready:function(a){(a===!0?--r.readyWait:r.isReady)||(r.isReady=!0,a!==!0&&--r.readyWait>0||Q.resolveWith(d,[r]))}}),r.ready.then=Q.then;function R(){d.removeEventListener(\\\"DOMContentLoaded\\\",R),\\na.removeEventListener(\\\"load\\\",R),r.ready()}\\\"complete\\\"===d.readyState||\\\"loading\\\"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(r.ready):(d.addEventListener(\\\"DOMContentLoaded\\\",R),a.addEventListener(\\\"load\\\",R));var S=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\\\"object\\\"===r.type(c)){e=!0;for(h in c)S(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,r.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(r(a),c)})),b))for(;h<i;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},T=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function U(){this.expando=r.expando+U.uid++}U.uid=1,U.prototype={cache:function(a){var b=a[this.expando];return b||(b={},T(a)&&(a.nodeType?a[this.expando]=b:Object.defineProperty(a,this.expando,{value:b,configurable:!0}))),b},set:function(a,b,c){var d,e=this.cache(a);if(\\\"string\\\"==typeof b)e[r.camelCase(b)]=c;else for(d in b)e[r.camelCase(d)]=b[d];return e},get:function(a,b){return void 0===b?this.cache(a):a[this.expando]&&a[this.expando][r.camelCase(b)]},access:function(a,b,c){return void 0===b||b&&\\\"string\\\"==typeof b&&void 0===c?this.get(a,b):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d=a[this.expando];if(void 0!==d){if(void 0!==b){r.isArray(b)?b=b.map(r.camelCase):(b=r.camelCase(b),b=b in d?[b]:b.match(K)||[]),c=b.length;while(c--)delete d[b[c]]}(void 0===b||r.isEmptyObject(d))&&(a.nodeType?a[this.expando]=void 0:delete a[this.expando])}},hasData:function(a){var b=a[this.expando];return void 0!==b&&!r.isEmptyObject(b)}};var V=new U,W=new U,X=/^(?:\\\\{[\\\\w\\\\W]*\\\\}|\\\\[[\\\\w\\\\W]*\\\\])$/,Y=/[A-Z]/g;function Z(a){return\\\"true\\\"===a||\\\"false\\\"!==a&&(\\\"null\\\"===a?null:a===+a+\\\"\\\"?+a:X.test(a)?JSON.parse(a):a)}function $(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\\\"data-\\\"+b.replace(Y,\\\"-$&\\\").toLowerCase(),c=a.getAttribute(d),\\\"string\\\"==typeof c){try{c=Z(c)}catch(e){}W.set(a,b,c)}else c=void 0;return c}r.extend({hasData:function(a){return W.hasData(a)||V.hasData(a)},data:function(a,b,c){return W.access(a,b,c)},removeData:function(a,b){W.remove(a,b)},_data:function(a,b,c){return V.access(a,b,c)},_removeData:function(a,b){V.remove(a,b)}}),r.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=W.get(f),1===f.nodeType&&!V.get(f,\\\"hasDataAttrs\\\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\\\"data-\\\")&&(d=r.camelCase(d.slice(5)),$(f,d,e[d])));V.set(f,\\\"hasDataAttrs\\\",!0)}return e}return\\\"object\\\"==typeof a?this.each(function(){W.set(this,a)}):S(this,function(b){var c;if(f&&void 0===b){if(c=W.get(f,a),void 0!==c)return c;if(c=$(f,a),void 0!==c)return c}else this.each(function(){W.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){W.remove(this,a)})}}),r.extend({queue:function(a,b,c){var d;if(a)return b=(b||\\\"fx\\\")+\\\"queue\\\",d=V.get(a,b),c&&(!d||r.isArray(c)?d=V.access(a,b,r.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||\\\"fx\\\";var c=r.queue(a,b),d=c.length,e=c.shift(),f=r._queueHooks(a,b),g=function(){r.dequeue(a,b)};\\\"inprogress\\\"===e&&(e=c.shift(),d--),e&&(\\\"fx\\\"===b&&c.unshift(\\\"inprogress\\\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\\\"queueHooks\\\";return V.get(a,c)||V.access(a,c,{empty:r.Callbacks(\\\"once memory\\\").add(function(){V.remove(a,[b+\\\"queue\\\",c])})})}}),r.fn.extend({queue:function(a,b){var c=2;return\\\"string\\\"!=typeof a&&(b=a,a=\\\"fx\\\",c--),arguments.length<c?r.queue(this[0],a):void 0===b?this:this.each(function(){var c=r.queue(this,a,b);r._queueHooks(this,a),\\\"fx\\\"===a&&\\\"inprogress\\\"!==c[0]&&r.dequeue(this,a)})},dequeue:function(a){return this.each(function(){r.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\\\"fx\\\",[])},promise:function(a,b){var c,d=1,e=r.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\\\"string\\\"!=typeof a&&(b=a,a=void 0),a=a||\\\"fx\\\";while(g--)c=V.get(f[g],a+\\\"queueHooks\\\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var _=/[+-]?(?:\\\\d*\\\\.|)\\\\d+(?:[eE][+-]?\\\\d+|)/.source,aa=new RegExp(\\\"^(?:([+-])=|)(\\\"+_+\\\")([a-z%]*)$\\\",\\\"i\\\"),ba=[\\\"Top\\\",\\\"Right\\\",\\\"Bottom\\\",\\\"Left\\\"],ca=function(a,b){return a=b||a,\\\"none\\\"===a.style.display||\\\"\\\"===a.style.display&&r.contains(a.ownerDocument,a)&&\\\"none\\\"===r.css(a,\\\"display\\\")},da=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};function ea(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return r.css(a,b,\\\"\\\")},i=h(),j=c&&c[3]||(r.cssNumber[b]?\\\"\\\":\\\"px\\\"),k=(r.cssNumber[b]||\\\"px\\\"!==j&&+i)&&aa.exec(r.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\\\".5\\\",k/=f,r.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}var fa={};function ga(a){var b,c=a.ownerDocument,d=a.nodeName,e=fa[d];return e?e:(b=c.body.appendChild(c.createElement(d)),e=r.css(b,\\\"display\\\"),b.parentNode.removeChild(b),\\\"none\\\"===e&&(e=\\\"block\\\"),fa[d]=e,e)}function ha(a,b){for(var c,d,e=[],f=0,g=a.length;f<g;f++)d=a[f],d.style&&(c=d.style.display,b?(\\\"none\\\"===c&&(e[f]=V.get(d,\\\"display\\\")||null,e[f]||(d.style.display=\\\"\\\")),\\\"\\\"===d.style.display&&ca(d)&&(e[f]=ga(d))):\\\"none\\\"!==c&&(e[f]=\\\"none\\\",V.set(d,\\\"display\\\",c)));for(f=0;f<g;f++)null!=e[f]&&(a[f].style.display=e[f]);return a}r.fn.extend({show:function(){return ha(this,!0)},hide:function(){return ha(this)},toggle:function(a){return\\\"boolean\\\"==typeof a?a?this.show():this.hide():this.each(function(){ca(this)?r(this).show():r(this).hide()})}});var ia=/^(?:checkbox|radio)$/i,ja=/<([a-z][^\\\\/\\\\0>\\\\x20\\\\t\\\\r\\\\n\\\\f]+)/i,ka=/^$|\\\\/(?:java|ecma)script/i,la={option:[1,\\\"<select multiple='multiple'>\\\",\\\"</select>\\\"],thead:[1,\\\"<table>\\\",\\\"</table>\\\"],col:[2,\\\"<table><colgroup>\\\",\\\"</colgroup></table>\\\"],tr:[2,\\\"<table><tbody>\\\",\\\"</tbody></table>\\\"],td:[3,\\\"<table><tbody><tr>\\\",\\\"</tr></tbody></table>\\\"],_default:[0,\\\"\\\",\\\"\\\"]};la.optgroup=la.option,la.tbody=la.tfoot=la.colgroup=la.caption=la.thead,la.th=la.td;function ma(a,b){var c;return c=\\\"undefined\\\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\\\"*\\\"):\\\"undefined\\\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\\\"*\\\"):[],void 0===b||b&&r.nodeName(a,b)?r.merge([a],c):c}function na(a,b){for(var c=0,d=a.length;c<d;c++)V.set(a[c],\\\"globalEval\\\",!b||V.get(b[c],\\\"globalEval\\\"))}var oa=/<|&#?\\\\w+;/;function pa(a,b,c,d,e){for(var f,g,h,i,j,k,l=b.createDocumentFragment(),m=[],n=0,o=a.length;n<o;n++)if(f=a[n],f||0===f)if(\\\"object\\\"===r.type(f))r.merge(m,f.nodeType?[f]:f);else if(oa.test(f)){g=g||l.appendChild(b.createElement(\\\"div\\\")),h=(ja.exec(f)||[\\\"\\\",\\\"\\\"])[1].toLowerCase(),i=la[h]||la._default,g.innerHTML=i[1]+r.htmlPrefilter(f)+i[2],k=i[0];while(k--)g=g.lastChild;r.merge(m,g.childNodes),g=l.firstChild,g.textContent=\\\"\\\"}else m.push(b.createTextNode(f));l.textContent=\\\"\\\",n=0;while(f=m[n++])if(d&&r.inArray(f,d)>-1)e&&e.push(f);else if(j=r.contains(f.ownerDocument,f),g=ma(l.appendChild(f),\\\"script\\\"),j&&na(g),c){k=0;while(f=g[k++])ka.test(f.type||\\\"\\\")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement(\\\"div\\\")),c=d.createElement(\\\"input\\\");c.setAttribute(\\\"type\\\",\\\"radio\\\"),c.setAttribute(\\\"checked\\\",\\\"checked\\\"),c.setAttribute(\\\"name\\\",\\\"t\\\"),b.appendChild(c),o.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\\\"<textarea>x</textarea>\\\",o.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var qa=d.documentElement,ra=/^key/,sa=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,ta=/^([^.]*)(?:\\\\.(.+)|)/;function ua(){return!0}function va(){return!1}function wa(){try{return d.activeElement}catch(a){}}function xa(a,b,c,d,e,f){var g,h;if(\\\"object\\\"==typeof b){\\\"string\\\"!=typeof c&&(d=d||c,c=void 0);for(h in b)xa(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&(\\\"string\\\"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=va;else if(!e)return a;return 1===f&&(g=e,e=function(a){return r().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=r.guid++)),a.each(function(){r.event.add(this,b,e,d,c)})}r.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.get(a);if(q){c.handler&&(f=c,c=f.handler,e=f.selector),e&&r.find.matchesSelector(qa,e),c.guid||(c.guid=r.guid++),(i=q.events)||(i=q.events={}),(g=q.handle)||(g=q.handle=function(b){return\\\"undefined\\\"!=typeof r&&r.event.triggered!==b.type?r.event.dispatch.apply(a,arguments):void 0}),b=(b||\\\"\\\").match(K)||[\\\"\\\"],j=b.length;while(j--)h=ta.exec(b[j])||[],n=p=h[1],o=(h[2]||\\\"\\\").split(\\\".\\\").sort(),n&&(l=r.event.special[n]||{},n=(e?l.delegateType:l.bindType)||n,l=r.event.special[n]||{},k=r.extend({type:n,origType:p,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&r.expr.match.needsContext.test(e),namespace:o.join(\\\".\\\")},f),(m=i[n])||(m=i[n]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,o,g)!==!1||a.addEventListener&&a.addEventListener(n,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),r.event.global[n]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.hasData(a)&&V.get(a);if(q&&(i=q.events)){b=(b||\\\"\\\").match(K)||[\\\"\\\"],j=b.length;while(j--)if(h=ta.exec(b[j])||[],n=p=h[1],o=(h[2]||\\\"\\\").split(\\\".\\\").sort(),n){l=r.event.special[n]||{},n=(d?l.delegateType:l.bindType)||n,m=i[n]||[],h=h[2]&&new RegExp(\\\"(^|\\\\\\\\.)\\\"+o.join(\\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\")+\\\"(\\\\\\\\.|$)\\\"),g=f=m.length;while(f--)k=m[f],!e&&p!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\\\"**\\\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,o,q.handle)!==!1||r.removeEvent(a,n,q.handle),delete i[n])}else for(n in i)r.event.remove(a,n+b[j],c,d,!0);r.isEmptyObject(i)&&V.remove(a,\\\"handle events\\\")}},dispatch:function(a){var b=r.event.fix(a),c,d,e,f,g,h,i=new Array(arguments.length),j=(V.get(this,\\\"events\\\")||{})[b.type]||[],k=r.event.special[b.type]||{};for(i[0]=b,c=1;c<arguments.length;c++)i[c]=arguments[c];if(b.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,b)!==!1){h=r.event.handlers.call(this,b,j),c=0;while((f=h[c++])&&!b.isPropagationStopped()){b.currentTarget=f.elem,d=0;while((g=f.handlers[d++])&&!b.isImmediatePropagationStopped())b.rnamespace&&!b.rnamespace.test(g.namespace)||(b.handleObj=g,b.data=g.data,e=((r.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(b.result=e)===!1&&(b.preventDefault(),b.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,b),b.result}},handlers:function(a,b){var c,d,e,f,g,h=[],i=b.delegateCount,j=a.target;if(i&&j.nodeType&&!(\\\"click\\\"===a.type&&a.button>=1))for(;j!==this;j=j.parentNode||this)if(1===j.nodeType&&(\\\"click\\\"!==a.type||j.disabled!==!0)){for(f=[],g={},c=0;c<i;c++)d=b[c],e=d.selector+\\\" \\\",void 0===g[e]&&(g[e]=d.needsContext?r(e,this).index(j)>-1:r.find(e,this,null,[j]).length),g[e]&&f.push(d);f.length&&h.push({elem:j,handlers:f})}return j=this,i<b.length&&h.push({elem:j,handlers:b.slice(i)}),h},addProp:function(a,b){Object.defineProperty(r.Event.prototype,a,{enumerable:!0,configurable:!0,get:r.isFunction(b)?function(){if(this.originalEvent)return b(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[a]},set:function(b){Object.defineProperty(this,a,{enumerable:!0,configurable:!0,writable:!0,value:b})}})},fix:function(a){return a[r.expando]?a:new r.Event(a)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==wa()&&this.focus)return this.focus(),!1},delegateType:\\\"focusin\\\"},blur:{trigger:function(){if(this===wa()&&this.blur)return this.blur(),!1},delegateType:\\\"focusout\\\"},click:{trigger:function(){if(\\\"checkbox\\\"===this.type&&this.click&&r.nodeName(this,\\\"input\\\"))return this.click(),!1},_default:function(a){return r.nodeName(a.target,\\\"a\\\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}}},r.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)},r.Event=function(a,b){return this instanceof r.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?ua:va,this.target=a.target&&3===a.target.nodeType?a.target.parentNode:a.target,this.currentTarget=a.currentTarget,this.relatedTarget=a.relatedTarget):this.type=a,b&&r.extend(this,b),this.timeStamp=a&&a.timeStamp||r.now(),void(this[r.expando]=!0)):new r.Event(a,b)},r.Event.prototype={constructor:r.Event,isDefaultPrevented:va,isPropagationStopped:va,isImmediatePropagationStopped:va,isSimulated:!1,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=ua,a&&!this.isSimulated&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=ua,a&&!this.isSimulated&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=ua,a&&!this.isSimulated&&a.stopImmediatePropagation(),this.stopPropagation()}},r.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,\\\"char\\\":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(a){var b=a.button;return null==a.which&&ra.test(a.type)?null!=a.charCode?a.charCode:a.keyCode:!a.which&&void 0!==b&&sa.test(a.type)?1&b?1:2&b?3:4&b?2:0:a.which}},r.event.addProp),r.each({mouseenter:\\\"mouseover\\\",mouseleave:\\\"mouseout\\\",pointerenter:\\\"pointerover\\\",pointerleave:\\\"pointerout\\\"},function(a,b){r.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return e&&(e===d||r.contains(d,e))||(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),r.fn.extend({on:function(a,b,c,d){return xa(this,a,b,c,d)},one:function(a,b,c,d){return xa(this,a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,r(a.delegateTarget).off(d.namespace?d.origType+\\\".\\\"+d.namespace:d.origType,d.selector,d.handler),this;if(\\\"object\\\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return b!==!1&&\\\"function\\\"!=typeof b||(c=b,b=void 0),c===!1&&(c=va),this.each(function(){r.event.remove(this,a,c,b)})}});var ya=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\\\/\\\\0>\\\\x20\\\\t\\\\r\\\\n\\\\f]*)[^>]*)\\\\/>/gi,za=/<script|<style|<link/i,Aa=/checked\\\\s*(?:[^=]|=\\\\s*.checked.)/i,Ba=/^true\\\\/(.*)/,Ca=/^\\\\s*<!(?:\\\\[CDATA\\\\[|--)|(?:\\\\]\\\\]|--)>\\\\s*$/g;function Da(a,b){return r.nodeName(a,\\\"table\\\")&&r.nodeName(11!==b.nodeType?b:b.firstChild,\\\"tr\\\")?a.getElementsByTagName(\\\"tbody\\\")[0]||a:a}function Ea(a){return a.type=(null!==a.getAttribute(\\\"type\\\"))+\\\"/\\\"+a.type,a}function Fa(a){var b=Ba.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\\\"type\\\"),a}function Ga(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(V.hasData(a)&&(f=V.access(a),g=V.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;c<d;c++)r.event.add(b,e,j[e][c])}W.hasData(a)&&(h=W.access(a),i=r.extend({},h),W.set(b,i))}}function Ha(a,b){var c=b.nodeName.toLowerCase();\\\"input\\\"===c&&ia.test(a.type)?b.checked=a.checked:\\\"input\\\"!==c&&\\\"textarea\\\"!==c||(b.defaultValue=a.defaultValue)}function Ia(a,b,c,d){b=g.apply([],b);var e,f,h,i,j,k,l=0,m=a.length,n=m-1,q=b[0],s=r.isFunction(q);if(s||m>1&&\\\"string\\\"==typeof q&&!o.checkClone&&Aa.test(q))return a.each(function(e){var f=a.eq(e);s&&(b[0]=q.call(this,e,f.html())),Ia(f,b,c,d)});if(m&&(e=pa(b,a[0].ownerDocument,!1,a,d),f=e.firstChild,1===e.childNodes.length&&(e=f),f||d)){for(h=r.map(ma(e,\\\"script\\\"),Ea),i=h.length;l<m;l++)j=e,l!==n&&(j=r.clone(j,!0,!0),i&&r.merge(h,ma(j,\\\"script\\\"))),c.call(a[l],j,l);if(i)for(k=h[h.length-1].ownerDocument,r.map(h,Fa),l=0;l<i;l++)j=h[l],ka.test(j.type||\\\"\\\")&&!V.access(j,\\\"globalEval\\\")&&r.contains(k,j)&&(j.src?r._evalUrl&&r._evalUrl(j.src):p(j.textContent.replace(Ca,\\\"\\\"),k))}return a}function Ja(a,b,c){for(var d,e=b?r.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||r.cleanData(ma(d)),d.parentNode&&(c&&r.contains(d.ownerDocument,d)&&na(ma(d,\\\"script\\\")),d.parentNode.removeChild(d));return a}r.extend({htmlPrefilter:function(a){return a.replace(ya,\\\"<$1></$2>\\\")},clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=r.contains(a.ownerDocument,a);if(!(o.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||r.isXMLDoc(a)))for(g=ma(h),f=ma(a),d=0,e=f.length;d<e;d++)Ha(f[d],g[d]);if(b)if(c)for(f=f||ma(a),g=g||ma(h),d=0,e=f.length;d<e;d++)Ga(f[d],g[d]);else Ga(a,h);return g=ma(h,\\\"script\\\"),g.length>0&&na(g,!i&&ma(a,\\\"script\\\")),h},cleanData:function(a){for(var b,c,d,e=r.event.special,f=0;void 0!==(c=a[f]);f++)if(T(c)){if(b=c[V.expando]){if(b.events)for(d in b.events)e[d]?r.event.remove(c,d):r.removeEvent(c,d,b.handle);c[V.expando]=void 0}c[W.expando]&&(c[W.expando]=void 0)}}}),r.fn.extend({detach:function(a){return Ja(this,a,!0)},remove:function(a){return Ja(this,a)},text:function(a){return S(this,function(a){return void 0===a?r.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=a)})},null,a,arguments.length)},append:function(){return Ia(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Da(this,a);b.appendChild(a)}})},prepend:function(){return Ia(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Da(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return Ia(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return Ia(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(r.cleanData(ma(a,!1)),a.textContent=\\\"\\\");return this},clone:function(a,b){return a=null!=a&&a,b=null==b?a:b,this.map(function(){return r.clone(this,a,b)})},html:function(a){return S(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\\\"string\\\"==typeof a&&!za.test(a)&&!la[(ja.exec(a)||[\\\"\\\",\\\"\\\"])[1].toLowerCase()]){a=r.htmlPrefilter(a);try{for(;c<d;c++)b=this[c]||{},1===b.nodeType&&(r.cleanData(ma(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return Ia(this,arguments,function(b){var c=this.parentNode;r.inArray(this,a)<0&&(r.cleanData(ma(this)),c&&c.replaceChild(b,this))},a)}}),r.each({appendTo:\\\"append\\\",prependTo:\\\"prepend\\\",insertBefore:\\\"before\\\",insertAfter:\\\"after\\\",replaceAll:\\\"replaceWith\\\"},function(a,b){r.fn[a]=function(a){for(var c,d=[],e=r(a),f=e.length-1,g=0;g<=f;g++)c=g===f?this:this.clone(!0),r(e[g])[b](c),h.apply(d,c.get());return this.pushStack(d)}});var Ka=/^margin/,La=new RegExp(\\\"^(\\\"+_+\\\")(?!px)[a-z%]+$\\\",\\\"i\\\"),Ma=function(b){var c=b.ownerDocument.defaultView;return c&&c.opener||(c=a),c.getComputedStyle(b)};!function(){function b(){if(i){i.style.cssText=\\\"box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\\\",i.innerHTML=\\\"\\\",qa.appendChild(h);var b=a.getComputedStyle(i);c=\\\"1%\\\"!==b.top,g=\\\"2px\\\"===b.marginLeft,e=\\\"4px\\\"===b.width,i.style.marginRight=\\\"50%\\\",f=\\\"4px\\\"===b.marginRight,qa.removeChild(h),i=null}}var c,e,f,g,h=d.createElement(\\\"div\\\"),i=d.createElement(\\\"div\\\");i.style&&(i.style.backgroundClip=\\\"content-box\\\",i.cloneNode(!0).style.backgroundClip=\\\"\\\",o.clearCloneStyle=\\\"content-box\\\"===i.style.backgroundClip,h.style.cssText=\\\"border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute\\\",h.appendChild(i),r.extend(o,{pixelPosition:function(){return b(),c},boxSizingReliable:function(){return b(),e},pixelMarginRight:function(){return b(),f},reliableMarginLeft:function(){return b(),g}}))}();function Na(a,b,c){var d,e,f,g,h=a.style;return c=c||Ma(a),c&&(g=c.getPropertyValue(b)||c[b],\\\"\\\"!==g||r.contains(a.ownerDocument,a)||(g=r.style(a,b)),!o.pixelMarginRight()&&La.test(g)&&Ka.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\\\"\\\":g}function Oa(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}var Pa=/^(none|table(?!-c[ea]).+)/,Qa={position:\\\"absolute\\\",visibility:\\\"hidden\\\",display:\\\"block\\\"},Ra={letterSpacing:\\\"0\\\",fontWeight:\\\"400\\\"},Sa=[\\\"Webkit\\\",\\\"Moz\\\",\\\"ms\\\"],Ta=d.createElement(\\\"div\\\").style;function Ua(a){if(a in Ta)return a;var b=a[0].toUpperCase()+a.slice(1),c=Sa.length;while(c--)if(a=Sa[c]+b,a in Ta)return a}function Va(a,b,c){var d=aa.exec(b);return d?Math.max(0,d[2]-(c||0))+(d[3]||\\\"px\\\"):b}function Wa(a,b,c,d,e){var f,g=0;for(f=c===(d?\\\"border\\\":\\\"content\\\")?4:\\\"width\\\"===b?1:0;f<4;f+=2)\\\"margin\\\"===c&&(g+=r.css(a,c+ba[f],!0,e)),d?(\\\"content\\\"===c&&(g-=r.css(a,\\\"padding\\\"+ba[f],!0,e)),\\\"margin\\\"!==c&&(g-=r.css(a,\\\"border\\\"+ba[f]+\\\"Width\\\",!0,e))):(g+=r.css(a,\\\"padding\\\"+ba[f],!0,e),\\\"padding\\\"!==c&&(g+=r.css(a,\\\"border\\\"+ba[f]+\\\"Width\\\",!0,e)));return g}function Xa(a,b,c){var d,e=!0,f=Ma(a),g=\\\"border-box\\\"===r.css(a,\\\"boxSizing\\\",!1,f);if(a.getClientRects().length&&(d=a.getBoundingClientRect()[b]),d<=0||null==d){if(d=Na(a,b,f),(d<0||null==d)&&(d=a.style[b]),La.test(d))return d;e=g&&(o.boxSizingReliable()||d===a.style[b]),d=parseFloat(d)||0}return d+Wa(a,b,c||(g?\\\"border\\\":\\\"content\\\"),e,f)+\\\"px\\\"}r.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Na(a,\\\"opacity\\\");return\\\"\\\"===c?\\\"1\\\":c}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\\\"float\\\":\\\"cssFloat\\\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=r.camelCase(b),i=a.style;return b=r.cssProps[h]||(r.cssProps[h]=Ua(h)||h),g=r.cssHooks[b]||r.cssHooks[h],void 0===c?g&&\\\"get\\\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\\\"string\\\"===f&&(e=aa.exec(c))&&e[1]&&(c=ea(a,b,e),f=\\\"number\\\"),null!=c&&c===c&&(\\\"number\\\"===f&&(c+=e&&e[3]||(r.cssNumber[h]?\\\"\\\":\\\"px\\\")),o.clearCloneStyle||\\\"\\\"!==c||0!==b.indexOf(\\\"background\\\")||(i[b]=\\\"inherit\\\"),g&&\\\"set\\\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=r.camelCase(b);return b=r.cssProps[h]||(r.cssProps[h]=Ua(h)||h),g=r.cssHooks[b]||r.cssHooks[h],g&&\\\"get\\\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=Na(a,b,d)),\\\"normal\\\"===e&&b in Ra&&(e=Ra[b]),\\\"\\\"===c||c?(f=parseFloat(e),c===!0||isFinite(f)?f||0:e):e}}),r.each([\\\"height\\\",\\\"width\\\"],function(a,b){r.cssHooks[b]={get:function(a,c,d){if(c)return!Pa.test(r.css(a,\\\"display\\\"))||a.getClientRects().length&&a.getBoundingClientRect().width?Xa(a,b,d):da(a,Qa,function(){return Xa(a,b,d)})},set:function(a,c,d){var e,f=d&&Ma(a),g=d&&Wa(a,b,d,\\\"border-box\\\"===r.css(a,\\\"boxSizing\\\",!1,f),f);return g&&(e=aa.exec(c))&&\\\"px\\\"!==(e[3]||\\\"px\\\")&&(a.style[b]=c,c=r.css(a,b)),Va(a,c,g)}}}),r.cssHooks.marginLeft=Oa(o.reliableMarginLeft,function(a,b){if(b)return(parseFloat(Na(a,\\\"marginLeft\\\"))||a.getBoundingClientRect().left-da(a,{marginLeft:0},function(){return a.getBoundingClientRect().left}))+\\\"px\\\"}),r.each({margin:\\\"\\\",padding:\\\"\\\",border:\\\"Width\\\"},function(a,b){r.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\\\"string\\\"==typeof c?c.split(\\\" \\\"):[c];d<4;d++)e[a+ba[d]+b]=f[d]||f[d-2]||f[0];return e}},Ka.test(a)||(r.cssHooks[a+b].set=Va)}),r.fn.extend({css:function(a,b){return S(this,function(a,b,c){var d,e,f={},g=0;if(r.isArray(b)){for(d=Ma(a),e=b.length;g<e;g++)f[b[g]]=r.css(a,b[g],!1,d);return f}return void 0!==c?r.style(a,b,c):r.css(a,b)},a,b,arguments.length>1)}});function Ya(a,b,c,d,e){return new Ya.prototype.init(a,b,c,d,e)}r.Tween=Ya,Ya.prototype={constructor:Ya,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||r.easing._default,this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(r.cssNumber[c]?\\\"\\\":\\\"px\\\")},cur:function(){var a=Ya.propHooks[this.prop];return a&&a.get?a.get(this):Ya.propHooks._default.get(this)},run:function(a){var b,c=Ya.propHooks[this.prop];return this.options.duration?this.pos=b=r.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Ya.propHooks._default.set(this),this}},Ya.prototype.init.prototype=Ya.prototype,Ya.propHooks={_default:{get:function(a){var b;return 1!==a.elem.nodeType||null!=a.elem[a.prop]&&null==a.elem.style[a.prop]?a.elem[a.prop]:(b=r.css(a.elem,a.prop,\\\"\\\"),b&&\\\"auto\\\"!==b?b:0)},set:function(a){r.fx.step[a.prop]?r.fx.step[a.prop](a):1!==a.elem.nodeType||null==a.elem.style[r.cssProps[a.prop]]&&!r.cssHooks[a.prop]?a.elem[a.prop]=a.now:r.style(a.elem,a.prop,a.now+a.unit)}}},Ya.propHooks.scrollTop=Ya.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},r.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},_default:\\\"swing\\\"},r.fx=Ya.prototype.init,r.fx.step={};var Za,$a,_a=/^(?:toggle|show|hide)$/,ab=/queueHooks$/;function bb(){$a&&(a.requestAnimationFrame(bb),r.fx.tick())}function cb(){return a.setTimeout(function(){Za=void 0}),Za=r.now()}function db(a,b){var c,d=0,e={height:a};for(b=b?1:0;d<4;d+=2-b)c=ba[d],e[\\\"margin\\\"+c]=e[\\\"padding\\\"+c]=a;return b&&(e.opacity=e.width=a),e}function eb(a,b,c){for(var d,e=(hb.tweeners[b]||[]).concat(hb.tweeners[\\\"*\\\"]),f=0,g=e.length;f<g;f++)if(d=e[f].call(c,b,a))return d}function fb(a,b,c){var d,e,f,g,h,i,j,k,l=\\\"width\\\"in b||\\\"height\\\"in b,m=this,n={},o=a.style,p=a.nodeType&&ca(a),q=V.get(a,\\\"fxshow\\\");c.queue||(g=r._queueHooks(a,\\\"fx\\\"),null==g.unqueued&&(g.unqueued=0,h=g.empty.fire,g.empty.fire=function(){g.unqueued||h()}),g.unqueued++,m.always(function(){m.always(function(){g.unqueued--,r.queue(a,\\\"fx\\\").length||g.empty.fire()})}));for(d in b)if(e=b[d],_a.test(e)){if(delete b[d],f=f||\\\"toggle\\\"===e,e===(p?\\\"hide\\\":\\\"show\\\")){if(\\\"show\\\"!==e||!q||void 0===q[d])continue;p=!0}n[d]=q&&q[d]||r.style(a,d)}if(i=!r.isEmptyObject(b),i||!r.isEmptyObject(n)){l&&1===a.nodeType&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=q&&q.display,null==j&&(j=V.get(a,\\\"display\\\")),k=r.css(a,\\\"display\\\"),\\\"none\\\"===k&&(j?k=j:(ha([a],!0),j=a.style.display||j,k=r.css(a,\\\"display\\\"),ha([a]))),(\\\"inline\\\"===k||\\\"inline-block\\\"===k&&null!=j)&&\\\"none\\\"===r.css(a,\\\"float\\\")&&(i||(m.done(function(){o.display=j}),null==j&&(k=o.display,j=\\\"none\\\"===k?\\\"\\\":k)),o.display=\\\"inline-block\\\")),c.overflow&&(o.overflow=\\\"hidden\\\",m.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]})),i=!1;for(d in n)i||(q?\\\"hidden\\\"in q&&(p=q.hidden):q=V.access(a,\\\"fxshow\\\",{display:j}),f&&(q.hidden=!p),p&&ha([a],!0),m.done(function(){p||ha([a]),V.remove(a,\\\"fxshow\\\");for(d in n)r.style(a,d,n[d])})),i=eb(p?q[d]:0,d,m),d in q||(q[d]=i.start,p&&(i.end=i.start,i.start=0))}}function gb(a,b){var c,d,e,f,g;for(c in a)if(d=r.camelCase(c),e=b[d],f=a[c],r.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=r.cssHooks[d],g&&\\\"expand\\\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function hb(a,b,c){var d,e,f=0,g=hb.prefilters.length,h=r.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Za||cb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;g<i;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),f<1&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:r.extend({},b),opts:r.extend(!0,{specialEasing:{},easing:r.easing._default},c),originalProperties:b,originalOptions:c,startTime:Za||cb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=r.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;c<d;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(gb(k,j.opts.specialEasing);f<g;f++)if(d=hb.prefilters[f].call(j,a,k,j.opts))return r.isFunction(d.stop)&&(r._queueHooks(j.elem,j.opts.queue).stop=r.proxy(d.stop,d)),d;return r.map(k,eb,j),r.isFunction(j.opts.start)&&j.opts.start.call(a,j),r.fx.timer(r.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}r.Animation=r.extend(hb,{tweeners:{\\\"*\\\":[function(a,b){var c=this.createTween(a,b);return ea(c.elem,a,aa.exec(b),c),c}]},tweener:function(a,b){r.isFunction(a)?(b=a,a=[\\\"*\\\"]):a=a.match(K);for(var c,d=0,e=a.length;d<e;d++)c=a[d],hb.tweeners[c]=hb.tweeners[c]||[],hb.tweeners[c].unshift(b)},prefilters:[fb],prefilter:function(a,b){b?hb.prefilters.unshift(a):hb.prefilters.push(a)}}),r.speed=function(a,b,c){var e=a&&\\\"object\\\"==typeof a?r.extend({},a):{complete:c||!c&&b||r.isFunction(a)&&a,duration:a,easing:c&&b||b&&!r.isFunction(b)&&b};return r.fx.off||d.hidden?e.duration=0:\\\"number\\\"!=typeof e.duration&&(e.duration in r.fx.speeds?e.duration=r.fx.speeds[e.duration]:e.duration=r.fx.speeds._default),null!=e.queue&&e.queue!==!0||(e.queue=\\\"fx\\\"),e.old=e.complete,e.complete=function(){r.isFunction(e.old)&&e.old.call(this),e.queue&&r.dequeue(this,e.queue)},e},r.fn.extend({fadeTo:function(a,b,c,d){return this.filter(ca).css(\\\"opacity\\\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=r.isEmptyObject(a),f=r.speed(b,c,d),g=function(){var b=hb(this,r.extend({},a),f);(e||V.get(this,\\\"finish\\\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\\\"string\\\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\\\"fx\\\",[]),this.each(function(){var b=!0,e=null!=a&&a+\\\"queueHooks\\\",f=r.timers,g=V.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&ab.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));!b&&c||r.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\\\"fx\\\"),this.each(function(){var b,c=V.get(this),d=c[a+\\\"queue\\\"],e=c[a+\\\"queueHooks\\\"],f=r.timers,g=d?d.length:0;for(c.finish=!0,r.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;b<g;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),r.each([\\\"toggle\\\",\\\"show\\\",\\\"hide\\\"],function(a,b){var c=r.fn[b];r.fn[b]=function(a,d,e){return null==a||\\\"boolean\\\"==typeof a?c.apply(this,arguments):this.animate(db(b,!0),a,d,e)}}),r.each({slideDown:db(\\\"show\\\"),slideUp:db(\\\"hide\\\"),slideToggle:db(\\\"toggle\\\"),fadeIn:{opacity:\\\"show\\\"},fadeOut:{opacity:\\\"hide\\\"},fadeToggle:{opacity:\\\"toggle\\\"}},function(a,b){r.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),r.timers=[],r.fx.tick=function(){var a,b=0,c=r.timers;for(Za=r.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||r.fx.stop(),Za=void 0},r.fx.timer=function(a){r.timers.push(a),a()?r.fx.start():r.timers.pop()},r.fx.interval=13,r.fx.start=function(){$a||($a=a.requestAnimationFrame?a.requestAnimationFrame(bb):a.setInterval(r.fx.tick,r.fx.interval))},r.fx.stop=function(){a.cancelAnimationFrame?a.cancelAnimationFrame($a):a.clearInterval($a),$a=null},r.fx.speeds={slow:600,fast:200,_default:400},r.fn.delay=function(b,c){return b=r.fx?r.fx.speeds[b]||b:b,c=c||\\\"fx\\\",this.queue(c,function(c,d){var e=a.setTimeout(c,b);d.stop=function(){a.clearTimeout(e)}})},function(){var a=d.createElement(\\\"input\\\"),b=d.createElement(\\\"select\\\"),c=b.appendChild(d.createElement(\\\"option\\\"));a.type=\\\"checkbox\\\",o.checkOn=\\\"\\\"!==a.value,o.optSelected=c.selected,a=d.createElement(\\\"input\\\"),a.value=\\\"t\\\",a.type=\\\"radio\\\",o.radioValue=\\\"t\\\"===a.value}();var ib,jb=r.expr.attrHandle;r.fn.extend({attr:function(a,b){return S(this,r.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){r.removeAttr(this,a)})}}),r.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return\\\"undefined\\\"==typeof a.getAttribute?r.prop(a,b,c):(1===f&&r.isXMLDoc(a)||(e=r.attrHooks[b.toLowerCase()]||(r.expr.match.bool.test(b)?ib:void 0)),\\nvoid 0!==c?null===c?void r.removeAttr(a,b):e&&\\\"set\\\"in e&&void 0!==(d=e.set(a,c,b))?d:(a.setAttribute(b,c+\\\"\\\"),c):e&&\\\"get\\\"in e&&null!==(d=e.get(a,b))?d:(d=r.find.attr(a,b),null==d?void 0:d))},attrHooks:{type:{set:function(a,b){if(!o.radioValue&&\\\"radio\\\"===b&&r.nodeName(a,\\\"input\\\")){var c=a.value;return a.setAttribute(\\\"type\\\",b),c&&(a.value=c),b}}}},removeAttr:function(a,b){var c,d=0,e=b&&b.match(K);if(e&&1===a.nodeType)while(c=e[d++])a.removeAttribute(c)}}),ib={set:function(a,b,c){return b===!1?r.removeAttr(a,c):a.setAttribute(c,c),c}},r.each(r.expr.match.bool.source.match(/\\\\w+/g),function(a,b){var c=jb[b]||r.find.attr;jb[b]=function(a,b,d){var e,f,g=b.toLowerCase();return d||(f=jb[g],jb[g]=e,e=null!=c(a,b,d)?g:null,jb[g]=f),e}});var kb=/^(?:input|select|textarea|button)$/i,lb=/^(?:a|area)$/i;r.fn.extend({prop:function(a,b){return S(this,r.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[r.propFix[a]||a]})}}),r.extend({prop:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return 1===f&&r.isXMLDoc(a)||(b=r.propFix[b]||b,e=r.propHooks[b]),void 0!==c?e&&\\\"set\\\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\\\"get\\\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=r.find.attr(a,\\\"tabindex\\\");return b?parseInt(b,10):kb.test(a.nodeName)||lb.test(a.nodeName)&&a.href?0:-1}}},propFix:{\\\"for\\\":\\\"htmlFor\\\",\\\"class\\\":\\\"className\\\"}}),o.optSelected||(r.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null},set:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}}),r.each([\\\"tabIndex\\\",\\\"readOnly\\\",\\\"maxLength\\\",\\\"cellSpacing\\\",\\\"cellPadding\\\",\\\"rowSpan\\\",\\\"colSpan\\\",\\\"useMap\\\",\\\"frameBorder\\\",\\\"contentEditable\\\"],function(){r.propFix[this.toLowerCase()]=this});function mb(a){var b=a.match(K)||[];return b.join(\\\" \\\")}function nb(a){return a.getAttribute&&a.getAttribute(\\\"class\\\")||\\\"\\\"}r.fn.extend({addClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).addClass(a.call(this,b,nb(this)))});if(\\\"string\\\"==typeof a&&a){b=a.match(K)||[];while(c=this[i++])if(e=nb(c),d=1===c.nodeType&&\\\" \\\"+mb(e)+\\\" \\\"){g=0;while(f=b[g++])d.indexOf(\\\" \\\"+f+\\\" \\\")<0&&(d+=f+\\\" \\\");h=mb(d),e!==h&&c.setAttribute(\\\"class\\\",h)}}return this},removeClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).removeClass(a.call(this,b,nb(this)))});if(!arguments.length)return this.attr(\\\"class\\\",\\\"\\\");if(\\\"string\\\"==typeof a&&a){b=a.match(K)||[];while(c=this[i++])if(e=nb(c),d=1===c.nodeType&&\\\" \\\"+mb(e)+\\\" \\\"){g=0;while(f=b[g++])while(d.indexOf(\\\" \\\"+f+\\\" \\\")>-1)d=d.replace(\\\" \\\"+f+\\\" \\\",\\\" \\\");h=mb(d),e!==h&&c.setAttribute(\\\"class\\\",h)}}return this},toggleClass:function(a,b){var c=typeof a;return\\\"boolean\\\"==typeof b&&\\\"string\\\"===c?b?this.addClass(a):this.removeClass(a):r.isFunction(a)?this.each(function(c){r(this).toggleClass(a.call(this,c,nb(this),b),b)}):this.each(function(){var b,d,e,f;if(\\\"string\\\"===c){d=0,e=r(this),f=a.match(K)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else void 0!==a&&\\\"boolean\\\"!==c||(b=nb(this),b&&V.set(this,\\\"__className__\\\",b),this.setAttribute&&this.setAttribute(\\\"class\\\",b||a===!1?\\\"\\\":V.get(this,\\\"__className__\\\")||\\\"\\\"))})},hasClass:function(a){var b,c,d=0;b=\\\" \\\"+a+\\\" \\\";while(c=this[d++])if(1===c.nodeType&&(\\\" \\\"+mb(nb(c))+\\\" \\\").indexOf(b)>-1)return!0;return!1}});var ob=/\\\\r/g;r.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=r.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,r(this).val()):a,null==e?e=\\\"\\\":\\\"number\\\"==typeof e?e+=\\\"\\\":r.isArray(e)&&(e=r.map(e,function(a){return null==a?\\\"\\\":a+\\\"\\\"})),b=r.valHooks[this.type]||r.valHooks[this.nodeName.toLowerCase()],b&&\\\"set\\\"in b&&void 0!==b.set(this,e,\\\"value\\\")||(this.value=e))});if(e)return b=r.valHooks[e.type]||r.valHooks[e.nodeName.toLowerCase()],b&&\\\"get\\\"in b&&void 0!==(c=b.get(e,\\\"value\\\"))?c:(c=e.value,\\\"string\\\"==typeof c?c.replace(ob,\\\"\\\"):null==c?\\\"\\\":c)}}}),r.extend({valHooks:{option:{get:function(a){var b=r.find.attr(a,\\\"value\\\");return null!=b?b:mb(r.text(a))}},select:{get:function(a){var b,c,d,e=a.options,f=a.selectedIndex,g=\\\"select-one\\\"===a.type,h=g?null:[],i=g?f+1:e.length;for(d=f<0?i:g?f:0;d<i;d++)if(c=e[d],(c.selected||d===f)&&!c.disabled&&(!c.parentNode.disabled||!r.nodeName(c.parentNode,\\\"optgroup\\\"))){if(b=r(c).val(),g)return b;h.push(b)}return h},set:function(a,b){var c,d,e=a.options,f=r.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=r.inArray(r.valHooks.option.get(d),f)>-1)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),r.each([\\\"radio\\\",\\\"checkbox\\\"],function(){r.valHooks[this]={set:function(a,b){if(r.isArray(b))return a.checked=r.inArray(r(a).val(),b)>-1}},o.checkOn||(r.valHooks[this].get=function(a){return null===a.getAttribute(\\\"value\\\")?\\\"on\\\":a.value})});var pb=/^(?:focusinfocus|focusoutblur)$/;r.extend(r.event,{trigger:function(b,c,e,f){var g,h,i,j,k,m,n,o=[e||d],p=l.call(b,\\\"type\\\")?b.type:b,q=l.call(b,\\\"namespace\\\")?b.namespace.split(\\\".\\\"):[];if(h=i=e=e||d,3!==e.nodeType&&8!==e.nodeType&&!pb.test(p+r.event.triggered)&&(p.indexOf(\\\".\\\")>-1&&(q=p.split(\\\".\\\"),p=q.shift(),q.sort()),k=p.indexOf(\\\":\\\")<0&&\\\"on\\\"+p,b=b[r.expando]?b:new r.Event(p,\\\"object\\\"==typeof b&&b),b.isTrigger=f?2:3,b.namespace=q.join(\\\".\\\"),b.rnamespace=b.namespace?new RegExp(\\\"(^|\\\\\\\\.)\\\"+q.join(\\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\")+\\\"(\\\\\\\\.|$)\\\"):null,b.result=void 0,b.target||(b.target=e),c=null==c?[b]:r.makeArray(c,[b]),n=r.event.special[p]||{},f||!n.trigger||n.trigger.apply(e,c)!==!1)){if(!f&&!n.noBubble&&!r.isWindow(e)){for(j=n.delegateType||p,pb.test(j+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),i=h;i===(e.ownerDocument||d)&&o.push(i.defaultView||i.parentWindow||a)}g=0;while((h=o[g++])&&!b.isPropagationStopped())b.type=g>1?j:n.bindType||p,m=(V.get(h,\\\"events\\\")||{})[b.type]&&V.get(h,\\\"handle\\\"),m&&m.apply(h,c),m=k&&h[k],m&&m.apply&&T(h)&&(b.result=m.apply(h,c),b.result===!1&&b.preventDefault());return b.type=p,f||b.isDefaultPrevented()||n._default&&n._default.apply(o.pop(),c)!==!1||!T(e)||k&&r.isFunction(e[p])&&!r.isWindow(e)&&(i=e[k],i&&(e[k]=null),r.event.triggered=p,e[p](),r.event.triggered=void 0,i&&(e[k]=i)),b.result}},simulate:function(a,b,c){var d=r.extend(new r.Event,c,{type:a,isSimulated:!0});r.event.trigger(d,null,b)}}),r.fn.extend({trigger:function(a,b){return this.each(function(){r.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];if(c)return r.event.trigger(a,b,c,!0)}}),r.each(\\\"blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\\\".split(\\\" \\\"),function(a,b){r.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),r.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),o.focusin=\\\"onfocusin\\\"in a,o.focusin||r.each({focus:\\\"focusin\\\",blur:\\\"focusout\\\"},function(a,b){var c=function(a){r.event.simulate(b,a.target,r.event.fix(a))};r.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=V.access(d,b);e||d.addEventListener(a,c,!0),V.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=V.access(d,b)-1;e?V.access(d,b,e):(d.removeEventListener(a,c,!0),V.remove(d,b))}}});var qb=a.location,rb=r.now(),sb=/\\\\?/;r.parseXML=function(b){var c;if(!b||\\\"string\\\"!=typeof b)return null;try{c=(new a.DOMParser).parseFromString(b,\\\"text/xml\\\")}catch(d){c=void 0}return c&&!c.getElementsByTagName(\\\"parsererror\\\").length||r.error(\\\"Invalid XML: \\\"+b),c};var tb=/\\\\[\\\\]$/,ub=/\\\\r?\\\\n/g,vb=/^(?:submit|button|image|reset|file)$/i,wb=/^(?:input|select|textarea|keygen)/i;function xb(a,b,c,d){var e;if(r.isArray(b))r.each(b,function(b,e){c||tb.test(a)?d(a,e):xb(a+\\\"[\\\"+(\\\"object\\\"==typeof e&&null!=e?b:\\\"\\\")+\\\"]\\\",e,c,d)});else if(c||\\\"object\\\"!==r.type(b))d(a,b);else for(e in b)xb(a+\\\"[\\\"+e+\\\"]\\\",b[e],c,d)}r.param=function(a,b){var c,d=[],e=function(a,b){var c=r.isFunction(b)?b():b;d[d.length]=encodeURIComponent(a)+\\\"=\\\"+encodeURIComponent(null==c?\\\"\\\":c)};if(r.isArray(a)||a.jquery&&!r.isPlainObject(a))r.each(a,function(){e(this.name,this.value)});else for(c in a)xb(c,a[c],b,e);return d.join(\\\"&\\\")},r.fn.extend({serialize:function(){return r.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=r.prop(this,\\\"elements\\\");return a?r.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!r(this).is(\\\":disabled\\\")&&wb.test(this.nodeName)&&!vb.test(a)&&(this.checked||!ia.test(a))}).map(function(a,b){var c=r(this).val();return null==c?null:r.isArray(c)?r.map(c,function(a){return{name:b.name,value:a.replace(ub,\\\"\\\\r\\\\n\\\")}}):{name:b.name,value:c.replace(ub,\\\"\\\\r\\\\n\\\")}}).get()}});var yb=/%20/g,zb=/#.*$/,Ab=/([?&])_=[^&]*/,Bb=/^(.*?):[ \\\\t]*([^\\\\r\\\\n]*)$/gm,Cb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Db=/^(?:GET|HEAD)$/,Eb=/^\\\\/\\\\//,Fb={},Gb={},Hb=\\\"*/\\\".concat(\\\"*\\\"),Ib=d.createElement(\\\"a\\\");Ib.href=qb.href;function Jb(a){return function(b,c){\\\"string\\\"!=typeof b&&(c=b,b=\\\"*\\\");var d,e=0,f=b.toLowerCase().match(K)||[];if(r.isFunction(c))while(d=f[e++])\\\"+\\\"===d[0]?(d=d.slice(1)||\\\"*\\\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Kb(a,b,c,d){var e={},f=a===Gb;function g(h){var i;return e[h]=!0,r.each(a[h]||[],function(a,h){var j=h(b,c,d);return\\\"string\\\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\\\"*\\\"]&&g(\\\"*\\\")}function Lb(a,b){var c,d,e=r.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&r.extend(!0,a,d),a}function Mb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\\\"*\\\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\\\"Content-Type\\\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\\\" \\\"+i[0]]){f=e;break}g||(g=e)}f=f||g}if(f)return f!==i[0]&&i.unshift(f),c[f]}function Nb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\\\"*\\\"===f)f=i;else if(\\\"*\\\"!==i&&i!==f){if(g=j[i+\\\" \\\"+f]||j[\\\"* \\\"+f],!g)for(e in j)if(h=e.split(\\\" \\\"),h[1]===f&&(g=j[i+\\\" \\\"+h[0]]||j[\\\"* \\\"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\\\"throws\\\"])b=g(b);else try{b=g(b)}catch(l){return{state:\\\"parsererror\\\",error:g?l:\\\"No conversion from \\\"+i+\\\" to \\\"+f}}}return{state:\\\"success\\\",data:b}}r.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:qb.href,type:\\\"GET\\\",isLocal:Cb.test(qb.protocol),global:!0,processData:!0,async:!0,contentType:\\\"application/x-www-form-urlencoded; charset=UTF-8\\\",accepts:{\\\"*\\\":Hb,text:\\\"text/plain\\\",html:\\\"text/html\\\",xml:\\\"application/xml, text/xml\\\",json:\\\"application/json, text/javascript\\\"},contents:{xml:/\\\\bxml\\\\b/,html:/\\\\bhtml/,json:/\\\\bjson\\\\b/},responseFields:{xml:\\\"responseXML\\\",text:\\\"responseText\\\",json:\\\"responseJSON\\\"},converters:{\\\"* text\\\":String,\\\"text html\\\":!0,\\\"text json\\\":JSON.parse,\\\"text xml\\\":r.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Lb(Lb(a,r.ajaxSettings),b):Lb(r.ajaxSettings,a)},ajaxPrefilter:Jb(Fb),ajaxTransport:Jb(Gb),ajax:function(b,c){\\\"object\\\"==typeof b&&(c=b,b=void 0),c=c||{};var e,f,g,h,i,j,k,l,m,n,o=r.ajaxSetup({},c),p=o.context||o,q=o.context&&(p.nodeType||p.jquery)?r(p):r.event,s=r.Deferred(),t=r.Callbacks(\\\"once memory\\\"),u=o.statusCode||{},v={},w={},x=\\\"canceled\\\",y={readyState:0,getResponseHeader:function(a){var b;if(k){if(!h){h={};while(b=Bb.exec(g))h[b[1].toLowerCase()]=b[2]}b=h[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return k?g:null},setRequestHeader:function(a,b){return null==k&&(a=w[a.toLowerCase()]=w[a.toLowerCase()]||a,v[a]=b),this},overrideMimeType:function(a){return null==k&&(o.mimeType=a),this},statusCode:function(a){var b;if(a)if(k)y.always(a[y.status]);else for(b in a)u[b]=[u[b],a[b]];return this},abort:function(a){var b=a||x;return e&&e.abort(b),A(0,b),this}};if(s.promise(y),o.url=((b||o.url||qb.href)+\\\"\\\").replace(Eb,qb.protocol+\\\"//\\\"),o.type=c.method||c.type||o.method||o.type,o.dataTypes=(o.dataType||\\\"*\\\").toLowerCase().match(K)||[\\\"\\\"],null==o.crossDomain){j=d.createElement(\\\"a\\\");try{j.href=o.url,j.href=j.href,o.crossDomain=Ib.protocol+\\\"//\\\"+Ib.host!=j.protocol+\\\"//\\\"+j.host}catch(z){o.crossDomain=!0}}if(o.data&&o.processData&&\\\"string\\\"!=typeof o.data&&(o.data=r.param(o.data,o.traditional)),Kb(Fb,o,c,y),k)return y;l=r.event&&o.global,l&&0===r.active++&&r.event.trigger(\\\"ajaxStart\\\"),o.type=o.type.toUpperCase(),o.hasContent=!Db.test(o.type),f=o.url.replace(zb,\\\"\\\"),o.hasContent?o.data&&o.processData&&0===(o.contentType||\\\"\\\").indexOf(\\\"application/x-www-form-urlencoded\\\")&&(o.data=o.data.replace(yb,\\\"+\\\")):(n=o.url.slice(f.length),o.data&&(f+=(sb.test(f)?\\\"&\\\":\\\"?\\\")+o.data,delete o.data),o.cache===!1&&(f=f.replace(Ab,\\\"$1\\\"),n=(sb.test(f)?\\\"&\\\":\\\"?\\\")+\\\"_=\\\"+rb++ +n),o.url=f+n),o.ifModified&&(r.lastModified[f]&&y.setRequestHeader(\\\"If-Modified-Since\\\",r.lastModified[f]),r.etag[f]&&y.setRequestHeader(\\\"If-None-Match\\\",r.etag[f])),(o.data&&o.hasContent&&o.contentType!==!1||c.contentType)&&y.setRequestHeader(\\\"Content-Type\\\",o.contentType),y.setRequestHeader(\\\"Accept\\\",o.dataTypes[0]&&o.accepts[o.dataTypes[0]]?o.accepts[o.dataTypes[0]]+(\\\"*\\\"!==o.dataTypes[0]?\\\", \\\"+Hb+\\\"; q=0.01\\\":\\\"\\\"):o.accepts[\\\"*\\\"]);for(m in o.headers)y.setRequestHeader(m,o.headers[m]);if(o.beforeSend&&(o.beforeSend.call(p,y,o)===!1||k))return y.abort();if(x=\\\"abort\\\",t.add(o.complete),y.done(o.success),y.fail(o.error),e=Kb(Gb,o,c,y)){if(y.readyState=1,l&&q.trigger(\\\"ajaxSend\\\",[y,o]),k)return y;o.async&&o.timeout>0&&(i=a.setTimeout(function(){y.abort(\\\"timeout\\\")},o.timeout));try{k=!1,e.send(v,A)}catch(z){if(k)throw z;A(-1,z)}}else A(-1,\\\"No Transport\\\");function A(b,c,d,h){var j,m,n,v,w,x=c;k||(k=!0,i&&a.clearTimeout(i),e=void 0,g=h||\\\"\\\",y.readyState=b>0?4:0,j=b>=200&&b<300||304===b,d&&(v=Mb(o,y,d)),v=Nb(o,v,y,j),j?(o.ifModified&&(w=y.getResponseHeader(\\\"Last-Modified\\\"),w&&(r.lastModified[f]=w),w=y.getResponseHeader(\\\"etag\\\"),w&&(r.etag[f]=w)),204===b||\\\"HEAD\\\"===o.type?x=\\\"nocontent\\\":304===b?x=\\\"notmodified\\\":(x=v.state,m=v.data,n=v.error,j=!n)):(n=x,!b&&x||(x=\\\"error\\\",b<0&&(b=0))),y.status=b,y.statusText=(c||x)+\\\"\\\",j?s.resolveWith(p,[m,x,y]):s.rejectWith(p,[y,x,n]),y.statusCode(u),u=void 0,l&&q.trigger(j?\\\"ajaxSuccess\\\":\\\"ajaxError\\\",[y,o,j?m:n]),t.fireWith(p,[y,x]),l&&(q.trigger(\\\"ajaxComplete\\\",[y,o]),--r.active||r.event.trigger(\\\"ajaxStop\\\")))}return y},getJSON:function(a,b,c){return r.get(a,b,c,\\\"json\\\")},getScript:function(a,b){return r.get(a,void 0,b,\\\"script\\\")}}),r.each([\\\"get\\\",\\\"post\\\"],function(a,b){r[b]=function(a,c,d,e){return r.isFunction(c)&&(e=e||d,d=c,c=void 0),r.ajax(r.extend({url:a,type:b,dataType:e,data:c,success:d},r.isPlainObject(a)&&a))}}),r._evalUrl=function(a){return r.ajax({url:a,type:\\\"GET\\\",dataType:\\\"script\\\",cache:!0,async:!1,global:!1,\\\"throws\\\":!0})},r.fn.extend({wrapAll:function(a){var b;return this[0]&&(r.isFunction(a)&&(a=a.call(this[0])),b=r(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this},wrapInner:function(a){return r.isFunction(a)?this.each(function(b){r(this).wrapInner(a.call(this,b))}):this.each(function(){var b=r(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=r.isFunction(a);return this.each(function(c){r(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(a){return this.parent(a).not(\\\"body\\\").each(function(){r(this).replaceWith(this.childNodes)}),this}}),r.expr.pseudos.hidden=function(a){return!r.expr.pseudos.visible(a)},r.expr.pseudos.visible=function(a){return!!(a.offsetWidth||a.offsetHeight||a.getClientRects().length)},r.ajaxSettings.xhr=function(){try{return new a.XMLHttpRequest}catch(b){}};var Ob={0:200,1223:204},Pb=r.ajaxSettings.xhr();o.cors=!!Pb&&\\\"withCredentials\\\"in Pb,o.ajax=Pb=!!Pb,r.ajaxTransport(function(b){var c,d;if(o.cors||Pb&&!b.crossDomain)return{send:function(e,f){var g,h=b.xhr();if(h.open(b.type,b.url,b.async,b.username,b.password),b.xhrFields)for(g in b.xhrFields)h[g]=b.xhrFields[g];b.mimeType&&h.overrideMimeType&&h.overrideMimeType(b.mimeType),b.crossDomain||e[\\\"X-Requested-With\\\"]||(e[\\\"X-Requested-With\\\"]=\\\"XMLHttpRequest\\\");for(g in e)h.setRequestHeader(g,e[g]);c=function(a){return function(){c&&(c=d=h.onload=h.onerror=h.onabort=h.onreadystatechange=null,\\\"abort\\\"===a?h.abort():\\\"error\\\"===a?\\\"number\\\"!=typeof h.status?f(0,\\\"error\\\"):f(h.status,h.statusText):f(Ob[h.status]||h.status,h.statusText,\\\"text\\\"!==(h.responseType||\\\"text\\\")||\\\"string\\\"!=typeof h.responseText?{binary:h.response}:{text:h.responseText},h.getAllResponseHeaders()))}},h.onload=c(),d=h.onerror=c(\\\"error\\\"),void 0!==h.onabort?h.onabort=d:h.onreadystatechange=function(){4===h.readyState&&a.setTimeout(function(){c&&d()})},c=c(\\\"abort\\\");try{h.send(b.hasContent&&b.data||null)}catch(i){if(c)throw i}},abort:function(){c&&c()}}}),r.ajaxPrefilter(function(a){a.crossDomain&&(a.contents.script=!1)}),r.ajaxSetup({accepts:{script:\\\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\\\"},contents:{script:/\\\\b(?:java|ecma)script\\\\b/},converters:{\\\"text script\\\":function(a){return r.globalEval(a),a}}}),r.ajaxPrefilter(\\\"script\\\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\\\"GET\\\")}),r.ajaxTransport(\\\"script\\\",function(a){if(a.crossDomain){var b,c;return{send:function(e,f){b=r(\\\"<script>\\\").prop({charset:a.scriptCharset,src:a.url}).on(\\\"load error\\\",c=function(a){b.remove(),c=null,a&&f(\\\"error\\\"===a.type?404:200,a.type)}),d.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Qb=[],Rb=/(=)\\\\?(?=&|$)|\\\\?\\\\?/;r.ajaxSetup({jsonp:\\\"callback\\\",jsonpCallback:function(){var a=Qb.pop()||r.expando+\\\"_\\\"+rb++;return this[a]=!0,a}}),r.ajaxPrefilter(\\\"json jsonp\\\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Rb.test(b.url)?\\\"url\\\":\\\"string\\\"==typeof b.data&&0===(b.contentType||\\\"\\\").indexOf(\\\"application/x-www-form-urlencoded\\\")&&Rb.test(b.data)&&\\\"data\\\");if(h||\\\"jsonp\\\"===b.dataTypes[0])return e=b.jsonpCallback=r.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Rb,\\\"$1\\\"+e):b.jsonp!==!1&&(b.url+=(sb.test(b.url)?\\\"&\\\":\\\"?\\\")+b.jsonp+\\\"=\\\"+e),b.converters[\\\"script json\\\"]=function(){return g||r.error(e+\\\" was not called\\\"),g[0]},b.dataTypes[0]=\\\"json\\\",f=a[e],a[e]=function(){g=arguments},d.always(function(){void 0===f?r(a).removeProp(e):a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Qb.push(e)),g&&r.isFunction(f)&&f(g[0]),g=f=void 0}),\\\"script\\\"}),o.createHTMLDocument=function(){var a=d.implementation.createHTMLDocument(\\\"\\\").body;return a.innerHTML=\\\"<form></form><form></form>\\\",2===a.childNodes.length}(),r.parseHTML=function(a,b,c){if(\\\"string\\\"!=typeof a)return[];\\\"boolean\\\"==typeof b&&(c=b,b=!1);var e,f,g;return b||(o.createHTMLDocument?(b=d.implementation.createHTMLDocument(\\\"\\\"),e=b.createElement(\\\"base\\\"),e.href=d.location.href,b.head.appendChild(e)):b=d),f=B.exec(a),g=!c&&[],f?[b.createElement(f[1])]:(f=pa([a],b,g),g&&g.length&&r(g).remove(),r.merge([],f.childNodes))},r.fn.load=function(a,b,c){var d,e,f,g=this,h=a.indexOf(\\\" \\\");return h>-1&&(d=mb(a.slice(h)),a=a.slice(0,h)),r.isFunction(b)?(c=b,b=void 0):b&&\\\"object\\\"==typeof b&&(e=\\\"POST\\\"),g.length>0&&r.ajax({url:a,type:e||\\\"GET\\\",dataType:\\\"html\\\",data:b}).done(function(a){f=arguments,g.html(d?r(\\\"<div>\\\").append(r.parseHTML(a)).find(d):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})}),this},r.each([\\\"ajaxStart\\\",\\\"ajaxStop\\\",\\\"ajaxComplete\\\",\\\"ajaxError\\\",\\\"ajaxSuccess\\\",\\\"ajaxSend\\\"],function(a,b){r.fn[b]=function(a){return this.on(b,a)}}),r.expr.pseudos.animated=function(a){return r.grep(r.timers,function(b){return a===b.elem}).length};function Sb(a){return r.isWindow(a)?a:9===a.nodeType&&a.defaultView}r.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=r.css(a,\\\"position\\\"),l=r(a),m={};\\\"static\\\"===k&&(a.style.position=\\\"relative\\\"),h=l.offset(),f=r.css(a,\\\"top\\\"),i=r.css(a,\\\"left\\\"),j=(\\\"absolute\\\"===k||\\\"fixed\\\"===k)&&(f+i).indexOf(\\\"auto\\\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),r.isFunction(b)&&(b=b.call(a,c,r.extend({},h))),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\\\"using\\\"in b?b.using.call(a,m):l.css(m)}},r.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){r.offset.setOffset(this,a,b)});var b,c,d,e,f=this[0];if(f)return f.getClientRects().length?(d=f.getBoundingClientRect(),d.width||d.height?(e=f.ownerDocument,c=Sb(e),b=e.documentElement,{top:d.top+c.pageYOffset-b.clientTop,left:d.left+c.pageXOffset-b.clientLeft}):d):{top:0,left:0}},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\\\"fixed\\\"===r.css(c,\\\"position\\\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),r.nodeName(a[0],\\\"html\\\")||(d=a.offset()),d={top:d.top+r.css(a[0],\\\"borderTopWidth\\\",!0),left:d.left+r.css(a[0],\\\"borderLeftWidth\\\",!0)}),{top:b.top-d.top-r.css(c,\\\"marginTop\\\",!0),left:b.left-d.left-r.css(c,\\\"marginLeft\\\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent;while(a&&\\\"static\\\"===r.css(a,\\\"position\\\"))a=a.offsetParent;return a||qa})}}),r.each({scrollLeft:\\\"pageXOffset\\\",scrollTop:\\\"pageYOffset\\\"},function(a,b){var c=\\\"pageYOffset\\\"===b;r.fn[a]=function(d){return S(this,function(a,d,e){var f=Sb(a);return void 0===e?f?f[b]:a[d]:void(f?f.scrollTo(c?f.pageXOffset:e,c?e:f.pageYOffset):a[d]=e)},a,d,arguments.length)}}),r.each([\\\"top\\\",\\\"left\\\"],function(a,b){r.cssHooks[b]=Oa(o.pixelPosition,function(a,c){if(c)return c=Na(a,b),La.test(c)?r(a).position()[b]+\\\"px\\\":c})}),r.each({Height:\\\"height\\\",Width:\\\"width\\\"},function(a,b){r.each({padding:\\\"inner\\\"+a,content:b,\\\"\\\":\\\"outer\\\"+a},function(c,d){r.fn[d]=function(e,f){var g=arguments.length&&(c||\\\"boolean\\\"!=typeof e),h=c||(e===!0||f===!0?\\\"margin\\\":\\\"border\\\");return S(this,function(b,c,e){var f;return r.isWindow(b)?0===d.indexOf(\\\"outer\\\")?b[\\\"inner\\\"+a]:b.document.documentElement[\\\"client\\\"+a]:9===b.nodeType?(f=b.documentElement,Math.max(b.body[\\\"scroll\\\"+a],f[\\\"scroll\\\"+a],b.body[\\\"offset\\\"+a],f[\\\"offset\\\"+a],f[\\\"client\\\"+a])):void 0===e?r.css(b,c,h):r.style(b,c,e,h)},b,g?e:void 0,g)}})}),r.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\\\"**\\\"):this.off(b,a||\\\"**\\\",c)}}),r.parseJSON=JSON.parse,\\\"function\\\"==typeof define&&define.amd&&define(\\\"jquery\\\",[],function(){return r});var Tb=a.jQuery,Ub=a.$;return r.noConflict=function(b){return a.$===r&&(a.$=Ub),b&&a.jQuery===r&&(a.jQuery=Tb),r},b||(a.jQuery=a.$=r),r});\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/jquery/dist/jquery.min.js\n// module id = 750\n// module chunks = 2","module.exports = \"//! moment.js\\n//! version : 2.17.1\\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\\n//! license : MIT\\n//! momentjs.com\\n!function(a,b){\\\"object\\\"==typeof exports&&\\\"undefined\\\"!=typeof module?module.exports=b():\\\"function\\\"==typeof define&&define.amd?define(b):a.moment=b()}(this,function(){\\\"use strict\\\";function a(){return od.apply(null,arguments)}\\n// This is done to register the method called with moment()\\n// without creating circular dependencies.\\nfunction b(a){od=a}function c(a){return a instanceof Array||\\\"[object Array]\\\"===Object.prototype.toString.call(a)}function d(a){\\n// IE8 will treat undefined and null as object if it wasn't for\\n// input != null\\nreturn null!=a&&\\\"[object Object]\\\"===Object.prototype.toString.call(a)}function e(a){var b;for(b in a)\\n// even if its not own property I'd still call it non-empty\\nreturn!1;return!0}function f(a){return\\\"number\\\"==typeof a||\\\"[object Number]\\\"===Object.prototype.toString.call(a)}function g(a){return a instanceof Date||\\\"[object Date]\\\"===Object.prototype.toString.call(a)}function h(a,b){var c,d=[];for(c=0;c<a.length;++c)d.push(b(a[c],c));return d}function i(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function j(a,b){for(var c in b)i(b,c)&&(a[c]=b[c]);return i(b,\\\"toString\\\")&&(a.toString=b.toString),i(b,\\\"valueOf\\\")&&(a.valueOf=b.valueOf),a}function k(a,b,c,d){return rb(a,b,c,d,!0).utc()}function l(){\\n// We need to deep clone this object.\\nreturn{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null}}function m(a){return null==a._pf&&(a._pf=l()),a._pf}function n(a){if(null==a._isValid){var b=m(a),c=qd.call(b.parsedDateParts,function(a){return null!=a}),d=!isNaN(a._d.getTime())&&b.overflow<0&&!b.empty&&!b.invalidMonth&&!b.invalidWeekday&&!b.nullInput&&!b.invalidFormat&&!b.userInvalidated&&(!b.meridiem||b.meridiem&&c);if(a._strict&&(d=d&&0===b.charsLeftOver&&0===b.unusedTokens.length&&void 0===b.bigHour),null!=Object.isFrozen&&Object.isFrozen(a))return d;a._isValid=d}return a._isValid}function o(a){var b=k(NaN);return null!=a?j(m(b),a):m(b).userInvalidated=!0,b}function p(a){return void 0===a}function q(a,b){var c,d,e;if(p(b._isAMomentObject)||(a._isAMomentObject=b._isAMomentObject),p(b._i)||(a._i=b._i),p(b._f)||(a._f=b._f),p(b._l)||(a._l=b._l),p(b._strict)||(a._strict=b._strict),p(b._tzm)||(a._tzm=b._tzm),p(b._isUTC)||(a._isUTC=b._isUTC),p(b._offset)||(a._offset=b._offset),p(b._pf)||(a._pf=m(b)),p(b._locale)||(a._locale=b._locale),rd.length>0)for(c in rd)d=rd[c],e=b[d],p(e)||(a[d]=e);return a}\\n// Moment prototype object\\nfunction r(b){q(this,b),this._d=new Date(null!=b._d?b._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),\\n// Prevent infinite loop in case updateOffset creates new moment\\n// objects.\\nsd===!1&&(sd=!0,a.updateOffset(this),sd=!1)}function s(a){return a instanceof r||null!=a&&null!=a._isAMomentObject}function t(a){return a<0?Math.ceil(a)||0:Math.floor(a)}function u(a){var b=+a,c=0;return 0!==b&&isFinite(b)&&(c=t(b)),c}\\n// compare two arrays, return the number of differences\\nfunction v(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;d<e;d++)(c&&a[d]!==b[d]||!c&&u(a[d])!==u(b[d]))&&g++;return g+f}function w(b){a.suppressDeprecationWarnings===!1&&\\\"undefined\\\"!=typeof console&&console.warn&&console.warn(\\\"Deprecation warning: \\\"+b)}function x(b,c){var d=!0;return j(function(){if(null!=a.deprecationHandler&&a.deprecationHandler(null,b),d){for(var e,f=[],g=0;g<arguments.length;g++){if(e=\\\"\\\",\\\"object\\\"==typeof arguments[g]){e+=\\\"\\\\n[\\\"+g+\\\"] \\\";for(var h in arguments[0])e+=h+\\\": \\\"+arguments[0][h]+\\\", \\\";e=e.slice(0,-2)}else e=arguments[g];f.push(e)}w(b+\\\"\\\\nArguments: \\\"+Array.prototype.slice.call(f).join(\\\"\\\")+\\\"\\\\n\\\"+(new Error).stack),d=!1}return c.apply(this,arguments)},c)}function y(b,c){null!=a.deprecationHandler&&a.deprecationHandler(b,c),td[b]||(w(c),td[b]=!0)}function z(a){return a instanceof Function||\\\"[object Function]\\\"===Object.prototype.toString.call(a)}function A(a){var b,c;for(c in a)b=a[c],z(b)?this[c]=b:this[\\\"_\\\"+c]=b;this._config=a,\\n// Lenient ordinal parsing accepts just a number in addition to\\n// number + (possibly) stuff coming from _ordinalParseLenient.\\nthis._ordinalParseLenient=new RegExp(this._ordinalParse.source+\\\"|\\\"+/\\\\d{1,2}/.source)}function B(a,b){var c,e=j({},a);for(c in b)i(b,c)&&(d(a[c])&&d(b[c])?(e[c]={},j(e[c],a[c]),j(e[c],b[c])):null!=b[c]?e[c]=b[c]:delete e[c]);for(c in a)i(a,c)&&!i(b,c)&&d(a[c])&&(\\n// make sure changes to properties don't modify parent config\\ne[c]=j({},e[c]));return e}function C(a){null!=a&&this.set(a)}function D(a,b,c){var d=this._calendar[a]||this._calendar.sameElse;return z(d)?d.call(b,c):d}function E(a){var b=this._longDateFormat[a],c=this._longDateFormat[a.toUpperCase()];return b||!c?b:(this._longDateFormat[a]=c.replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a])}function F(){return this._invalidDate}function G(a){return this._ordinal.replace(\\\"%d\\\",a)}function H(a,b,c,d){var e=this._relativeTime[c];return z(e)?e(a,b,c,d):e.replace(/%d/i,a)}function I(a,b){var c=this._relativeTime[a>0?\\\"future\\\":\\\"past\\\"];return z(c)?c(b):c.replace(/%s/i,b)}function J(a,b){var c=a.toLowerCase();Dd[c]=Dd[c+\\\"s\\\"]=Dd[b]=a}function K(a){return\\\"string\\\"==typeof a?Dd[a]||Dd[a.toLowerCase()]:void 0}function L(a){var b,c,d={};for(c in a)i(a,c)&&(b=K(c),b&&(d[b]=a[c]));return d}function M(a,b){Ed[a]=b}function N(a){var b=[];for(var c in a)b.push({unit:c,priority:Ed[c]});return b.sort(function(a,b){return a.priority-b.priority}),b}function O(b,c){return function(d){return null!=d?(Q(this,b,d),a.updateOffset(this,c),this):P(this,b)}}function P(a,b){return a.isValid()?a._d[\\\"get\\\"+(a._isUTC?\\\"UTC\\\":\\\"\\\")+b]():NaN}function Q(a,b,c){a.isValid()&&a._d[\\\"set\\\"+(a._isUTC?\\\"UTC\\\":\\\"\\\")+b](c)}\\n// MOMENTS\\nfunction R(a){return a=K(a),z(this[a])?this[a]():this}function S(a,b){if(\\\"object\\\"==typeof a){a=L(a);for(var c=N(a),d=0;d<c.length;d++)this[c[d].unit](a[c[d].unit])}else if(a=K(a),z(this[a]))return this[a](b);return this}function T(a,b,c){var d=\\\"\\\"+Math.abs(a),e=b-d.length,f=a>=0;return(f?c?\\\"+\\\":\\\"\\\":\\\"-\\\")+Math.pow(10,Math.max(0,e)).toString().substr(1)+d}\\n// token:    'M'\\n// padded:   ['MM', 2]\\n// ordinal:  'Mo'\\n// callback: function () { this.month() + 1 }\\nfunction U(a,b,c,d){var e=d;\\\"string\\\"==typeof d&&(e=function(){return this[d]()}),a&&(Id[a]=e),b&&(Id[b[0]]=function(){return T(e.apply(this,arguments),b[1],b[2])}),c&&(Id[c]=function(){return this.localeData().ordinal(e.apply(this,arguments),a)})}function V(a){return a.match(/\\\\[[\\\\s\\\\S]/)?a.replace(/^\\\\[|\\\\]$/g,\\\"\\\"):a.replace(/\\\\\\\\/g,\\\"\\\")}function W(a){var b,c,d=a.match(Fd);for(b=0,c=d.length;b<c;b++)Id[d[b]]?d[b]=Id[d[b]]:d[b]=V(d[b]);return function(b){var e,f=\\\"\\\";for(e=0;e<c;e++)f+=d[e]instanceof Function?d[e].call(b,a):d[e];return f}}\\n// format date using native date object\\nfunction X(a,b){return a.isValid()?(b=Y(b,a.localeData()),Hd[b]=Hd[b]||W(b),Hd[b](a)):a.localeData().invalidDate()}function Y(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(Gd.lastIndex=0;d>=0&&Gd.test(a);)a=a.replace(Gd,c),Gd.lastIndex=0,d-=1;return a}function Z(a,b,c){$d[a]=z(b)?b:function(a,d){return a&&c?c:b}}function $(a,b){return i($d,a)?$d[a](b._strict,b._locale):new RegExp(_(a))}\\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\\nfunction _(a){return aa(a.replace(\\\"\\\\\\\\\\\",\\\"\\\").replace(/\\\\\\\\(\\\\[)|\\\\\\\\(\\\\])|\\\\[([^\\\\]\\\\[]*)\\\\]|\\\\\\\\(.)/g,function(a,b,c,d,e){return b||c||d||e}))}function aa(a){return a.replace(/[-\\\\/\\\\\\\\^$*+?.()|[\\\\]{}]/g,\\\"\\\\\\\\$&\\\")}function ba(a,b){var c,d=b;for(\\\"string\\\"==typeof a&&(a=[a]),f(b)&&(d=function(a,c){c[b]=u(a)}),c=0;c<a.length;c++)_d[a[c]]=d}function ca(a,b){ba(a,function(a,c,d,e){d._w=d._w||{},b(a,d._w,d,e)})}function da(a,b,c){null!=b&&i(_d,a)&&_d[a](b,c._a,c,a)}function ea(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function fa(a,b){return a?c(this._months)?this._months[a.month()]:this._months[(this._months.isFormat||ke).test(b)?\\\"format\\\":\\\"standalone\\\"][a.month()]:this._months}function ga(a,b){return a?c(this._monthsShort)?this._monthsShort[a.month()]:this._monthsShort[ke.test(b)?\\\"format\\\":\\\"standalone\\\"][a.month()]:this._monthsShort}function ha(a,b,c){var d,e,f,g=a.toLocaleLowerCase();if(!this._monthsParse)for(\\n// this is not used\\nthis._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],d=0;d<12;++d)f=k([2e3,d]),this._shortMonthsParse[d]=this.monthsShort(f,\\\"\\\").toLocaleLowerCase(),this._longMonthsParse[d]=this.months(f,\\\"\\\").toLocaleLowerCase();return c?\\\"MMM\\\"===b?(e=je.call(this._shortMonthsParse,g),e!==-1?e:null):(e=je.call(this._longMonthsParse,g),e!==-1?e:null):\\\"MMM\\\"===b?(e=je.call(this._shortMonthsParse,g),e!==-1?e:(e=je.call(this._longMonthsParse,g),e!==-1?e:null)):(e=je.call(this._longMonthsParse,g),e!==-1?e:(e=je.call(this._shortMonthsParse,g),e!==-1?e:null))}function ia(a,b,c){var d,e,f;if(this._monthsParseExact)return ha.call(this,a,b,c);\\n// TODO: add sorting\\n// Sorting makes sure if one month (or abbr) is a prefix of another\\n// see sorting in computeMonthsParse\\nfor(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),d=0;d<12;d++){\\n// test the regex\\nif(\\n// make the regex if we don't have it already\\ne=k([2e3,d]),c&&!this._longMonthsParse[d]&&(this._longMonthsParse[d]=new RegExp(\\\"^\\\"+this.months(e,\\\"\\\").replace(\\\".\\\",\\\"\\\")+\\\"$\\\",\\\"i\\\"),this._shortMonthsParse[d]=new RegExp(\\\"^\\\"+this.monthsShort(e,\\\"\\\").replace(\\\".\\\",\\\"\\\")+\\\"$\\\",\\\"i\\\")),c||this._monthsParse[d]||(f=\\\"^\\\"+this.months(e,\\\"\\\")+\\\"|^\\\"+this.monthsShort(e,\\\"\\\"),this._monthsParse[d]=new RegExp(f.replace(\\\".\\\",\\\"\\\"),\\\"i\\\")),c&&\\\"MMMM\\\"===b&&this._longMonthsParse[d].test(a))return d;if(c&&\\\"MMM\\\"===b&&this._shortMonthsParse[d].test(a))return d;if(!c&&this._monthsParse[d].test(a))return d}}\\n// MOMENTS\\nfunction ja(a,b){var c;if(!a.isValid())\\n// No op\\nreturn a;if(\\\"string\\\"==typeof b)if(/^\\\\d+$/.test(b))b=u(b);else\\n// TODO: Another silent failure?\\nif(b=a.localeData().monthsParse(b),!f(b))return a;return c=Math.min(a.date(),ea(a.year(),b)),a._d[\\\"set\\\"+(a._isUTC?\\\"UTC\\\":\\\"\\\")+\\\"Month\\\"](b,c),a}function ka(b){return null!=b?(ja(this,b),a.updateOffset(this,!0),this):P(this,\\\"Month\\\")}function la(){return ea(this.year(),this.month())}function ma(a){return this._monthsParseExact?(i(this,\\\"_monthsRegex\\\")||oa.call(this),a?this._monthsShortStrictRegex:this._monthsShortRegex):(i(this,\\\"_monthsShortRegex\\\")||(this._monthsShortRegex=ne),this._monthsShortStrictRegex&&a?this._monthsShortStrictRegex:this._monthsShortRegex)}function na(a){return this._monthsParseExact?(i(this,\\\"_monthsRegex\\\")||oa.call(this),a?this._monthsStrictRegex:this._monthsRegex):(i(this,\\\"_monthsRegex\\\")||(this._monthsRegex=oe),this._monthsStrictRegex&&a?this._monthsStrictRegex:this._monthsRegex)}function oa(){function a(a,b){return b.length-a.length}var b,c,d=[],e=[],f=[];for(b=0;b<12;b++)\\n// make the regex if we don't have it already\\nc=k([2e3,b]),d.push(this.monthsShort(c,\\\"\\\")),e.push(this.months(c,\\\"\\\")),f.push(this.months(c,\\\"\\\")),f.push(this.monthsShort(c,\\\"\\\"));for(\\n// Sorting makes sure if one month (or abbr) is a prefix of another it\\n// will match the longer piece.\\nd.sort(a),e.sort(a),f.sort(a),b=0;b<12;b++)d[b]=aa(d[b]),e[b]=aa(e[b]);for(b=0;b<24;b++)f[b]=aa(f[b]);this._monthsRegex=new RegExp(\\\"^(\\\"+f.join(\\\"|\\\")+\\\")\\\",\\\"i\\\"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp(\\\"^(\\\"+e.join(\\\"|\\\")+\\\")\\\",\\\"i\\\"),this._monthsShortStrictRegex=new RegExp(\\\"^(\\\"+d.join(\\\"|\\\")+\\\")\\\",\\\"i\\\")}\\n// HELPERS\\nfunction pa(a){return qa(a)?366:365}function qa(a){return a%4===0&&a%100!==0||a%400===0}function ra(){return qa(this.year())}function sa(a,b,c,d,e,f,g){\\n//can't just apply() to create a date:\\n//http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\\nvar h=new Date(a,b,c,d,e,f,g);\\n//the date constructor remaps years 0-99 to 1900-1999\\nreturn a<100&&a>=0&&isFinite(h.getFullYear())&&h.setFullYear(a),h}function ta(a){var b=new Date(Date.UTC.apply(null,arguments));\\n//the Date.UTC function remaps years 0-99 to 1900-1999\\nreturn a<100&&a>=0&&isFinite(b.getUTCFullYear())&&b.setUTCFullYear(a),b}\\n// start-of-first-week - start-of-year\\nfunction ua(a,b,c){var// first-week day -- which january is always in the first week (4 for iso, 1 for other)\\nd=7+b-c,\\n// first-week day local weekday -- which local weekday is fwd\\ne=(7+ta(a,0,d).getUTCDay()-b)%7;return-e+d-1}\\n//http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\\nfunction va(a,b,c,d,e){var f,g,h=(7+c-d)%7,i=ua(a,d,e),j=1+7*(b-1)+h+i;return j<=0?(f=a-1,g=pa(f)+j):j>pa(a)?(f=a+1,g=j-pa(a)):(f=a,g=j),{year:f,dayOfYear:g}}function wa(a,b,c){var d,e,f=ua(a.year(),b,c),g=Math.floor((a.dayOfYear()-f-1)/7)+1;return g<1?(e=a.year()-1,d=g+xa(e,b,c)):g>xa(a.year(),b,c)?(d=g-xa(a.year(),b,c),e=a.year()+1):(e=a.year(),d=g),{week:d,year:e}}function xa(a,b,c){var d=ua(a,b,c),e=ua(a+1,b,c);return(pa(a)-d+e)/7}\\n// HELPERS\\n// LOCALES\\nfunction ya(a){return wa(a,this._week.dow,this._week.doy).week}function za(){return this._week.dow}function Aa(){return this._week.doy}\\n// MOMENTS\\nfunction Ba(a){var b=this.localeData().week(this);return null==a?b:this.add(7*(a-b),\\\"d\\\")}function Ca(a){var b=wa(this,1,4).week;return null==a?b:this.add(7*(a-b),\\\"d\\\")}\\n// HELPERS\\nfunction Da(a,b){return\\\"string\\\"!=typeof a?a:isNaN(a)?(a=b.weekdaysParse(a),\\\"number\\\"==typeof a?a:null):parseInt(a,10)}function Ea(a,b){return\\\"string\\\"==typeof a?b.weekdaysParse(a)%7||7:isNaN(a)?null:a}function Fa(a,b){return a?c(this._weekdays)?this._weekdays[a.day()]:this._weekdays[this._weekdays.isFormat.test(b)?\\\"format\\\":\\\"standalone\\\"][a.day()]:this._weekdays}function Ga(a){return a?this._weekdaysShort[a.day()]:this._weekdaysShort}function Ha(a){return a?this._weekdaysMin[a.day()]:this._weekdaysMin}function Ia(a,b,c){var d,e,f,g=a.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],d=0;d<7;++d)f=k([2e3,1]).day(d),this._minWeekdaysParse[d]=this.weekdaysMin(f,\\\"\\\").toLocaleLowerCase(),this._shortWeekdaysParse[d]=this.weekdaysShort(f,\\\"\\\").toLocaleLowerCase(),this._weekdaysParse[d]=this.weekdays(f,\\\"\\\").toLocaleLowerCase();return c?\\\"dddd\\\"===b?(e=je.call(this._weekdaysParse,g),e!==-1?e:null):\\\"ddd\\\"===b?(e=je.call(this._shortWeekdaysParse,g),e!==-1?e:null):(e=je.call(this._minWeekdaysParse,g),e!==-1?e:null):\\\"dddd\\\"===b?(e=je.call(this._weekdaysParse,g),e!==-1?e:(e=je.call(this._shortWeekdaysParse,g),e!==-1?e:(e=je.call(this._minWeekdaysParse,g),e!==-1?e:null))):\\\"ddd\\\"===b?(e=je.call(this._shortWeekdaysParse,g),e!==-1?e:(e=je.call(this._weekdaysParse,g),e!==-1?e:(e=je.call(this._minWeekdaysParse,g),e!==-1?e:null))):(e=je.call(this._minWeekdaysParse,g),e!==-1?e:(e=je.call(this._weekdaysParse,g),e!==-1?e:(e=je.call(this._shortWeekdaysParse,g),e!==-1?e:null)))}function Ja(a,b,c){var d,e,f;if(this._weekdaysParseExact)return Ia.call(this,a,b,c);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),d=0;d<7;d++){\\n// test the regex\\nif(\\n// make the regex if we don't have it already\\ne=k([2e3,1]).day(d),c&&!this._fullWeekdaysParse[d]&&(this._fullWeekdaysParse[d]=new RegExp(\\\"^\\\"+this.weekdays(e,\\\"\\\").replace(\\\".\\\",\\\".?\\\")+\\\"$\\\",\\\"i\\\"),this._shortWeekdaysParse[d]=new RegExp(\\\"^\\\"+this.weekdaysShort(e,\\\"\\\").replace(\\\".\\\",\\\".?\\\")+\\\"$\\\",\\\"i\\\"),this._minWeekdaysParse[d]=new RegExp(\\\"^\\\"+this.weekdaysMin(e,\\\"\\\").replace(\\\".\\\",\\\".?\\\")+\\\"$\\\",\\\"i\\\")),this._weekdaysParse[d]||(f=\\\"^\\\"+this.weekdays(e,\\\"\\\")+\\\"|^\\\"+this.weekdaysShort(e,\\\"\\\")+\\\"|^\\\"+this.weekdaysMin(e,\\\"\\\"),this._weekdaysParse[d]=new RegExp(f.replace(\\\".\\\",\\\"\\\"),\\\"i\\\")),c&&\\\"dddd\\\"===b&&this._fullWeekdaysParse[d].test(a))return d;if(c&&\\\"ddd\\\"===b&&this._shortWeekdaysParse[d].test(a))return d;if(c&&\\\"dd\\\"===b&&this._minWeekdaysParse[d].test(a))return d;if(!c&&this._weekdaysParse[d].test(a))return d}}\\n// MOMENTS\\nfunction Ka(a){if(!this.isValid())return null!=a?this:NaN;var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=Da(a,this.localeData()),this.add(a-b,\\\"d\\\")):b}function La(a){if(!this.isValid())return null!=a?this:NaN;var b=(this.day()+7-this.localeData()._week.dow)%7;return null==a?b:this.add(a-b,\\\"d\\\")}function Ma(a){if(!this.isValid())return null!=a?this:NaN;\\n// behaves the same as moment#day except\\n// as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\\n// as a setter, sunday should belong to the previous week.\\nif(null!=a){var b=Ea(a,this.localeData());return this.day(this.day()%7?b:b-7)}return this.day()||7}function Na(a){return this._weekdaysParseExact?(i(this,\\\"_weekdaysRegex\\\")||Qa.call(this),a?this._weekdaysStrictRegex:this._weekdaysRegex):(i(this,\\\"_weekdaysRegex\\\")||(this._weekdaysRegex=ue),this._weekdaysStrictRegex&&a?this._weekdaysStrictRegex:this._weekdaysRegex)}function Oa(a){return this._weekdaysParseExact?(i(this,\\\"_weekdaysRegex\\\")||Qa.call(this),a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(i(this,\\\"_weekdaysShortRegex\\\")||(this._weekdaysShortRegex=ve),this._weekdaysShortStrictRegex&&a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function Pa(a){return this._weekdaysParseExact?(i(this,\\\"_weekdaysRegex\\\")||Qa.call(this),a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(i(this,\\\"_weekdaysMinRegex\\\")||(this._weekdaysMinRegex=we),this._weekdaysMinStrictRegex&&a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function Qa(){function a(a,b){return b.length-a.length}var b,c,d,e,f,g=[],h=[],i=[],j=[];for(b=0;b<7;b++)\\n// make the regex if we don't have it already\\nc=k([2e3,1]).day(b),d=this.weekdaysMin(c,\\\"\\\"),e=this.weekdaysShort(c,\\\"\\\"),f=this.weekdays(c,\\\"\\\"),g.push(d),h.push(e),i.push(f),j.push(d),j.push(e),j.push(f);for(\\n// Sorting makes sure if one weekday (or abbr) is a prefix of another it\\n// will match the longer piece.\\ng.sort(a),h.sort(a),i.sort(a),j.sort(a),b=0;b<7;b++)h[b]=aa(h[b]),i[b]=aa(i[b]),j[b]=aa(j[b]);this._weekdaysRegex=new RegExp(\\\"^(\\\"+j.join(\\\"|\\\")+\\\")\\\",\\\"i\\\"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp(\\\"^(\\\"+i.join(\\\"|\\\")+\\\")\\\",\\\"i\\\"),this._weekdaysShortStrictRegex=new RegExp(\\\"^(\\\"+h.join(\\\"|\\\")+\\\")\\\",\\\"i\\\"),this._weekdaysMinStrictRegex=new RegExp(\\\"^(\\\"+g.join(\\\"|\\\")+\\\")\\\",\\\"i\\\")}\\n// FORMATTING\\nfunction Ra(){return this.hours()%12||12}function Sa(){return this.hours()||24}function Ta(a,b){U(a,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),b)})}\\n// PARSING\\nfunction Ua(a,b){return b._meridiemParse}\\n// LOCALES\\nfunction Va(a){\\n// IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\\n// Using charAt should be more compatible.\\nreturn\\\"p\\\"===(a+\\\"\\\").toLowerCase().charAt(0)}function Wa(a,b,c){return a>11?c?\\\"pm\\\":\\\"PM\\\":c?\\\"am\\\":\\\"AM\\\"}function Xa(a){return a?a.toLowerCase().replace(\\\"_\\\",\\\"-\\\"):a}\\n// pick the locale from the array\\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\\nfunction Ya(a){for(var b,c,d,e,f=0;f<a.length;){for(e=Xa(a[f]).split(\\\"-\\\"),b=e.length,c=Xa(a[f+1]),c=c?c.split(\\\"-\\\"):null;b>0;){if(d=Za(e.slice(0,b).join(\\\"-\\\")))return d;if(c&&c.length>=b&&v(e,c,!0)>=b-1)\\n//the next array item is better than a shallower substring of this one\\nbreak;b--}f++}return null}function Za(a){var b=null;\\n// TODO: Find a better way to register and load all the locales in Node\\nif(!Be[a]&&\\\"undefined\\\"!=typeof module&&module&&module.exports)try{b=xe._abbr,require(\\\"./locale/\\\"+a),\\n// because defineLocale currently also sets the global locale, we\\n// want to undo that for lazy loaded locales\\n$a(b)}catch(a){}return Be[a]}\\n// This function will load locale and then set the global locale.  If\\n// no arguments are passed in, it will simply return the current global\\n// locale key.\\nfunction $a(a,b){var c;\\n// moment.duration._locale = moment._locale = data;\\nreturn a&&(c=p(b)?bb(a):_a(a,b),c&&(xe=c)),xe._abbr}function _a(a,b){if(null!==b){var c=Ae;if(b.abbr=a,null!=Be[a])y(\\\"defineLocaleOverride\\\",\\\"use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.\\\"),c=Be[a]._config;else if(null!=b.parentLocale){if(null==Be[b.parentLocale])return Ce[b.parentLocale]||(Ce[b.parentLocale]=[]),Ce[b.parentLocale].push({name:a,config:b}),null;c=Be[b.parentLocale]._config}\\n// backwards compat for now: also set the locale\\n// make sure we set the locale AFTER all child locales have been\\n// created, so we won't end up with the child locale set.\\nreturn Be[a]=new C(B(c,b)),Ce[a]&&Ce[a].forEach(function(a){_a(a.name,a.config)}),$a(a),Be[a]}\\n// useful for testing\\nreturn delete Be[a],null}function ab(a,b){if(null!=b){var c,d=Ae;\\n// MERGE\\nnull!=Be[a]&&(d=Be[a]._config),b=B(d,b),c=new C(b),c.parentLocale=Be[a],Be[a]=c,\\n// backwards compat for now: also set the locale\\n$a(a)}else\\n// pass null for config to unupdate, useful for tests\\nnull!=Be[a]&&(null!=Be[a].parentLocale?Be[a]=Be[a].parentLocale:null!=Be[a]&&delete Be[a]);return Be[a]}\\n// returns locale data\\nfunction bb(a){var b;if(a&&a._locale&&a._locale._abbr&&(a=a._locale._abbr),!a)return xe;if(!c(a)){if(\\n//short-circuit everything else\\nb=Za(a))return b;a=[a]}return Ya(a)}function cb(){return wd(Be)}function db(a){var b,c=a._a;return c&&m(a).overflow===-2&&(b=c[be]<0||c[be]>11?be:c[ce]<1||c[ce]>ea(c[ae],c[be])?ce:c[de]<0||c[de]>24||24===c[de]&&(0!==c[ee]||0!==c[fe]||0!==c[ge])?de:c[ee]<0||c[ee]>59?ee:c[fe]<0||c[fe]>59?fe:c[ge]<0||c[ge]>999?ge:-1,m(a)._overflowDayOfYear&&(b<ae||b>ce)&&(b=ce),m(a)._overflowWeeks&&b===-1&&(b=he),m(a)._overflowWeekday&&b===-1&&(b=ie),m(a).overflow=b),a}\\n// date from iso format\\nfunction eb(a){var b,c,d,e,f,g,h=a._i,i=De.exec(h)||Ee.exec(h);if(i){for(m(a).iso=!0,b=0,c=Ge.length;b<c;b++)if(Ge[b][1].exec(i[1])){e=Ge[b][0],d=Ge[b][2]!==!1;break}if(null==e)return void(a._isValid=!1);if(i[3]){for(b=0,c=He.length;b<c;b++)if(He[b][1].exec(i[3])){\\n// match[2] should be 'T' or space\\nf=(i[2]||\\\" \\\")+He[b][0];break}if(null==f)return void(a._isValid=!1)}if(!d&&null!=f)return void(a._isValid=!1);if(i[4]){if(!Fe.exec(i[4]))return void(a._isValid=!1);g=\\\"Z\\\"}a._f=e+(f||\\\"\\\")+(g||\\\"\\\"),kb(a)}else a._isValid=!1}\\n// date from iso format or fallback\\nfunction fb(b){var c=Ie.exec(b._i);return null!==c?void(b._d=new Date(+c[1])):(eb(b),void(b._isValid===!1&&(delete b._isValid,a.createFromInputFallback(b))))}\\n// Pick the first defined of two or three arguments.\\nfunction gb(a,b,c){return null!=a?a:null!=b?b:c}function hb(b){\\n// hooks is actually the exported moment object\\nvar c=new Date(a.now());return b._useUTC?[c.getUTCFullYear(),c.getUTCMonth(),c.getUTCDate()]:[c.getFullYear(),c.getMonth(),c.getDate()]}\\n// convert an array to a date.\\n// the array should mirror the parameters below\\n// note: all values past the year are optional and will default to the lowest possible value.\\n// [year, month, day , hour, minute, second, millisecond]\\nfunction ib(a){var b,c,d,e,f=[];if(!a._d){\\n// Default to current date.\\n// * if no year, month, day of month are given, default to today\\n// * if day of month is given, default month and year\\n// * if month is given, default only year\\n// * if year is given, don't default anything\\nfor(d=hb(a),\\n//compute day of the year from weeks and weekdays\\na._w&&null==a._a[ce]&&null==a._a[be]&&jb(a),\\n//if the day of the year is set, figure out what it is\\na._dayOfYear&&(e=gb(a._a[ae],d[ae]),a._dayOfYear>pa(e)&&(m(a)._overflowDayOfYear=!0),c=ta(e,0,a._dayOfYear),a._a[be]=c.getUTCMonth(),a._a[ce]=c.getUTCDate()),b=0;b<3&&null==a._a[b];++b)a._a[b]=f[b]=d[b];\\n// Zero out whatever was not defaulted, including time\\nfor(;b<7;b++)a._a[b]=f[b]=null==a._a[b]?2===b?1:0:a._a[b];\\n// Check for 24:00:00.000\\n24===a._a[de]&&0===a._a[ee]&&0===a._a[fe]&&0===a._a[ge]&&(a._nextDay=!0,a._a[de]=0),a._d=(a._useUTC?ta:sa).apply(null,f),\\n// Apply timezone offset from input. The actual utcOffset can be changed\\n// with parseZone.\\nnull!=a._tzm&&a._d.setUTCMinutes(a._d.getUTCMinutes()-a._tzm),a._nextDay&&(a._a[de]=24)}}function jb(a){var b,c,d,e,f,g,h,i;if(b=a._w,null!=b.GG||null!=b.W||null!=b.E)f=1,g=4,\\n// TODO: We need to take the current isoWeekYear, but that depends on\\n// how we interpret now (local, utc, fixed offset). So create\\n// a now version of current config (take local/utc/offset flags, and\\n// create now).\\nc=gb(b.GG,a._a[ae],wa(sb(),1,4).year),d=gb(b.W,1),e=gb(b.E,1),(e<1||e>7)&&(i=!0);else{f=a._locale._week.dow,g=a._locale._week.doy;var j=wa(sb(),f,g);c=gb(b.gg,a._a[ae],j.year),\\n// Default to current week.\\nd=gb(b.w,j.week),null!=b.d?(\\n// weekday -- low day numbers are considered next week\\ne=b.d,(e<0||e>6)&&(i=!0)):null!=b.e?(\\n// local weekday -- counting starts from begining of week\\ne=b.e+f,(b.e<0||b.e>6)&&(i=!0)):\\n// default to begining of week\\ne=f}d<1||d>xa(c,f,g)?m(a)._overflowWeeks=!0:null!=i?m(a)._overflowWeekday=!0:(h=va(c,d,e,f,g),a._a[ae]=h.year,a._dayOfYear=h.dayOfYear)}\\n// date from string and format string\\nfunction kb(b){\\n// TODO: Move this to another part of the creation flow to prevent circular deps\\nif(b._f===a.ISO_8601)return void eb(b);b._a=[],m(b).empty=!0;\\n// This array is used to make a Date, either with `new Date` or `Date.UTC`\\nvar c,d,e,f,g,h=\\\"\\\"+b._i,i=h.length,j=0;for(e=Y(b._f,b._locale).match(Fd)||[],c=0;c<e.length;c++)f=e[c],d=(h.match($(f,b))||[])[0],\\n// console.log('token', token, 'parsedInput', parsedInput,\\n//         'regex', getParseRegexForToken(token, config));\\nd&&(g=h.substr(0,h.indexOf(d)),g.length>0&&m(b).unusedInput.push(g),h=h.slice(h.indexOf(d)+d.length),j+=d.length),\\n// don't parse if it's not a known token\\nId[f]?(d?m(b).empty=!1:m(b).unusedTokens.push(f),da(f,d,b)):b._strict&&!d&&m(b).unusedTokens.push(f);\\n// add remaining unparsed input length to the string\\nm(b).charsLeftOver=i-j,h.length>0&&m(b).unusedInput.push(h),\\n// clear _12h flag if hour is <= 12\\nb._a[de]<=12&&m(b).bigHour===!0&&b._a[de]>0&&(m(b).bigHour=void 0),m(b).parsedDateParts=b._a.slice(0),m(b).meridiem=b._meridiem,\\n// handle meridiem\\nb._a[de]=lb(b._locale,b._a[de],b._meridiem),ib(b),db(b)}function lb(a,b,c){var d;\\n// Fallback\\nreturn null==c?b:null!=a.meridiemHour?a.meridiemHour(b,c):null!=a.isPM?(d=a.isPM(c),d&&b<12&&(b+=12),d||12!==b||(b=0),b):b}\\n// date from string and array of format strings\\nfunction mb(a){var b,c,d,e,f;if(0===a._f.length)return m(a).invalidFormat=!0,void(a._d=new Date(NaN));for(e=0;e<a._f.length;e++)f=0,b=q({},a),null!=a._useUTC&&(b._useUTC=a._useUTC),b._f=a._f[e],kb(b),n(b)&&(\\n// if there is any input that was not parsed add a penalty for that format\\nf+=m(b).charsLeftOver,\\n//or tokens\\nf+=10*m(b).unusedTokens.length,m(b).score=f,(null==d||f<d)&&(d=f,c=b));j(a,c||b)}function nb(a){if(!a._d){var b=L(a._i);a._a=h([b.year,b.month,b.day||b.date,b.hour,b.minute,b.second,b.millisecond],function(a){return a&&parseInt(a,10)}),ib(a)}}function ob(a){var b=new r(db(pb(a)));\\n// Adding is smart enough around DST\\nreturn b._nextDay&&(b.add(1,\\\"d\\\"),b._nextDay=void 0),b}function pb(a){var b=a._i,d=a._f;return a._locale=a._locale||bb(a._l),null===b||void 0===d&&\\\"\\\"===b?o({nullInput:!0}):(\\\"string\\\"==typeof b&&(a._i=b=a._locale.preparse(b)),s(b)?new r(db(b)):(g(b)?a._d=b:c(d)?mb(a):d?kb(a):qb(a),n(a)||(a._d=null),a))}function qb(b){var d=b._i;void 0===d?b._d=new Date(a.now()):g(d)?b._d=new Date(d.valueOf()):\\\"string\\\"==typeof d?fb(b):c(d)?(b._a=h(d.slice(0),function(a){return parseInt(a,10)}),ib(b)):\\\"object\\\"==typeof d?nb(b):f(d)?\\n// from milliseconds\\nb._d=new Date(d):a.createFromInputFallback(b)}function rb(a,b,f,g,h){var i={};\\n// object construction must be done this way.\\n// https://github.com/moment/moment/issues/1423\\nreturn f!==!0&&f!==!1||(g=f,f=void 0),(d(a)&&e(a)||c(a)&&0===a.length)&&(a=void 0),i._isAMomentObject=!0,i._useUTC=i._isUTC=h,i._l=f,i._i=a,i._f=b,i._strict=g,ob(i)}function sb(a,b,c,d){return rb(a,b,c,d,!1)}\\n// Pick a moment m from moments so that m[fn](other) is true for all\\n// other. This relies on the function fn to be transitive.\\n//\\n// moments should either be an array of moment objects or an array, whose\\n// first element is an array of moment objects.\\nfunction tb(a,b){var d,e;if(1===b.length&&c(b[0])&&(b=b[0]),!b.length)return sb();for(d=b[0],e=1;e<b.length;++e)b[e].isValid()&&!b[e][a](d)||(d=b[e]);return d}\\n// TODO: Use [].sort instead?\\nfunction ub(){var a=[].slice.call(arguments,0);return tb(\\\"isBefore\\\",a)}function vb(){var a=[].slice.call(arguments,0);return tb(\\\"isAfter\\\",a)}function wb(a){var b=L(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;\\n// representation for dateAddRemove\\nthis._milliseconds=+k+1e3*j+// 1000\\n6e4*i+// 1000 * 60\\n1e3*h*60*60,//using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\\n// Because of dateAddRemove treats 24 hours as different from a\\n// day when working around DST, we need to store them separately\\nthis._days=+g+7*f,\\n// It is impossible translate months into days without knowing\\n// which months you are are talking about, so we have to store\\n// it separately.\\nthis._months=+e+3*d+12*c,this._data={},this._locale=bb(),this._bubble()}function xb(a){return a instanceof wb}function yb(a){return a<0?Math.round(-1*a)*-1:Math.round(a)}\\n// FORMATTING\\nfunction zb(a,b){U(a,0,0,function(){var a=this.utcOffset(),c=\\\"+\\\";return a<0&&(a=-a,c=\\\"-\\\"),c+T(~~(a/60),2)+b+T(~~a%60,2)})}function Ab(a,b){var c=(b||\\\"\\\").match(a);if(null===c)return null;var d=c[c.length-1]||[],e=(d+\\\"\\\").match(Me)||[\\\"-\\\",0,0],f=+(60*e[1])+u(e[2]);return 0===f?0:\\\"+\\\"===e[0]?f:-f}\\n// Return a moment from input, that is local/utc/zone equivalent to model.\\nfunction Bb(b,c){var d,e;\\n// Use low-level api, because this fn is low-level api.\\nreturn c._isUTC?(d=c.clone(),e=(s(b)||g(b)?b.valueOf():sb(b).valueOf())-d.valueOf(),d._d.setTime(d._d.valueOf()+e),a.updateOffset(d,!1),d):sb(b).local()}function Cb(a){\\n// On Firefox.24 Date#getTimezoneOffset returns a floating point.\\n// https://github.com/moment/moment/pull/1871\\nreturn 15*-Math.round(a._d.getTimezoneOffset()/15)}\\n// MOMENTS\\n// keepLocalTime = true means only change the timezone, without\\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\\n// +0200, so we adjust the time as needed, to be valid.\\n//\\n// Keeping the time actually adds/subtracts (one hour)\\n// from the actual represented time. That is why we call updateOffset\\n// a second time. In case it wants us to change the offset again\\n// _changeInProgress == true case, then we have to adjust, because\\n// there is no such time in the given timezone.\\nfunction Db(b,c){var d,e=this._offset||0;if(!this.isValid())return null!=b?this:NaN;if(null!=b){if(\\\"string\\\"==typeof b){if(b=Ab(Xd,b),null===b)return this}else Math.abs(b)<16&&(b=60*b);return!this._isUTC&&c&&(d=Cb(this)),this._offset=b,this._isUTC=!0,null!=d&&this.add(d,\\\"m\\\"),e!==b&&(!c||this._changeInProgress?Tb(this,Ob(b-e,\\\"m\\\"),1,!1):this._changeInProgress||(this._changeInProgress=!0,a.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?e:Cb(this)}function Eb(a,b){return null!=a?(\\\"string\\\"!=typeof a&&(a=-a),this.utcOffset(a,b),this):-this.utcOffset()}function Fb(a){return this.utcOffset(0,a)}function Gb(a){return this._isUTC&&(this.utcOffset(0,a),this._isUTC=!1,a&&this.subtract(Cb(this),\\\"m\\\")),this}function Hb(){if(null!=this._tzm)this.utcOffset(this._tzm);else if(\\\"string\\\"==typeof this._i){var a=Ab(Wd,this._i);null!=a?this.utcOffset(a):this.utcOffset(0,!0)}return this}function Ib(a){return!!this.isValid()&&(a=a?sb(a).utcOffset():0,(this.utcOffset()-a)%60===0)}function Jb(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function Kb(){if(!p(this._isDSTShifted))return this._isDSTShifted;var a={};if(q(a,this),a=pb(a),a._a){var b=a._isUTC?k(a._a):sb(a._a);this._isDSTShifted=this.isValid()&&v(a._a,b.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}function Lb(){return!!this.isValid()&&!this._isUTC}function Mb(){return!!this.isValid()&&this._isUTC}function Nb(){return!!this.isValid()&&(this._isUTC&&0===this._offset)}function Ob(a,b){var c,d,e,g=a,\\n// matching against regexp is expensive, do it on demand\\nh=null;// checks for null or undefined\\nreturn xb(a)?g={ms:a._milliseconds,d:a._days,M:a._months}:f(a)?(g={},b?g[b]=a:g.milliseconds=a):(h=Ne.exec(a))?(c=\\\"-\\\"===h[1]?-1:1,g={y:0,d:u(h[ce])*c,h:u(h[de])*c,m:u(h[ee])*c,s:u(h[fe])*c,ms:u(yb(1e3*h[ge]))*c}):(h=Oe.exec(a))?(c=\\\"-\\\"===h[1]?-1:1,g={y:Pb(h[2],c),M:Pb(h[3],c),w:Pb(h[4],c),d:Pb(h[5],c),h:Pb(h[6],c),m:Pb(h[7],c),s:Pb(h[8],c)}):null==g?g={}:\\\"object\\\"==typeof g&&(\\\"from\\\"in g||\\\"to\\\"in g)&&(e=Rb(sb(g.from),sb(g.to)),g={},g.ms=e.milliseconds,g.M=e.months),d=new wb(g),xb(a)&&i(a,\\\"_locale\\\")&&(d._locale=a._locale),d}function Pb(a,b){\\n// We'd normally use ~~inp for this, but unfortunately it also\\n// converts floats to ints.\\n// inp may be undefined, so careful calling replace on it.\\nvar c=a&&parseFloat(a.replace(\\\",\\\",\\\".\\\"));\\n// apply sign while we're at it\\nreturn(isNaN(c)?0:c)*b}function Qb(a,b){var c={milliseconds:0,months:0};return c.months=b.month()-a.month()+12*(b.year()-a.year()),a.clone().add(c.months,\\\"M\\\").isAfter(b)&&--c.months,c.milliseconds=+b-+a.clone().add(c.months,\\\"M\\\"),c}function Rb(a,b){var c;return a.isValid()&&b.isValid()?(b=Bb(b,a),a.isBefore(b)?c=Qb(a,b):(c=Qb(b,a),c.milliseconds=-c.milliseconds,c.months=-c.months),c):{milliseconds:0,months:0}}\\n// TODO: remove 'name' arg after deprecation is removed\\nfunction Sb(a,b){return function(c,d){var e,f;\\n//invert the arguments, but complain about it\\nreturn null===d||isNaN(+d)||(y(b,\\\"moment().\\\"+b+\\\"(period, number) is deprecated. Please use moment().\\\"+b+\\\"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.\\\"),f=c,c=d,d=f),c=\\\"string\\\"==typeof c?+c:c,e=Ob(c,d),Tb(this,e,a),this}}function Tb(b,c,d,e){var f=c._milliseconds,g=yb(c._days),h=yb(c._months);b.isValid()&&(e=null==e||e,f&&b._d.setTime(b._d.valueOf()+f*d),g&&Q(b,\\\"Date\\\",P(b,\\\"Date\\\")+g*d),h&&ja(b,P(b,\\\"Month\\\")+h*d),e&&a.updateOffset(b,g||h))}function Ub(a,b){var c=a.diff(b,\\\"days\\\",!0);return c<-6?\\\"sameElse\\\":c<-1?\\\"lastWeek\\\":c<0?\\\"lastDay\\\":c<1?\\\"sameDay\\\":c<2?\\\"nextDay\\\":c<7?\\\"nextWeek\\\":\\\"sameElse\\\"}function Vb(b,c){\\n// We want to compare the start of today, vs this.\\n// Getting start-of-today depends on whether we're local/utc/offset or not.\\nvar d=b||sb(),e=Bb(d,this).startOf(\\\"day\\\"),f=a.calendarFormat(this,e)||\\\"sameElse\\\",g=c&&(z(c[f])?c[f].call(this,d):c[f]);return this.format(g||this.localeData().calendar(f,this,sb(d)))}function Wb(){return new r(this)}function Xb(a,b){var c=s(a)?a:sb(a);return!(!this.isValid()||!c.isValid())&&(b=K(p(b)?\\\"millisecond\\\":b),\\\"millisecond\\\"===b?this.valueOf()>c.valueOf():c.valueOf()<this.clone().startOf(b).valueOf())}function Yb(a,b){var c=s(a)?a:sb(a);return!(!this.isValid()||!c.isValid())&&(b=K(p(b)?\\\"millisecond\\\":b),\\\"millisecond\\\"===b?this.valueOf()<c.valueOf():this.clone().endOf(b).valueOf()<c.valueOf())}function Zb(a,b,c,d){return d=d||\\\"()\\\",(\\\"(\\\"===d[0]?this.isAfter(a,c):!this.isBefore(a,c))&&(\\\")\\\"===d[1]?this.isBefore(b,c):!this.isAfter(b,c))}function $b(a,b){var c,d=s(a)?a:sb(a);return!(!this.isValid()||!d.isValid())&&(b=K(b||\\\"millisecond\\\"),\\\"millisecond\\\"===b?this.valueOf()===d.valueOf():(c=d.valueOf(),this.clone().startOf(b).valueOf()<=c&&c<=this.clone().endOf(b).valueOf()))}function _b(a,b){return this.isSame(a,b)||this.isAfter(a,b)}function ac(a,b){return this.isSame(a,b)||this.isBefore(a,b)}function bc(a,b,c){var d,e,f,g;// 1000\\n// 1000 * 60\\n// 1000 * 60 * 60\\n// 1000 * 60 * 60 * 24, negate dst\\n// 1000 * 60 * 60 * 24 * 7, negate dst\\nreturn this.isValid()?(d=Bb(a,this),d.isValid()?(e=6e4*(d.utcOffset()-this.utcOffset()),b=K(b),\\\"year\\\"===b||\\\"month\\\"===b||\\\"quarter\\\"===b?(g=cc(this,d),\\\"quarter\\\"===b?g/=3:\\\"year\\\"===b&&(g/=12)):(f=this-d,g=\\\"second\\\"===b?f/1e3:\\\"minute\\\"===b?f/6e4:\\\"hour\\\"===b?f/36e5:\\\"day\\\"===b?(f-e)/864e5:\\\"week\\\"===b?(f-e)/6048e5:f),c?g:t(g)):NaN):NaN}function cc(a,b){\\n// difference in months\\nvar c,d,e=12*(b.year()-a.year())+(b.month()-a.month()),\\n// b is in (anchor - 1 month, anchor + 1 month)\\nf=a.clone().add(e,\\\"months\\\");\\n//check for negative zero, return zero if negative zero\\n// linear across the month\\n// linear across the month\\nreturn b-f<0?(c=a.clone().add(e-1,\\\"months\\\"),d=(b-f)/(f-c)):(c=a.clone().add(e+1,\\\"months\\\"),d=(b-f)/(c-f)),-(e+d)||0}function dc(){return this.clone().locale(\\\"en\\\").format(\\\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\\\")}function ec(){var a=this.clone().utc();return 0<a.year()&&a.year()<=9999?z(Date.prototype.toISOString)?this.toDate().toISOString():X(a,\\\"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\\\"):X(a,\\\"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\\\")}/**\\n * Return a human readable representation of a moment that can\\n * also be evaluated to get a new moment which is the same\\n *\\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\\n */\\nfunction fc(){if(!this.isValid())return\\\"moment.invalid(/* \\\"+this._i+\\\" */)\\\";var a=\\\"moment\\\",b=\\\"\\\";this.isLocal()||(a=0===this.utcOffset()?\\\"moment.utc\\\":\\\"moment.parseZone\\\",b=\\\"Z\\\");var c=\\\"[\\\"+a+'(\\\"]',d=0<this.year()&&this.year()<=9999?\\\"YYYY\\\":\\\"YYYYYY\\\",e=\\\"-MM-DD[T]HH:mm:ss.SSS\\\",f=b+'[\\\")]';return this.format(c+d+e+f)}function gc(b){b||(b=this.isUtc()?a.defaultFormatUtc:a.defaultFormat);var c=X(this,b);return this.localeData().postformat(c)}function hc(a,b){return this.isValid()&&(s(a)&&a.isValid()||sb(a).isValid())?Ob({to:this,from:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function ic(a){return this.from(sb(),a)}function jc(a,b){return this.isValid()&&(s(a)&&a.isValid()||sb(a).isValid())?Ob({from:this,to:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function kc(a){return this.to(sb(),a)}\\n// If passed a locale key, it will set the locale for this\\n// instance.  Otherwise, it will return the locale configuration\\n// variables for this instance.\\nfunction lc(a){var b;return void 0===a?this._locale._abbr:(b=bb(a),null!=b&&(this._locale=b),this)}function mc(){return this._locale}function nc(a){\\n// the following switch intentionally omits break keywords\\n// to utilize falling through the cases.\\nswitch(a=K(a)){case\\\"year\\\":this.month(0);/* falls through */\\ncase\\\"quarter\\\":case\\\"month\\\":this.date(1);/* falls through */\\ncase\\\"week\\\":case\\\"isoWeek\\\":case\\\"day\\\":case\\\"date\\\":this.hours(0);/* falls through */\\ncase\\\"hour\\\":this.minutes(0);/* falls through */\\ncase\\\"minute\\\":this.seconds(0);/* falls through */\\ncase\\\"second\\\":this.milliseconds(0)}\\n// weeks are a special case\\n// quarters are also special\\nreturn\\\"week\\\"===a&&this.weekday(0),\\\"isoWeek\\\"===a&&this.isoWeekday(1),\\\"quarter\\\"===a&&this.month(3*Math.floor(this.month()/3)),this}function oc(a){\\n// 'date' is an alias for 'day', so it should be considered as such.\\nreturn a=K(a),void 0===a||\\\"millisecond\\\"===a?this:(\\\"date\\\"===a&&(a=\\\"day\\\"),this.startOf(a).add(1,\\\"isoWeek\\\"===a?\\\"week\\\":a).subtract(1,\\\"ms\\\"))}function pc(){return this._d.valueOf()-6e4*(this._offset||0)}function qc(){return Math.floor(this.valueOf()/1e3)}function rc(){return new Date(this.valueOf())}function sc(){var a=this;return[a.year(),a.month(),a.date(),a.hour(),a.minute(),a.second(),a.millisecond()]}function tc(){var a=this;return{years:a.year(),months:a.month(),date:a.date(),hours:a.hours(),minutes:a.minutes(),seconds:a.seconds(),milliseconds:a.milliseconds()}}function uc(){\\n// new Date(NaN).toJSON() === null\\nreturn this.isValid()?this.toISOString():null}function vc(){return n(this)}function wc(){return j({},m(this))}function xc(){return m(this).overflow}function yc(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}function zc(a,b){U(0,[a,a.length],0,b)}\\n// MOMENTS\\nfunction Ac(a){return Ec.call(this,a,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}function Bc(a){return Ec.call(this,a,this.isoWeek(),this.isoWeekday(),1,4)}function Cc(){return xa(this.year(),1,4)}function Dc(){var a=this.localeData()._week;return xa(this.year(),a.dow,a.doy)}function Ec(a,b,c,d,e){var f;return null==a?wa(this,d,e).year:(f=xa(a,d,e),b>f&&(b=f),Fc.call(this,a,b,c,d,e))}function Fc(a,b,c,d,e){var f=va(a,b,c,d,e),g=ta(f.year,0,f.dayOfYear);return this.year(g.getUTCFullYear()),this.month(g.getUTCMonth()),this.date(g.getUTCDate()),this}\\n// MOMENTS\\nfunction Gc(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)}\\n// HELPERS\\n// MOMENTS\\nfunction Hc(a){var b=Math.round((this.clone().startOf(\\\"day\\\")-this.clone().startOf(\\\"year\\\"))/864e5)+1;return null==a?b:this.add(a-b,\\\"d\\\")}function Ic(a,b){b[ge]=u(1e3*(\\\"0.\\\"+a))}\\n// MOMENTS\\nfunction Jc(){return this._isUTC?\\\"UTC\\\":\\\"\\\"}function Kc(){return this._isUTC?\\\"Coordinated Universal Time\\\":\\\"\\\"}function Lc(a){return sb(1e3*a)}function Mc(){return sb.apply(null,arguments).parseZone()}function Nc(a){return a}function Oc(a,b,c,d){var e=bb(),f=k().set(d,b);return e[c](f,a)}function Pc(a,b,c){if(f(a)&&(b=a,a=void 0),a=a||\\\"\\\",null!=b)return Oc(a,b,c,\\\"month\\\");var d,e=[];for(d=0;d<12;d++)e[d]=Oc(a,d,c,\\\"month\\\");return e}\\n// ()\\n// (5)\\n// (fmt, 5)\\n// (fmt)\\n// (true)\\n// (true, 5)\\n// (true, fmt, 5)\\n// (true, fmt)\\nfunction Qc(a,b,c,d){\\\"boolean\\\"==typeof a?(f(b)&&(c=b,b=void 0),b=b||\\\"\\\"):(b=a,c=b,a=!1,f(b)&&(c=b,b=void 0),b=b||\\\"\\\");var e=bb(),g=a?e._week.dow:0;if(null!=c)return Oc(b,(c+g)%7,d,\\\"day\\\");var h,i=[];for(h=0;h<7;h++)i[h]=Oc(b,(h+g)%7,d,\\\"day\\\");return i}function Rc(a,b){return Pc(a,b,\\\"months\\\")}function Sc(a,b){return Pc(a,b,\\\"monthsShort\\\")}function Tc(a,b,c){return Qc(a,b,c,\\\"weekdays\\\")}function Uc(a,b,c){return Qc(a,b,c,\\\"weekdaysShort\\\")}function Vc(a,b,c){return Qc(a,b,c,\\\"weekdaysMin\\\")}function Wc(){var a=this._data;return this._milliseconds=Ze(this._milliseconds),this._days=Ze(this._days),this._months=Ze(this._months),a.milliseconds=Ze(a.milliseconds),a.seconds=Ze(a.seconds),a.minutes=Ze(a.minutes),a.hours=Ze(a.hours),a.months=Ze(a.months),a.years=Ze(a.years),this}function Xc(a,b,c,d){var e=Ob(b,c);return a._milliseconds+=d*e._milliseconds,a._days+=d*e._days,a._months+=d*e._months,a._bubble()}\\n// supports only 2.0-style add(1, 's') or add(duration)\\nfunction Yc(a,b){return Xc(this,a,b,1)}\\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\\nfunction Zc(a,b){return Xc(this,a,b,-1)}function $c(a){return a<0?Math.floor(a):Math.ceil(a)}function _c(){var a,b,c,d,e,f=this._milliseconds,g=this._days,h=this._months,i=this._data;\\n// if we have a mix of positive and negative values, bubble down first\\n// check: https://github.com/moment/moment/issues/2166\\n// The following code bubbles up values, see the tests for\\n// examples of what that means.\\n// convert days to months\\n// 12 months -> 1 year\\nreturn f>=0&&g>=0&&h>=0||f<=0&&g<=0&&h<=0||(f+=864e5*$c(bd(h)+g),g=0,h=0),i.milliseconds=f%1e3,a=t(f/1e3),i.seconds=a%60,b=t(a/60),i.minutes=b%60,c=t(b/60),i.hours=c%24,g+=t(c/24),e=t(ad(g)),h+=e,g-=$c(bd(e)),d=t(h/12),h%=12,i.days=g,i.months=h,i.years=d,this}function ad(a){\\n// 400 years have 146097 days (taking into account leap year rules)\\n// 400 years have 12 months === 4800\\nreturn 4800*a/146097}function bd(a){\\n// the reverse of daysToMonths\\nreturn 146097*a/4800}function cd(a){var b,c,d=this._milliseconds;if(a=K(a),\\\"month\\\"===a||\\\"year\\\"===a)return b=this._days+d/864e5,c=this._months+ad(b),\\\"month\\\"===a?c:c/12;switch(\\n// handle milliseconds separately because of floating point math errors (issue #1867)\\nb=this._days+Math.round(bd(this._months)),a){case\\\"week\\\":return b/7+d/6048e5;case\\\"day\\\":return b+d/864e5;case\\\"hour\\\":return 24*b+d/36e5;case\\\"minute\\\":return 1440*b+d/6e4;case\\\"second\\\":return 86400*b+d/1e3;\\n// Math.floor prevents floating point math errors here\\ncase\\\"millisecond\\\":return Math.floor(864e5*b)+d;default:throw new Error(\\\"Unknown unit \\\"+a)}}\\n// TODO: Use this.as('ms')?\\nfunction dd(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*u(this._months/12)}function ed(a){return function(){return this.as(a)}}function fd(a){return a=K(a),this[a+\\\"s\\\"]()}function gd(a){return function(){return this._data[a]}}function hd(){return t(this.days()/7)}\\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\\nfunction id(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function jd(a,b,c){var d=Ob(a).abs(),e=of(d.as(\\\"s\\\")),f=of(d.as(\\\"m\\\")),g=of(d.as(\\\"h\\\")),h=of(d.as(\\\"d\\\")),i=of(d.as(\\\"M\\\")),j=of(d.as(\\\"y\\\")),k=e<pf.s&&[\\\"s\\\",e]||f<=1&&[\\\"m\\\"]||f<pf.m&&[\\\"mm\\\",f]||g<=1&&[\\\"h\\\"]||g<pf.h&&[\\\"hh\\\",g]||h<=1&&[\\\"d\\\"]||h<pf.d&&[\\\"dd\\\",h]||i<=1&&[\\\"M\\\"]||i<pf.M&&[\\\"MM\\\",i]||j<=1&&[\\\"y\\\"]||[\\\"yy\\\",j];return k[2]=b,k[3]=+a>0,k[4]=c,id.apply(null,k)}\\n// This function allows you to set the rounding function for relative time strings\\nfunction kd(a){return void 0===a?of:\\\"function\\\"==typeof a&&(of=a,!0)}\\n// This function allows you to set a threshold for relative time strings\\nfunction ld(a,b){return void 0!==pf[a]&&(void 0===b?pf[a]:(pf[a]=b,!0))}function md(a){var b=this.localeData(),c=jd(this,!a,b);return a&&(c=b.pastFuture(+this,c)),b.postformat(c)}function nd(){\\n// for ISO strings we do not use the normal bubbling rules:\\n//  * milliseconds bubble up until they become hours\\n//  * days do not bubble at all\\n//  * months bubble up until they become years\\n// This is because there is no context-free conversion between hours and days\\n// (think of clock changes)\\n// and also not between days and months (28-31 days per month)\\nvar a,b,c,d=qf(this._milliseconds)/1e3,e=qf(this._days),f=qf(this._months);\\n// 3600 seconds -> 60 minutes -> 1 hour\\na=t(d/60),b=t(a/60),d%=60,a%=60,\\n// 12 months -> 1 year\\nc=t(f/12),f%=12;\\n// inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\\nvar g=c,h=f,i=e,j=b,k=a,l=d,m=this.asSeconds();return m?(m<0?\\\"-\\\":\\\"\\\")+\\\"P\\\"+(g?g+\\\"Y\\\":\\\"\\\")+(h?h+\\\"M\\\":\\\"\\\")+(i?i+\\\"D\\\":\\\"\\\")+(j||k||l?\\\"T\\\":\\\"\\\")+(j?j+\\\"H\\\":\\\"\\\")+(k?k+\\\"M\\\":\\\"\\\")+(l?l+\\\"S\\\":\\\"\\\"):\\\"P0D\\\"}var od,pd;pd=Array.prototype.some?Array.prototype.some:function(a){for(var b=Object(this),c=b.length>>>0,d=0;d<c;d++)if(d in b&&a.call(this,b[d],d,b))return!0;return!1};var qd=pd,rd=a.momentProperties=[],sd=!1,td={};a.suppressDeprecationWarnings=!1,a.deprecationHandler=null;var ud;ud=Object.keys?Object.keys:function(a){var b,c=[];for(b in a)i(a,b)&&c.push(b);return c};var vd,wd=ud,xd={sameDay:\\\"[Today at] LT\\\",nextDay:\\\"[Tomorrow at] LT\\\",nextWeek:\\\"dddd [at] LT\\\",lastDay:\\\"[Yesterday at] LT\\\",lastWeek:\\\"[Last] dddd [at] LT\\\",sameElse:\\\"L\\\"},yd={LTS:\\\"h:mm:ss A\\\",LT:\\\"h:mm A\\\",L:\\\"MM/DD/YYYY\\\",LL:\\\"MMMM D, YYYY\\\",LLL:\\\"MMMM D, YYYY h:mm A\\\",LLLL:\\\"dddd, MMMM D, YYYY h:mm A\\\"},zd=\\\"Invalid date\\\",Ad=\\\"%d\\\",Bd=/\\\\d{1,2}/,Cd={future:\\\"in %s\\\",past:\\\"%s ago\\\",s:\\\"a few seconds\\\",m:\\\"a minute\\\",mm:\\\"%d minutes\\\",h:\\\"an hour\\\",hh:\\\"%d hours\\\",d:\\\"a day\\\",dd:\\\"%d days\\\",M:\\\"a month\\\",MM:\\\"%d months\\\",y:\\\"a year\\\",yy:\\\"%d years\\\"},Dd={},Ed={},Fd=/(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,Gd=/(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Hd={},Id={},Jd=/\\\\d/,Kd=/\\\\d\\\\d/,Ld=/\\\\d{3}/,Md=/\\\\d{4}/,Nd=/[+-]?\\\\d{6}/,Od=/\\\\d\\\\d?/,Pd=/\\\\d\\\\d\\\\d\\\\d?/,Qd=/\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d?/,Rd=/\\\\d{1,3}/,Sd=/\\\\d{1,4}/,Td=/[+-]?\\\\d{1,6}/,Ud=/\\\\d+/,Vd=/[+-]?\\\\d+/,Wd=/Z|[+-]\\\\d\\\\d:?\\\\d\\\\d/gi,Xd=/Z|[+-]\\\\d\\\\d(?::?\\\\d\\\\d)?/gi,Yd=/[+-]?\\\\d+(\\\\.\\\\d{1,3})?/,Zd=/[0-9]*['a-z\\\\u00A0-\\\\u05FF\\\\u0700-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]+|[\\\\u0600-\\\\u06FF\\\\/]+(\\\\s*?[\\\\u0600-\\\\u06FF]+){1,2}/i,$d={},_d={},ae=0,be=1,ce=2,de=3,ee=4,fe=5,ge=6,he=7,ie=8;vd=Array.prototype.indexOf?Array.prototype.indexOf:function(a){\\n// I know\\nvar b;for(b=0;b<this.length;++b)if(this[b]===a)return b;return-1};var je=vd;\\n// FORMATTING\\nU(\\\"M\\\",[\\\"MM\\\",2],\\\"Mo\\\",function(){return this.month()+1}),U(\\\"MMM\\\",0,0,function(a){return this.localeData().monthsShort(this,a)}),U(\\\"MMMM\\\",0,0,function(a){return this.localeData().months(this,a)}),\\n// ALIASES\\nJ(\\\"month\\\",\\\"M\\\"),\\n// PRIORITY\\nM(\\\"month\\\",8),\\n// PARSING\\nZ(\\\"M\\\",Od),Z(\\\"MM\\\",Od,Kd),Z(\\\"MMM\\\",function(a,b){return b.monthsShortRegex(a)}),Z(\\\"MMMM\\\",function(a,b){return b.monthsRegex(a)}),ba([\\\"M\\\",\\\"MM\\\"],function(a,b){b[be]=u(a)-1}),ba([\\\"MMM\\\",\\\"MMMM\\\"],function(a,b,c,d){var e=c._locale.monthsParse(a,d,c._strict);\\n// if we didn't find a month name, mark the date as invalid.\\nnull!=e?b[be]=e:m(c).invalidMonth=a});\\n// LOCALES\\nvar ke=/D[oD]?(\\\\[[^\\\\[\\\\]]*\\\\]|\\\\s)+MMMM?/,le=\\\"January_February_March_April_May_June_July_August_September_October_November_December\\\".split(\\\"_\\\"),me=\\\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\\\".split(\\\"_\\\"),ne=Zd,oe=Zd;\\n// FORMATTING\\nU(\\\"Y\\\",0,0,function(){var a=this.year();return a<=9999?\\\"\\\"+a:\\\"+\\\"+a}),U(0,[\\\"YY\\\",2],0,function(){return this.year()%100}),U(0,[\\\"YYYY\\\",4],0,\\\"year\\\"),U(0,[\\\"YYYYY\\\",5],0,\\\"year\\\"),U(0,[\\\"YYYYYY\\\",6,!0],0,\\\"year\\\"),\\n// ALIASES\\nJ(\\\"year\\\",\\\"y\\\"),\\n// PRIORITIES\\nM(\\\"year\\\",1),\\n// PARSING\\nZ(\\\"Y\\\",Vd),Z(\\\"YY\\\",Od,Kd),Z(\\\"YYYY\\\",Sd,Md),Z(\\\"YYYYY\\\",Td,Nd),Z(\\\"YYYYYY\\\",Td,Nd),ba([\\\"YYYYY\\\",\\\"YYYYYY\\\"],ae),ba(\\\"YYYY\\\",function(b,c){c[ae]=2===b.length?a.parseTwoDigitYear(b):u(b)}),ba(\\\"YY\\\",function(b,c){c[ae]=a.parseTwoDigitYear(b)}),ba(\\\"Y\\\",function(a,b){b[ae]=parseInt(a,10)}),\\n// HOOKS\\na.parseTwoDigitYear=function(a){return u(a)+(u(a)>68?1900:2e3)};\\n// MOMENTS\\nvar pe=O(\\\"FullYear\\\",!0);\\n// FORMATTING\\nU(\\\"w\\\",[\\\"ww\\\",2],\\\"wo\\\",\\\"week\\\"),U(\\\"W\\\",[\\\"WW\\\",2],\\\"Wo\\\",\\\"isoWeek\\\"),\\n// ALIASES\\nJ(\\\"week\\\",\\\"w\\\"),J(\\\"isoWeek\\\",\\\"W\\\"),\\n// PRIORITIES\\nM(\\\"week\\\",5),M(\\\"isoWeek\\\",5),\\n// PARSING\\nZ(\\\"w\\\",Od),Z(\\\"ww\\\",Od,Kd),Z(\\\"W\\\",Od),Z(\\\"WW\\\",Od,Kd),ca([\\\"w\\\",\\\"ww\\\",\\\"W\\\",\\\"WW\\\"],function(a,b,c,d){b[d.substr(0,1)]=u(a)});var qe={dow:0,// Sunday is the first day of the week.\\ndoy:6};\\n// FORMATTING\\nU(\\\"d\\\",0,\\\"do\\\",\\\"day\\\"),U(\\\"dd\\\",0,0,function(a){return this.localeData().weekdaysMin(this,a)}),U(\\\"ddd\\\",0,0,function(a){return this.localeData().weekdaysShort(this,a)}),U(\\\"dddd\\\",0,0,function(a){return this.localeData().weekdays(this,a)}),U(\\\"e\\\",0,0,\\\"weekday\\\"),U(\\\"E\\\",0,0,\\\"isoWeekday\\\"),\\n// ALIASES\\nJ(\\\"day\\\",\\\"d\\\"),J(\\\"weekday\\\",\\\"e\\\"),J(\\\"isoWeekday\\\",\\\"E\\\"),\\n// PRIORITY\\nM(\\\"day\\\",11),M(\\\"weekday\\\",11),M(\\\"isoWeekday\\\",11),\\n// PARSING\\nZ(\\\"d\\\",Od),Z(\\\"e\\\",Od),Z(\\\"E\\\",Od),Z(\\\"dd\\\",function(a,b){return b.weekdaysMinRegex(a)}),Z(\\\"ddd\\\",function(a,b){return b.weekdaysShortRegex(a)}),Z(\\\"dddd\\\",function(a,b){return b.weekdaysRegex(a)}),ca([\\\"dd\\\",\\\"ddd\\\",\\\"dddd\\\"],function(a,b,c,d){var e=c._locale.weekdaysParse(a,d,c._strict);\\n// if we didn't get a weekday name, mark the date as invalid\\nnull!=e?b.d=e:m(c).invalidWeekday=a}),ca([\\\"d\\\",\\\"e\\\",\\\"E\\\"],function(a,b,c,d){b[d]=u(a)});\\n// LOCALES\\nvar re=\\\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\\\".split(\\\"_\\\"),se=\\\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\\\".split(\\\"_\\\"),te=\\\"Su_Mo_Tu_We_Th_Fr_Sa\\\".split(\\\"_\\\"),ue=Zd,ve=Zd,we=Zd;U(\\\"H\\\",[\\\"HH\\\",2],0,\\\"hour\\\"),U(\\\"h\\\",[\\\"hh\\\",2],0,Ra),U(\\\"k\\\",[\\\"kk\\\",2],0,Sa),U(\\\"hmm\\\",0,0,function(){return\\\"\\\"+Ra.apply(this)+T(this.minutes(),2)}),U(\\\"hmmss\\\",0,0,function(){return\\\"\\\"+Ra.apply(this)+T(this.minutes(),2)+T(this.seconds(),2)}),U(\\\"Hmm\\\",0,0,function(){return\\\"\\\"+this.hours()+T(this.minutes(),2)}),U(\\\"Hmmss\\\",0,0,function(){return\\\"\\\"+this.hours()+T(this.minutes(),2)+T(this.seconds(),2)}),Ta(\\\"a\\\",!0),Ta(\\\"A\\\",!1),\\n// ALIASES\\nJ(\\\"hour\\\",\\\"h\\\"),\\n// PRIORITY\\nM(\\\"hour\\\",13),Z(\\\"a\\\",Ua),Z(\\\"A\\\",Ua),Z(\\\"H\\\",Od),Z(\\\"h\\\",Od),Z(\\\"HH\\\",Od,Kd),Z(\\\"hh\\\",Od,Kd),Z(\\\"hmm\\\",Pd),Z(\\\"hmmss\\\",Qd),Z(\\\"Hmm\\\",Pd),Z(\\\"Hmmss\\\",Qd),ba([\\\"H\\\",\\\"HH\\\"],de),ba([\\\"a\\\",\\\"A\\\"],function(a,b,c){c._isPm=c._locale.isPM(a),c._meridiem=a}),ba([\\\"h\\\",\\\"hh\\\"],function(a,b,c){b[de]=u(a),m(c).bigHour=!0}),ba(\\\"hmm\\\",function(a,b,c){var d=a.length-2;b[de]=u(a.substr(0,d)),b[ee]=u(a.substr(d)),m(c).bigHour=!0}),ba(\\\"hmmss\\\",function(a,b,c){var d=a.length-4,e=a.length-2;b[de]=u(a.substr(0,d)),b[ee]=u(a.substr(d,2)),b[fe]=u(a.substr(e)),m(c).bigHour=!0}),ba(\\\"Hmm\\\",function(a,b,c){var d=a.length-2;b[de]=u(a.substr(0,d)),b[ee]=u(a.substr(d))}),ba(\\\"Hmmss\\\",function(a,b,c){var d=a.length-4,e=a.length-2;b[de]=u(a.substr(0,d)),b[ee]=u(a.substr(d,2)),b[fe]=u(a.substr(e))});var xe,ye=/[ap]\\\\.?m?\\\\.?/i,ze=O(\\\"Hours\\\",!0),Ae={calendar:xd,longDateFormat:yd,invalidDate:zd,ordinal:Ad,ordinalParse:Bd,relativeTime:Cd,months:le,monthsShort:me,week:qe,weekdays:re,weekdaysMin:te,weekdaysShort:se,meridiemParse:ye},Be={},Ce={},De=/^\\\\s*((?:[+-]\\\\d{6}|\\\\d{4})-(?:\\\\d\\\\d-\\\\d\\\\d|W\\\\d\\\\d-\\\\d|W\\\\d\\\\d|\\\\d\\\\d\\\\d|\\\\d\\\\d))(?:(T| )(\\\\d\\\\d(?::\\\\d\\\\d(?::\\\\d\\\\d(?:[.,]\\\\d+)?)?)?)([\\\\+\\\\-]\\\\d\\\\d(?::?\\\\d\\\\d)?|\\\\s*Z)?)?$/,Ee=/^\\\\s*((?:[+-]\\\\d{6}|\\\\d{4})(?:\\\\d\\\\d\\\\d\\\\d|W\\\\d\\\\d\\\\d|W\\\\d\\\\d|\\\\d\\\\d\\\\d|\\\\d\\\\d))(?:(T| )(\\\\d\\\\d(?:\\\\d\\\\d(?:\\\\d\\\\d(?:[.,]\\\\d+)?)?)?)([\\\\+\\\\-]\\\\d\\\\d(?::?\\\\d\\\\d)?|\\\\s*Z)?)?$/,Fe=/Z|[+-]\\\\d\\\\d(?::?\\\\d\\\\d)?/,Ge=[[\\\"YYYYYY-MM-DD\\\",/[+-]\\\\d{6}-\\\\d\\\\d-\\\\d\\\\d/],[\\\"YYYY-MM-DD\\\",/\\\\d{4}-\\\\d\\\\d-\\\\d\\\\d/],[\\\"GGGG-[W]WW-E\\\",/\\\\d{4}-W\\\\d\\\\d-\\\\d/],[\\\"GGGG-[W]WW\\\",/\\\\d{4}-W\\\\d\\\\d/,!1],[\\\"YYYY-DDD\\\",/\\\\d{4}-\\\\d{3}/],[\\\"YYYY-MM\\\",/\\\\d{4}-\\\\d\\\\d/,!1],[\\\"YYYYYYMMDD\\\",/[+-]\\\\d{10}/],[\\\"YYYYMMDD\\\",/\\\\d{8}/],\\n// YYYYMM is NOT allowed by the standard\\n[\\\"GGGG[W]WWE\\\",/\\\\d{4}W\\\\d{3}/],[\\\"GGGG[W]WW\\\",/\\\\d{4}W\\\\d{2}/,!1],[\\\"YYYYDDD\\\",/\\\\d{7}/]],He=[[\\\"HH:mm:ss.SSSS\\\",/\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d\\\\.\\\\d+/],[\\\"HH:mm:ss,SSSS\\\",/\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d,\\\\d+/],[\\\"HH:mm:ss\\\",/\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d/],[\\\"HH:mm\\\",/\\\\d\\\\d:\\\\d\\\\d/],[\\\"HHmmss.SSSS\\\",/\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\.\\\\d+/],[\\\"HHmmss,SSSS\\\",/\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d,\\\\d+/],[\\\"HHmmss\\\",/\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d/],[\\\"HHmm\\\",/\\\\d\\\\d\\\\d\\\\d/],[\\\"HH\\\",/\\\\d\\\\d/]],Ie=/^\\\\/?Date\\\\((\\\\-?\\\\d+)/i;a.createFromInputFallback=x(\\\"value provided is not in a recognized ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.\\\",function(a){a._d=new Date(a._i+(a._useUTC?\\\" UTC\\\":\\\"\\\"))}),\\n// constant that refers to the ISO standard\\na.ISO_8601=function(){};var Je=x(\\\"moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/\\\",function(){var a=sb.apply(null,arguments);return this.isValid()&&a.isValid()?a<this?this:a:o()}),Ke=x(\\\"moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/\\\",function(){var a=sb.apply(null,arguments);return this.isValid()&&a.isValid()?a>this?this:a:o()}),Le=function(){return Date.now?Date.now():+new Date};zb(\\\"Z\\\",\\\":\\\"),zb(\\\"ZZ\\\",\\\"\\\"),\\n// PARSING\\nZ(\\\"Z\\\",Xd),Z(\\\"ZZ\\\",Xd),ba([\\\"Z\\\",\\\"ZZ\\\"],function(a,b,c){c._useUTC=!0,c._tzm=Ab(Xd,a)});\\n// HELPERS\\n// timezone chunker\\n// '+10:00' > ['10',  '00']\\n// '-1530'  > ['-15', '30']\\nvar Me=/([\\\\+\\\\-]|\\\\d\\\\d)/gi;\\n// HOOKS\\n// This function will be called whenever a moment is mutated.\\n// It is intended to keep the offset in sync with the timezone.\\na.updateOffset=function(){};\\n// ASP.NET json date format regex\\nvar Ne=/^(\\\\-)?(?:(\\\\d*)[. ])?(\\\\d+)\\\\:(\\\\d+)(?:\\\\:(\\\\d+)(\\\\.\\\\d*)?)?$/,Oe=/^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;Ob.fn=wb.prototype;var Pe=Sb(1,\\\"add\\\"),Qe=Sb(-1,\\\"subtract\\\");a.defaultFormat=\\\"YYYY-MM-DDTHH:mm:ssZ\\\",a.defaultFormatUtc=\\\"YYYY-MM-DDTHH:mm:ss[Z]\\\";var Re=x(\\\"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.\\\",function(a){return void 0===a?this.localeData():this.locale(a)});\\n// FORMATTING\\nU(0,[\\\"gg\\\",2],0,function(){return this.weekYear()%100}),U(0,[\\\"GG\\\",2],0,function(){return this.isoWeekYear()%100}),zc(\\\"gggg\\\",\\\"weekYear\\\"),zc(\\\"ggggg\\\",\\\"weekYear\\\"),zc(\\\"GGGG\\\",\\\"isoWeekYear\\\"),zc(\\\"GGGGG\\\",\\\"isoWeekYear\\\"),\\n// ALIASES\\nJ(\\\"weekYear\\\",\\\"gg\\\"),J(\\\"isoWeekYear\\\",\\\"GG\\\"),\\n// PRIORITY\\nM(\\\"weekYear\\\",1),M(\\\"isoWeekYear\\\",1),\\n// PARSING\\nZ(\\\"G\\\",Vd),Z(\\\"g\\\",Vd),Z(\\\"GG\\\",Od,Kd),Z(\\\"gg\\\",Od,Kd),Z(\\\"GGGG\\\",Sd,Md),Z(\\\"gggg\\\",Sd,Md),Z(\\\"GGGGG\\\",Td,Nd),Z(\\\"ggggg\\\",Td,Nd),ca([\\\"gggg\\\",\\\"ggggg\\\",\\\"GGGG\\\",\\\"GGGGG\\\"],function(a,b,c,d){b[d.substr(0,2)]=u(a)}),ca([\\\"gg\\\",\\\"GG\\\"],function(b,c,d,e){c[e]=a.parseTwoDigitYear(b)}),\\n// FORMATTING\\nU(\\\"Q\\\",0,\\\"Qo\\\",\\\"quarter\\\"),\\n// ALIASES\\nJ(\\\"quarter\\\",\\\"Q\\\"),\\n// PRIORITY\\nM(\\\"quarter\\\",7),\\n// PARSING\\nZ(\\\"Q\\\",Jd),ba(\\\"Q\\\",function(a,b){b[be]=3*(u(a)-1)}),\\n// FORMATTING\\nU(\\\"D\\\",[\\\"DD\\\",2],\\\"Do\\\",\\\"date\\\"),\\n// ALIASES\\nJ(\\\"date\\\",\\\"D\\\"),\\n// PRIOROITY\\nM(\\\"date\\\",9),\\n// PARSING\\nZ(\\\"D\\\",Od),Z(\\\"DD\\\",Od,Kd),Z(\\\"Do\\\",function(a,b){return a?b._ordinalParse:b._ordinalParseLenient}),ba([\\\"D\\\",\\\"DD\\\"],ce),ba(\\\"Do\\\",function(a,b){b[ce]=u(a.match(Od)[0],10)});\\n// MOMENTS\\nvar Se=O(\\\"Date\\\",!0);\\n// FORMATTING\\nU(\\\"DDD\\\",[\\\"DDDD\\\",3],\\\"DDDo\\\",\\\"dayOfYear\\\"),\\n// ALIASES\\nJ(\\\"dayOfYear\\\",\\\"DDD\\\"),\\n// PRIORITY\\nM(\\\"dayOfYear\\\",4),\\n// PARSING\\nZ(\\\"DDD\\\",Rd),Z(\\\"DDDD\\\",Ld),ba([\\\"DDD\\\",\\\"DDDD\\\"],function(a,b,c){c._dayOfYear=u(a)}),\\n// FORMATTING\\nU(\\\"m\\\",[\\\"mm\\\",2],0,\\\"minute\\\"),\\n// ALIASES\\nJ(\\\"minute\\\",\\\"m\\\"),\\n// PRIORITY\\nM(\\\"minute\\\",14),\\n// PARSING\\nZ(\\\"m\\\",Od),Z(\\\"mm\\\",Od,Kd),ba([\\\"m\\\",\\\"mm\\\"],ee);\\n// MOMENTS\\nvar Te=O(\\\"Minutes\\\",!1);\\n// FORMATTING\\nU(\\\"s\\\",[\\\"ss\\\",2],0,\\\"second\\\"),\\n// ALIASES\\nJ(\\\"second\\\",\\\"s\\\"),\\n// PRIORITY\\nM(\\\"second\\\",15),\\n// PARSING\\nZ(\\\"s\\\",Od),Z(\\\"ss\\\",Od,Kd),ba([\\\"s\\\",\\\"ss\\\"],fe);\\n// MOMENTS\\nvar Ue=O(\\\"Seconds\\\",!1);\\n// FORMATTING\\nU(\\\"S\\\",0,0,function(){return~~(this.millisecond()/100)}),U(0,[\\\"SS\\\",2],0,function(){return~~(this.millisecond()/10)}),U(0,[\\\"SSS\\\",3],0,\\\"millisecond\\\"),U(0,[\\\"SSSS\\\",4],0,function(){return 10*this.millisecond()}),U(0,[\\\"SSSSS\\\",5],0,function(){return 100*this.millisecond()}),U(0,[\\\"SSSSSS\\\",6],0,function(){return 1e3*this.millisecond()}),U(0,[\\\"SSSSSSS\\\",7],0,function(){return 1e4*this.millisecond()}),U(0,[\\\"SSSSSSSS\\\",8],0,function(){return 1e5*this.millisecond()}),U(0,[\\\"SSSSSSSSS\\\",9],0,function(){return 1e6*this.millisecond()}),\\n// ALIASES\\nJ(\\\"millisecond\\\",\\\"ms\\\"),\\n// PRIORITY\\nM(\\\"millisecond\\\",16),\\n// PARSING\\nZ(\\\"S\\\",Rd,Jd),Z(\\\"SS\\\",Rd,Kd),Z(\\\"SSS\\\",Rd,Ld);var Ve;for(Ve=\\\"SSSS\\\";Ve.length<=9;Ve+=\\\"S\\\")Z(Ve,Ud);for(Ve=\\\"S\\\";Ve.length<=9;Ve+=\\\"S\\\")ba(Ve,Ic);\\n// MOMENTS\\nvar We=O(\\\"Milliseconds\\\",!1);\\n// FORMATTING\\nU(\\\"z\\\",0,0,\\\"zoneAbbr\\\"),U(\\\"zz\\\",0,0,\\\"zoneName\\\");var Xe=r.prototype;Xe.add=Pe,Xe.calendar=Vb,Xe.clone=Wb,Xe.diff=bc,Xe.endOf=oc,Xe.format=gc,Xe.from=hc,Xe.fromNow=ic,Xe.to=jc,Xe.toNow=kc,Xe.get=R,Xe.invalidAt=xc,Xe.isAfter=Xb,Xe.isBefore=Yb,Xe.isBetween=Zb,Xe.isSame=$b,Xe.isSameOrAfter=_b,Xe.isSameOrBefore=ac,Xe.isValid=vc,Xe.lang=Re,Xe.locale=lc,Xe.localeData=mc,Xe.max=Ke,Xe.min=Je,Xe.parsingFlags=wc,Xe.set=S,Xe.startOf=nc,Xe.subtract=Qe,Xe.toArray=sc,Xe.toObject=tc,Xe.toDate=rc,Xe.toISOString=ec,Xe.inspect=fc,Xe.toJSON=uc,Xe.toString=dc,Xe.unix=qc,Xe.valueOf=pc,Xe.creationData=yc,\\n// Year\\nXe.year=pe,Xe.isLeapYear=ra,\\n// Week Year\\nXe.weekYear=Ac,Xe.isoWeekYear=Bc,\\n// Quarter\\nXe.quarter=Xe.quarters=Gc,\\n// Month\\nXe.month=ka,Xe.daysInMonth=la,\\n// Week\\nXe.week=Xe.weeks=Ba,Xe.isoWeek=Xe.isoWeeks=Ca,Xe.weeksInYear=Dc,Xe.isoWeeksInYear=Cc,\\n// Day\\nXe.date=Se,Xe.day=Xe.days=Ka,Xe.weekday=La,Xe.isoWeekday=Ma,Xe.dayOfYear=Hc,\\n// Hour\\nXe.hour=Xe.hours=ze,\\n// Minute\\nXe.minute=Xe.minutes=Te,\\n// Second\\nXe.second=Xe.seconds=Ue,\\n// Millisecond\\nXe.millisecond=Xe.milliseconds=We,\\n// Offset\\nXe.utcOffset=Db,Xe.utc=Fb,Xe.local=Gb,Xe.parseZone=Hb,Xe.hasAlignedHourOffset=Ib,Xe.isDST=Jb,Xe.isLocal=Lb,Xe.isUtcOffset=Mb,Xe.isUtc=Nb,Xe.isUTC=Nb,\\n// Timezone\\nXe.zoneAbbr=Jc,Xe.zoneName=Kc,\\n// Deprecations\\nXe.dates=x(\\\"dates accessor is deprecated. Use date instead.\\\",Se),Xe.months=x(\\\"months accessor is deprecated. Use month instead\\\",ka),Xe.years=x(\\\"years accessor is deprecated. Use year instead\\\",pe),Xe.zone=x(\\\"moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/\\\",Eb),Xe.isDSTShifted=x(\\\"isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information\\\",Kb);var Ye=C.prototype;Ye.calendar=D,Ye.longDateFormat=E,Ye.invalidDate=F,Ye.ordinal=G,Ye.preparse=Nc,Ye.postformat=Nc,Ye.relativeTime=H,Ye.pastFuture=I,Ye.set=A,\\n// Month\\nYe.months=fa,Ye.monthsShort=ga,Ye.monthsParse=ia,Ye.monthsRegex=na,Ye.monthsShortRegex=ma,\\n// Week\\nYe.week=ya,Ye.firstDayOfYear=Aa,Ye.firstDayOfWeek=za,\\n// Day of Week\\nYe.weekdays=Fa,Ye.weekdaysMin=Ha,Ye.weekdaysShort=Ga,Ye.weekdaysParse=Ja,Ye.weekdaysRegex=Na,Ye.weekdaysShortRegex=Oa,Ye.weekdaysMinRegex=Pa,\\n// Hours\\nYe.isPM=Va,Ye.meridiem=Wa,$a(\\\"en\\\",{ordinalParse:/\\\\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===u(a%100/10)?\\\"th\\\":1===b?\\\"st\\\":2===b?\\\"nd\\\":3===b?\\\"rd\\\":\\\"th\\\";return a+c}}),\\n// Side effect imports\\na.lang=x(\\\"moment.lang is deprecated. Use moment.locale instead.\\\",$a),a.langData=x(\\\"moment.langData is deprecated. Use moment.localeData instead.\\\",bb);var Ze=Math.abs,$e=ed(\\\"ms\\\"),_e=ed(\\\"s\\\"),af=ed(\\\"m\\\"),bf=ed(\\\"h\\\"),cf=ed(\\\"d\\\"),df=ed(\\\"w\\\"),ef=ed(\\\"M\\\"),ff=ed(\\\"y\\\"),gf=gd(\\\"milliseconds\\\"),hf=gd(\\\"seconds\\\"),jf=gd(\\\"minutes\\\"),kf=gd(\\\"hours\\\"),lf=gd(\\\"days\\\"),mf=gd(\\\"months\\\"),nf=gd(\\\"years\\\"),of=Math.round,pf={s:45,// seconds to minute\\nm:45,// minutes to hour\\nh:22,// hours to day\\nd:26,// days to month\\nM:11},qf=Math.abs,rf=wb.prototype;\\n// Deprecations\\n// Side effect imports\\n// FORMATTING\\n// PARSING\\n// Side effect imports\\nreturn rf.abs=Wc,rf.add=Yc,rf.subtract=Zc,rf.as=cd,rf.asMilliseconds=$e,rf.asSeconds=_e,rf.asMinutes=af,rf.asHours=bf,rf.asDays=cf,rf.asWeeks=df,rf.asMonths=ef,rf.asYears=ff,rf.valueOf=dd,rf._bubble=_c,rf.get=fd,rf.milliseconds=gf,rf.seconds=hf,rf.minutes=jf,rf.hours=kf,rf.days=lf,rf.weeks=hd,rf.months=mf,rf.years=nf,rf.humanize=md,rf.toISOString=nd,rf.toString=nd,rf.toJSON=nd,rf.locale=lc,rf.localeData=mc,rf.toIsoString=x(\\\"toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)\\\",nd),rf.lang=Re,U(\\\"X\\\",0,0,\\\"unix\\\"),U(\\\"x\\\",0,0,\\\"valueOf\\\"),Z(\\\"x\\\",Vd),Z(\\\"X\\\",Yd),ba(\\\"X\\\",function(a,b,c){c._d=new Date(1e3*parseFloat(a,10))}),ba(\\\"x\\\",function(a,b,c){c._d=new Date(u(a))}),a.version=\\\"2.17.1\\\",b(sb),a.fn=Xe,a.min=ub,a.max=vb,a.now=Le,a.utc=k,a.unix=Lc,a.months=Rc,a.isDate=g,a.locale=$a,a.invalid=o,a.duration=Ob,a.isMoment=s,a.weekdays=Tc,a.parseZone=Mc,a.localeData=bb,a.isDuration=xb,a.monthsShort=Sc,a.weekdaysMin=Vc,a.defineLocale=_a,a.updateLocale=ab,a.locales=cb,a.weekdaysShort=Uc,a.normalizeUnits=K,a.relativeTimeRounding=kd,a.relativeTimeThreshold=ld,a.calendarFormat=Ub,a.prototype=Xe,a});\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/moment/min/moment.min.js\n// module id = 751\n// module chunks = 2"],"sourceRoot":""}